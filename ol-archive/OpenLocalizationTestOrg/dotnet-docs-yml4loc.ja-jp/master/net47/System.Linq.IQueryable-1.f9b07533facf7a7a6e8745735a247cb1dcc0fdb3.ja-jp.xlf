<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8dfaee375bf895f91ea4f4d63d074d1a65e7c6dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Linq.IQueryable-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64f29c69bca43c504adf9894b6ef04e2d207bb25</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3cf45b8ef0c64ba1c58532f7c316208a3efd13da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality to evaluate queries against a specific data source wherein the type of the data is known.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface is intended for implementation by query providers.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface inherits the <ph id="ph1">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface so that if it represents a query, the results of that query can be enumerated.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumeration forces the expression tree associated with an <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> object to be executed.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Queries that do not return enumerable results are executed when the <ph id="ph1">&lt;xref:System.Linq.IQueryProvider.Execute%60%601%28System.Linq.Expressions.Expression%29&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The definition of "executing an expression tree" is specific to a query provider.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, it may involve translating the expression tree to a query language appropriate for an underlying data source.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface enables queries to be polymorphic.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, because a query against an <ph id="ph1">`IQueryable`</ph> data source is represented as an expression tree, it can be executed against different types of data sources.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) methods defined in the class <ph id="ph3">&lt;xref:System.Linq.Queryable&gt;</ph> (except for <ph id="ph4">&lt;xref:System.Linq.Queryable.AsQueryable%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Linq.Queryable.ThenBy%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Linq.Queryable.ThenByDescending%2A&gt;</ph>) extend objects of types that implement the <ph id="ph7">&lt;xref:System.Linq.IQueryable%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to create your own LINQ provider, see <bpt id="p1">[</bpt>LINQ: Building an IQueryable Provider<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=112370)</ept> on MSDN Blogs.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The type of the data in the data source.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>