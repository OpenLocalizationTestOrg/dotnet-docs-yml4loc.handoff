<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b57ee780d1e078008275d1d4958e6ecccacccdcb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.CodeDom.CodeCatchClause.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cc541d8606f7d3c69a169b14d1d1e8579c47ab3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c83c5e4fc09958a27e13ee400314af5e11a4895d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a <ph id="ph1">`catch`</ph> exception block of a <ph id="ph2">`try/catch`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.CodeDom.CodeCatchClause&gt;</ph> can be used to represent a <ph id="ph2">`catch`</ph> exception block of a <ph id="ph3">`try/catch`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCatchClause.CatchExceptionType%2A&gt;</ph> property specifies the type of exception to catch.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCatchClause.LocalName%2A&gt;</ph> property specifies a name for the variable representing the exception that has been caught.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCatchClause.Statements%2A&gt;</ph> collection property contains the statements for the <ph id="ph2">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.CodeCatchClause"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.CodeCatchClause"&gt;&lt;/xref&gt;</ph> class using the specified local variable name for the exception.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The name of the local variable declared in the catch clause for the exception.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is optional.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.CodeCatchClause"&gt;&lt;/xref&gt;</ph> class using the specified local variable name for the exception and exception type.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The name of the local variable declared in the catch clause for the exception.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>This is optional.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;&lt;/xref&gt;</ph> that indicates the type of exception to catch.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.CodeCatchClause"&gt;&lt;/xref&gt;</ph> class using the specified local variable name for the exception, exception type and statement collection.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the local variable declared in the catch clause for the exception.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is optional.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;&lt;/xref&gt;</ph> that indicates the type of exception to catch.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> objects that represent the contents of the catch block.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the exception to handle with the catch block.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value for this property is not specified, the value of this property defaults to <ph id="ph1">&lt;xref:System.Exception&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeTypeReference"&gt;&lt;/xref&gt;</ph> that indicates the type of the exception to handle.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the variable name of the exception that the <ph id="ph1">`catch`</ph> clause handles.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies the name of the local variable for the exception.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This local variable is optional.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the clause does not have this variable.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name for the exception variable that the <ph id="ph1">`catch`</ph> clause handles.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the statements within the catch block.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatementCollection"&gt;&lt;/xref&gt;</ph> containing the statements within the catch block.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>