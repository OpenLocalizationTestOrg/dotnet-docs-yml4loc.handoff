<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">394b73385877fba20dfa6cbf18ef75b68bf272ed</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Speech.Synthesis.TtsEngine.SayAs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37b8403620dbbad4fed1d491e9d42368589143fb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ab985f9cd25013c0514043dc4ed504a8ef2db76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains information about the content type (such as currency, date, or address) or language construct that determine how text should be spoken.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">SayAs</ph><ept id="p1">&lt;/code&gt;</ept> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties of the <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs&gt;</ph> class are used to get or set the values for the attributes of the <ph id="ph2">`say-as`</ph> element in SSML markup.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A&gt;</ph> property uses a <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs&gt;</ph> instance to inform the <ph id="ph3">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph> how to speak the text contained in the <ph id="ph4">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment.TextToSpeak%2A&gt;</ph> property of a <ph id="ph5">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">detail</ph><ept id="p1">&lt;/code&gt;</ept> attribute for a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">say-as</ph><ept id="p2">&lt;/code&gt;</ept> element in the SSML markup language of a prompt.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName&gt;</ph> property gets or sets the value for the <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs.Detail%2A&gt;</ph> property in a <ph id="ph3">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> attribute for a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">say-as</ph><ept id="p2">&lt;/code&gt;</ept> element in the SSML markup language of a prompt.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName&gt;</ph> property gets or sets the value for the <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A&gt;</ph> property in a <ph id="ph3">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a prompt may contain the phrase "The time is <ph id="ph1">`&lt;say-as interpret-as="time"&gt; 05:00 &lt;/say-as&gt;`</ph>".</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this example, <ph id="ph1">`05:00`</ph> could be spoken as "five oâ€™clock" or "five AM" or "oh five hundred".</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs.Format%2A&gt;</ph> property allows the value of the <ph id="ph2">`interpret-as`</ph> attribute to be extended to specify which time format to speak.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value for the <ph id="ph1">`interpret-as`</ph> attribute is "time:24hour", the <ph id="ph2">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph> speaks "oh five hundred".</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value for the <ph id="ph1">`interpret-as`</ph> attribute is "time:12hour", the <ph id="ph2">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph> speaks "five A M".</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">interpret-as</ph><ept id="p1">&lt;/code&gt;</ept> attribute for a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">say-as</ph><ept id="p2">&lt;/code&gt;</ept> element in the SSML markup language of a prompt.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState.SayAs%2A?displayProperty=fullName&gt;</ph> property gets or sets the value for the <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A&gt;</ph> property in a <ph id="ph3">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph> uses the content type indicated by the <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.SayAs.InterpretAs%2A&gt;</ph> property to determine how to render specified text.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the name Edgar could be spoken as a name: "My name is Edgar".</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or it could be spelled out with letters, as specified with the <ph id="ph1">`interpret-as`</ph> attribute in this sentence:  "My name is <ph id="ph2">`&lt;say-as interpret-as="spell-out"&gt; Edgar &lt;/say-as&gt;`</ph>."</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph> speaks Edgar as "E D G A R".</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>