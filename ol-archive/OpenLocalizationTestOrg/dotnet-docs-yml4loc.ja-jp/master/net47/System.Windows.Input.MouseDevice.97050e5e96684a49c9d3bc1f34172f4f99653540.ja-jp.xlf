<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb0aff2a9db7b5174025d9e3545c4f62510ef279</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Input.MouseDevice.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">555e47cfcdf3092c279156ff6aeac1d1ae540a9b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7be44c4b04787b30e45270c73585b701d4afd011</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a mouse device.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> supports the <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For mouse related input, use the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class represents the mouse to an application and provides methods, properties, and events that reflect the state of the mouse.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.PresentationSource"&gt;&lt;/xref&gt;</ph> that is reporting input for this device.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The source of input for this device.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Captures mouse events to the specified element.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input whether the cursor is within its borders</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The element to capture the mouse.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;element&lt;/code&gt;</ph> is not a <ph id="ph2">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Captures mouse input to the specified element using the specified <ph id="ph1">&lt;xref href="System.Windows.Input.CaptureMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The element to capture the mouse..</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The capture policy to use.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;element&lt;/code&gt;</ph> is not a <ph id="ph2">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;captureMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Input.CaptureMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.IInputElement"&gt;&lt;/xref&gt;</ph> that is captured by the mouse.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The element which is captured by the mouse.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the element that the mouse pointer is directly over.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mouse is considered directly over an element if the mouse has been captured to that element.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls can be composed of multiple elements.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice.DirectlyOver%2A&gt;</ph> reports the specific element in the composite control the mouse pointer is over and not the control itself.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, depending on which part of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> the pointer is over, the <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice.DirectlyOver%2A&gt;</ph> property could report the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property or the <ph id="ph5">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The element the mouse pointer is over.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the state of the specified mouse button.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The button which is being queried.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The state of the button.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Calculates the position of the mouse pointer, in client coordinates.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The position of the mouse pointer, in client coordinates.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Calculates the position of the mouse pointer, in client coordinates, in the specified <ph id="ph1">&lt;xref href="System.Windows.PresentationSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The source in which to obtain the mouse position.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The position of the mouse pointer, in client coordinates, in the specified <ph id="ph1">&lt;xref href="System.Windows.PresentationSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the position of the mouse relative to a specified element.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the mouse pointer is calculated relative to the specified <ph id="ph1">&lt;xref:System.Windows.IInputElement&gt;</ph> with the upper-left corner of element being the point of origin, 0,0.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The frame of reference in which to calculate the position of the mouse.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The position of the mouse relative to the parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relativeTo</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativeTo&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or is not a <ph id="ph3">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph4">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Calculates the screen position of the mouse pointer.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The position of the mouse pointer.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the state of the left mouse button of this mouse device.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The state of the button.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The state of the middle button of this mouse device.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The state of the button.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the cursor for the entire application.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> that <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice.OverrideCursor%2A&gt;</ph> is set to will be applied to the whole application.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear the override <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>, set <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice.OverrideCursor%2A&gt;</ph> to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice.OverrideCursor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph> will force the mouse cursor not to be displayed, but mouse events are still processed.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The override cursor or <ph id="ph1">`null`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Input.MouseDevice.OverrideCursor"&gt;&lt;/xref&gt;</ph> is not set.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets the state of the right button of this mouse device.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The state of the button.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Sets the mouse pointer to the specified <ph id="ph1">&lt;xref href="System.Windows.Input.Cursor"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this cursor does not apply any particular <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, but rather it applies to the whole application.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The cursor to set the mouse pointer to.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the mouse cursor is set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Forces the mouse to resynchronize.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> monitors layout changes and calls <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice.Synchronize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are cases in which the mouse input system must be forced to update for it to respond to changes.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you must resynchronize the mouse on a timer.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.IInputElement"&gt;&lt;/xref&gt;</ph> that the input from this mouse device is sent to.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target for a <ph id="ph1">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> is the object the mouse is over or the object with mouse capture.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The element that receives the input.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Forces the mouse cursor to update.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the state of the first extended button on this mouse device.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The state of the button.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the state of the second extended button of this mouse device.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The state of the button.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>