<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a3295563d387e3d1d51321f8133ef506b874e46</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Globalization.CompareInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a77243c9af8ba145aa242a88ef89c85e6bedd46</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c6f594ec6e215e4e9adf4871968979f713890c0a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a set of methods for culture-sensitive string comparisons.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conventions for comparing and sorting data vary from culture to culture.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, sort order may be based on phonetics or on the visual representation of characters.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In East Asian languages, characters are sorted by the stroke and radical of ideographs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sorting also depends on the order languages and cultures use for the alphabet.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the Danish language has an "Ã†" character that it sorts after "Z" in the alphabet.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, comparisons may be case-sensitive or case-insensitive, and casing rules may also differ by culture.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> class is responsible for maintaining this culture-sensitive string comparison data and for performing culture-sensitive string operations.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to instantiate a <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object directly, because one is used implicitly by all non-ordinal string comparison operations, including calls to the <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you do want to retrieve a <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object, you can do it in one of these ways:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A?displayProperty=fullName&gt;</ph> property for a particular culture.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the static <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetCompareInfo%2A&gt;</ph> method with a culture name.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows for late-bound access to a <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ignored search values</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparison methods such as <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.IndexOf%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.LastIndexOf%2A&gt;</ph> do not consider such characters when they perform a culture-sensitive comparison.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ignorable characters include:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture-sensitive comparison methods will always find an empty string at the beginning (index zero) of the string being searched.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character or string consisting of characters with code points that are not considered in the operation because of comparison options, In particular, the  <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> options produce searches in which symbols and nonspacing combining characters are ignored.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string with code points that have no linguistic significance.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a soft hyphen (U+00AD) is always ignored in a culture-sensitive string comparison.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security considerations</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent, regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should use string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Compares two strings.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the comparison is performed by using <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer indicating the lexical relationship between the two comparands.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The two strings are equal.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>less than zero</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>greater than zero</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Compares two strings using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">string2</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>, and <ph id="ph8">&lt;xref href="System.Globalization.CompareOptions.StringSort"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer indicating the lexical relationship between the two comparands.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The two strings are equal.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>less than zero</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>greater than zero</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Compares the end section of a string with the end section of another string.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string2</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer indicating the lexical relationship between the two comparands.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The two strings are equal.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>less than zero</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is less than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>greater than zero</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is greater than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;offset2&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string1&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset2&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Compares the end section of a string with the end section of another string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string2</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">string2</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>, and <ph id="ph8">&lt;xref href="System.Globalization.CompareOptions.StringSort"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer indicating the lexical relationship between the two comparands.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The two strings are equal.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>less than zero</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is less than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>greater than zero</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is greater than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;offset2&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string1&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset2&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Compares a section of one string with a section of another string.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should use string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The number of consecutive characters in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> to compare.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string2</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The number of consecutive characters in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string2</ph><ept id="p1">&lt;/code&gt;</ept> to compare.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer indicating the lexical relationship between the two comparands.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The two strings are equal.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>less than zero</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is less than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>greater than zero</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is greater than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;length1&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;offset2&lt;/code&gt;</ph> or <ph id="ph4">&lt;code&gt;length2&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string1&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset2&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length1&lt;/code&gt;</ph> is greater than the number of characters from <ph id="ph2">&lt;code&gt;offset1&lt;/code&gt;</ph> to the end of <ph id="ph3">&lt;code&gt;string1&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length2&lt;/code&gt;</ph> is greater than the number of characters from <ph id="ph2">&lt;code&gt;offset2&lt;/code&gt;</ph> to the end of <ph id="ph3">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Compares a section of one string with a section of another string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.OrdinalIgnoreCase&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The first string to compare.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The number of consecutive characters in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> to compare.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The second string to compare.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The zero-based index of the character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string2</ph><ept id="p1">&lt;/code&gt;</ept> at which to start comparing.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The number of consecutive characters in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string2</ph><ept id="p1">&lt;/code&gt;</ept> to compare.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">string1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">string2</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>, and <ph id="ph8">&lt;xref href="System.Globalization.CompareOptions.StringSort"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer indicating the lexical relationship between the two comparands.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>zero</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The two strings are equal.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>less than zero</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is less than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>greater than zero</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The specified section of <ph id="ph1">&lt;code&gt;string1&lt;/code&gt;</ph> is greater than the specified section of <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;length1&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;offset2&lt;/code&gt;</ph> or <ph id="ph4">&lt;code&gt;length2&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset1&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string1&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset2&lt;/code&gt;</ph> is greater than or equal to the number of characters in <ph id="ph2">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length1&lt;/code&gt;</ph> is greater than the number of characters from <ph id="ph2">&lt;code&gt;offset1&lt;/code&gt;</ph> to the end of <ph id="ph3">&lt;code&gt;string1&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;length2&lt;/code&gt;</ph> is greater than the number of characters from <ph id="ph2">&lt;code&gt;offset2&lt;/code&gt;</ph> to the end of <ph id="ph3">&lt;code&gt;string2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is equal to the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> objects are equal if their <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.LCID%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.CompareInfo.Name%2A&gt;</ph> properties are equal.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a security decision depends on a string comparison or a case change, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property to ensure that the behavior is consistent regardless of the culture settings of the operating system.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified object is equal to the current <ph id="ph2">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Initializes a new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object that is associated with the specified culture and that uses string comparison methods in the specified <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method is unpredictable.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you use a version of this method that does not take an assembly input.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`assembly`</ph> parameter must be of the same type as <ph id="ph2">&lt;xref:System.Reflection.Module.Assembly%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A string representing the culture name.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph> that contains the string comparison methods to use.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object associated with the culture with the specified identifier and using string comparison methods in the current <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is an invalid culture name.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is of an invalid type.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Initializes a new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object that is associated with the specified culture and that uses string comparison methods in the specified <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method is unpredictable.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended for your application to use a version of this method that does not take an assembly input.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`assembly`</ph> parameter must be of the same type as <ph id="ph2">&lt;xref:System.Reflection.Module.Assembly%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>An integer representing the culture identifier.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph> that contains the string comparison methods to use.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object associated with the culture with the specified identifier and using string comparison methods in the current <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;assembly&lt;/code&gt;</ph> is of an invalid type.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Initializes a new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object that is associated with the culture with the specified identifier.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>An integer representing the culture identifier.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object associated with the culture with the specified identifier and using string comparison methods in the current <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Initializes a new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object that is associated with the culture with the specified name.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A string representing the culture name.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object associated with the culture with the specified identifier and using string comparison methods in the current <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is an invalid culture name.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> for hashing algorithms and data structures, such as a hash table.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method generates the same hash code for two objects that are equal according to the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Gets the hash code for a string based on specified comparison options.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetHashCode%2A&gt;</ph> is dependent on its implementation, which might change from one version of the common language runtime to another, or from one .NET Framework platform to another.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two string objects are equal, the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetHashCode%2A&gt;</ph> method returns identical values.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there is not a unique hash code value for each unique string value.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Different strings can return the same hash code.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The hash code itself is not guaranteed to be stable.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, they can even differ by application domain.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The string whose hash code is to be returned.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A value that determines how strings are compared.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>Gets the sort key for the specified string.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>A sort key is the repository of these weights for a particular string.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A&gt;</ph> method is equivalent to the Windows API method <ph id="ph2">`LCMapString`</ph> with the LCMAP_SORTKEY flag.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The string for which a <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object is obtained.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object that contains the sort key for the specified string.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object for the specified string using the specified <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each character in a string is given several categories of sort weights, including script, alphabetic, case, and diacritic weights.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>A sort key is the repository of these weights for a particular string.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a sort key might contain a string of alphabetic weights, followed by a string of case weights, and so on.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.GetSortKey%2A&gt;</ph> method is equivalent to the Windows API method <ph id="ph2">`LCMapString`</ph> with the LCMAP_SORTKEY flag.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The string for which a <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object is obtained.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A bitwise combination of one or more of the following enumeration values that define how the sort key is calculated: <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>, and <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.StringSort"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.SortKey"&gt;&lt;/xref&gt;</ph> object that contains the sort key for the specified string.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains the number of elements specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">count</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains the number of elements specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">count</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is considered equivalent to another character only if the Unicode values are the same.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains the number of elements specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">count</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the end of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is considered equivalent to another character only if the Unicode values are the same.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the end of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that starts at the specified index and contains the specified number of elements.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> + </ph><ph id="ph4">`count`</ph> - 1.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that starts at <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> and contains the number of elements specified by <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">count</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at the beginning of the string and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Returns 0 (zero) if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the end of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at the beginning of the string and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is considered equivalent to another character only if the Unicode values are the same.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.IndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should use string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>A value that defines how the strings should be compared.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Returns 0 (zero) if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the first occurrence within the section of the source string that extends from the specified index to the end of the string.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at <ph id="ph1">`startIndex`</ph> and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the search.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">startIndex</ph><ept id="p3">&lt;/code&gt;</ept> to the end of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the first occurrence within the entire source string.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched forward starting at the beginning of the string and ending at the end of the string.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should use one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>Returns 0 (zero) if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the first occurrence within the entire source string.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method searches the source string from the beginning of the string to the end of the string.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> represents a precomposed Unicode character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode code points are the same, you should call an overload that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=fullName&gt;</ph>, which performs a culture-sensitive comparison, overloads of the <ph id="ph2">&lt;xref:System.String.IndexOf%2A?displayProperty=fullName&gt;</ph> method that search for a character perform an ordinal comparison and overloads that search for a string perform a culture-sensitive comparison.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should use string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Returns 0 (zero) if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Determines whether the specified source string starts with the specified prefix.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every string starts and ends with an empty substring (""); therefore, if <ph id="ph1">`prefix`</ph> is an empty string, this method returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The string to search in.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The string to compare with the beginning of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">prefix</ph><ept id="p1">&lt;/code&gt;</ept> is less than or equal to the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p3">&lt;/code&gt;</ept> starts with <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">prefix</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;prefix&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Determines whether the specified source string starts with the specified prefix using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every string starts and ends with an empty substring (""); therefore, if <ph id="ph1">`prefix`</ph> is an empty string, this method returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>The string to search in.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>The string to compare with the beginning of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">prefix</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">prefix</ph><ept id="p1">&lt;/code&gt;</ept> is less than or equal to the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p3">&lt;/code&gt;</ept> starts with <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">prefix</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;prefix&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Indicates whether a specified Unicode string is sortable.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each Unicode character in the <ph id="ph1">`str`</ph> parameter is represented by one or more UTF-16 encoded <ph id="ph2">&lt;xref:System.Char&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`str`</ph> parameter is sortable if each Unicode character is defined in an internal <ph id="ph2">&lt;xref:System.Globalization.CompareInfo&gt;</ph> class sort table, and is not a private use or unpaired high or low surrogate character.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>A string of zero or more Unicode characters.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">str</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not an empty string ("") and all the Unicode characters in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">str</ph><ept id="p2">&lt;/code&gt;</ept> are sortable; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;str&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Indicates whether a specified Unicode character is sortable.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ch`</ph> parameter is sortable if it is a Unicode character that is defined in an internal <ph id="ph2">&lt;xref:System.Globalization.CompareInfo&gt;</ph> class sort table, and is not a private use or unpaired high or low surrogate character.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>A Unicode character.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">ch</ph><ept id="p1">&lt;/code&gt;</ept> parameter is sortable; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Determines whether the specified source string ends with the specified suffix.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every string starts and ends with an empty substring (""); therefore, if <ph id="ph1">`suffix`</ph> is an empty string, this method returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>The string to search in.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The string to compare with the end of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">suffix</ph><ept id="p1">&lt;/code&gt;</ept> is less than or equal to the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p3">&lt;/code&gt;</ept> ends with <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">suffix</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;suffix&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>Determines whether the specified source string ends with the specified suffix using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every string starts and ends with an empty substring (""); therefore, if <ph id="ph1">`suffix`</ph> is an empty string, this method returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>The string to search in.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The string to compare with the end of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">suffix</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph> used by itself, or the bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">suffix</ph><ept id="p1">&lt;/code&gt;</ept> is less than or equal to the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">source</ph><ept id="p3">&lt;/code&gt;</ept> ends with <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">suffix</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;suffix&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> - </ph><ph id="ph4">`count`</ph> + 1.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is considered equivalent to another character only if the Unicode values are the same.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that contains the number of elements specified by <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept> and that ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> - </ph><ph id="ph4">`count`</ph> + 1.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons .</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that contains the number of elements specified by <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept> and that ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> - </ph><ph id="ph4">`count`</ph> + 1.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that contains the number of elements specified by <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept> and that ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from the beginning of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p3">&lt;/code&gt;</ept> to <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that contains the specified number of elements and ends at the specified index.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at <ph id="ph2">`startIndex`</ph><ph id="ph3"> - </ph><ph id="ph4">`count`</ph> + 1.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>The number of elements in the section to search.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that contains the number of elements specified by <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">count</ph><ept id="p3">&lt;/code&gt;</ept> and that ends at <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;count&lt;/code&gt;</ph> do not specify a valid section in <ph id="ph3">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is considered equivalent to another character only if the Unicode values are the same.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from the beginning of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p3">&lt;/code&gt;</ept> to <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at the end of the string and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is considered equivalent to another character only if the Unicode values are the same.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string using the specified <ph id="ph1">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at the end of the string and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value is not valid for this method.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> does not include the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`options`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value, this overload performs an ordinal (culture-insensitive) search, where the Unicode values are compared.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>A value that defines how <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> should be compared.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">options</ph><ept id="p1">&lt;/code&gt;</ept> is either the enumeration value <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions.Ordinal"&gt;&lt;/xref&gt;</ph>, or a bitwise combination of one or more of the following values: <ph id="ph3">&lt;xref href="System.Globalization.CompareOptions.IgnoreCase"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Globalization.CompareOptions.IgnoreSymbols"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Globalization.CompareOptions.IgnoreNonSpace"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Globalization.CompareOptions.IgnoreWidth"&gt;&lt;/xref&gt;</ph>, and <ph id="ph7">&lt;xref href="System.Globalization.CompareOptions.IgnoreKanaType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>, using the specified comparison options; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> contains an invalid <ph id="ph2">&lt;xref href="System.Globalization.CompareOptions"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from the beginning of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p3">&lt;/code&gt;</ept> to <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the last occurrence within the entire source string.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at the end of the string and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Searches for the specified character and returns the zero-based index of the last occurrence within the entire source string.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at the end of the string and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the character is a Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), it might be considered equivalent to any occurrence of its components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if the Unicode values are the same, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions.Ordinal&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overloads of <ph id="ph1">&lt;xref:System.String.LastIndexOf%2A?displayProperty=fullName&gt;</ph> that search for a character perform an ordinal search, whereas those that search for a string perform a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>The character to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Searches for the specified substring and returns the zero-based index of the last occurrence within the section of the source string that extends from the beginning of the string to the specified index.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source string is searched backward starting at <ph id="ph1">`startIndex`</ph> and ending at the beginning of the string.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload performs a culture-sensitive search.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode value representing a precomposed character, such as the ligature "Ã†" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform an ordinal (culture-insensitive) search, where the Unicode values are compared, you should call one of the overloads that has a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> and use the <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>When possible, you should call string comparison methods that have a parameter of type <ph id="ph1">&lt;xref:System.Globalization.CompareOptions&gt;</ph> to specify the kind of comparison expected.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a general rule, use linguistic options (using the current culture) for comparing strings displayed in the user interface and specify <ph id="ph1">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CompareOptions?displayProperty=fullName&gt;</ph> for security comparisons.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>The string to search.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>The string to locate within <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>The zero-based starting index of the backward search.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, if found, within the section of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">source</ph><ept id="p2">&lt;/code&gt;</ept> that extends from the beginning of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">source</ph><ept id="p3">&lt;/code&gt;</ept> to <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">startIndex</ph><ept id="p4">&lt;/code&gt;</ept>; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>Returns <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is an ignorable character.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is outside the range of valid indexes for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>Gets the properly formed culture identifier for the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>The properly formed culture identifier for the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Gets the name of the culture used for sorting operations by this <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name?displayProperty=fullName&gt;</ph> properties can have different values.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.LCID%2A&gt;</ph> property value of hexadecimal 0x10407 identifies an alternate sort culture that sorts names as they might appear in a German telephone book.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Name%2A&gt;</ph> property has a value of "de-de_phoneb", whereas the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name?displayProperty=fullName&gt;</ph> property of the associated German (Germany) culture has a value of "de-DE".</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>The name of a culture.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns a string that consists of the class name and the value of the instance <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Name%2A&gt;</ph> property, separated by a hyphen.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>A string that represents the current <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Gets information about the version of Unicode used for comparing and sorting strings.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>The weight of individual characters, and therefore the way in which particular strings are compared or ordered, depends on the version of the Unicode specification that a particular version of the .NET Framework implements.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, this also depends on the host operating system, as the following table shows.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this list of supported Unicode versions applies to character comparison and sorting only; it does not apply to classification of Unicode characters by category.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>.NET Framework version</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operating system</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode version</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>All operating systems</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode 5.0</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> and later versions</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode 5.0</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> and later versions</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[win8](~/includes/win8-md.md)]</ph> and later Windows operating system versions</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode 6.3</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.SortVersion&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CompareInfo.Version%2A&gt;</ph> property doesn't identify the precise Unicode version used to compare strings.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is useful only when comparing two <ph id="ph1">&lt;xref:System.Globalization.SortVersion&gt;</ph> objects to determine whether they use the same Unicode version and culture to compare strings.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information and an example, see the <ph id="ph1">&lt;xref:System.Globalization.SortVersion&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source>An object that contains information about the Unicode version used for comparing and sorting strings.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Runs when the entire object graph has been deserialized.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation that can be used only when the current <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.IDeserializationCallback&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>The object that initiated the callback.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>