<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32bb014fb43cee6ca4f80bf1b1fc97c1def96fe0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Remoting.Activation.IConstructionCallMessage.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">411430a72ff2c52e12520d16304b97d9f1c96518</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0bbae90bdfab6c27853941a33a7695beb169c1f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the construction call request of an object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user creates an instance of a new client-activated object by calling <ph id="ph1">`new`</ph> or <ph id="ph2">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=fullName&gt;</ph> and before the thread returns to the user code, a <ph id="ph3">&lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage&gt;</ph> is sent to the remote application.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the construction message arrives at the remote application, it is processed by a remoting activator (either the default one, or one that is specified in the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.Activator%2A&gt;</ph> property) and a new object is created.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remoting application then returns a <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage&gt;</ph> to the local application.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IConstructionReturnMessage&gt;</ph> contains an instance of <ph id="ph2">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>, which packages information about the remote object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remoting infrastructure converts the <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph> instance into a proxy to the remote object, which is returned to the user code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets the type of the remote object to activate.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The type of the remote object to activate.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the full type name of the remote type to activate.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The full type name of the remote type to activate.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the activator that activates the remote object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A chain of activators that are arranged in a hierarchy typically completes the various tasks that are involved in the activation process.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you intend to plug in a custom activator, then you should traverse the activator hierarchy and plug in your activator at the appropriate location.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IActivator.NextActivator%2A?displayProperty=fullName&gt;</ph> property on the activator that is returned by the current property to traverse the chain of activators.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add your own activator into the message's activator chain on the client side, the activator may be serialized and transported to the server side, if deemed necessary.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, custom activators should be fairly lightweight in terms of serialization requirements.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The activator that activates the remote object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the call site activation attributes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes%2A&gt;</ph> indexer allows you to specify additional attributes to use during object activation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user specifies the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.CallSiteActivationAttributes%2A&gt;</ph> in the <ph id="ph2">`activationAttributes`</ph> parameter to <ph id="ph3">&lt;xref:System.Activator.CreateInstance%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The call site activation attributes.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets a list of context properties that define the context in which the object is to be created.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new object's context is generally chosen based on metadata attributes of the class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context selection mechanism is extensible through custom attributes, also known as static context properties, which are compiled into the class metadata.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When activating an object remotely, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Activation.IConstructionCallMessage.ContextProperties%2A&gt;</ph> contains the list of properties that were contributed by various attributes in the construction call message.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>These properties are used to create the context in which the server object is activated.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A list of properties of the context in which to construct the object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The immediate caller does not have infrastructure permission.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>