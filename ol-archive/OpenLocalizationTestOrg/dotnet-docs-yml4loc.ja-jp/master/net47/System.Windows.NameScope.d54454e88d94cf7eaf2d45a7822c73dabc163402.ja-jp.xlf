<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">facdce9d312fabd0ce6c6e7da32409ca1842f028</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.NameScope.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33d21a27b453af941656e323ebd71bfe44c54813</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88379ac3df8f81cc6c117cadc61230d62a44068d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements base WPF support for the <ph id="ph1">&lt;xref href="System.Windows.Markup.INameScope"&gt;&lt;/xref&gt;</ph> methods that store or retrieve name-object mappings into a particular XAML namescope.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class implements built-in XAML namescope support for WPF treatment of XAML.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For most scenarios, the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.FindName%2A&gt;</ph> methods exposed on <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate methods to call to search for elements by XAML-defined name.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Name%2A&gt;</ph> properties exposed by <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph> are more appropriate properties to use to set the initial name as markup attributes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The various methods of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> are used by base elements and other classes that maintain XAML namescopes in order to support <ph id="ph2">&lt;xref:System.Windows.Markup.INameScope.RegisterName%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.INameScope.FindName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You generally use the API in the <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.NameScope&gt;</ph> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <ph id="ph3">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on XAML namescope concepts, see <bpt id="p1">[</bpt>WPF XAML Namescopes<ept id="p1">](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adds an item to the collection.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.KeyValuePair`2"&gt;&lt;/xref&gt;</ph> (key is <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, value is <ph id="ph3">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>) that represents the name mapping to add to the XAML namescope.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Either or both components of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> are <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds an item to the collection.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.Add%2A&gt;</ph> so that it is not necessary to involve the <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> type in your usage.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The string key, which is the name of the XAML namescope mapping to add.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The object value, which is the object reference of the XAML namescope mapping to add.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Removes all items from the collection.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Determines whether the collection contains a specified item.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this scenario, you can call <ph id="ph1">&lt;xref:System.Windows.NameScope.ContainsKey%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The item to find in the collection, specified as a <ph id="ph1">&lt;xref href="System.Collections.Generic.KeyValuePair`2"&gt;&lt;/xref&gt;</ph> (key is <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, value is <ph id="ph3">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Collections.Generic.KeyValuePair`2"&gt;&lt;/xref&gt;</ph> identifies an existing mapping in this <ph id="ph3">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> .</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> if the specified <ph id="ph2">&lt;xref href="System.Collections.Generic.KeyValuePair`2"&gt;&lt;/xref&gt;</ph> does not exist in the current <ph id="ph3">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returns whether a provided name already exists in this <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> API.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The string key to find.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept> identifies a name for an existing mapping in this <ph id="ph3">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> if the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the current <ph id="ph3">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Copies the elements of the collection to an array, starting at a particular array index.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The zero-based index in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which copying begins.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the number of items in the collection of mapped names in this <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The number of items in the collection.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns the corresponding object in the XAML namescope maintained by this <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph>, based on a provided name string.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several base elements (<ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph>) also expose a <ph id="ph3">`FindName`</ph> method with identical functionality.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Name portion of an existing mapping to retrieve the object portion for.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The requested object that is mapped with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Can return <ph id="ph1">`null`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p1">&lt;/code&gt;</ept> was provided as <ph id="ph3">`null`</ph> or empty string, or if no matching object was found.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Provides the attached property get accessor for the <ph id="ph1">&lt;xref href="System.Windows.NameScope.NameScope"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is both to implement the <ph id="ph1">`get`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The object to get the XAML namescope from.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A XAML namescope, as an <ph id="ph1">&lt;xref href="System.Windows.Markup.INameScope"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the collection is read-only.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets the item with the specified key.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The string name for the XAML name mapping to get or set.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The value of the object mapped by the XAML name provided as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is provided as <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is provided as <ph id="ph2">`null`</ph> for a set operation.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets a collection of the keys in the <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> dictionary.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>A collection of the keys in the <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> dictionary.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.NameScope.NameScope"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Registers a new name-object pair into the current XAML namescope.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name to use for mapping the given object.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The object to be mapped to the provided name.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;scopedElement&lt;/code&gt;</ph> was provided as <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> was provided as empty string</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> provided would result in a duplicate name registration.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Removes the specific object from the collection.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.NameScope&gt;</ph> is a dictionary there is no concept of first occurrence; any given <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph> is guaranteed unique.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The object to remove from the collection, specified as a <ph id="ph1">&lt;xref href="System.Collections.Generic.KeyValuePair`2"&gt;&lt;/xref&gt;</ph> (key is <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, value is <ph id="ph3">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Also returns <ph id="ph1">`false`</ph> if the item was not found in the collection.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Removes a mapping for a specified name from the collection.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method basically wraps <ph id="ph1">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>, returning <ph id="ph2">`false`</ph> in cases that otherwise would have raised exceptions in <ph id="ph3">&lt;xref:System.Windows.NameScope.UnregisterName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The string key, which is the name of the XAML namescope mapping to remove.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if item was successfully removed from the collection, otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Also returns <ph id="ph1">`false`</ph> if the item was not found in the collection.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Provides the attached property set accessor for the <ph id="ph1">&lt;xref href="System.Windows.NameScope.NameScope"&gt;&lt;/xref&gt;</ph> attached property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this method is both to act as the <ph id="ph1">`set`</ph> accessor for using <ph id="ph2">&lt;xref:System.Windows.NameScope.NameScope%2A&gt;</ph> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Object to change XAML namescope for.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The new XAML namescope, using an interface cast.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets the value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The key of the value to get.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>true if the <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> contains a mapping for the name provided as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Otherwise, false.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Removes a name-object mapping from the XAML namescope.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling this method, you can use <ph id="ph1">&lt;xref:System.Windows.NameScope.FindName%2A&gt;</ph> to determine whether a specific name-object mapping exists.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The name of the mapping to remove.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> was provided as empty string.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> provided had not been registered.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets a collection of the values in the <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> dictionary.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A collection of the values in the <ph id="ph1">&lt;xref href="System.Windows.NameScope"&gt;&lt;/xref&gt;</ph> dictionary.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through a collection.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An enumerator that iterates through a collection.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>