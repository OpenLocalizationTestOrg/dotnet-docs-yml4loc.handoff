<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05fd2b77b5696c1dcfcbb8fb49ee70ced6518845</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.DataObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">302660b2cdbaddb00ebc29acd0af85c2c7d26cac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">68d8ca58f3878c72becd2aa2e5c2246e072cf51c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a basic implementation of the <ph id="ph1">&lt;xref href="System.Windows.IDataObject"&gt;&lt;/xref&gt;</ph> interface, which defines a format-independent mechanism for transferring data.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.DataObject"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.DataObject"&gt;&lt;/xref&gt;</ph> class that contains the specified data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An object that represents the data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> references a <ph id="ph2">&lt;xref href="System.Windows.DataObject"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.DataObject"&gt;&lt;/xref&gt;</ph> class that contains the specified data and its associated format; the format is specified by a string.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the       <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An object that represents the data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.DataObject"&gt;&lt;/xref&gt;</ph> class that contains the specified data and its associated format; the data format is specified by a <ph id="ph2">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.DataObject"&gt;&lt;/xref&gt;</ph> class that contains the specified data and its associated format; the format is specified by a string.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This overload includes a <ph id="ph1">`Boolean`</ph> flag to indicate whether the data may be converted to another format on retrieval.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow the data to be converted to another format on retrieval; <ph id="ph2">`false`</ph> to prohibit the data from being converted to another format on retrieval.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Windows.DataObject.Copying"&gt;&lt;/xref&gt;</ph> event handler to a specified dependency object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataObject.Copying&gt;</ph> event occurs when a copy operation has finished converting the selected content into all specified data formats, has stored all data formats in the associated data object, and is ready to put the data object on the system Clipboard or to begin a drag operation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to inspect or modify a data object after a copy operation completes, and before proceeding with subsequent operations.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entire copy operation can be canceled by calling <ph id="ph1">&lt;xref:System.Windows.DataObjectEventArgs.CancelCommand%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The dependency object (a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>) to which to add the event handler.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A delegate that references the handler method to add.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Windows.DataObject.Pasting"&gt;&lt;/xref&gt;</ph> event handler to a specified dependency object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to inspect a data object before the data is pasted, and possibly to decide on an alternate course of action, such as:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Cancel the Paste<ept id="p1">**</ept> - Cancel the entire paste operation by calling the <ph id="ph1">&lt;xref:System.Windows.DataObjectEventArgs.CancelCommand%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Select an Alternate Format<ept id="p1">**</ept> - Change the selected paste format by specifying a new value for the <ph id="ph1">&lt;xref:System.Windows.DataObjectPastingEventArgs.FormatToApply%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The newly selected format must by supported by the data object to be pasted.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the paste format is changed, ensure that the paste target supports the newly specified format.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Insert a New Format<ept id="p1">**</ept> - If you determine that the paste data object does not support the desired format, update the data object to include a version of the data in the desired format.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom data converters are often used as part of this process.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the content of a paste data object (<ph id="ph1">&lt;xref:System.Windows.DataObjectPastingEventArgs.DataObject%2A&gt;</ph>) does not change the data stored on the system Clipboard; any such changes will apply only to the data object associated with the associated paste command.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The dependency object (a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>) to which to add the event handler.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A delegate that references the handler method to add.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Windows.DataObject.SettingData"&gt;&lt;/xref&gt;</ph> event handler to a specified dependency object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataObject.SettingData&gt;</ph> event occurs as part of a copy or drag command, once for each of the data formats to add to the associated data object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this event is connected to a content control, such as <ph id="ph1">&lt;xref:System.Windows.Controls.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>A handler for this event can be used to selectively prevent unwanted data formats from being added to the data object, thus eliminating data conversion processing for redundant data formats and improving the overall performance of a copy operation.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>To skip a particular data format, call the <ph id="ph1">&lt;xref:System.Windows.DataObjectEventArgs.CancelCommand%2A&gt;</ph> method and specify the format to skip in the <ph id="ph2">&lt;xref:System.Windows.DataObjectSettingDataEventArgs.Format%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.DataObjectEventArgs.CancelCommand%2A&gt;</ph> method for this event does not cancel the associated copy or drag command.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The dependency object (a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>) to which to add the event handler.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A delegate that references the handler method to add.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Queries a data object for the presence of data in the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.WaveAudio"&gt;&lt;/xref&gt;</ph> data format.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if the specified data format exists natively in the data object; this method does not check for the presence of auto-convertible data formats.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data object contains data in the <ph id="ph2">&lt;xref href="System.Windows.DataFormats.WaveAudio"&gt;&lt;/xref&gt;</ph> data format; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Queries a data object for the presence of data in the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.FileDrop"&gt;&lt;/xref&gt;</ph> data format.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if the specified data format exists natively in the data object; this method does not check for the presence of auto-convertible data formats.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data object contains data in the <ph id="ph2">&lt;xref href="System.Windows.DataFormats.FileDrop"&gt;&lt;/xref&gt;</ph> data format; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Queries a data object for the presence of data in the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.Bitmap"&gt;&lt;/xref&gt;</ph> data format.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if the specified data format exists natively in the data object; this method does not check for the presence of auto-convertible data formats.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A bitmap represents a computer graphic as an array of bits in memory, and these bits represent the attributes of the individual pixels in an image.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data object contains data in the <ph id="ph2">&lt;xref href="System.Windows.DataFormats.Bitmap"&gt;&lt;/xref&gt;</ph> data format; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Queries a data object for the presence of data in a text data format.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if the specified data format exists natively in the data object; this method does not check for the presence of auto-convertible data formats.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A member of the <ph id="ph1">&lt;xref href="System.Windows.TextDataFormat"&gt;&lt;/xref&gt;</ph> enumeration that specifies the text data format to query for.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data object contains data in a text data format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> does not specify a valid member of <ph id="ph2">&lt;xref href="System.Windows.TextDataFormat"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Queries a data object for the presence of data in the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> format.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only if the specified data format exists natively in the data object; this method does not check for the presence of auto-convertible data formats.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataFormats.UnicodeText&gt;</ph> data format denotes 16-bit character encoded Unicode, also referred to as UTF-16, and USC-2.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data object contains data in the <ph id="ph2">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> data format; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.DataObject.Copying"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns a stream that contains data in the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.WaveAudio"&gt;&lt;/xref&gt;</ph> data format.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a stream only if the specified format exists natively in the data object; this method does not return auto-convertible data.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A stream that contains data in the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.WaveAudio"&gt;&lt;/xref&gt;</ph> format, or <ph id="ph2">`null`</ph> if the data is unavailable in this format.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns data in a format specified by a string.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An object that contains the data in the specified format, or <ph id="ph1">`null`</ph> if the data is unavailable in the specified format.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns a data object in a format specified by a <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A data object with the data in the specified format, or <ph id="ph1">`null`</ph> if the data is unavailable in the specified format.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns a data object in a specified format, optionally converting the data to the specified format.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to attempt to automatically convert the data to the specified format; <ph id="ph2">`false`</ph> for no data format conversion.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A data object with the data in the specified format, or <ph id="ph1">`null`</ph> if the data is unavailable in the specified format.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">autoConvert</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`true`</ph> and the data cannot be converted to the specified format, or if automatic conversion is disabled (by calling <ph id="ph3">&lt;xref href="System.Windows.DataObject.SetData(System.String,System.Object,System.Boolean)"&gt;&lt;/xref&gt;</ph> with the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">autoConvert</ph><ept id="p2">&lt;/code&gt;</ept> parameter set to <ph id="ph5">`false`</ph>), this method returns <ph id="ph6">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <bpt id="p1">**</bpt>null<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Determines whether the data is available in, or can be converted to, a format specified by a string.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.DataObject.GetDataPresent%2A&gt;</ph> to determine whether a format is available in this data object before calling <ph id="ph2">&lt;xref:System.Windows.DataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.DataObject.GetFormats%2A&gt;</ph> to obtain a list of all the formats that are available in this data object.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Determines whether the data is available in, or can be converted to, a format specified by a <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.DataObject.GetDataPresent%2A&gt;</ph> to determine whether a format is available in this data object before calling <ph id="ph2">&lt;xref:System.Windows.DataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.DataObject.GetFormats%2A&gt;</ph> to obtain a list of all the formats that are available in this data object.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that specifies the data format to check.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>F or a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Determines whether the data is available in, or can be converted to, a specified format.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Boolean`</ph> flag indicates whether to check if the data can be converted to the specified format if it is not available in that format.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.DataObject.GetDataPresent%2A&gt;</ph> to determine whether a format is available in this data object before calling <ph id="ph2">&lt;xref:System.Windows.DataObject.GetData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.DataObject.GetFormats%2A&gt;</ph> to obtain a list of all the formats that are available in this data object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A string that specifies the data format to check.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> to check only for the specified format; <ph id="ph2">`true`</ph> to also check whether data stored in this data object can be converted to the specified format.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data is in, or can be converted to, the specified format; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Returns a string collection that contains a list of dropped files.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A collection of strings, where each string specifies the name of a file in the list of dropped files, or <ph id="ph1">`null`</ph> if the data is unavailable in this format.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Returns a list of formats in which the data in this data object is stored, or can be converted to.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref:System.Windows.DataFormats&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An array of strings, with each string specifying the name of a format that this data object supports.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns a list of formats in which the data in this data object is stored.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`Boolean`</ph> flag indicates whether to also include formats that the data can be automatically converted to.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref:System.Windows.DataFormats&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to retrieve all formats in which the data in this data object is stored, or can be converted to; <ph id="ph2">`false`</ph> to retrieve only formats in which the data in this data object is stored.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An array of strings, with each string specifying the name of a format supported by this data object.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Windows.Media.Imaging.BitmapSource"&gt;&lt;/xref&gt;</ph> object that contains data in the <ph id="ph2">&lt;xref href="System.Windows.DataFormats.Bitmap"&gt;&lt;/xref&gt;</ph> format.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a <ph id="ph1">&lt;xref:System.Windows.Media.Imaging.BitmapSource&gt;</ph> object either when data is available natively or when data can be auto-converted to the <ph id="ph2">&lt;xref:System.Windows.DataFormats.Bitmap&gt;</ph> data format.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A bitmap represents a computer graphic as an array of bits in memory, and these bits represent the attributes of the individual pixels in an image.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Media.Imaging.BitmapSource"&gt;&lt;/xref&gt;</ph> object that contains data in the <ph id="ph2">&lt;xref href="System.Windows.DataFormats.Bitmap"&gt;&lt;/xref&gt;</ph> format, or <ph id="ph3">`null`</ph> if the data is unavailable in this format.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Returns a string that contains text data of the specified format in this data object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A member of <ph id="ph1">&lt;xref href="System.Windows.TextDataFormat"&gt;&lt;/xref&gt;</ph> that specifies the specific text data format to retrieve.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A string containing text data in the specified data format, or an empty string if no corresponding text data is available.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> does not specify a valid member of <ph id="ph2">&lt;xref href="System.Windows.TextDataFormat"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Returns a string that contains the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> data in this data object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DataFormats.UnicodeText&gt;</ph> data format denotes 16-bit character encoded Unicode, also referred to as UTF-16, and USC-2.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>A string that contains the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> data, or an empty string if no <ph id="ph2">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> data is available.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.DataObject.Pasting"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Removes a <ph id="ph1">&lt;xref href="System.Windows.DataObject.Copying"&gt;&lt;/xref&gt;</ph> event handler from a specified dependency object.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The dependency object (a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>) from which to remove the event handler.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A delegate that references the handler method to remove.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Removes a <ph id="ph1">&lt;xref href="System.Windows.DataObject.Pasting"&gt;&lt;/xref&gt;</ph> event handler from a specified dependency object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The dependency object (a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>) from which to remove the event handler.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A delegate that references the handler method to remove.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Removes a <ph id="ph1">&lt;xref href="System.Windows.DataObject.SettingData"&gt;&lt;/xref&gt;</ph> event handler from a specified dependency object.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The dependency object (a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph>) from which to remove the event handler.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A delegate that references the handler method to remove.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Stores audio data (<ph id="ph1">&lt;xref href="System.Windows.DataFormats.WaveAudio"&gt;&lt;/xref&gt;</ph> data format) in this data object.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The audio data is specified as a byte array.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion disabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A byte array that contains audio data to store in the data object.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;audioBytes&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Stores audio data (<ph id="ph1">&lt;xref href="System.Windows.DataFormats.WaveAudio"&gt;&lt;/xref&gt;</ph> data format) in this data object.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The audio data is specified as a stream.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion disabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A stream that contains audio data to store in the data object.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;audioStream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Stores the specified data in this data object, automatically determining the data format from the source object type.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion enabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>An object that represents the data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Stores the specified data in this data object, along with one or more specified data formats; the data format is specified by a string.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion enabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An object that represents the data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Stores the specified data in this data object, along with one or more specified data formats; the data format is specified by a <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion enabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An object that represents the data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Stores the specified data in this data object, along with one or more specified data formats.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This overload includes a <ph id="ph1">`Boolean`</ph> flag to indicate whether the data can be converted to another format on retrieval.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A string that specifies the format for the data.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>For a set of predefined data formats, see the <ph id="ph1">&lt;xref href="System.Windows.DataFormats"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An object that represents the data to store in this data object.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow the data to be converted to another format on retrieval; <ph id="ph2">`false`</ph> to prohibit the data from being converted to another format on retrieval.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Stores <ph id="ph1">&lt;xref href="System.Windows.DataFormats.FileDrop"&gt;&lt;/xref&gt;</ph> data in this data object.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The dropped file list is specified as a string collection.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion enabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>A string collection that contains the dropped file list to store in the data object.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileDropList&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileDropList&lt;/code&gt;</ph> contains zero strings, or the full path to file specified in the list cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Stores <ph id="ph1">&lt;xref href="System.Windows.DataFormats.Bitmap"&gt;&lt;/xref&gt;</ph> data in this data object.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The image data is specified as a <ph id="ph1">&lt;xref href="System.Windows.Media.Imaging.BitmapSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>A bitmap represents a computer graphic as an array of bits in memory, and these bits represent the attributes of the individual pixels in an image.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion enabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Media.Imaging.BitmapSource"&gt;&lt;/xref&gt;</ph> object that contains the image data to store in the data object.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;image&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Stores <ph id="ph1">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> data, specified as a string, in this data object.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data format denotes 16-bit character encoded Unicode, also referred to as UTF-16, and USC-2.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion disabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A string that contains the <ph id="ph1">&lt;xref href="System.Windows.DataFormats.UnicodeText"&gt;&lt;/xref&gt;</ph> data to store in the data object.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;textData&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Stores text data in this data object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The format of the text data to store is specified with a member of <ph id="ph1">&lt;xref href="System.Windows.TextDataFormat"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds data with auto-conversion disabled (the same as calling <ph id="ph1">&lt;xref:System.Windows.DataObject.SetData%28System.String%2CSystem.Object%2CSystem.Boolean%29&gt;</ph> with <ph id="ph2">`autoConvert`</ph> set to <ph id="ph3">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A string that contains the text data to store in the data object.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>A member of <ph id="ph1">&lt;xref href="System.Windows.TextDataFormat"&gt;&lt;/xref&gt;</ph> that specifies the text data format to store.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;textData&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.DataObject.SettingData"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Creates a connection between a data object and an advisory sink.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>This method is called by an object that supports an advisory sink and enables the advisory sink to be notified of changes in the object's data.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the format, target device, aspect, and medium that will be used for future notifications.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.ADVF"&gt;&lt;/xref&gt;</ph> values that specifies a group of flags for controlling the advisory connection.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>A pointer to the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IAdviseSink"&gt;&lt;/xref&gt;</ph> interface on the advisory sink that will receive the change notification.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a DWORD token that identifies this connection.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>You can use this token later to delete the advisory connection by passing it to <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.DUnadvise(System.Int32)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If this value is zero, the connection was not established.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Destroys a notification connection that had been previously established.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A DWORD token that specifies the connection to remove.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Use the value returned by <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.DAdvise(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.ADVF,System.Runtime.InteropServices.ComTypes.IAdviseSink,System.Int32@)"&gt;&lt;/xref&gt;</ph> when the connection was originally established.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Creates an object that can be used to enumerate the current advisory connections.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>When this method returns, contains an <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IEnumSTATDATA"&gt;&lt;/xref&gt;</ph> that receives the interface pointer to the new enumerator object.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>If the implementation sets <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">enumAdvise</ph><ept id="p1">&lt;/code&gt;</ept> to <ph id="ph2">`null`</ph>, there are no connections to advisory sinks at this time.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>This method supports the standard return value E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The enumerator object is successfully instantiated or there are no connections.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>OLE_E_ADVISENOTSUPPORTED</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>This object does not support advisory notifications.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Creates an object for enumerating the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structures for a data object.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>These structures are used in calls to <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.DATADIR"&gt;&lt;/xref&gt;</ph> values that specifies the direction of the data.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The enumerator object was successfully created.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>E_NOTIMPL</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The direction specified by the <ph id="ph1">&lt;code&gt;direction&lt;/code&gt;</ph> parameter is not supported.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>OLE_S_USEREG</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Requests that OLE enumerate the formats from the registry.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Provides a standard <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure that is logically equivalent to a more complex structure.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Use this method to determine whether two different <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structures would return the same data, removing the need for duplicate rendering.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the format, medium, and target device that the caller would like to use to retrieve data in a subsequent call such as <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED"&gt;&lt;/xref&gt;</ph> member is not significant in this case and should be ignored.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure that contains the most general information possible for a specific rendering, making it canonically equivalent to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">formatetIn</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The caller must allocate this structure and the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetCanonicalFormatEtc(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.FORMATETC@)"&gt;&lt;/xref&gt;</ph> method must fill in the data.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>To retrieve data in a subsequent call such as <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph>, the caller uses the supplied value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">formatOut</ph><ept id="p1">&lt;/code&gt;</ept>, unless the value supplied is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> if the method returns <ph id="ph2">`DATA_S_SAMEFORMATETC`</ph>.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED"&gt;&lt;/xref&gt;</ph> member is not significant in this case and should be ignored.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The returned <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure is different from the one that was passed.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>DATA_S_SAMEFORMATETC</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structures are the same and <ph id="ph2">`null`</ph> is returned in the <ph id="ph3">&lt;code&gt;formatOut&lt;/code&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>DV_E_LINDEX</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>There is an invalid value for <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC.lindex"&gt;&lt;/xref&gt;</ph>; currently, only -1 is supported.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>DV_E_FORMATETC</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>There is an invalid value for the <ph id="ph1">&lt;code&gt;pFormatetc&lt;/code&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>OLE_E_NOTRUNNING</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The application is not running.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Obtains data from a source data object.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph> method, which is called by a data consumer, renders the data described in the specified <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure and transfers it through the specified <ph id="ph3">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The caller then assumes responsibility for releasing the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the format, medium, and target device to use when passing the data.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>It is possible to specify more than one medium by using the Boolean OR operator, allowing the method to choose the best medium among those specified.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a pointer to the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph> structure that indicates the storage medium containing the returned data through its <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.tymed"&gt;&lt;/xref&gt;</ph> member, and the responsibility for releasing the medium through the value of its <ph id="ph3">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>, the receiver of the medium is responsible for releasing it; otherwise, <ph id="ph3">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> points to the <ph id="ph4">`IUnknown`</ph> interface on the appropriate object so its <ph id="ph5">`Release`</ph> method can be called.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The medium must be allocated and filled in by <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Obtains data from a source data object.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>This method, which is called by a data consumer, differs from the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph> method in that the caller must allocate and free the specified storage medium.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the format, medium, and target device to use when passing the data.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Only one medium can be specified in <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED"&gt;&lt;/xref&gt;</ph>, and only the following <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED"&gt;&lt;/xref&gt;</ph> values are valid: <ph id="ph3">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTORAGE"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED.TYMED_ISTREAM"&gt;&lt;/xref&gt;</ph>, <ph id="ph5">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED.TYMED_HGLOBAL"&gt;&lt;/xref&gt;</ph>, or <ph id="ph6">&lt;xref href="System.Runtime.InteropServices.ComTypes.TYMED.TYMED_FILE"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph>, passed by reference, that defines the storage medium containing the data being transferred.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The medium must be allocated by the caller and filled in by <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetDataHere(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The caller must also free the medium.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The implementation of this method must always supply a value of <ph id="ph1">`null`</ph> for the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member of the <ph id="ph3">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph> structure that this parameter points to.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>Determines whether the data object is capable of rendering the data described in the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Objects attempting a paste or drop operation can call this method before calling <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph> to get an indication of whether the operation may be successful.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the format, medium, and target device to use for the query.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>This method supports the standard return values E_INVALIDARG, E_UNEXPECTED, and E_OUTOFMEMORY, as well as the following:</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>S_OK</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A subsequent call to <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.GetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@)"&gt;&lt;/xref&gt;</ph> would probably be successful.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>DV_E_LINDEX</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>An invalid value for <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC.lindex"&gt;&lt;/xref&gt;</ph>; currently, only -1 is supported.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>DV_E_FORMATETC</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>An invalid value for the <ph id="ph1">&lt;code&gt;pFormatetc&lt;/code&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>DV_E_TYMED</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC.tymed"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>DV_E_DVASPECT</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC.dwAspect"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>OLE_E_NOTRUNNING</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The application is not running.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Transfers data to the object that implements this method.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>This method is called by an object that contains a data source.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.DataObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IDataObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.FORMATETC"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the format used by the data object when interpreting the data contained in the storage medium.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph> structure, passed by reference, that defines the storage medium in which the data is being passed.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to specify that the data object called, which implements <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.IDataObject.SetData(System.Runtime.InteropServices.ComTypes.FORMATETC@,System.Runtime.InteropServices.ComTypes.STGMEDIUM@,System.Boolean)"&gt;&lt;/xref&gt;</ph>, owns the storage medium after the call returns.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This means that the data object must free the medium after it has been used by calling the <ph id="ph1">`ReleaseStgMedium`</ph> function.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> to specify that the caller retains ownership of the storage medium, and the data object called uses the storage medium for the duration of the call only.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>