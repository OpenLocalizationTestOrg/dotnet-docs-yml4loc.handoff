<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a3d9ee2b73197b5d11ad95fa9d97bf52a0314b74</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.Win32.SafeHandles.SafeAccessTokenHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c5aa84a6a726f71fc8b7ab16755257d33e93036a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">01e0413c839c22a9e33ae00b0051ba19335cf5d3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a safe handle to a Windows thread or process access token.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>For more information see <bpt id="p1">[</bpt>Access Tokens<ept id="p1">](https://msdn.microsoft.com/library/windows/desktop/aa374909.aspx)</ept></source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph> object that represents the pre-existing handle to use.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Using <ph id="ph1">&lt;xref href="System.IntPtr.Zero"&gt;&lt;/xref&gt;</ph> returns an invalid handle.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Returns an invalid handle by instantiating a <ph id="ph1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;&lt;/xref&gt;</ph> object with <ph id="ph2">&lt;xref href="System.IntPtr.Zero"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the handle is invalid.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the handle is not valid; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>