<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">92f80bc88b4871c41322dcfc5ec3ae9dd3473809</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Automation.CacheRequest.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f506e165fca094406eba0564e70b26fe9c67998</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">36af61505ab39027f732c5b66398fe22cf30fd10</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies properties and patterns that the UI Automation framework caches when an <ph id="ph1">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;&lt;/xref&gt;</ph> is obtained.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving properties and patterns through <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> requires cross-process calls that can slow down performance.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>By caching values of proprieties and patterns in a batch operation, you can enhance the performance of your application.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a new cache request by calling the class constructor.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The request is populated by repeated calls to the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only a single <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> can be active.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to activate a request:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> on the request.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This pushes the request onto the stack, and the request is popped when the object is disposed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure disposal even if an exception is raised, use the return value from <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Put the request onto the internal stack by calling <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the topmost request on the stack is active, and it must be the next one removed from the stack by <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Popping the request deactivates it.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements obtained while the request is active will have cached values for the properties and patterns specified.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Sets this <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> as the active specification for the items that are returned when an <ph id="ph2">&lt;xref href="System.Windows.Automation.AutomationElement"&gt;&lt;/xref&gt;</ph> is requested on the same thread.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using this method is usually preferable to using <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Push%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> as a means of activating the <ph id="ph3">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object is pushed onto the stack when <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> is called, and then popped off when it is disposed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure disposal, place the return value within a <ph id="ph1">`using`</ph> block (<ph id="ph2">`Using`</ph> in <ph id="ph3">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The object that can be used to dispose the <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Windows.Automation.AutomationPattern"&gt;&lt;/xref&gt;</ph> identifier to this <ph id="ph2">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a pattern that is already in the cache request has no effect.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An identifier specifying a pattern to cache.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> is active.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Windows.Automation.AutomationProperty"&gt;&lt;/xref&gt;</ph> identifier to this <ph id="ph2">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> is created, the <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.RuntimeIdProperty&gt;</ph> identifier is added as a default property to cache.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a property that is already in the cache request has no effect.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An identifier specifying a property value to cache.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> is active.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether returned elements should contain full references to the underlying <ph id="ph1">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>, or only cached information.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.Full&gt;</ph> is the default value, and specifies that returned elements contain a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> specifies that the returned elements have no reference to the underlying <ph id="ph2">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph>, and contain only cached information.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain operations on elements, including <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPropertyValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.GetCurrentPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement.SetFocus%2A&gt;</ph>, require a full reference; attempting to perform these on an element that has none results in an <ph id="ph4">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElementMode.None&gt;</ph> can be more efficient when only properties are needed, as it avoids the overhead involved in setting up full references.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Automation.AutomationElementMode.Full"&gt;&lt;/xref&gt;</ph> if the returned elements have a full reference to the underlying <ph id="ph2">[!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]</ph>; otherwise <ph id="ph3">&lt;xref href="System.Windows.Automation.AutomationElementMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Creates a copy of this <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A modifiable copy of the current object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> that is active on the current thread.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The active <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Removes the active <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> from the internal stack for the current thread.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the currently active request can be removed using the <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Pop%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to remove a request that is not the current one results in an exception.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An attempt was made to remove a cache request that was not the last one pushed onto the stack.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Places the <ph id="ph1">&lt;xref href="System.Windows.Automation.CacheRequest"&gt;&lt;/xref&gt;</ph> on the internal state stack, making it the active request on the current thread.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest&gt;</ph> objects can be placed onto the state stack.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cache requests must be removed from the stack in the order they were pushed on; otherwise, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> exception is raised.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are nesting cache requests, it is preferable to use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> to place the request on the stack.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason is that you can use <ph id="ph1">&lt;xref:System.Windows.Automation.CacheRequest.Activate%2A&gt;</ph> within a <ph id="ph2">`using`</ph> block (<ph id="ph3">`Using`</ph> in <ph id="ph4">[!INCLUDE[TLA#tla_visualbnet](~/includes/tlasharptla-visualbnet-md.md)]</ph>), ensuring that the request is popped off the stack even if an exception is raised.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets a value specifying the view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree to use when caching.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information on views of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree, see <bpt id="p1">[</bpt>UI Automation Tree Overview<ept id="p1">](~/docs/framework/ui-automation/ui-automation-tree-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> element tree.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The default view is <ph id="ph1">&lt;xref href="System.Windows.Automation.Automation.ControlViewCondition"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether caching is done only for the root of the subtree, or also for its children or descendants.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The scope of caching is in relation to the object or objects being fetched, not in relation to the object on which <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.FindFirst%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.FindAll%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>One or more of <ph id="ph1">&lt;xref href="System.Windows.Automation.TreeScope.Element"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Windows.Automation.TreeScope.Children"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Automation.TreeScope.Descendants"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Windows.Automation.TreeScope.Subtree"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.Windows.Automation.TreeScope.Element"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the property to <ph id="ph1">&lt;xref href="System.Windows.Automation.TreeScope.Parent"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Automation.TreeScope.Ancestors"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>