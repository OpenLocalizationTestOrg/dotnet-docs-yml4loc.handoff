<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">babd9fb76d4a8be67c1822d3af5223f76ba97680</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.SiteMapProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d78b6ee69b4857aeff65afef1a9468a76e953c31</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">76eb813e2d5b1e4a9f40f560f99c578e629ccf69</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a common base class for all site map data providers, and a way for developers to implement custom site map data providers that can be used with the ASP.NET site map infrastructure as persistent stores for <ph id="ph1">&lt;xref href="System.Web.SiteMap"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> classes represent the default implementations of the abstract <ph id="ph3">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> uses an XML file named Web.sitemap to store site map data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on about the Web.sitemap file, see <bpt id="p1">[</bpt>ASP.NET Site Maps<ept id="p1">](http://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class supports the concept of a site map provider hierarchy, by declaring the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.RootProvider%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.ParentProvider%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> can be a child or parent of another provider.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables scenarios where different content areas of a site are owned or implemented by different development groups that maintain their own site maps and site map providers.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> objects are configured in the Web.config files.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any site map providers that are declared in these configuration files are loaded at run time and are used to load and process site navigation data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMap&gt;</ph> object, which keeps track of all the providers that are available to it through its <ph id="ph2">&lt;xref:System.Web.SiteMap.Providers%2A&gt;</ph> property collection, provides programmatic access to the navigation data that is managed by the providers.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example demonstrates the format that is used to declare a site map provider in a Web.config file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The site navigation data that is loaded by these providers is used by other components of the site map infrastructure, such as the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.SiteMapPath&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.TreeView&gt;</ph> controls, to display site map information for users.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you implement your own site map provider, you can place the source file in the App_Code directory of your ASP.NET application, and then the assembly will be compiled automatically.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also place your own site map provider in the Global Assembly Cache (GAC), and provide a fully-qualified reference to it in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on compiler services, see <bpt id="p1">[</bpt>Working with Assemblies and the Global Assembly Cache<ept id="p1">](~/docs/framework/app-domains/working-with-assemblies-and-the-gac.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class is not instantiated directly.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.%23ctor%2A&gt;</ph> constructor is called from the constructor of classes that are derived from the <ph id="ph2">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object to the node collection that is maintained by the site map provider.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes deriving from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.AddNode%2A&gt;</ph> method and provide logic for adding a <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> object to the node collection that is maintained by the site map provider.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.AddNode%2A&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> to add to the node collection maintained by the provider.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object to the node collection that is maintained by the site map provider and specifies the parent <ph id="ph2">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes deriving from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.AddNode%2A&gt;</ph> method and provide logic for adding a <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> object with a specified parent to the node collection that is maintained by the site map provider.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider.AddNode%2A?displayProperty=fullName&gt;</ph> method adds the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> object that is specified by <ph id="ph3">`node`</ph> to the <ph id="ph4">&lt;xref:System.Web.SiteMapNodeCollection&gt;</ph> collection that is maintained by the <ph id="ph5">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> object and creates a parent/child relationship between the <ph id="ph6">&lt;xref:System.Web.SiteMapNode&gt;</ph> object that is specified by <ph id="ph7">`node`</ph> and <ph id="ph8">`parentNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.AddNode%2A&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> to add to the node collection maintained by the provider.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that is the parent of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object that represents the currently requested page.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.SiteMapResolve&gt;</ph> event is raised before attempting to retrieve a <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> object, to enable event subscribers to return an instance of the <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no event subscribers, the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class calls the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method using the current HTTP context to retrieve a <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> that represents the currently requested page.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the currently requested page does not correspond with a <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>, <ph id="ph2">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If security trimming is enabled and the user is not permitted to access the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>, <ph id="ph2">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the currently requested page; otherwise, <ph id="ph2">`null`</ph>, if the <ph id="ph3">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is not found or cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value indicating whether localized values of <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> attributes are returned.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.EnableLocalization%2A&gt;</ph> property is used for the get accessor of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Title%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Description%2A&gt;</ph> properties, as well as additional <ph id="ph4">&lt;xref:System.Web.SiteMapNode.Attributes%2A&gt;</ph> properties of a <ph id="ph5">&lt;xref:System.Web.SiteMapNode&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a localized value of the <ph id="ph2">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> attributes are returned; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, retrieves a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object that represents the page at the specified URL.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class must implement the abstract <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The URL provided can be a virtual or absolute URL.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>It might also be a URL that uses application-relative syntax, such as <ph id="ph1">`~/apprelativedirectory`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ensure that any implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method parse and handle application-relative syntax properly.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class, which is the default site map provider for ASP.NET, uses the URL of a <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> object as a key in the various collections that the classes maintain.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if a <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> provides a URL, it must be unique within the scope of the site map provider.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no URL is provided, a unique identifier is generated to identify the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A URL that identifies the page for which to retrieve a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the page identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">rawURL</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`null`</ph>, if no corresponding <ph id="ph4">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is found or if security trimming is enabled and the <ph id="ph5">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object that represents the currently requested page using the specified <ph id="ph2">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method calls the abstract <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method to retrieve a <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> object for the currently requested page based on the raw URL or the virtual path of the request.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no corresponding <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> is found in the <ph id="ph2">&lt;xref:System.Web.SiteMap&gt;</ph>, <ph id="ph3">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method does not check whether a <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> is accessible to a user, by default.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> used to match node information with the URL of the requested page.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the currently requested page; otherwise, <ph id="ph2">`null`</ph>, if no corresponding <ph id="ph3">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> can be found in the <ph id="ph4">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> or if the page context is <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object based on a specified key.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> implementation returns <ph id="ph2">`null`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A&gt;</ph> method to provide lookup functionality based on a unique key (instead of a URL, which is used by the <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNode%2A&gt;</ph> method).</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.FindSiteMapNodeFromKey%2A&gt;</ph> method if your site map provider implementation uses the <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Key%2A?displayProperty=fullName&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> object as a primary identifier in a site map structure.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.StaticSiteMapProvider&gt;</ph> class provides an implementation that handles searching for site map nodes that do not define a URL.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class, which is the default site map provider for ASP.NET, uses the URL of a <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> as a key in the various collections that the classes maintain.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if a node provides a URL, it must be unique within the scope of the site map provider.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no URL is provided, a unique identifier is generated to identify the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A lookup key with which a <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the page identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`null`</ph>, if no corresponding <ph id="ph4">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is found or if security trimming is enabled and the <ph id="ph5">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, retrieves the child nodes of a specific <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class must implement the abstract <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetChildNodes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> for which to retrieve all child nodes.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Web.SiteMapNodeCollection"&gt;&lt;/xref&gt;</ph> that contains the immediate child nodes of the specified <ph id="ph2">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`null`</ph> or an empty collection, if no child nodes exist.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the parent and ancestor site map nodes for the current page.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt;</ph> property; however, site map providers can override the <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A&gt;</ph> method and provide an optimized implementation that uses custom caching mechanisms to return the current <ph id="ph4">&lt;xref:System.Web.SiteMapNode&gt;</ph>, as well as the parent and ancestor nodes of the parent.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to retrieve.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If preferred, the parent and ancestor nodes can be linked to the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> object that is returned by the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A&gt;</ph> method, using the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <ph id="ph2">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> for specific <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The number of ancestor site map node generations to get.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A value of -1 indicates that all ancestors might be retrieved and cached by the provider.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the currently requested page; otherwise, <ph id="ph2">`null`</ph>, if the <ph id="ph3">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is not found or cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;upLevel&lt;/code&gt;</ph> is less than -1.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Provides an optimized lookup method for site map providers when retrieving the node for the currently requested page and fetching the site map nodes in the proximity of the current node.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt;</ph> property; however, site map providers can override the <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes%2A&gt;</ph> method and provide an optimized implementation that uses custom caching mechanisms to return the current <ph id="ph4">&lt;xref:System.Web.SiteMapNode&gt;</ph> object, as well as <ph id="ph5">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects that are in the proximity of the current <ph id="ph6">&lt;xref:System.Web.SiteMapNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to retrieve and cache, along with their immediate children.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`downLevel`</ph> parameter is used to specify how many levels of descendant nodes from the current <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> to retrieve.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If preferred, the ancestor and descendant nodes can be linked to the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> that is returned by the</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintNeighborhoodNodes%2A&gt;</ph> method, using the <ph id="ph2">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are fewer ancestor or child node levels than are specified by <ph id="ph1">`upLevel`</ph> or <ph id="ph2">`downLevel`</ph>, only those that are available are retrieved.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class, which is the default site map provider for ASP.NET, caches the entire site map in memory, which results in little or no overhead when querying the <ph id="ph2">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> for specific <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The number of ancestor <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> generations to fetch.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached by the provider.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The number of child <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> generations to fetch.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>0 indicates no descendant nodes are retrieved and a -1 indicates that all descendant nodes might be retrieved and cached by the provider.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the currently requested page; otherwise, <ph id="ph2">`null`</ph>, if the <ph id="ph3">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is not found or cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;upLevel&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;downLevel&lt;/code&gt;</ph> is less than -1.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, retrieves the parent node of a specific <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> for which to retrieve the parent node.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the parent of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`null`</ph>, if the <ph id="ph4">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> has no parent or security trimming is enabled and the parent node is not accessible to the current user.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Web.SiteMapProvider.GetParentNode(System.Web.SiteMapNode)"&gt;&lt;/xref&gt;</ph> might also return <ph id="ph2">`null`</ph> if the parent node belongs to a different provider.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>In this case, use the <ph id="ph1">&lt;xref href="System.Web.SiteMapNode.ParentNode"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept> instead.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Provides an optimized lookup method for site map providers when retrieving an ancestor node for the currently requested page and fetching the descendant nodes for the ancestor.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class provides a non-optimized implementation of the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A&gt;</ph> method, calling the <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.GetCurrentNodeAndHintAncestorNodes%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt;</ph> methods; however, site map providers can override the <ph id="ph5">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A&gt;</ph> method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <ph id="ph6">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`walkupLevels`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If fewer levels exist than are requested, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`downLevel`</ph> parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If preferred, the ancestor and descendant nodes can be linked to the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> that is returned by the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A&gt;</ph> method, using the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The number of ancestor node levels to traverse when retrieving the requested ancestor node.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The number of descendant node levels to retrieve from the target ancestor node.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents an ancestor <ph id="ph2">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> of the currently requested page; otherwise, <ph id="ph3">`null`</ph>, if the current or ancestor <ph id="ph4">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is not found or cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;walkupLevels&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;relativeDepthFromWalkup&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Provides an optimized lookup method for site map providers when retrieving an ancestor node for the specified <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object and fetching its child nodes.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class provides a non-optimized implementation of the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A&gt;</ph> method, calling the <ph id="ph3">&lt;xref:System.Web.SiteMapProvider.HintAncestorNodes%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt;</ph> methods; however, site map providers can override the <ph id="ph5">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A&gt;</ph> method and provide an optimized implementation that uses custom caching mechanisms to return the ancestor node and perform an optimized lookup of the other <ph id="ph6">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A&gt;</ph> method is very similar to the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToCurrentNodeAndHintDownFromParent%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`walkupLevels`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse when retrieving the target node.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If fewer levels exist than are requested, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`downLevel`</ph> parameter is used to specify how many levels of descendant nodes from the target ancestor node to retrieve.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If preferred, the ancestor and descendant nodes can be linked to the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> that is returned by the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.GetParentNodeRelativeToNodeAndHintDownFromParent%2A&gt;</ph> method, using the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are fewer ancestor node levels than specified by the <ph id="ph1">`upLevel`</ph> parameter, <ph id="ph2">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is up to the provider implementer to decide how to handle the situation where the number of available descendant node levels is less than the value that is specified by the <ph id="ph1">`downLevel`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that acts as a reference point for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">walkupLevels</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">relativeDepthFromWalkup</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The number of ancestor node levels to traverse when retrieving the requested ancestor node.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The number of descendant node levels to retrieve from the target ancestor node.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents an ancestor of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`null`</ph>, if the current or ancestor <ph id="ph4">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> is not found or cannot be returned for the current user.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The value specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">walkupLevels</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">relativeDepthFromWalkup</ph><ept id="p2">&lt;/code&gt;</ept> is less than 0.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, retrieves the root node of all the nodes that are currently managed by the current provider.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt;</ph> method enables a parent provider in a provider hierarchy to obtain a <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> object that acts as a frame of reference for building the provider hierarchy and the larger site map node hierarchy that is the sum of the site map data that each provider manages.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the root node of the set of nodes that the current provider manages.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Retrieves the root node of all the nodes that are currently managed by the specified site map provider.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation calls the abstract <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt;</ph> method on the specified <ph id="ph2">`provider`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The provider that calls the <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider.GetRootNodeCore"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that represents the root node of the set of nodes that is managed by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">provider</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Provides a method that site map providers can override to perform an optimized retrieval of one or more levels of parent and ancestor nodes, relative to the specified <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.HintAncestorNodes%2A&gt;</ph> method only checks for an <ph id="ph2">`upLevel`</ph> parameter that is less than -1 and a <ph id="ph3">`node`</ph> parameter that is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> class caches site map information in memory, the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.HintAncestorNodes%2A&gt;</ph> method is not used.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Site map providers can override the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.HintAncestorNodes%2A&gt;</ph> method to perform an optimized retrieval of parent and ancestor nodes of the specified <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If fewer levels exist than are requested, all available ancestor nodes are returned within the specified bound.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>If preferred, the parent node can be linked to the specified <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> using the <ph id="ph2">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that acts as a reference point for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">upLevel</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The number of ancestor <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> generations to fetch.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors might be retrieved and cached.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;upLevel&lt;/code&gt;</ph> is less than -1.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Provides a method that site map providers can override to perform an optimized retrieval of nodes found in the proximity of the specified node.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt;</ph> method only checks for an <ph id="ph2">`upLevel`</ph> and <ph id="ph3">`downLevel`</ph> parameters that are less than -1 and a <ph id="ph4">`node`</ph> parameter that is <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph> object caches site map information in memory, the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt;</ph> method is not used.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Site map providers can override the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt;</ph> method to perform an optimized lookup of the <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects in the proximity of the specified <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`upLevel`</ph> parameter is used to specify how many levels of parent and ancestor nodes to traverse from the specified <ph id="ph2">&lt;xref:System.Web.SiteMapNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`downLevel`</ph> parameter is used to specify how many levels of child nodes from the current node to retrieve.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>If preferred, the ancestor and descendant nodes can be linked to the <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> that is returned by the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.HintNeighborhoodNodes%2A&gt;</ph> method, using the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.ParentNode%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.SiteMapNode.ChildNodes%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that acts as a reference point for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">upLevel</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The number of ancestor <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> generations to fetch.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>0 indicates no ancestor nodes are retrieved and -1 indicates that all ancestors (and their descendant nodes to the level of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">node</ph><ept id="p1">&lt;/code&gt;</ept>) might be retrieved and cached.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The number of descendant <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> generations to fetch.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>0 indicates no descendant nodes are retrieved and -1 indicates that all descendant nodes might be retrieved and cached.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;upLevel&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;downLevel&lt;/code&gt;</ph> is less than -1.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Initializes the <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph> implementation, including any resources that are needed to load site map data from persistent storage.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.Initialize%2A&gt;</ph> method does not actually build a site map, it only prepares the state of the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider&gt;</ph> object to do so.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation initializes the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.SecurityTrimmingEnabled%2A&gt;</ph> property for the site map provider from the site navigation configuration.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> can override the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.Initialize%2A&gt;</ph> method to initialize any state and resources that are required to load site map data from persistent storage.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if your derived class is using files to store site map data, any file initialization can be performed in the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.Initialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the derived class uses some other type of data store, such as a relational database, initializing a database connection might be performed.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additional attributes, such as file names or connection strings, are read by the ASP.NET configuration system and passed to the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.Initialize%2A&gt;</ph> method with its <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Configuration.Provider.ProviderBase.Name"&gt;&lt;/xref&gt;</ph> of the provider to initialize.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> that can contain additional attributes to help initialize the provider.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>These attributes are read from the site map provider configuration in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Retrieves a Boolean value indicating whether the specified <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object can be viewed by the user in the specified context.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior when security trimming is enabled is as described in the following table.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Roles%2A&gt;</ph> exists on <ph id="ph2">`node`</ph> and the current user is in at least one of the specified roles.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current thread has an associated <ph id="ph1">`WindowsIdentity`</ph> that has file access to the requested URL and the URL is located within the directory structure for the application.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>- or -</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current user is authorized specifically for the requested URL in the <ph id="ph1">`authorization`</ph> element for the current application and the URL is located within the directory structure for the application.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>None of the preceding conditions is met.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> that contains user information.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> that is requested by the user.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if security trimming is enabled and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">node</ph><ept id="p1">&lt;/code&gt;</ept> can be viewed by the user or security trimming is not enabled; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;node&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Gets or sets the parent <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph> object of the current provider.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>All classes that implement the abstract <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class can support the concept of a site map provider hierarchy.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any hierarchical relationships between providers are maintained outside the scope of a <ph id="ph1">&lt;xref:System.Web.SiteMapProviderCollection&gt;</ph> collection by the providers themselves.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of a functional provider hierarchy, see <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The parent provider of the current <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Removes the specified <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object from the node collection that is maintained by the site map provider.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes deriving from the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class can override the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.RemoveNode%2A&gt;</ph> method and provide logic for removing <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> objects from the node collection that is maintained by the site map provider.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.RemoveNode%2A&gt;</ph> method throws a <ph id="ph2">&lt;xref:System.NotImplementedException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> to remove from the node collection maintained by the provider.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider.SiteMapResolve"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`context`</ph> parameter and a reference to the provider that called the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.ResolveSiteMapNode%2A&gt;</ph> method are passed to the constructor of any associated <ph id="ph3">&lt;xref:System.Web.SiteMapResolveEventArgs&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> for which the site map currently exists.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> provided by the event handler delegate that is registered to handle the event or, if more than one delegate is registered to handle the event, the return value of the last delegate in the delegate chain; otherwise, <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Get or sets the resource key that is used for localizing <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> attributes.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.ResourceKey%2A&gt;</ph> property is used with the <ph id="ph2">&lt;xref:System.Web.SiteMapNode.GetImplicitResourceString%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the <ph id="ph1">&lt;xref:System.Web.SiteMapNode.Title%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.SiteMapNode.Description%2A&gt;</ph> properties, as well as any additional attributes that are defined in the <ph id="ph3">&lt;xref:System.Web.SiteMapNode.Attributes%2A&gt;</ph> collection of the <ph id="ph4">&lt;xref:System.Web.SiteMapNode&gt;</ph> object, the <ph id="ph5">&lt;xref:System.Web.SiteMapNode.GetImplicitResourceString%2A&gt;</ph> method takes precedence over the <ph id="ph6">&lt;xref:System.Web.SiteMapNode.GetExplicitResourceString%2A&gt;</ph> when the localization is enabled with the <ph id="ph7">&lt;xref:System.Web.SiteMapProvider.EnableLocalization%2A&gt;</ph> property set to <ph id="ph8">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A string containing the resource key name.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Gets the root <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> object of the site map data that the current provider represents.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation calls the abstract <ph id="ph1">&lt;xref:System.Web.SiteMapProvider.GetRootNodeCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The root <ph id="ph1">&lt;xref href="System.Web.SiteMapNode"&gt;&lt;/xref&gt;</ph> of the current site map data provider.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The default implementation performs security trimming on the returned node.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets the root <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph> object in the current provider hierarchy.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>All classes that implement the <ph id="ph1">&lt;xref:System.Web.SiteMapProvider&gt;</ph> class can support the concept of a site map provider hierarchy.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any hierarchical relationships between providers are maintained outside the scope of a <ph id="ph1">&lt;xref:System.Web.SiteMapProviderCollection&gt;</ph> collection by the providers themselves.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of a functional provider hierarchy, see <ph id="ph1">&lt;xref:System.Web.XmlSiteMapProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider"&gt;&lt;/xref&gt;</ph> that is the top-level site map provider in the provider hierarchy that the current provider belongs to.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>There is a circular reference to the current site map provider.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value indicating whether a site map provider filters site map nodes based on a user's role.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security trimming cannot be set programmatically—it is set in the configuration for the provider.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the provider is configured to filter nodes based on role; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Web.SiteMapProvider.CurrentNode"&gt;&lt;/xref&gt;</ph> property is called.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a <ph id="ph1">&lt;xref:System.Web.SiteMapNode&gt;</ph> representation of the currently requested page without implementing a custom site map provider by subscribing to the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.SiteMapResolve&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subscribers attach a <ph id="ph1">&lt;xref:System.Web.SiteMapResolveEventHandler&gt;</ph> object to receive notification when the <ph id="ph2">&lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt;</ph> property is called and can return a custom <ph id="ph3">&lt;xref:System.Web.SiteMapNode&gt;</ph> object instead of the default one that is returned by the <ph id="ph4">&lt;xref:System.Web.SiteMapProvider.CurrentNode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>