<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0bc9eb27708279abd2daaaf7d3e30682ff3f2405</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Controls.Viewbox.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a93c3304e2a50962a19db5a929faad78c550df45</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">006323535ddc2af58344a3550531f3b1e56e1381</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a content decorator that can stretch and scale a single child to fill the available space.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> can only have one <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add an additional <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph>, you cause an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> at run time.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Arranges the content of a <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> always sets its <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.UIElement.DesiredSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then computes and applies a transformation from that <ph id="ph1">&lt;xref:System.Windows.Size&gt;</ph> to the available space.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> determines available space by subtracting the margin of its <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox.Child%2A&gt;</ph> from the input <ph id="ph3">&lt;xref:System.Windows.Size&gt;</ph> of its elements.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> this element uses to arrange its child elements.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> that represents the arranged size of this <ph id="ph2">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> element and its child elements.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the single child of a <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add an additional child element to a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> it causes an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> at run time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The single child of a <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This property has no default value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> child at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">index</ph><ept id="p1">&lt;/code&gt;</ept> position.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The index position of the wanted <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> child.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> child of the parent <ph id="ph2">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets an enumerator that can iterate the logical children of this <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> element.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This property has no default value.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Measures the child elements of a <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> prior to arranging them during the <ph id="ph2">&lt;xref href="System.Windows.Controls.WrapPanel.ArrangeOverride(System.Windows.Size)"&gt;&lt;/xref&gt;</ph> pass.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> for <ph id="ph2">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> typically calls this method, which performs the first layout pass.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> measures its child at an infinite <ph id="ph2">`constraint`</ph>, allowing the child to be as large as it requires.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> limit that <ph id="ph2">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph> cannot exceed.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Size"&gt;&lt;/xref&gt;</ph> that represents the element size you want.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Windows.Media.Stretch"&gt;&lt;/xref&gt;</ph> mode, which determines how content fits into the available space.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Media.Stretch"&gt;&lt;/xref&gt;</ph> that determines how content fits in the available space.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Media.Stretch.Uniform"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Controls.StretchDirection"&gt;&lt;/xref&gt;</ph>, which determines how scaling is applied to the contents of a <ph id="ph2">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines the scaling restrictions that apply to the contents of a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, use this property to prevent the contents of a <ph id="ph1">&lt;xref:System.Windows.Controls.Viewbox&gt;</ph> from being smaller or larger than its original size.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Controls.StretchDirection"&gt;&lt;/xref&gt;</ph> that determines how scaling is applied to the contents of a <ph id="ph2">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Controls.StretchDirection.Both"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox.StretchDirection"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Controls.Viewbox.Stretch"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the number of child <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> objects in this instance of <ph id="ph2">&lt;xref href="System.Windows.Controls.Viewbox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property always returns 1.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref href="System.Windows.Media.Visual"&gt;&lt;/xref&gt;</ph> children.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>