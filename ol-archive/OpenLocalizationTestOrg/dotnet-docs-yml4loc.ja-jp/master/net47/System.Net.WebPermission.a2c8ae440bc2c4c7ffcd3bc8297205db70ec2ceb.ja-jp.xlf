<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c34b7ffce1bc348a023a315d07d5613bb6ff99c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.WebPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97c35a2934e8ab0bb1482b2aec750dda4d85ad14</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5948404ba56c1ed9dc6e6d4c7318514e669b4637</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Controls rights to access HTTP Internet resources.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> provides a set of methods and properties to control access to Internet resources.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> to provide either restricted or unrestricted access to your resource, based on the <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> that is set when the <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> instance by calling its constructor using one of the following sets of parameters:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>No parameters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> is <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify either <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph> to allow any URI to be used in the target class, or <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> to allow access only to URIs that you specify through the use of the <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> value and a URI string.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified URI has permissions granted by the <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Net.NetworkAccess&gt;</ph> specifier and URI regular expression.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> hold the URIs to which you have granted access permission.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add a URI to either of these lists, use <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> as the <ph id="ph2">&lt;xref:System.Net.NetworkAccess&gt;</ph> parameter, the URI will be added to the <ph id="ph3">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> will allow connections to your target class with URIs matching the <ph id="ph2">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deny access to an Internet resource, you must deny access to all the possible paths to that resource.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requires calling <ph id="ph1">&lt;xref:System.Net.WebPermission.%23ctor%2A?displayProperty=fullName&gt;</ph> with state parameter set to <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A better approach is to allow access to the specific resource only.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about this subject, refer to the <bpt id="p1">[</bpt>NIB: Using the Deny Method<ept id="p1">](http://msdn.microsoft.com/en-us/6b4d2e01-c504-4ac3-b50e-d6f5e7f5df25)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need to deny access using only the resource canonical path.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no need to use all the path's syntactical variations.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>User name and default port information is stripped from the <ph id="ph1">&lt;xref:System.Uri&gt;</ph> before the comparison with the regular expression argument that is supplied to the <ph id="ph2">&lt;xref:System.Net.WebPermission.%23ctor%28System.Net.NetworkAccess%2CSystem.Text.RegularExpressions.Regex%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the regular expression contains user information or the default port number, then all incoming <ph id="ph1">&lt;xref:System.Uri&gt;</ph>s will fail to match the regular expression.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates an empty permission that does not grant any rights.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> class that passes all demands or fails all demands.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`state`</ph> parameter is either <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionState?displayProperty=fullName&gt;</ph>, respectively yielding fully restricted or fully unrestricted access to all security variables.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState?displayProperty=fullName&gt;</ph>, then you can give access to individual URIs using <ph id="ph2">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> class with the specified access rights for the specified URI.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> and grants its target permission to either make a remote host connection or accept a remote host connection using the URI described by the <ph id="ph2">`uriString`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A NetworkAccess value that indicates what kind of access to grant to the specified URI.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.NetworkAccess.Accept"&gt;&lt;/xref&gt;</ph> indicates that the application is allowed to accept connections from the Internet on a local resource.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.NetworkAccess.Connect"&gt;&lt;/xref&gt;</ph> indicates that the application is allowed to connect to specific Internet resources.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A URI string to which access rights are granted.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uriString&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> class with the specified access rights for the specified URI regular expression.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> and grants its target permission to either make a remote host connection or accept a remote host connection using the URI described by the <ph id="ph2">`uriRegex`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that you create <ph id="ph1">`uriRegex`</ph> using the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName&gt;</ph> flags.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.NetworkAccess"&gt;&lt;/xref&gt;</ph> value that indicates what kind of access to grant to the specified URI.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.NetworkAccess.Accept"&gt;&lt;/xref&gt;</ph> indicates that the application is allowed to accept connections from the Internet on a local resource.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.NetworkAccess.Connect"&gt;&lt;/xref&gt;</ph> indicates that the application is allowed to connect to specific Internet resources.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A regular expression that describes the URI to which access is to be granted.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This property returns an enumeration of a single accept permissions held by this <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The possible objects types contained in the returned enumeration are <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Text.RegularExpressions.Regex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets a list of local resources permitted by this <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class to which you have applied <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> only has permission to receive an incoming connection to local resources found in this list.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add URIs to this list using <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> interface that contains accept permissions.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Adds the specified URI string with the specified access rights to the current <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have specified <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> as the <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>, use <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to permit the use of <ph id="ph4">`uriString`</ph> in the target class.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The way that <ph id="ph1">`uriString`</ph> can be used by the target class is specified by <ph id="ph2">`access`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> as the access parameter to add the URI specified by the <ph id="ph2">`uriString`</ph> parameter to the list of URI accept strings, or specify <ph id="ph3">&lt;xref:System.Net.NetworkAccess.Connect&gt;</ph> as the access parameter to add the URI to the list of URI connect strings.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> on <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> will have no effect, because permission is granted to all URIs.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.NetworkAccess"&gt;&lt;/xref&gt;</ph> that specifies the access rights that are granted to the URI.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A string that describes the URI to which access rights are granted.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;uriString&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Adds the specified URI with the specified access rights to the current <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have specified <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph> as the <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph>, use <ph id="ph3">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to allow the use of <ph id="ph4">`uriRegex`</ph> in the target class.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Net.NetworkAccess.Accept&gt;</ph> as the <ph id="ph2">`access`</ph> parameter to add the URI specified by the <ph id="ph3">`uriRegex`</ph> parameter to the list of URI accept strings, or specify <ph id="ph4">&lt;xref:System.Net.NetworkAccess.Connect&gt;</ph> as the access parameter to add the URI to the list of URI connect strings.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> on an <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph><ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> instance will have no effect as permission is granted to all URIs.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that you create <ph id="ph1">`uriRegex`</ph> using the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexOptions?displayProperty=fullName&gt;</ph> flags.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A NetworkAccess that specifies the access rights that are granted to the URI.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A regular expression that describes the set of URIs to which access rights are granted.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uriRegex</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This property returns an enumeration of a single connect permissions held by this <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The possible objects types contained in the returned enumeration are <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Text.RegularExpressions.Regex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property gets a list of remote resources that are permitted by this <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class to which you have applied <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> only has permission to connect with resources found in this list.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add URIs to this list using <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A candidate URI string is checked against the list of relevant regular expressions (<ph id="ph1">&lt;xref:System.Net.WebPermission.AcceptList%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebPermission.ConnectList%2A&gt;</ph>) in two ways.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, the candidate URI string is checked against the appropriate list; then, if there is no match, the candidate URI string is converted into a <ph id="ph1">&lt;xref:System.Uri&gt;</ph> and checked against the appropriate list.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> interface that contains connect permissions.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Creates a copy of a <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> returned by this method represents the same access to resources as the original <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Copy%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A new instance of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> class that has the same values as the original.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Reconstructs a <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> from an XML encoding.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> method reconstructs a <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> from an XML encoding that is defined by the <ph id="ph3">&lt;xref:System.Security.SecurityElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebPermission.ToXml%2A&gt;</ph> method to XML-encode the <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph>, including state information.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The XML encoding from which to reconstruct the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">securityElement</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityElement&lt;/code&gt;</ph> is not a permission element for this type.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Returns the logical intersection of two <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission.Intersect%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> that contains those permissions that are common in both <ph id="ph3">`target`</ph> and the current instance.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Intersect%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> to compare with the current instance.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> that represents the intersection of the current instance and the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>If the intersection is empty, the method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;target&lt;/code&gt;</ph> is not <ph id="ph2">`null`</ph> or of type <ph id="ph3">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Determines whether the current <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> is a subset of the specified object.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> specifies a set of associated resources that is wholly contained by the <ph id="ph2">`target`</ph> parameter, then the current <ph id="ph3">&lt;xref:System.Net.WebPermission&gt;</ph> is a subset of <ph id="ph4">`target`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Net.WebPermission.IsSubsetOf%2A&gt;</ph> and is implemented to support the <ph id="ph2">&lt;xref:System.Security.IPermission&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> to compare to the current <ph id="ph2">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current instance is a subset of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If the target is <ph id="ph1">`null`</ph>, the method returns <ph id="ph2">`true`</ph> for an empty current permission that is not unrestricted and <ph id="ph3">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The target parameter is not an instance of <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The current instance contains a Regex-encoded right and there is not exactly the same right found in the target instance.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Checks the overall permission state of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> is <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, then the target class can use all URIs.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, specific permission must be given for any URI you want to use with the target class.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Net.WebPermission.AddPermission%2A&gt;</ph> to add a URI and specify its permissions.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> was created with the <ph id="ph3">&lt;xref href="System.Security.Permissions.PermissionState.Unrestricted"&gt;&lt;/xref&gt;</ph><ph id="ph4">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of a <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> and its current state.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.WebPermission.FromXml%2A&gt;</ph> method to restore the state information from a <ph id="ph2">&lt;xref:System.Security.SecurityElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.SecurityElement"&gt;&lt;/xref&gt;</ph> that contains an XML-encoded representation of the <ph id="ph2">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>, including state information.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns the logical union between two instances of the <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.WebPermission.Union%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.WebPermission&gt;</ph> that contains all the permissions in both <ph id="ph3">`target`</ph> and the current instance.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> to combine with the current <ph id="ph2">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> that represents the union of the current instance and the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If either <ph id="ph1">`WebPermission`</ph> is <ph id="ph2">&lt;xref href="System.Security.Permissions.PermissionState.Unrestricted"&gt;&lt;/xref&gt;</ph>, the method returns a <ph id="ph3">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph> that is <ph id="ph4">&lt;xref href="System.Security.Permissions.PermissionState.Unrestricted"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If the target is <ph id="ph1">`null`</ph>, the method returns a copy of the current <ph id="ph2">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>target is not <ph id="ph1">`null`</ph> or of type <ph id="ph2">&lt;xref href="System.Net.WebPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>