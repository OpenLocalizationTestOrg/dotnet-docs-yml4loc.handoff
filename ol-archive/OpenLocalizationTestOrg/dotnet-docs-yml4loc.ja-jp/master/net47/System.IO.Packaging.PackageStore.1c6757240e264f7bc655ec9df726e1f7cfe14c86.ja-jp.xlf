<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29417e3e59f40be9057fd18205aff7fe6745f904</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IO.Packaging.PackageStore.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3163fc15eb3fff223221338ebf8cf5b513cd1f4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">828ae78325a96c2873817f12b78a10bdd627334c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of application-specific <ph id="ph1">&lt;xref href="System.IO.Packaging.Package"&gt;&lt;/xref&gt;</ph> instances used in combination with <ph id="ph2">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> defines a reference collections of package that are open and active in the application.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Packages added to the <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> are accessed is by their key URI value.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> supports three common uses:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accessing <ph id="ph1">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> data through <ph id="ph2">&lt;xref:System.IO.Packaging.PackWebRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application obtaining an instance of a <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> given the package's URI.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accessing packages that are created and stored in a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To improve performance and minimize the overhead of repeated file open/close operations, the <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> is used to manage instances of packages accessed by <ph id="ph2">&lt;xref:System.IO.Packaging.PackWebRequest&gt;</ph> and directly by the application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When accessing data in a package, the <ph id="ph1">&lt;xref:System.IO.Packaging.Package&gt;</ph> address of a requested <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;</ph> is first checked to see if the package is already defined and open in the <ph id="ph4">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the package is defined as open in the <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph>, requested parts can be accessed directly without repeatedly opening and closing the package for each  request.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application opens a package with <ph id="ph1">&lt;xref:System.IO.Packaging.Package.Open%2A?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</ph> can be called to add the package to the <ph id="ph3">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;</ph> should later be called to remove the package from the <ph id="ph2">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> prior to calling <ph id="ph3">&lt;xref:System.IO.Packaging.Package.Close%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>XPS packages opened with an <ph id="ph1">&lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;</ph> constructor are automatically added and removed from the <ph id="ph2">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> when the document is created and disposed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>(You do not need to call <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.IO.Packaging.PackageStore.RemovePackage%2A&gt;</ph> separately for XPS packages opened with <ph id="ph3">&lt;xref:System.Windows.Xps.Packaging.XpsDocument.%23ctor%2A&gt;</ph> constructors.)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file I/O permissions of a package accessed through the <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> remains the same as the I/O permissions set on the package when it is opened.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> only provides references to the packages that have been added the store.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is up to the application to correctly open, update, and close each package.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Packages added to the <ph id="ph1">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> can be accessed in multithreaded environments when they are used in combination with a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> parser such as <ph id="ph3">&lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When operating in a multithreaded environment, the application must lock the package before access.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.IO.Packaging.Package"&gt;&lt;/xref&gt;</ph> to the store.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`packageUri`</ph> defines the package's key URI that is compared when you call <ph id="ph2">&lt;xref:System.IO.Packaging.PackWebRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`packageUri`</ph> matches the <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;</ph> for a <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> in a <ph id="ph4">&lt;xref:System.IO.Packaging.PackWebRequest&gt;</ph> call, the package defined in the <ph id="ph5">&lt;xref:System.IO.Packaging.PackageStore&gt;</ph> is used to access the requested part.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`packageUri`</ph> does not match the <ph id="ph2">&lt;xref:System.IO.Packaging.PackagePart.Uri%2A&gt;</ph> for a <ph id="ph3">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> in a <ph id="ph4">&lt;xref:System.IO.Packaging.PackWebRequest&gt;</ph> call, the package with the specified URI is opened to access the requested part.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands <ph id="ph1">&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;</ph> for all custom <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> (non-<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>) types.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The key <ph id="ph1">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">package</ph><ept id="p1">&lt;/code&gt;</ept> to compare in a <ph id="ph3">&lt;xref href="System.IO.Packaging.PackWebRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The package to add to the store.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;package&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A package with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">packageUri</ph><ept id="p1">&lt;/code&gt;</ept> is already in the store.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.IO.Packaging.Package"&gt;&lt;/xref&gt;</ph> with a specified <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> from the store.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`packageUri`</ph> is matched to the URIs specified in the <ph id="ph2">&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</ph> method call.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands <ph id="ph1">&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;</ph> for all custom <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> (non-<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>) types.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the package to return.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The package with a specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">packageUri</ph><ept id="p1">&lt;/code&gt;</ept>; or <ph id="ph2">`null`</ph>, if a package with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">packageUri</ph><ept id="p2">&lt;/code&gt;</ept> is not in the store.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Removes the <ph id="ph1">&lt;xref href="System.IO.Packaging.Package"&gt;&lt;/xref&gt;</ph> with a specified <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> from the store.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`packageUri`</ph> is matched to the URIs specified in the <ph id="ph2">&lt;xref:System.IO.Packaging.PackageStore.AddPackage%2A&gt;</ph> method call.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Security Note<ept id="p1">**</ept> This method demands <ph id="ph1">&lt;xref:System.Security.Permissions.EnvironmentPermission&gt;</ph> for all custom <ph id="ph2">&lt;xref:System.IO.Packaging.Package&gt;</ph> (non-<ph id="ph3">&lt;xref:System.IO.Packaging.ZipPackage&gt;</ph>) types.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the package to remove.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;packageUri&lt;/code&gt;</ph> is an invalid package <ph id="ph2">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>