<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de93ea38281a77d84e0c4e7b07533247c7004ff9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Threading.Tasks.UnobservedTaskExceptionEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">22a3220ba50c80cb8c24a22fbbbf7e3ea0fa9af1</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1ef7281228e7c3a3f2d7cfcf41a4ebfc13800097</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for the event that is raised when a faulted <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>'s exception goes unobserved.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Exception property is used to examine the exception without marking it as observed, whereas the <ph id="ph1">&lt;xref:System.Threading.Tasks.UnobservedTaskExceptionEventArgs.SetObserved%2A&gt;</ph> method is used to mark the exception as observed.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the exception as observed prevents it from triggering exception escalation policy which, by default, terminates the process.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Threading.Tasks.UnobservedTaskExceptionEventArgs"&gt;&lt;/xref&gt;</ph> class with the unobserved exception.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The Exception that has gone unobserved.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The Exception that went unobserved.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The Exception that went unobserved.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets whether this exception has been marked as "observed."</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>true if this exception has been marked as "observed"; otherwise false.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Marks the <ph id="ph1">&lt;xref href="System.Threading.Tasks.UnobservedTaskExceptionEventArgs.Exception"&gt;&lt;/xref&gt;</ph> as "observed," thus preventing it from triggering exception escalation policy which, by default, terminates the process.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>