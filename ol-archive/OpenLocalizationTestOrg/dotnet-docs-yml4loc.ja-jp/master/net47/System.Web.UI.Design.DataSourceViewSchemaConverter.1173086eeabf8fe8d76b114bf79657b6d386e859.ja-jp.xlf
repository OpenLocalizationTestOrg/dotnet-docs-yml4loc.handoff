<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19330a61a22f1113363b19095ab4aa576770de9e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.Design.DataSourceViewSchemaConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54bc81c326565af60b7c3c777254c3f93bf5eed8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e5bd490f489b7483db5b40ad4cdc2acbd810d38</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a type converter for a property representing a field in a data source schema.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> class to convert object types before assignment to a control property.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, the <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> supports converting string object types and supplies a list of standard values available for assignment to the associated control property.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The standard values collection is the list of fields in the data source schema for the current control.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support converting additional object types, derive a class from <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> and override the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> methods for the additional object types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support a custom list of standard assignable values, override the <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Apply the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverterAttribute&gt;</ph> attribute to specify the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> class as the type converter for a control property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DataControlField.SortExpression%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> class and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.BoundField.DataField%2A&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.BoundField&gt;</ph> class use the <ph id="ph5">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> as the property type converter.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should never access a type converter directly.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the appropriate converter by using a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the examples in <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A&gt;</ph> method indicates that the converter supports returning a list of available values through the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A&gt;</ph> method indicates that the list is not an exclusive list of possible values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.Design.DataSourceViewSchemaConverter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should never access a type converter directly.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the appropriate converter by using a <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the examples in <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified source type can be converted to the type of the associated control property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> method supports converting the source type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> method can convert only from a string, so the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> method returns <ph id="ph3">`true`</ph> when <ph id="ph4">`sourceType`</ph> is a string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The type to convert from.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the converter can perform the conversion; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Converts the specified object to the type of the associated control property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is a string, then the string representation of <ph id="ph2">`value`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, an empty string ("") is returned.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all other specified values, a <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.CanConvertFrom%2A&gt;</ph> method to determine whether the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.ConvertFrom%2A&gt;</ph> method supports converting the source type.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object that can be used to support localization features.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> instance that represents the converted object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The conversion could not be performed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a list of available values that can be assigned to the associated control property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property of the specified <ph id="ph3">`context`</ph> object to obtain an <ph id="ph4">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation is available, it is used to access the data source schema for the associated control at design time and retrieve the list of available fields from the associated data source schema view.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection of available values is built from the fields in the data source schema for the associated control.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter.StandardValuesCollection"&gt;&lt;/xref&gt;</ph> containing available values for assignment to the associated control property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns a list of available values that can be assigned to the associated control property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A type used to filter fields to include in the standard values list.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter.StandardValuesCollection"&gt;&lt;/xref&gt;</ph> containing available values for assignment to the associated control property.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Indicates whether this converter returns a list containing all possible values that can be assigned to the associated control property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesExclusive%2A&gt;</ph> method for a <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> returns <ph id="ph3">`false`</ph>, indicating that the list returned by the <ph id="ph4">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method is not an exclusive list of all possible assignable values.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this converter returns a list containing all possible values that can be assigned to the associated control property; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Indicates whether this converter returns a set of available values for assignment to a control property within the specified context.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A&gt;</ph> method indicates whether the converter supports returning a list of available values through the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValuesSupported%2A&gt;</ph> method for the <ph id="ph2">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter&gt;</ph> object returns <ph id="ph3">`true`</ph> if the specified <ph id="ph4">`context`</ph> object supplies an <ph id="ph5">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation in its <ph id="ph6">&lt;xref:System.ComponentModel.ITypeDescriptorContext.Instance%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.DataSourceViewSchemaConverter.GetStandardValues%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.IDataSourceViewSchemaAccessor&gt;</ph> implementation to retrieve the list of available fields from the associated data source schema.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> implementation that can be used to gain additional context information.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this converter returns a standard set of available values for assignment to the associated control property; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>