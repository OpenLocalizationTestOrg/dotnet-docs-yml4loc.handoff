<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">954455a3568babb5fb6f1a6215776b16c5bdb7db</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.TypeExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88d28f91172f30991125f2c413d366e63e53275b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69211ef737b9b9379a548d3cb90950a591511b88</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements a markup extension that returns a <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> based on a string input.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage information, see <bpt id="p1">[</bpt>x:Type Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-type-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`{x:Type}`</ph> functionality is generally for user code invocation from markup.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For code that is implementing XAML support, type resolution services come from <ph id="ph1">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> and are related to the implementation of the acting XAML schema context.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not attempt to reference <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> as a substitute for a <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> service provider; the context you pass in might not be valid for a type resolution, and attempts to call without valid services will fail.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>WPF Usage Notes</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type references are commonly used for style, template, and databinding feature areas in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>, when these features are referenced by XAML.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.TypeExtension"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.TypeExtension"&gt;&lt;/xref&gt;</ph> class, initializing the <ph id="ph2">&lt;xref href="System.Windows.Markup.TypeExtension.TypeName"&gt;&lt;/xref&gt;</ph> value based on the provided <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">typeName</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is not evaluated when you set it in the constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is not <ph id="ph1">`null`</ph>, the value will be initially accepted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual parsing and evaluation of the value is deferred until <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> is called on this extension, when XAML is parsed and with available service contexts active.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this time the <ph id="ph1">`typeName`</ph> is expected to be resolvable as a type within a XAML schema context, and that type is returned.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A string that identifies the type to make a reference to.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This string uses the format <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix:className</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prefix</ph><ept id="p1">&lt;/code&gt;</ept> is the mapping prefix for a XAML namespace, and is only required to reference types that are not mapped to the default XAML namespace.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Attempted to specify <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p1">&lt;/code&gt;</ept> as <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.TypeExtension"&gt;&lt;/xref&gt;</ph> class, declaring the type directly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a helper method for run time code usages of <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> and is not part of the normal implementation pattern for a markup extension.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The type to be represented by this <ph id="ph1">&lt;xref href="System.Windows.Markup.TypeExtension"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns an object that should be set on the property where this extension is applied.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">&lt;xref href="System.Windows.Markup.TypeExtension"&gt;&lt;/xref&gt;</ph> , this is the <ph id="ph2">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> value as evaluated for the requested type name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can pass <ph id="ph1">`null`</ph> for <ph id="ph2">`serviceProvider`</ph>, but only if this <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension&gt;</ph> instance was established with an initial true type in the constructor rather than a <ph id="ph4">`typeName`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this markup extension implementation relies on services based on the passed <ph id="ph1">`serviceProvider`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>It must not be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`serviceProvider`</ph> is expected to provide a service for <ph id="ph2">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Object that can provide services for the markup extension.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The provider is expected to provide a service for <ph id="ph1">&lt;xref href="System.Windows.Markup.IXamlTypeResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> to set on the property where the extension is applied.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;member&lt;/code&gt;</ph> value for the extension is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Some part of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">typeName</ph><ept id="p1">&lt;/code&gt;</ept> string did not parse properly.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> did not provide a service for <ph id="ph2">&lt;xref href="System.Windows.Markup.IXamlTypeResolver"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeName&lt;/code&gt;</ph> value did not resolve to a type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceProvider&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the type information for this extension.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless this instance was deliberately instantiated with the <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.%23ctor%28System.Type%29&gt;</ph> signature constructor, this value will be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property will not be reset when <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the true type represented you should always call <ph id="ph1">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> rather than check this property.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is settable per usual rules regarding markup extension usage.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are setting with a <ph id="ph1">&lt;xref:System.Type&gt;</ph>, then the purpose of this markup extension is irrelevant, because the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> is returned from a <ph id="ph3">&lt;xref:System.Windows.Markup.TypeExtension.ProvideValue%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The established type.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For runtime purposes, this may be <ph id="ph1">`null`</ph> for get access, but cannot be set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Attempted to set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the type name represented by this markup extension.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A string that identifies the type.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This string uses the format <bpt id="p1">*</bpt>prefix<ept id="p1">*</ept><bpt id="p2">&lt;code&gt;</bpt><ph id="ph1">:</ph><ept id="p2">&lt;/code&gt;</ept><bpt id="p3">*</bpt>className<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>(<bpt id="p1">*</bpt>prefix<ept id="p1">*</ept> is the mapping prefix for an XML namespace, and is only required to reference types that are not mapped to the default XML namespace for WPF (<ph id="ph1">[!INCLUDE[TLA#tla_wpfxmlnsv1](~/includes/tlasharptla-wpfxmlnsv1-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Attempted to set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>