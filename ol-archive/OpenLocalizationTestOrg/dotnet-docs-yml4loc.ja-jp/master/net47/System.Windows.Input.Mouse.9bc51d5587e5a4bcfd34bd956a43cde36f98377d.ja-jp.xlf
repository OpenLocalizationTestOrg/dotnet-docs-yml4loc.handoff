<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40120bfb5482798cb43eb6ac2c93b921e3f9fc03</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Input.Mouse.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eeeb02d143255188aa89e860a65e71d97478bf4e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ee6dba3599913700b53a1a69290c01e3dd34197</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the mouse device to a specific thread.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each event that <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> defines as an attached event is also re-exposed by the base element classes <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> as a new routed event.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, it is more convenient to handle mouse events for an application on <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>, rather than using the <ph id="ph3">&lt;xref:System.Windows.Input.Mouse&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The static members of the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse&gt;</ph> class delegate to the primary <ph id="ph2">&lt;xref:System.Windows.Input.MouseDevice&gt;</ph> of the calling thread's input manager.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.GotMouseCapture"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.LostMouseCapture"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseEnter"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseLeave"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseMove"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseWheel"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseMove"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseWheel"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.QueryCursor"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Captures mouse input to the specified element.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is not specified, the default <ph id="ph2">&lt;xref:System.Windows.Input.CaptureMode&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.Input.CaptureMode.Element&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The element to capture the mouse.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Captures mouse input to the specified element using the specified <ph id="ph1">&lt;xref href="System.Windows.Input.CaptureMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>To release mouse capture, call <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.Capture%2A&gt;</ph> passing <ph id="ph2">`null`</ph> as the element to capture.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse is captured when a <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> event is raised and the input is not going to the element underneath the mouse, <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement&gt;</ph> are raised first.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the captured element a chance to release capture before the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.MouseUp&gt;</ph> events are routed.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The element to capture the mouse.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The capture policy to use.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the element was able to capture the mouse; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the element that has captured the mouse.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The element captured by the mouse.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets the element the mouse pointer is directly over.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls can be composed of multiple elements.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> reports the specific element in the composite control the mouse pointer is over and not the control itself.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, depending on which part of a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> the pointer is over, the <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.DirectlyOver%2A&gt;</ph> property could report the <ph id="ph3">&lt;xref:System.Windows.Controls.TextBox&gt;</ph> of the <ph id="ph4">&lt;xref:System.Windows.Controls.ContentControl.Content%2A&gt;</ph> property or the <ph id="ph5">&lt;xref:Microsoft.Windows.Themes.ButtonChrome&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsMouseOver%2A&gt;</ph> property on <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The element the mouse pointer is over.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The elements <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">points</ph><ept id="p1">&lt;/code&gt;</ept> are in relation to.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An array of objects.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The number of points returned.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the position of the mouse relative to a specified element.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>During drag-and-drop operations, the position of the mouse cannot be reliably determined through <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.GetPosition%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> calls.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Try the following approaches instead:</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.DragEventArgs.GetPosition%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.DragEventArgs&gt;</ph> that is passed to the drag events (<ph id="ph3">&lt;xref:System.Windows.ContentElement.DragEnter&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.ContentElement.DragOver&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.ContentElement.DragLeave&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <bpt id="p1">[</bpt>GetCursorPos<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp)</ept>, using P/Invoke.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The coordinate space in which to calculate the position of the mouse.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The position of the mouse relative to the parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">relativeTo</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.GotMouseCapture"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets the state of the left button of the mouse.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The state of the left mouse button.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.LostMouseCapture"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets the state of the middle button of the mouse.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The state of the middle mouse button.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseEnter"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseLeave"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseMove"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Represents the number of units the mouse wheel is rotated to scroll one line.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the current <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph>, the value of this field is 120.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support this possibility, you should either add the incoming delta values until the <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine&gt;</ph> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseWheel"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets or sets the cursor for the entire application.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> that <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> is set to will be applied to the whole application.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear the override <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph>, set <ph id="ph2">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Input.Cursors.None%2A&gt;</ph> will force the mouse cursor not to be displayed, but mouse events are still processed.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The override cursor or <ph id="ph1">`null`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Input.Mouse.OverrideCursor"&gt;&lt;/xref&gt;</ph> is not set.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseMove"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseWheel"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets the primary mouse device.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The device.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.QueryCursor"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.GotMouseCapture"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.LostMouseCapture"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseEnter"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseLeave"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseMove"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.MouseWheel"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseMove"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.PreviewMouseWheel"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Mouse.QueryCursor"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The event handler.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets the state of the right button.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The state of the right mouse button.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Sets the mouse pointer to the specified <ph id="ph1">&lt;xref href="System.Windows.Input.Cursor"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cursor being set does not apply to any particular element, but rather it applies to the whole application.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>To force the mouse pointer to a specific <ph id="ph1">&lt;xref:System.Windows.Input.Cursor&gt;</ph> and to force this <ph id="ph2">&lt;xref:System.Windows.Input.Cursor&gt;</ph> on all elements, set the <ph id="ph3">&lt;xref:System.Windows.Input.Mouse.OverrideCursor%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the cursor on a specific element, use the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Cursor%2A&gt;</ph> property on either <ph id="ph2">&lt;xref:System.Windows.FrameworkElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.FrameworkContentElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the base elements, see the <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The cursor to set the mouse pointer to.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph>, if the cursor was set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Forces the mouse to resynchronize.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Forces the mouse cursor to be updated.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Gets the state of the first extended button.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The state of the first extended mouse button.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Gets the state of the second extended button.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The state of the second extended mouse button.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>