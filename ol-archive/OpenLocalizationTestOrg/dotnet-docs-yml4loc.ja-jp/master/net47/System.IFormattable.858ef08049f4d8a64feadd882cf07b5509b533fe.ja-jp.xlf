<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac8e67aafb7cb93e7f6a3d7e360c70bf84234047</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IFormattable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1b395d97f84edb4fb77160a949805fd3f2cf4b5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">399c6962c86b3f40e266f4657084d36fbebc3248</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides functionality to format the value of an object into a string representation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface converts an object to its string representation based on a format string and a format provider.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A format string typically defines the general appearance of an object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the .NET Framework supports the following:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard format strings for formatting enumeration values (see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard and custom format strings for formatting numeric values (see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard and custom format strings for formatting date and time values (see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard and custom format strings for formatting time intervals (see <bpt id="p1">[</bpt>Standard TimeSpan Format Strings<ept id="p1">](~/docs/standard/base-types/standard-timespan-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom TimeSpan Format Strings<ept id="p2">](~/docs/standard/base-types/custom-timespan-format-strings.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also define your own format strings to support formatting of your application-defined types.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A format provider returns a formatting object that typically defines the symbols used in converting an object to its string representation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when you convert a number to a currency value, a format provider defines the currency symbol that appears in the result string.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework defines three format providers:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo?displayProperty=fullName&gt;</ph> class, which returns either a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for formatting numeric values, or a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object for formatting date and time values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo?displayProperty=fullName&gt;</ph> class, which returns an instance of itself for formatting numeric values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName&gt;</ph> class, which returns an instance of itself for formatting date and time values.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can define your own custom format providers to supply culture-specific, profession-specific, or industry-specific information used in formatting.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about implementing custom formatting by using a custom format provider, see <ph id="ph1">&lt;xref:System.ICustomFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface defines a single method, <ph id="ph2">&lt;xref:System.IFormattable.ToString%2A&gt;</ph>, that supplies formatting services for the implementing type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method can be called directly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, it is called automatically by the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> methods, and by methods that use the <bpt id="p1">[</bpt>composite formatting feature<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such methods include <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%29?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%29?displayProperty=fullName&gt;</ph>, among others.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method is called for each format item in the method's format string.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable&gt;</ph> interface is implemented by the base data types.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Formats the value of the current instance using the specified format.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method converts a value to a string representation that can be expressed in multiple ways.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its precise format depends on specific symbols or a specified order defined by specific cultures, professions, or industries.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the method directly.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also called automatically by the <ph id="ph1">&lt;xref:System.Convert.ToString%28System.Object%29?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToString%28System.Object%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> methods, and by methods that use the composite formatting feature in the .NET Framework, such as <ph id="ph3">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>, and <ph id="ph5">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For more information, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.)</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Composite formatting methods call the <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> method once for each format item in a format string.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parameters passed to the method depend on the specific formatting method that is called and on the content of the format item, as follows:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the format item does not include a format string (for example, if the format item is simply <ph id="ph1">`{0}`</ph>), it is passed <ph id="ph2">`null`</ph> as the value of the <ph id="ph3">&lt;xref:System.String?displayProperty=fullName&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the format item includes a format string (for example, <ph id="ph1">`{0:G}`</ph>), that format string is passed as the value of the <ph id="ph2">&lt;xref:System.String?displayProperty=fullName&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the original method call does not include an <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> is passed as the value of the <ph id="ph3">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the original method call includes an <ph id="ph1">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter, the provider that is supplied in the method call is passed as the value of the <ph id="ph2">&lt;xref:System.IFormatProvider?displayProperty=fullName&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object's <ph id="ph1">&lt;xref:System.IFormattable.ToString%2A&gt;</ph> implementation is called by composite formatting methods only if they are not passed an <ph id="ph2">&lt;xref:System.ICustomFormatter&gt;</ph> format provider, or if the <ph id="ph3">&lt;xref:System.ICustomFormatter.Format%2A&gt;</ph> method of the custom format provider returns <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework includes three format providers, all of which implement the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> supplies numeric formatting information, such as the characters to use for decimal and group separators, and the spelling and placement of currency symbols in monetary values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> supplies date-related and time-related formatting information, such as the position of the month, the day, and the year in a date pattern.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> contains the default formatting information in a specific culture, including the numeric format information, and date-related and time-related formatting information.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can define your own custom format provider.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The format to use.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) to use the default format defined for the type of the <ph id="ph2">&lt;xref href="System.IFormattable"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The provider to use to format the value.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) to obtain the numeric format information from the current locale setting of the operating system.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The value of the current instance in the specified format.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>