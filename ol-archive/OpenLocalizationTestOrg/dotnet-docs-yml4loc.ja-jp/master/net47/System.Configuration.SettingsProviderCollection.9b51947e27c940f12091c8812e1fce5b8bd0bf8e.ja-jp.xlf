<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">273b0f31fb3f9496121a692b20a771eb1d2aeb3e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Configuration.SettingsProviderCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b7caccef0e7e42a060ce8ea514aa54873825505</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">895629b2b8cf8a2eb8279352c645f17d5924cc2f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of application settings providers.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderCollection&gt;</ph> class is a straightforward extension of the <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderCollection&gt;</ph> class to provide for storage of <ph id="ph3">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ApplicationSettingsBase&gt;</ph> class uses this collection to manage the settings providers associated with each of its application settings properties through the <ph id="ph2">&lt;xref:System.Configuration.SettingsProviderAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Configuration.SettingsProviderCollection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default constructor that is implicitly provided.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Adds a new settings provider to the collection.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.Provider.ProviderBase.Name%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Configuration.SettingsProvider&gt;</ph> is used as the storage key.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderCollection.Add%2A&gt;</ph> method has a single <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderBase&gt;</ph> parameter to match the signature of this same method in the base class <ph id="ph3">&lt;xref:System.Configuration.Provider.ProviderCollection&gt;</ph>, this method will throw an exception if the <ph id="ph4">`provider`</ph> parameter is not of type <ph id="ph5">&lt;xref:System.Configuration.SettingsProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.Provider.ProviderBase"&gt;&lt;/xref&gt;</ph> to add to the collection.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">provider</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not of type <ph id="ph2">&lt;xref href="System.Configuration.SettingsProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Configuration.Provider.ProviderBase.Name"&gt;&lt;/xref&gt;</ph> property of the provider parameter is null or an empty string.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A settings provider with the same <ph id="ph1">&lt;xref href="System.Configuration.Provider.ProviderBase.Name"&gt;&lt;/xref&gt;</ph> already exists in the collection.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The collection is read-only.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">provider</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the settings provider in the collection that matches the specified name.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can make a <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderCollection&gt;</ph> read-only by using the <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderCollection.SetReadOnly%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it is invalid to methods such as <ph id="ph1">&lt;xref:System.Configuration.SettingsProviderCollection.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Configuration.Provider.ProviderCollection.Remove%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Configuration.Provider.ProviderCollection.Clear%2A&gt;</ph> on such a collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the friendly name of the settings provider.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If found, the <ph id="ph1">&lt;xref href="System.Configuration.SettingsProvider"&gt;&lt;/xref&gt;</ph> whose name matches that specified by the name parameter; otherwise, <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The collection is read-only when setting this value.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>