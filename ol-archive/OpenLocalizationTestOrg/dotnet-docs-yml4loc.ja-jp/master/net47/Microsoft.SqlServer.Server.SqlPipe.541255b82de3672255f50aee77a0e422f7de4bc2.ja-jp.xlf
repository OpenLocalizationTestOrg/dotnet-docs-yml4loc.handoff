<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51e9d1a4f0df403496d2f7ab8facae71e3423f97</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.SqlServer.Server.SqlPipe.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3257098834e02c99ef838225ff63ec7f77e122b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f10120bb40cb204ea3b73ffb46632e2e1b769c24</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of this class is made available to managed stored procedures through the <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Executes the command passed as a parameter and sends the results to the client.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to any actual results, other messages and errors are also sent directly to the client.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is not bound to an in-process connection, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not supported on commands bound to out-of-process connections.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are errors in the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlCommand"&gt;&lt;/xref&gt;</ph> object to be executed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">command</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method is not supported on commands bound to out-of-process connections.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe"&gt;&lt;/xref&gt;</ph> is in the mode of sending single result sets back to the client.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)"&gt;&lt;/xref&gt;</ph> method has been called and the <ph id="ph3">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe"&gt;&lt;/xref&gt;</ph> is in the mode of sending single result sets back to the client; otherwise <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Sends a single-row result set directly to the client or current output consumer.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The single-row result set sent to the client: a <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlDataRecord"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">record</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Sends a multirow result set directly to the client or current output consumer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The multirow result set to be sent to the client: a <ph id="ph1">&lt;xref href="System.Data.SqlClient.SqlDataReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reader</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Sends a string message directly to the client or current output consumer.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message string is sent as an informational message to the client.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the client is using ADO.NET, the messages transmit through the <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnection.InfoMessage&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The message string to be sent to the client.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> is greater than 4,000 characters.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">message</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Marks the end of a result set, and returns the <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe"&gt;&lt;/xref&gt;</ph> instance back to the initial state.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Managed stored procedures can send result sets to clients that are not implementing a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method, along with <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;</ph>, allow stored procedures to send custom result sets to the client.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)"&gt;&lt;/xref&gt;</ph> method was not previously called.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Sends a single row of data back to the client.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Managed stored procedures can send result sets to clients that are not implementing a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method, along with <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;</ph>, allows stored procedures to send custom result sets to the client.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;</ph> method sends a single row of data back to the client.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rows can subsequently be returned to the caller by calling <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;</ph>, one time for each row being sent.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>After all the rows have been sent, a call to the <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;</ph> method is required to mark the end of the result set.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlDataRecord"&gt;&lt;/xref&gt;</ph> object with the column values for the row to be sent to the client.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The schema for the record must match the schema described by the metadata of the <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlDataRecord"&gt;&lt;/xref&gt;</ph> passed to the <ph id="ph2">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">record</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)"&gt;&lt;/xref&gt;</ph> method was not previously called.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Managed stored procedures can send result sets to clients that are not implementing a <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlDataReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method, along with <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;</ph> and <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;</ph>, allow stored procedures to send custom result sets to the client.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A&gt;</ph> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the subsequent rows, sent using the <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;</ph> method, must match that metadata definition.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that after calling <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A&gt;</ph>, only <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A&gt;</ph> and <ph id="ph3">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;</ph> can be called.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any other method in the same instance of <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A&gt;</ph> sets <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.SqlPipe&gt;</ph> back to the initial state where other methods can be called.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not store an instance of an in process class, for example <ph id="ph1">`SQLDataRecord`</ph>, which will be used after control returns from CLR.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>One exception is the <ph id="ph1">`SQLMetaData`</ph> in process class.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlDataRecord"&gt;&lt;/xref&gt;</ph> object from which metadata is extracted and used to describe the result set.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">record</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">record</ph><ept id="p1">&lt;/code&gt;</ept> has no columns or has not been initialized.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A method other than <ph id="ph1">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd"&gt;&lt;/xref&gt;</ph> was called after the <ph id="ph3">&lt;xref href="Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>