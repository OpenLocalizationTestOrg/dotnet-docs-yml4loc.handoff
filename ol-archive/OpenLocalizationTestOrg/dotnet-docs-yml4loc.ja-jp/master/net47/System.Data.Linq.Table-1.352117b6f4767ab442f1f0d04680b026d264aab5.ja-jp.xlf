<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c909e2810c331705082f956d261e3dd812032b89</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Linq.Table-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">31679ffc36a8c0b27d4c64287b7957bf584abce4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">628b9cf7b22ca659125241a8cae5325dfc0fd6a5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a table for a particular type in the underlying database.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class enables you to query over the table and add, remove, and attach objects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can access a <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance via <ph id="ph2">&lt;xref:System.Data.Linq.DataContext.GetTable%2A&gt;</ph> or by using a strongly typed property for the strongly typed <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, when the designer generates a DataContext object, it generates properties to represent each Table.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this strongly typed DataContext, you can access the Users property to get <ph id="ph1">`Table&lt;User&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The type of the data in the table.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Attaches a disconnected or "detached" entity to a new <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> when original values are required for optimistic concurrency checks.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`Attach`</ph> methods with entities that have been created in one <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>, serialized to a client, and then deserialized back to perform an update or delete operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> has no way of tracking what the original values were for a disconnected entity, the client is responsible for supplying those values.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this version of <ph id="ph1">&lt;xref:System.Data.Linq.Table%601.Attach%2A&gt;</ph>, the entity is assumed to be in its original value state.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method, you can then update its fields, for example with additional data sent from the client.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not try to <ph id="ph1">`Attach`</ph> an entity that has not been detached through serialization.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entities that have not been serialized still maintain associations with deferred loaders that can cause unexpected results if the entity becomes tracked by a second data context.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The original values of the entity to be attached.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Attaches an entity to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If attaching <bpt id="p1">*</bpt>as modified<ept id="p1">*</ept>, the entity must either declare a version member or must not participate in update conflict checking.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The entity to be attached.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to attach the entity as modified; <ph id="ph2">`false`</ph> to attach the entity as unmodified.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Attaches an entity to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following example, the <ph id="ph1">`Customer`</ph> object is already correctly configured.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call <ph id="ph1">`Attach`</ph> without having to replay the updates.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The entity to be attached.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An instance of the same entity type with data members that contain the original values.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method attaches all entities of a collection to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The collection of entities.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The type of entities to attach.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method attaches all entities of a collection to the <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph> in either a <bpt id="p1">*</bpt>modified<ept id="p1">*</ept> or <bpt id="p2">*</bpt>unmodified<ept id="p2">*</ept> state.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If attaching as modified, the entity must either declare a version member or must not participate in update conflict checking.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If attaching as unmodified, the entity is assumed to represent the original value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method, the entity's fields can be modified with other information from the client before <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new entity is attached, deferred loaders for any child collections (for example, <ph id="ph1">`EntitySet`</ph> collections of entities from associated tables) are initialized.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called, members of the child collections are put into an <ph id="ph2">`Unmodified`</ph> state.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update members of a child collection, you must explicitly call <ph id="ph1">`Attach`</ph> and specify that entity.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The collection of entities.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the object has a timestamp or RowVersion member; <ph id="ph2">`false`</ph> if original values are being used for the optimistic concurrency check.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The type of entities to attach.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> that has been used to retrieve this <ph id="ph2">&lt;xref href="System.Data.Linq.Table`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The data context that has been used to retrieve this table.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Puts all entities from the collection into a <ph id="ph1">`pending delete`</ph> state.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entities that are put into the pending delete state with this method do not disappear from query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disconnected entities must be attached before they can be deleted.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# snippet shows one use for this method:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Basic:</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The entities to delete.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The type of the elements to delete.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Puts an entity from this table into a <ph id="ph1">`pending delete`</ph> state.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The removed entity does not disappear from the query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disconnected entities must first be attached before they can be deleted.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The entity to be deleted.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets an enumerator that iterates through the collection.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An enumerator that can be used to iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Returns an array of modified members that contain their current and original values.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The entity from which to get the array.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An array of modified members that contain their current and original values.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Creates a new list for binding to a data source.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned list supports standard operations, such as additions, deletions, insertions, and updates, but saves must be explicitly managed by the programmer.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph> for binding to a data source.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Data.Linq.Table`1"&gt;&lt;/xref&gt;</ph> instance that contains the original state of the entity.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the original state of an entity since it was either created or attached to the current <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The original state of an entity that has been serialized and deserialized must be provided by an independent tracking mechanism and supplied when the entity is attached to a new <ph id="ph1">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Retrieval and CUD Operations in N-Tier Applications (LINQ to SQL)<ept id="p1">](~/docs/framework/data/adonet/sql/linq/data-retrieval-and-cud-operations-in-n-tier-applications.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The entity whose original state is to be returned.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.Linq.Table`1"&gt;&lt;/xref&gt;</ph> instance that contains the original state of the entity.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in a <ph id="ph2">`pending insert`</ph> state.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The added entities will not be in query results until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The entities to add.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The type of the elements to insert.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Adds an entity in a <ph id="ph1">`pending insert`</ph> state to this <ph id="ph2">&lt;xref href="System.Data.Linq.Table`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The added entity will not appear in query results from this table until after <ph id="ph1">&lt;xref:System.Data.Linq.DataContext.SubmitChanges%2A&gt;</ph> has been called.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The entity to be added.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the type of the entities contained in this <ph id="ph1">&lt;xref href="System.Data.Linq.Table`1"&gt;&lt;/xref&gt;</ph> instance has a primary key.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the entity type does not have a primary key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the table.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A string representation of the table.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An enumerator that can be used to iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through the collection.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An enumerator that can be used to iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection is a collection of <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the collection is a collection of <ph id="ph2">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> objects; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> that can be bound to a data source from an object that does not implement an <ph id="ph2">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> itself.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> that can be bound to a data source.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The entity to be attached.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to attach the entity as modified; <ph id="ph2">`false`</ph> to attached the entity as unmodified.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Attaches an entity to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state by specifying both the entity and its original state.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The entity to be attached.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An instance of the same entity type with data members that contain the original values.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Attaches an entity to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in an unmodified state.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The entity to be attached.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The collection of entities to be attached.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Attaches all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in either a modified or unmodified state.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The collection of entities to be attched.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to attach the entities as modified; <ph id="ph2">`false`</ph> to attach the entities as unmodified.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Puts all entities from the collection into a <ph id="ph1">`pending delete`</ph> state.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The entities being removed.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Puts an entity from this table into a <ph id="ph1">`pending delete`</ph> state.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> [!INCLUDE[vbtecdlinq](~/includes/vbtecdlinq-md.md)]</ph> does not support or recognize cascade-delete operations.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to delete a row in a table that has constraints against it, you must either set the <ph id="ph1">`ON DELETE CASCADE`</ph> rule in the foreign-key constraint in the database, or use your own code to first delete the child objects that prevent the parent object from being deleted.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The entity to be removed.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns an array of modified members that contain their current and original values.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The entity from which to obtain the modified members.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An array of modified members.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Retrieves original values of a given entity.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The entity whose original state is to be accessed.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A copy of the original entity.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Adds all entities of a collection to the <ph id="ph1">&lt;xref href="System.Data.Linq.DataContext"&gt;&lt;/xref&gt;</ph> in an <ph id="ph2">`pending insert`</ph> state.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The collection of entities to be added.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Adds an entity in a <ph id="ph1">`pending insert`</ph> state to this table.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The entity to add.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets the type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The type of the element(s) that are returned when the expression tree associated with this object is executed.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets the expression tree that is associated with this instance of <ph id="ph1">&lt;xref href="System.Linq.IQueryable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> that is associated with this instance of <ph id="ph2">&lt;xref href="System.Linq.IQueryable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets the query provider that is associated with this data source.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.IQueryProvider"&gt;&lt;/xref&gt;</ph> that is associated with this data source.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Constructs an <ph id="ph1">&lt;xref href="System.Linq.IQueryable"&gt;&lt;/xref&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The query expression from which the evaluation is performed.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Linq.IQueryable"&gt;&lt;/xref&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Constructs an <ph id="ph1">&lt;xref href="System.Linq.IQueryable`1"&gt;&lt;/xref&gt;</ph> object that can evaluate the query represented by a specified expression tree.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The query expression from which the evaluation is performed.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The type of the data in the table.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Linq.IQueryable`1"&gt;&lt;/xref&gt;</ph> that can evaluate the query represented by the specified expression tree.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Executes the query represented by a specified expression tree.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The query expression to execute.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The value that results from executing the specified query.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Executes the strongly-typed query represented by a specified expression tree.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Linq.Table%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Linq.IQueryProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The query expression to execute.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The type of the data in the table.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The value that results from executing the specified query.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>