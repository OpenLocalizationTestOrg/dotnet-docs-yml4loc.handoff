<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7b99c72b58f8396db5cbc1b5e2a832de541e644e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f161e04f1b0faadf621c3852b56e4492b2a52138</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">230eb624239b8ef4df9745fe0684161b1b53cd5a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the values that define or are used in <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration"&gt;&lt;/xref&gt;</ph> object permissions.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Security.Permissions&gt;</ph> allow all local and Intranet zone applications to access collaboration services, and no permission is granted for Internet zone applications.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if the default permissions are not changed, all link-local and site-local applications have access to Peer-To-Peer collaboration services, but global applications have no access.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is not derivable.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The initial <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph> for this instance is passed when the constructor is called.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of this type either have no access to the resource(s) protected by the permission, or they have unrestricted full access to those resources.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If state is <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt;</ph> instance passes all demands.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If state contains any other value, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt;</ph> instance fails all demands.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>One of the values in the <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionState"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates and returns a copy of the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A copy of a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt;</ph> instance grants the same access to resources as the original permission.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains a copy of the current instance of <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Represents the XML object model for encoding security objects.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is intended to be a lightweight implementation of a simple XML object model for use within the security system, and not for use as a general XML object model.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The XML encoding to use to reconstruct the permission.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The parameter is not a valid permission element.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The parameter does not contain a valid type or class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The parameter's version number is not supported.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The parameter is a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creates and returns a permission that is the intersection of the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> and the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intersection of two permissions is a permission that describes the set of operations they both describe in common.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only a demand that passes both original permissions will pass the intersection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following statements are required to be <ph id="ph1">`true`</ph> for all implementations of the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>X and Y represent <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> object references that are not a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.Intersect(X) returns a value equal to X.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.Intersect(Y) returns the same value as Y.Intersect(X).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.Intersect(a <ph id="ph1">`null`</ph> reference) returns a <ph id="ph2">`null`</ph> reference.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Permission to <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Intersect(System.Security.IPermission)"&gt;&lt;/xref&gt;</ph> with the current permission.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A new permission that represents the intersection of the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> and the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This new permission is a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the intersection is empty.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The target parameter is not a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) and is not an instance of the same class as the current permission.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Determines whether the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> is a subset of the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt;</ph> is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a permission that represents access to "<bpt id="p1">*</bpt>C:\example.txt<ept id="p1">*</ept>" is a subset of a permission that represents access to "<bpt id="p2">*</bpt>C:<ph id="ph1">\\</ph><ept id="p2">*</ept>".</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method returns <ph id="ph1">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following statements are required to be <ph id="ph1">`true`</ph> for all implementations of the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.IsSubsetOf%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>X, Y, and Z represent <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.IsSubsetOf(X) returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.IsSubsetOf(Y) returns the same value as Y.IsSubsetOf(X) if and only if X and Y represent the same set of permissions.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If X.IsSubsetOf(Y) and Y.IsSubsetOf(Z) both return <ph id="ph1">`true`</ph>, X.IsSubsetOf(Z) returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If X represents an empty <bpt id="p1">[</bpt>IPermission<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98303)</ept> object with a permission state of None and Y represents an IPermission object that is a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic), X.IsSubsetOf(Y) returns <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Z is also an empty permission, the compound set operation X.Union(Z).IsSubsetOf(Y) also returns <ph id="ph1">`true`</ph> because the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A&gt;</ph> of two empty permissions is an empty permission.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A permission that is to be tested for the subset relationship.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>This permission must be of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> if the current <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> is a subset of the specified permission; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The parameter is a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns a value specifying whether the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> is unrestricted.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unrestricted permission represents access to any and all resources protected by the permission.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> if the current permission is unrestricted; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Creates an XML encoding of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> and its current state.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, permission class methods are used by the infrastructure and are not intended for use in applications.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An XML encoding of the permission, including any state information.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Creates a permission that is the union of the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> and the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">target</ph><ept id="p1">&lt;/code&gt;</ept> permission.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result of a call to <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union%2A&gt;</ph> is a permission that represents all the operations represented by both the current <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission&gt;</ph> and the specified permission.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any demand that passes either permission passes their union.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following statements are required to be <ph id="ph1">`true`</ph> for all implementations of the Union method.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>X and Y represent <ph id="ph1">&lt;xref:System.Security.IPermission&gt;</ph> objects that are not a <ph id="ph2">`null`</ph> reference (<ph id="ph3">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.Union(X) returns an object that has the same value as X.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.Union(Y) returns an object that has the same value as the object returned by Y.Union(X).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>X.Union(a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic)) returns an object that has the same value as X.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A permission to combine with the current permission.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>It must be of the same type as the current permission.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A new permission that represents the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.Union(System.Security.IPermission)"&gt;&lt;/xref&gt;</ph> of the current <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission"&gt;&lt;/xref&gt;</ph> and the specified permission.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The parameter is a <ph id="ph1">`null`</ph> reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>