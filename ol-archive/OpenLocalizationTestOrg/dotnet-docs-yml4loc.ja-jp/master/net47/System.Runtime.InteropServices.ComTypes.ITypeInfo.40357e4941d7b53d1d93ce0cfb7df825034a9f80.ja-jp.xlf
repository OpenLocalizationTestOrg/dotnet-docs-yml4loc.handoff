<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05b490ba1aed0fc0da77df5877f611e4294b883a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.ComTypes.ITypeInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">895376978ea2e5277a90d45cdd4903d28a12d24c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb7f495cf387d00831a1e9ffb6ff43a9269a50e0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the managed definition of the Component Automation <bpt id="p1">[</bpt>ITypeInfo<ept id="p1">](http://msdn.microsoft.com/en-us/f3356463-3373-4279-bae1-953378aa2680)</ept> interface.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime throws an exception when a COM method in native code returns an HRESULT.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Retrieves the addresses of static functions or variables, such as those defined in a DLL.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::AddressOfMember`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The member ID of the <ph id="ph1">`static`</ph> member's address to retrieve.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.INVOKEKIND"&gt;&lt;/xref&gt;</ph> values that specifies whether the member is a property, and if so, what kind.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the <ph id="ph1">`static`</ph> member.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a new instance of a type that describes a component class (coclass).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::CreateInstance`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The object that acts as the controlling <ph id="ph1">`IUnknown`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The IID of the interface that the caller uses to communicate with the resulting object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the created object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Retrieves the type library that contains this type description and its index within that type library.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetContainingTypeLib`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the containing type library.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the index of the type description within the containing type library.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Retrieves a description or specification of an entry point for a function in a DLL.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetDllEntry`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The ID of the member function whose DLL entry description is to be returned.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.INVOKEKIND"&gt;&lt;/xref&gt;</ph> values that specifies the kind of member identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">memid</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If not <ph id="ph1">`null`</ph>, the function sets <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">pBstrDllName</ph><ept id="p1">&lt;/code&gt;</ept> to a <ph id="ph3">`BSTR`</ph> that contains the name of the DLL.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If not <ph id="ph1">`null`</ph>, the function sets <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lpbstrName</ph><ept id="p1">&lt;/code&gt;</ept> to a <ph id="ph3">`BSTR`</ph> that contains the name of the entry point.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>If not <ph id="ph1">`null`</ph>, and the function is defined by an ordinal, then <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">lpwOrdinal</ph><ept id="p1">&lt;/code&gt;</ept> is set to point to the ordinal.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Retrieves the documentation string, the complete Help file name and path, and the context ID for the Help topic for a specified type description.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetDocumentation`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The ID of the member whose documentation is to be returned.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the name of the item method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the documentation string for the specified item.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the Help context associated with the specified item.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the fully qualified name of the Help file.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Retrieves the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.FUNCDESC"&gt;&lt;/xref&gt;</ph> structure that contains information about a specified function.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the <ph id="ph1">`ppFuncDesc`</ph> parameter can be accessed through the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetFuncDesc`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The index of the function description to return.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to a <ph id="ph1">`FUNCDESC`</ph> structure that describes the specified function.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Maps between member names and member IDs, and parameter names and parameter IDs.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetIDsOfNames`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of names to map.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The count of names to map.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to an array in which name mappings are placed.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Retrieves the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.IMPLTYPEFLAGS"&gt;&lt;/xref&gt;</ph> value for one implemented interface or base interface in a type description.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetImplTypeFlags`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The index of the implemented interface or base interface.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the <ph id="ph1">`IMPLTYPEFLAGS`</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Retrieves marshaling information.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetMops`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The member ID that indicates which marshaling information is needed.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the <ph id="ph1">`opcode`</ph> string used in marshaling the fields of the structure described by the referenced type description, or returns <ph id="ph2">`null`</ph> if there is no information to return.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Retrieves the variable with the specified member ID (or the name of the property or method and its parameters) that corresponds to the specified function ID.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetNames`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The ID of the member whose name (or names) is to be returned.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the name (or names) associated with the member.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The length of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgBstrNames</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the number of names in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rgBstrNames</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Retrieves the referenced type descriptions if a type description references other type descriptions.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetRefTypeInfo`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A handle to the referenced type description to return.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the referenced type description.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Retrieves the type description of the implemented interface types if a type description describes a COM class.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetRefTypeOfImplType`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The index of the implemented type whose handle is returned.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to a handle for the implemented interface.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.TYPEATTR"&gt;&lt;/xref&gt;</ph> structure that contains the attributes of the type description.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the <ph id="ph1">`ppTypeAttr`</ph> parameter can be accessed through the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetTypeAttr`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the structure that contains the attributes of this type description.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Retrieves the <ph id="ph1">`ITypeComp`</ph> interface for the type description, which enables a client compiler to bind to the type description's members.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetTypeComp`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the <ph id="ph1">`ITypeComp`</ph> interface of the containing type library.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">`VARDESC`</ph> structure that describes the specified variable.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the <ph id="ph1">`ppVarDesc`</ph> parameter can be accessed through the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::GetVarDesc`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The index of the variable description to return.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>When this method returns, contains a reference to the <ph id="ph1">`VARDESC`</ph> structure that describes the specified variable.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Invokes a method, or accesses a property of an object, that implements the interface described by the type description.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the <ph id="ph1">`pDispParams`</ph> parameter can be accessed through the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.Marshal.PtrToStructure%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid values for the <ph id="ph1">`wFlags`</ph> parameter are:</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>DISPATCH_METHOD</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The member is accessed as a method.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is ambiguity, both this flag and the <ph id="ph1">`DISPATCH_PROPERTYGET`</ph> flag can be set.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>DISPATCH_PROPERTYGET</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The member is retrieved as a property or data member.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>DISPATCH_PROPERTYPUT</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The member is changed as a property or data member.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>DISPATCH_PROPERTYPUTREF</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The member is changed by using a reference assignment, rather than a value assignment.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is valid only when the property accepts a reference to an object.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::Invoke`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A reference to the interface described by this type description.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A value that identifies the interface member.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Flags that describe the context of the invoke call.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A reference to a structure that contains an array of arguments, an array of DISPIDs for named arguments, and counts of the number of elements in each array.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A reference to the location at which the result is to be stored.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">wFlags</ph><ept id="p1">&lt;/code&gt;</ept> specifies <ph id="ph2">`DISPATCH_PROPERTYPUT`</ph> or <ph id="ph3">`DISPATCH_PROPERTYPUTREF`</ph>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">pVarResult</ph><ept id="p2">&lt;/code&gt;</ept> is ignored.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Set to <ph id="ph1">`null`</ph> if no result is desired.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A pointer to an exception information structure, which is filled in only if <ph id="ph1">`DISP_E_EXCEPTION`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`Invoke`</ph> returns <ph id="ph2">`DISP_E_TYPEMISMATCH`</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">puArgErr</ph><ept id="p1">&lt;/code&gt;</ept> indicates the index within <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">rgvarg</ph><ept id="p2">&lt;/code&gt;</ept> of the argument with the incorrect type.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If more than one argument returns an error, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">puArgErr</ph><ept id="p1">&lt;/code&gt;</ept> indicates only the first argument with an error.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Releases a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.FUNCDESC"&gt;&lt;/xref&gt;</ph> structure previously returned by the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.ITypeInfo.GetFuncDesc(System.Int32,System.IntPtr@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::ReleaseFuncDesc`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A reference to the <ph id="ph1">`FUNCDESC`</ph> structure to release.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Releases a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.TYPEATTR"&gt;&lt;/xref&gt;</ph> structure previously returned by the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.ITypeInfo.GetTypeAttr(System.IntPtr@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::ReleaseTypeAttr`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A reference to the <ph id="ph1">`TYPEATTR`</ph> structure to release.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Releases a <ph id="ph1">`VARDESC`</ph> structure previously returned by the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.ITypeInfo.GetVarDesc(System.Int32,System.IntPtr@)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about <ph id="ph1">`ITypeInfo::ReleaseVarDesc`</ph>, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A reference to the <ph id="ph1">`VARDESC`</ph> structure to release.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>