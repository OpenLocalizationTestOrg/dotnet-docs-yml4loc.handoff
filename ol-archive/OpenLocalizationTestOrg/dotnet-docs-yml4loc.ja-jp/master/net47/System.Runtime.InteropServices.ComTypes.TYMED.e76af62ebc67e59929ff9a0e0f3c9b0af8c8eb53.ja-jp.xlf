<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ddd19e931009161b90b4dbb987d152d18730eab6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.ComTypes.TYMED.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48e45bda810c36795837ab6e029581d8857a914a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b8d47f6c2807251b9eb412649121444c4522ebcf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the managed definition of the <ph id="ph1">`TYMED`</ph> structure.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the <ph id="ph1">`TYMED`</ph> structure, see the MSDN Library.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime throws an exception when a COM method in native code returns an HRESULT.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Map HRESULTs and Exceptions<ept id="p1">](~/docs/framework/interop/how-to-map-hresults-and-exceptions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The storage medium is an enhanced metafile.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`DeleteEnhMetaFile`</ph> to delete the bitmap.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The storage medium is a disk file identified by a path.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">`STGMEDIUM`</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`OpenFile`</ph> to delete the file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The storage medium is a Graphics Device Interface (GDI) component (HBITMAP).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`DeleteObject`</ph> to delete the bitmap.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The storage medium is a global memory handle (HGLOBAL).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Allocate the global handle with the GMEM_SHARE flag.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`GlobalFree`</ph> to release the memory.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The storage medium is a storage component identified by an <ph id="ph1">`IStorage`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The data is in the streams and storages contained by this <ph id="ph1">`IStorage`</ph> instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is not <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`IStorage::Release`</ph> to release the storage component.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The storage medium is a stream object identified by an <ph id="ph1">`IStream`</ph> pointer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Use <ph id="ph1">`ISequentialStream::Read`</ph> to read the data.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is not <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`IStream::Release`</ph> to release the stream component.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The storage medium is a metafile (HMETAFILE).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Use the Windows or WIN32 functions to access the metafile's data.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;xref href="System.Runtime.InteropServices.ComTypes.STGMEDIUM.pUnkForRelease"&gt;&lt;/xref&gt;</ph> member is <ph id="ph3">`null`</ph>, the destination process should use <ph id="ph4">`DeleteMetaFile`</ph> to delete the bitmap.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>No data is being passed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>