<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02f6318e52f498abb82f10f94b7fb0ca7740df06</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.HttpResponse.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5263353232662c47085ca889b79bb3a7c145574a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38f58906e1cbdaa3f22a743a54571fd8d7d946c4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates HTTP-response information from an ASP.NET operation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are exposed through the <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following methods of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are supported only in post back scenarios and not in asynchronous post back scenarios:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Partial-page updates are enabled when you use <ph id="ph1">&lt;xref:System.Web.UI.UpdatePanel&gt;</ph> controls to update selected regions of a page instead of updating the whole page with a post back.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>UpdatePanel Control Overview<ept id="p1">](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)</ept> and <bpt id="p2">[</bpt>Partial-Page Rendering Overview<ept id="p2">](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.HttpResponse"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpResponse&gt;</ph> class are exposed through the intrinsic <ph id="ph2">&lt;xref:System.Web.HttpContext.Response%2A&gt;</ph> object in ASP.NET.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> object that enables custom HTTP output.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Associates a set of cache dependencies with the response to facilitate invalidation of the response if it is stored in the output cache and the specified dependencies change.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddCacheDependency%2A&gt;</ph> method allows dependencies to be created between cached responses and a <ph id="ph2">&lt;xref:System.Web.Caching.CacheDependency&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A file, cache key, or <ph id="ph1">&lt;xref href="System.Web.Caching.CacheDependency"&gt;&lt;/xref&gt;</ph> to add to the list of application dependencies.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dependencies</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>This method was called too late in the cache processing pipeline, after the cached response was already created.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Makes the validity of a cached response dependent on other items in the cache.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the items referred to in the <ph id="ph1">`cacheKeys`</ph> parameter are removed from the cache, the cached response of the current item is not valid.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.ArrayList"&gt;&lt;/xref&gt;</ph> that contains the keys of the items that the current cached response is dependent upon.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Makes the validity of a cached item dependent on another item in the cache.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When any of the <ph id="ph1">`cacheKey`</ph>s are removed from the cache, the cached response of the current item is invalid.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An array of item keys that the cached response is dependent upon.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Makes the validity of a cached response dependent on another item in the cache.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the item corresponding to the <ph id="ph1">`cacheKey`</ph> parameter is removed from the cache, the cached response of the current item is invalid.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key of the item that the cached response is dependent upon.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Adds a group of file names to the collection of file names on which the current response is dependent.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The collection of files to add.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds an array of file names to the collection of file names on which the current response is dependent.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An array of files to add.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds a single file name to the collection of file names on which the current response is dependent.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AddFileDependency%2A&gt;</ph> method to add a file dependency, you must also specify output caching programmatically or declaratively.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to specify output caching declaratively, use the  directive.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Page Output with File Dependencies<ept id="p1">](http://msdn.microsoft.com/library/95ad1c54-329e-45af-9343-a03a1d2ce9db)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name of the file to add.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds an HTTP header to the output stream.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Web.HttpResponse.AddHeader(System.String,System.String)"&gt;&lt;/xref&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.AddHeader%2A&gt;</ph> is the same as <ph id="ph2">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> and is provided only for compatibility with earlier versions of ASP.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header to add <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> to.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The string to add to the header.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Registers a callback that the ASP.NET runtime will invoke immediately before response headers are sent for this request.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The AddOnSendingHeaders method is not invoked if the native module flushes the response first.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The pseudo-event OnSendingHeaders differs from the IHttpModule-level pipeline event in that it is a per-request subscription rather than a per-application subscription.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The intent is that the callback may modify the response status code or may set a response cookie or header.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other usage notes and caveats:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is effective only when IIS runs in integrated pipeline mode pipeline and only if response headers haven't yet been sent for the current request.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ASP.NET runtime does not guarantee anything about the thread that the callback is invoked on.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the callback may be invoked synchronously in a background thread if a background flush is being performed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpContext.Current%2A&gt;</ph> is not guaranteed to be available in such a thread.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback must not call any method that manipulates the response entity body or that results in a flush.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the callback must not call <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph>, as that method may manipulate the response entity body.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback must contain only short-running synchronous code.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to invoke an asynchronous operation or wait on such an operation could result in a deadlock.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback must not throw an exception; otherwise behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The callback method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.ISubscriptionToken"&gt;&lt;/xref&gt;</ph> object that represents the subscription to the OnSendingHeaders pseudo-event.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Adds an HTTP cookie to the intrinsic cookie collection.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpCookie"&gt;&lt;/xref&gt;</ph> to add to the output stream.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A cookie is appended after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Adds an HTTP header to the output stream.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.AppendHeader%2A&gt;</ph> method to send cache-specific headers and at the same time use the cache object model (<ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph>) to set cache policy, HTTP response headers that pertain to caching (<ph id="ph3">`Cache-Control`</ph>, <ph id="ph4">`Expires`</ph>, <ph id="ph5">`Last-Modified`</ph>, <ph id="ph6">`Pragma`</ph>, and <ph id="ph7">`Vary`</ph>) might be deleted when the cache object model is used.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior enables ASP.NET to maintain the most restrictive settings.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider a page that includes user controls.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If those controls have conflicting cache policies, the most restrictive cache policy will be used.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one user control sets the header "<ph id="ph1">`Cache-Control: Public`</ph>" and another user control sets the more restrictive header "<ph id="ph2">`Cache-Control: Private`</ph>" via calls to <ph id="ph3">&lt;xref:System.Web.HttpCachePolicy.SetCacheability%2A&gt;</ph>, then the "<ph id="ph4">`Cache-Control: Private`</ph>" header will be sent with the response.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of standard HTTP/1.1 headers, see section 14, "Header Field Definitions," in the <bpt id="p1">[</bpt>Hypertext Transfer Protocol -- HTTP/1.1<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=73147)</ept> specification on the World Wide Web Consortium (W3C) Web site.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The name of the HTTP header to add to the output stream.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The string to append to the header.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The header is appended after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Adds custom log information to the Internet Information Services (IIS) log file.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow for the specified string to be recorded in the log file, you first must enable the <bpt id="p1">**</bpt>URI Query<ept id="p1">**</ept> option of the <bpt id="p2">**</bpt>Extended Logging Properties<ept id="p2">**</ept> dialog box for the site that you want to log activity for in IIS.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize extended logging in IIS 6.0, follow these steps:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>In IIS Manager, expand the local computer node, expand the Web or FTP Sites folder, right-click the Web or FTP site, and then click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Click the <bpt id="p1">**</bpt>Web or FTP Site<ept id="p1">**</ept> tab, and then select the <bpt id="p2">**</bpt>Enable logging<ept id="p2">**</ept> check box (if it is not already selected).</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <bpt id="p1">**</bpt>Active log format<ept id="p1">**</ept> box, click <bpt id="p2">**</bpt>W3C Extended Log File Format<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Click <bpt id="p1">**</bpt>Properties<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Click the <bpt id="p1">**</bpt>Advanced<ept id="p1">**</ept> tab, select the properties that you want to log, and then click <bpt id="p2">**</bpt>OK<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The text to add to the log file.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Adds a session ID to the virtual path if the session is using <ph id="ph1">&lt;xref href="System.Web.Configuration.SessionStateSection.Cookieless"&gt;&lt;/xref&gt;</ph> session state and returns the combined path.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">&lt;xref href="System.Web.Configuration.SessionStateSection.Cookieless"&gt;&lt;/xref&gt;</ph> session state is not used, <ph id="ph2">&lt;xref href="System.Web.HttpResponse.ApplyAppPathModifier(System.String)"&gt;&lt;/xref&gt;</ph> returns the original virtual path.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.ApplyAppPathModifier%2A&gt;</ph> is used only with cookieless sessions to construct absolute HREFs.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The virtual path to a resource.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept> with the session ID inserted.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Sends the currently buffered response to the client.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object supports asynchronous flush operations and this method is called from an asynchronous module event or from an asynchronous handler, the flush operation is performed asynchronously.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the flush operation is performed synchronously.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous flush is supported for IIS 6.0 and later.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The callback object.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The response state.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The asynchronous result object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The response is already completed.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Writes a string of binary characters to the HTTP output stream.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The bytes to write to the output stream.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to buffer output and send it after the complete response is finished processing.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Buffer%2A&gt;</ph> property has been deprecated in favor of the <ph id="ph2">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph> property and is provided only for compatibility with earlier versions of ASP.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.BufferOutput%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the output to client is buffered; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to buffer output and send it after the complete page is finished processing.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the output to client is buffered; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets the caching policy (such as expiration time, privacy settings, and vary clauses) of a Web page.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpCachePolicy"&gt;&lt;/xref&gt;</ph> object that contains information about the caching policy of the current response.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">`Cache-Control`</ph> HTTP header that matches one of the <ph id="ph2">&lt;xref href="System.Web.HttpCacheability"&gt;&lt;/xref&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values for <ph id="ph1">`Private`</ph>, <ph id="ph2">`Public`</ph>, and <ph id="ph3">`No-Cache`</ph> are strings and must be enclosed in quotation marks (" ").</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> property is set to a value that does not match one of the <ph id="ph2">&lt;xref:System.Web.HttpCacheability&gt;</ph> enumeration values, then an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> property is not set, the cacheability of the response is set to <ph id="ph2">&lt;xref:System.Web.HttpCacheability.NoCache&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`CacheControl`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> properties have been deprecated.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the methods of the <ph id="ph1">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class are available through the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A string representation of the <ph id="ph1">&lt;xref href="System.Web.HttpCacheability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The string value set does not match one of the <ph id="ph1">&lt;xref href="System.Web.HttpCacheability"&gt;&lt;/xref&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP character set of the output stream.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Charset`</ph> property can be set to <ph id="ph2">`null`</ph> to suppress the HTTP <ph id="ph3">`Content-Type`</ph> header.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The HTTP character set of the output stream.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Charset`</ph> property was set after headers were sent.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Clears all content output from the buffer stream.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Clear%2A&gt;</ph> method does not clear header information.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Clears all content output from the buffer stream.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClearContent%2A&gt;</ph> method does not clear header information.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Clears all headers from the buffer stream.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Headers are cleared after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> object that is tripped when the client disconnects.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>This API is thread-safe.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there are some restrictions on how the cancellation token should be used.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using it incorrectly can lead to race conditions, deadlocks, or other unexpected behavior.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keep in mind the following guidelines:</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ensure that you don't call into this API outside the bounds of a single request, because ASP.NET will dispose of the cancellation token at the end of the request.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no guarantee that the token will ever transition to a canceled state before it is disposed.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the request finishes without the client having disconnected, the token will be disposed without having first been canceled.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not wait on the <ph id="ph1">&lt;xref:System.Threading.CancellationToken.WaitHandle%2A?displayProperty=fullName&gt;</ph>, as this defeats the purpose of an asynchronous notification and can cause deadlocks.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName&gt;</ph> overloads which invoke the callback on the original <ph id="ph2">&lt;xref:System.Threading.SynchronizationContext&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use the <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object or other non-thread-safe ASP.NET intrinsic objects from within the callback provided to the <ph id="ph2">&lt;xref:System.Threading.CancellationToken.Register%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback may be running concurrently with other ASP.NET or application code.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keep the callback methods short-running and non-blocking.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make every effort to avoid throwing exceptions from within the callback methods.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only applicable to Internet Information Service (IIS) 7.5 in integrated mode.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you invoke it without the right IIS version or pipeline mode, a <ph id="ph1">&lt;xref:System.PlatformNotSupportedException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the IIS version, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.IISVersion%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the pipeline mode, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The cancellation token.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Closes the socket connection to a client.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method terminates the connection to the client in an abrupt manner and is not intended for normal HTTP request processing.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method sends a reset packet to the client, which can cause response data that is buffered on the server, the client, or somewhere in between to be dropped.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, typically you should call <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> instead if you want to jump ahead to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event and send a response to the client.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP character set of the output stream.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default <ph id="ph1">`ContentEncoding`</ph> can be specified in an ASP.NET configuration file in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> section.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Web.HttpResponse.ContentEncoding%2A&gt;</ph> is specified by the client, the default configuration settings are overridden.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> object that contains information about the character set of the current response.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Attempted to set <ph id="ph1">&lt;xref href="System.Web.HttpResponse.ContentEncoding"&gt;&lt;/xref&gt;</ph> to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP MIME type of the output stream.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The HTTP MIME type of the output stream.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The default value is "<ph id="ph1">`text/html`</ph>".</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpResponse.ContentType"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets the response cookie collection.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET includes two intrinsic cookie collections.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> contains cookies transmitted by the client to the server in the <ph id="ph3">`Cookie`</ph> header.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> contains new cookies created on the server and transmitted to the client in the <ph id="ph3">`Set-Cookie`</ph> header.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you add a cookie by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName&gt;</ph> collection, the cookie is immediately available in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName&gt;</ph> collection, even if the response has not been sent to the client.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The response cookie collection.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Disables kernel caching for the current response.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If kernel caching is not supported, this method has no effect.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Disables IIS user-mode caching for this response.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If IIS user-mode caching is not supported, this method returns without performing any action.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Sends all currently buffered output to the client, stops execution of the page, and raises the <ph id="ph1">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided only for compatibility with ASP—that is, for compatibility with COM-based Web-programming technology that preceded ASP.NET.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to jump ahead to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event and send a response to the client, it is usually preferable to call <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>To mimic the behavior of the <ph id="ph1">`End`</ph> method in ASP, this method tries to raise a <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this attempt is successful, the calling thread will be aborted, which is detrimental to your site's performance.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, no code after the call to the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method is executed.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method is not able to raise a <ph id="ph2">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>, it instead flushes the response bytes to the client.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does this synchronously, which can also be detrimental to your site's performance.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case (whether or not a <ph id="ph1">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception is successfully raised), the response pipeline jumps ahead to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method does not raise an exception, and code after the call to the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method might be executed.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your intention is to avoid execution of subsequent code, and if the performance penalty of <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> is acceptable, you can call <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> instead of <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The call to <ph id="ph1">&lt;xref href="System.Web.HttpResponse.End"&gt;&lt;/xref&gt;</ph> has terminated the current request.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous flush operation.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The asynchronous result object.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Asynchronous flush is not supported and the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Asynchronous flush is not supported and the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">asyncResult</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be cast to a <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">FlushAsyncResult</ph><ept id="p2">&lt;/code&gt;</ept> object.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of minutes before a page cached on a browser expires.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If the user returns to the same page before it expires, the cached version is displayed.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Web.HttpResponse.Expires"&gt;&lt;/xref&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Expires`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.ExpiresAbsolute%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> properties have been deprecated in favor of the methods of the <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class available through the <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The number of minutes before the page expires.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Gets or sets the absolute date and time at which to remove cached information from the cache.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Web.HttpResponse.ExpiresAbsolute"&gt;&lt;/xref&gt;</ph> is provided for compatibility with earlier versions of ASP.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ExpiresAbsolute`</ph>, <ph id="ph2">&lt;xref:System.Web.HttpResponse.Expires%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.HttpResponse.CacheControl%2A&gt;</ph> properties have been deprecated in favor of the methods of the <ph id="ph4">&lt;xref:System.Web.HttpCachePolicy&gt;</ph> class available through the <ph id="ph5">&lt;xref:System.Web.HttpResponse.Cache%2A&gt;</ph> intrinsic object to control the Internet Information Services (IIS) output cache and client caches.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The date and time at which the page expires.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets or sets a wrapping filter object that is used to modify the HTTP entity body before transmission.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">`Stream`</ph> object and set the <ph id="ph2">&lt;xref:System.Web.HttpResponse.Filter%2A&gt;</ph> property to the <ph id="ph3">`Stream`</ph> object, all HTTP output sent by <ph id="ph4">&lt;xref:System.Web.HttpResponse.Write%2A&gt;</ph> passes through the filter.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that acts as the output filter.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Filtering is not allowed with the entity.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Sends all currently buffered output to the client.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Forces all currently buffered output to be sent to the client.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Flush%2A&gt;</ph> method can be called multiple times during request processing.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The cache is flushed after the response has been sent.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Asynchronously sends all currently buffered output to the client.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph> that represents the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Gets or sets an <ph id="ph1">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> object that represents the encoding for the current header output stream.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property gives you the ability to disable or change the <ph id="ph2">&lt;xref:System.Text.Encoding&gt;</ph> object on a response header by using the <ph id="ph3">&lt;xref:System.Text.ASCIIEncoding&gt;</ph>, <ph id="ph4">&lt;xref:System.Text.UnicodeEncoding&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.UTF7Encoding&gt;</ph>, or <ph id="ph6">&lt;xref:System.Text.UTF8Encoding&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default encoding value is the <ph id="ph1">&lt;xref:System.Text.UTF8Encoding&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>By changing the type of the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property, you can potentially increase the risk of certain malicious attacks or cause sensitive data to be sent through the response header.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Header injection attacks can be avoided, in part, by leaving the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> property of a response to the default setting.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attack against a vulnerable application could echo back entrusted data as part of a response header.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.HttpResponse.HeaderEncoding%2A&gt;</ph> is disabled because of a requirement for continuation lines in a header or if any header is constructed based on the result of untrusted data, the header data should be validated before sending to the response stream.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> that contains information about the character set for the current header.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The encoding value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The encoding value is <ph id="ph1">&lt;xref href="System.Text.Encoding.Unicode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The headers have already been sent.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Gets the collection of response headers.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> property is only supported with the <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> integrated pipeline mode and at least the .NET Framework 3.0.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you try to access the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Headers%2A&gt;</ph> property and either of these two conditions is not met, a <ph id="ph2">&lt;xref:System.PlatformNotSupportedException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> of response headers.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The operation requires the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the response headers have been written.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the response headers have been written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the client is still connected to the server.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> when the following conditions are true:</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection to the client was terminated.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can occur if the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Close%2A&gt;</ph> method was invoked, or if the client stopped execution of the Web page or browsed to another page.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object that is handling the request is <ph id="ph2">`null`</ph> or the <ph id="ph3">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName&gt;</ph> method returns <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a custom <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest&gt;</ph> object handles the request, then the <ph id="ph2">&lt;xref:System.Web.HttpWorkerRequest.IsClientConnected%2A?displayProperty=fullName&gt;</ph> method might be set based on custom criteria.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the custom worker request might force a time-out after a period of time.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the client is currently connected; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets a Boolean value indicating whether the client is being transferred to a new location.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsRequestBeingRedirected%2A&gt;</ph> property with the <ph id="ph2">&lt;xref:System.Web.HttpResponse.RedirectLocation%2A&gt;</ph> property to test and determine whether the absolute URI that is transmitted to the client in the HTTP <ph id="ph3">`Location`</ph> header is different than the current URI and what the new intended URI that is being transferred to will be.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the value of the location response header is different than the current location; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Enables output of text to the outgoing HTTP response stream.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> object that enables custom output to the client.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Enables binary output to the outgoing HTTP content body.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, when you use the <ph id="ph1">&lt;xref:System.IO.Stream.Write%28System.Byte%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName&gt;</ph> method of the IO stream returned by the <ph id="ph2">&lt;xref:System.Web.HttpResponse.OutputStream%2A&gt;</ph> property, the following exceptions might be thrown:</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>, if the <ph id="ph2">`offset`</ph> or <ph id="ph3">`count`</ph> parameter is negative or if the <ph id="ph4">`buffer`</ph> parameter's length minus the <ph id="ph5">`offset`</ph> parameter is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ArgumentNullException&gt;</ph>, if the <ph id="ph2">`buffer`</ph> parameter is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>An IO <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> representing the raw contents of the outgoing HTTP content body.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;OutputStream&lt;/code&gt;</ph> is not available.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Appends a HTTP <ph id="ph1">`PICS-Label`</ph> header to the output stream.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Platform for Internet Content Selection (PICS) is a World Wide Web Consortium (W3C) standard for content labeling.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>PICS is essentially a language for creating a ratings system.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any value can be a PICS label; ASP.NET does not validate the label.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum length of the string is 255 characters.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about PICS standards and syntax, see the <bpt id="p1">[</bpt>World Wide Web Consortium<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37125)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The string to add to the <ph id="ph1">`PICS-Label`</ph> header.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>This API is to support applications sending push promises to HTTP 2.0 clients.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>You can find more details regarding to Http2 server push at <bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id="p1">](http://http2.github.io/http2-spec/#PushResources)</ept>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its only purpose is performance advantage in some cases.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expectation is based on fire-and-forget.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The URL of the push request.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>It should be the virtual path of the relative resource that the server wants to push to the client.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>This API is to support applications sending push promises to HTTP 2.0 clients.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>You can find more details regarding to Http2 server push at <bpt id="p1">[</bpt>HTTP/2 Specification Section 8.2: Server Push<ept id="p1">](http://http2.github.io/http2-spec/#PushResources)</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>PushPromise is non-deterministic and applications shouldn't have logic that depends on it.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its only purpose is performance advantage in some cases.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are many conditions (protocol and implementation) that may cause to ignore the push requests completely.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expectation is based on fire-and-forget.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The URL of the push request.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>It should be the virtual path of the relative resource that the server wants to push to the client.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Http request method that would be used by the push request.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Http request header that would be used by the push request.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Redirects a request to a new URL and specifies the new URL.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> is equivalent to calling <ph id="ph2">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> with the second parameter set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> which throws a <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception upon completion.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception has a detrimental effect on Web application performance.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, we recommend that instead of this overload you use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> overload and pass <ph id="ph2">`false`</ph> for the <ph id="ph3">`endResponse`</ph> parameter, and then call the <ph id="ph4">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>For mobile pages only, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can result in creating a new session and potentially losing session data.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a property on a mobile control with a path such as "~/path", resolve the path using <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~/path" before assigning it to the property.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>An alternative way to transfer control to another page is the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method is typically more efficient because it does not cause a round trip to the client.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Redirect Users to Another Page<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The target location.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A redirection is attempted after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Redirects a client to a new URL.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Specifies the new URL and whether execution of the current page should terminate.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>An absolute URL (for example, http://www.contoso.com/default.aspx) or a relative URL (for example, Default.aspx) can be specified for the target location but some browsers may reject a relative URL.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this method in a page handler to terminate a request for one page and start a new request for another page, set <ph id="ph1">`endResponse`</ph> to <ph id="ph2">`false`</ph> and then call the <ph id="ph3">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify <ph id="ph1">`true`</ph> for the <ph id="ph2">`endResponse`</ph> parameter, this method calls the <ph id="ph3">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method for the original request, which throws a <ph id="ph4">&lt;xref:System.Threading.ThreadAbortException&gt;</ph> exception when it completes.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>This exception has a detrimental effect on Web application performance, which is why passing <ph id="ph1">`false`</ph> for the <ph id="ph2">`endResponse`</ph> parameter is recommended.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.HttpResponse.End%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>For mobile pages, if your application relies on cookieless sessions, or might receive requests from mobile devices that require cookieless sessions, using a tilde (~) in a path can create a new session and potentially lose session data.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set a property on a mobile control with a path such as "~/path", resolve the path using <ph id="ph1">&lt;xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A&gt;</ph> "~/path" before assigning it to the property.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>An alternative way to transfer control to another page is the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> method is typically more efficient because it does not cause a round trip to the client.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Redirect Users to Another Page<ept id="p1">](http://msdn.microsoft.com/library/daef3f43-e018-43aa-b43c-46b27bac599e)</ept>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The location of the target.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Indicates whether execution of the current page should terminate.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;url&lt;/code&gt;</ph> contains a newline character.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>A redirection is attempted after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The page request is the result of a callback.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the HTTP <ph id="ph1">`Location`</ph> header.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The absolute URI that is transmitted to the client in the HTTP <ph id="ph1">`Location`</ph> header.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The HTTP headers have already been written.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from the requested URL to the specified URL, and provides the option to complete the response.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overload also provides the option to specify whether to terminate or to complete the response after the redirection has been performed.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>A 301 HTTP status code is a standard code in an HTTP response.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>It indicates that a permanent redirection exists, and it provides the redirection location.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The location to redirect the request to.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to terminate the response; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;url&lt;/code&gt;</ph> includes a newline character (<ph id="ph2">&lt;code&gt;\n&lt;/code&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from the requested URL to the specified URL.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> method overload provides a 301 HTTP status code in the response and includes the URL to redirect the request to.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>A 301 HTTP status code is a standard code in an HTTP response.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>It indicates that a permanent redirection exists, and it provides the redirection location.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%29&gt;</ph> method overload terminates the response.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The location to redirect the request to.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;url&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;url&lt;/code&gt;</ph> includes a newline character (<ph id="ph2">&lt;code&gt;\n&lt;/code&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Redirects a request to a new URL by using route parameter values.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method is then called to determine the URL.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Redirects a request to a new URL by using a route name.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the route name that is passed in <ph id="ph1">`routeName`</ph> to a URL by using the <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Redirects a request to a new URL by using route parameter values.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method to determine the URL.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Redirects a request to a new URL by using route parameter values and a route name.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method is then called to determine the URL.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Redirects a request to a new URL by using route parameter values and a route name.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method is called to determine the URL.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 302 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from a requested URL to a new URL by using the route parameter values and the name of the route that correspond to the new URL.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%2A&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method is then called to determine the URL.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the object that is passed in <ph id="ph1">`routeValues`</ph> to a <ph id="ph2">&lt;xref:System.Web.Routing.RouteValueDictionary?displayProperty=fullName&gt;</ph> object by using the <ph id="ph3">&lt;xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method is then called to determine the URL.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from a requested URL to a new URL by using a route name.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RedirectPermanent%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the route name that is passed in <ph id="ph1">`routeName`</ph> to a URL by using the <ph id="ph2">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method to determine the URL.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Performs a permanent redirection from a requested URL to a new URL by using route parameter values and a route name.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is provided for coding convenience.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is equivalent to calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Redirect%28System.String%2CSystem.Boolean%29&gt;</ph> method with the second parameter set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A?displayProperty=fullName&gt;</ph> method to determine the URL.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET performs the redirection by returning a 301 HTTP status code.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The name of the route.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The route parameter values.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>No route corresponds to the specified route parameters.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Redirection was attempted after the HTTP headers had been sent.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Uses the specified output-cache provider to remove all output-cache items that are associated with the specified path.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to remove output-cache items that are associated with the custom output-cache providers that are specified in the Web site configuration file.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove output-cache items that are associated with the default output-cache provider, call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%28System.String%29&gt;</ph> method overload.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The virtual absolute path of the items that are removed from the cache.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The provider that is used to remove the output-cache artifacts that are associated with the specified path.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an invalid path.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Removes from the cache all cached items that are associated with the default output-cache provider.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>This method is static.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to remove output-cache items that are associated with the default output-cache provider.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.RemoveOutputCacheItem%2A&gt;</ph> method to remove output-cache items that are associated with custom output-cache providers that are specified in the Web site configuration file.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The virtual absolute path to the items that are removed from the cache.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is not an absolute virtual path.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Because the <bpt id="p1">&lt;strong&gt;</bpt>HttpResponse.SetCookie<ept id="p1">&lt;/strong&gt;</ept> method is intended for internal use only, you should not call it in your code.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Instead, you can call the <bpt id="p1">&lt;strong&gt;</bpt>HttpResponse.Cookies.Set<ept id="p1">&lt;/strong&gt;</ept> method, as the following example shows.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Updates an existing cookie in the cookie collection.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The cookie in the collection to be updated.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Attempted to set the cookie after the HTTP headers were sent.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">`Status`</ph> line that is returned to the client.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpResponse.Status%2A&gt;</ph> has been deprecated in favor of <ph id="ph2">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> and is provided only for compatibility with earlier versions of ASP.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>With ASP.NET, use <ph id="ph1">&lt;xref:System.Web.HttpResponse.StatusDescription%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>Setting the status code causes a string describing the status of the HTTP output to be returned to the client.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The default value is 200 (OK).</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Status is set to an invalid status code.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP status code of the output returned to the client.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>An Integer representing the status of the HTTP output returned to the client.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The default value is 200 (OK).</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>For a listing of valid status codes, see <bpt id="p1">[</bpt>Http Status Codes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Web.HttpResponse.StatusCode"&gt;&lt;/xref&gt;</ph> is set after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP status string of the output returned to the client.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A string that describes the status of the HTTP output returned to the client.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The default value is "OK".</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>For a listing of valid status codes, see <bpt id="p1">[</bpt>Http Status Codes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73157)</ept>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;StatusDescription&lt;/code&gt;</ph> is set after the HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The selected value has a length greater than 512.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Gets or sets a value qualifying the status code of the response.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property is only supported with the integrated pipeline mode in <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.HttpResponse.SubStatusCode%2A&gt;</ph> property, the status is logged on <ph id="ph2">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> if failed-request tracing is configured.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Independent of whether tracing is configured, the code is never sent as part of the final response to the request.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Troubleshooting Failed Requests Using Failed Request Tracing in IIS 7.0<ept id="p1">](http://www.iis.net/default.aspx?tabid=2&amp;subtabid=25&amp;i=969&amp;p=1)</ept>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>An integer value that represents the <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> sub status code.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The operation requires the integrated pipeline mode in <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> and at least the .NET Framework version 3.0.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The status code is set after all HTTP headers have been sent.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the connection supports asynchronous flush operations.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns the value of the <ph id="ph1">&lt;xref:System.Web.HttpWorkerRequest.SupportsAsyncFlush%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the connection supports asynchronous flush operations; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to send HTTP content to the client.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to suppress output; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to suppress the default <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Cache Control: private</ph><ept id="p1">&lt;/code&gt;</ept> header for the current HTTP response.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, ASP.NET sends a <ph id="ph1">`Cache-Control: private`</ph> response header unless an explicit cache policy has been specified for this response.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows suppressing this default response header on a per-request basis.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>The header can still be suppressed for the entire application by setting <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.SendCacheControlHeader%2A&gt;</ph> in <bpt id="p1">[</bpt>httpRuntime Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369)</ept> or <bpt id="p2">[</bpt>outputCache Element for caching (ASP.NET Settings Schema)<ept id="p2">](http://msdn.microsoft.com/en-us/47cd2b47-316f-4dfd-bbf8-539be3066fee)</ept>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use caution when suppressing the default <ph id="ph1">`Cache-Control: private`</ph> header, as proxies and other intermediaries may treat responses without this header as cacheable by default.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>This treatment can lead to the inadvertent caching of sensitive information.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>RFC 2616, Sec. 13.4<ept id="p1">](http://tools.ietf.org/html/rfc2616)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to suppress the default <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">Cache Control: private</ph><ept id="p1">&lt;/code&gt;</ept> header for the current HTTP response; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether forms authentication redirection to the login page should be suppressed.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, forms authentication converts HTTP 401 status codes to 302 in order to redirect to the login page.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>This isn't appropriate for certain classes of errors, such as when authentication succeeds but authorization fails, or when the current request is an AJAX or web service request.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides a way to suppress the redirect behavior and send the original status code to the client.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if forms authentication redirection should be suppressed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Writes the specified part of a file directly to an HTTP response output stream without buffering it in memory.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify 0 as the <ph id="ph1">`offset`</ph> parameter and -1 as the <ph id="ph2">`length`</ph> parameter, the whole file is sent.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The name of the file to write to the HTTP output.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The position in the file to begin to write to the HTTP output.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The number of bytes to be transmitted.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than -1.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p1">&lt;/code&gt;</ept> parameter specifies a number of bytes that is greater than the number of bytes the file contains minus the offset.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>The out-of-process worker request is not supported.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The response is not using an <ph id="ph1">&lt;xref href="System.Web.HttpWriter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than zero or greater than the file size.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">length</ph><ept id="p1">&lt;/code&gt;</ept> parameter is less than -1 or greater than the value of the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">offset</ph><ept id="p2">&lt;/code&gt;</ept> parameter plus the file size.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Writes the specified file directly to an HTTP response output stream, without buffering it in memory.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The name of the file to write to the HTTP output.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether <ph id="ph1">[!INCLUDE[iisver](~/includes/iisver-md.md)]</ph> custom errors are disabled.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property is used only when your application is hosted in IIS 7.0.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>When running in Classic mode in IIS 7.0 the <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property default value is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>When running in Integrated mode, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.TrySkipIisCustomErrors%2A&gt;</ph> property default value is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to disable IIS custom errors; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Writes a character to an HTTP response output stream.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The character to write to the HTTP output stream.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Writes an <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to an HTTP response stream.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to write to the HTTP output stream.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Writes a string to an HTTP response output stream.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dynamically generated HTML pages can introduce security risks if input received from Web clients is not validated either when it is received from a client or when it is transmitted back to a client.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Malicious script that is embedded in input submitted to a Web site and later written back out to a client can appear to be originating from a trusted source.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>This security risk is referred to as a cross-site scripting attack.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always validate data that is received from a client when it will be transmitted from your site to client browsers.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Moreover, whenever you write out as HTML any data that was received as input, you should encode it using a technique such as <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.HtmlEncode%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.UrlEncode%2A&gt;</ph> to prevent malicious script from executing.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique is useful for data that was not validated when it was received.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you encode or filter data, you must specify a character set for your Web pages so that your filter can identify and remove any byte sequences that do not belong to that set (such as nonalphanumeric sequences) and could potentially have malicious script embedded in them.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cross-site scripting attacks, see article Q252985, "How to Prevent Cross-Site Scripting Security Issues" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=37115)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The string to write to the HTTP output stream.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Writes an array of characters to an HTTP response output stream.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The character array to write.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The position in the character array where writing starts.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>The number of characters to write, beginning at <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The file handle of the file to write to the HTTP output stream.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The byte position in the file where writing will start.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the output stream.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileHandler&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the file size minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Writes the specified file directly to an HTTP response output stream.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>The name of the file to write to the HTTP output stream.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The byte position in the file where writing will start.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The number of bytes to write to the output stream.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the file size minus <ph id="ph2">&lt;code&gt;offset&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Writes the contents of the specified file directly to an HTTP response output stream as a file block.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The name of the file to write to the HTTP output.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Writes the contents of the specified file directly to an HTTP response output stream as a memory block.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is used with large files, calling the method might throw an exception.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the file that can be used with this method depends on the hardware configuration of the Web server.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see article 812406, "PRB: Response.WriteFile Cannot Download a Large File" on the <bpt id="p1">[</bpt>Microsoft Knowledge Base<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=149903)</ept> Web site.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The name of the file to write into a memory block.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Indicates whether the file will be written into a memory block.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filename</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Allows insertion of response substitution blocks into the response, which allows dynamic generation of specified response regions for output cached responses.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> method for post-cache substitution in your output-cached pages.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>By passing a <ph id="ph1">&lt;xref:System.Web.HttpContext&gt;</ph> object to a callback method with a prescribed <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> signature, you can replace output cached content at any given location in the page cache.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>To initiate the replacement, call the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> method, passing it the callback method, which must be thread safe and can be either of the following:</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>A static method on the container page or user control.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>A static or instance method on another arbitrary object.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the first request to the page, the <ph id="ph1">&lt;xref:System.Web.HttpResponse.WriteSubstitution%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Web.HttpResponseSubstitutionCallback&gt;</ph> delegate to produce the output.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, it adds a substitution buffer to the response, which retains the delegate to call on future requests.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, it degrades client-side cacheability from public to server-only, ensuring future requests to the page re-invoke the delegate by not caching on the client.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Post-cache substitution is not supported for a cached user control where output caching is applied at the user control level.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is also known as fragment caching.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Caching Portions of an ASP.NET Page<ept id="p1">](http://msdn.microsoft.com/library/cdd8e523-7305-4685-a456-c5be1de1367e)</ept>.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The method, user control, or object to substitute.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The target of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">callback</ph><ept id="p1">&lt;/code&gt;</ept> parameter is of type <ph id="ph2">&lt;xref href="System.Web.UI.Control"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>