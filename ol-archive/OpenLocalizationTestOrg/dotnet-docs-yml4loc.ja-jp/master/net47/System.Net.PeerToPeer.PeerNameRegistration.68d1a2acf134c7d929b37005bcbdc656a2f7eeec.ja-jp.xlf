<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af4e7ed75acf9de62667d76849481b5fef062451</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.PeerToPeer.PeerNameRegistration.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3c929d6638a05533786997e6dc5a8deec6288402</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c901cf48c2af4d04b60f0100d65a07087307f4a6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Registers a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> in a <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph> or set of clouds.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registration creates (or updates) all the information that is associated with a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> in a peer cloud or clouds.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to have multiple <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> objects for the same peer name.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such a case, if the peer name is secured, each instance represents <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> in a different cloud.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times, providing that each registration is from a different process.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new default instance of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns a new default instance of type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not perform peer name registration during construction.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>After instantiating an object with this constructor, the caller should populate the appropriate fields in the instance prior to calling <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> class with the specified name and port number.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6and IPv4) and the provided port for all clouds in which the peer is currently participating.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object is constructed successfully, the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> are populated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the peer name is secured and was previously registered in a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> the peer is currently participating in, an <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerToPeerException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor only creates a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance; it does not perform the registration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>After instantiating the registration object with this constructor and populating its fields, the application must call <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> to perform the actual registration.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> object to register.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Integer value that specifies the port number to register.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The specified port number is less than zero.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> specified has already been registered from this host.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The remote peer does not own the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName.Authority"&gt;&lt;/xref&gt;</ph> for the supplied <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new serializable <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Context that provides the means for deserializing the data.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Also referred to as the source of the serialized data.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> class with the specified peer name, port number, and <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this constructor creates an instance that will be used to register all source addresses (both IPv6 and IPv4), the provided port, and the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object is constructed successfully, the properties are populated with the specified <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cloud parameter is <ph id="ph1">`null`</ph>, the name is registered using the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> shortcut, which initializes default values for the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>After instantiation, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method must be called to register the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> object to register.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Integer value that specifies the port number to register.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph> in which to register the peer name.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The specified port number is less than zero.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> specified has already been registered from this host.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The remote peer does not own the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName.Authority"&gt;&lt;/xref&gt;</ph> for the supplied <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets information in a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Cloud"&gt;&lt;/xref&gt;</ph> into which this <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord.PeerName"&gt;&lt;/xref&gt;</ph> object will be registered.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An object of type <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph> that specifies the peer cloud for which this registration is defined.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This property is set to <ph id="ph1">`null`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets or sets additional information about the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> object that will be registered with the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The comment that contains additional information about the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> to associate with the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>This property is set to <ph id="ph1">`null`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The specified string value is greater than 39 Unicode characters.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets application-defined binary data for the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum amount of <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Data%2A&gt;</ph> that can be supplied is 4,096 bytes.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>This property is set to <ph id="ph1">`null`</ph> by default.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The specified <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Data"&gt;&lt;/xref&gt;</ph> is greater than 4096 bytes.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources and optionally releases the managed resources used by the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the collection of network endpoints for which the associated peer name is registered.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">&lt;xref:System.Net&gt;</ph> namespace, an <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> represents a network endpoint as an IP address and a port number.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For PNRP, an IP address and port value must be provided for each endpoint.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum number of endpoints that can be provided is ten.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Automatic address selection is used when this parameter is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine theaddresses for which the peer name was registered.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a peer name is registered for more than one node, each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> is distinct and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property defined on each registration instance will be different.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, when a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> is registered into more than one <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph>, each registration is distinct and the collection of endpoints will usually be different for each instance.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord.EndPointCollection"&gt;&lt;/xref&gt;</ph> object that contains the network endpoints for which the associated peer name is registered.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">`null`</ph> for reference types.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Populates a serialization information object with the data needed to serialize the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Contains destination for the serialized stream associated with the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the peer name specified in the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property is registered with a specific <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph> on a host.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`true`</ph>, the peer name is registered with a <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Cloud"&gt;&lt;/xref&gt;</ph> for the peer host.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`false`</ph>, then the registration process can be started with <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Start"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An object that has been disposed already cannot be registered.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the peer name to register with a peer cloud.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>A peer name can be registered for more than one node; each <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> instance is distinct.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property associated with each corresponding <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> instance is different.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, it is possible to register a peer name for more than one cloud that the node is connected to; each of these registrations is distinct.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The peer name's <ph id="ph1">&lt;xref:System.Net.IPEndPointCollection&gt;</ph> will be different in each of these instances.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An object of type <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> that contains values associated with this <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified, the default value for all properties is <ph id="ph1">`null`</ph> for reference types.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">[</bpt>TCP/IP<ept id="p1">](http://go.microsoft.com/fwlink?LinkID=98458)</ept> port number used by the peer being registered into the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default port is used by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method only when no endpoints are specified.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An integer value indicating the TCP port number of the <ph id="ph1">&lt;xref href="System.Net.IPEndPoint"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Unless explicitly specified, the default value for this property is zero (0).</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The specified port value is less than zero.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Port numbers must be greater than or equal to zero and less than 65,535 (0xFFFF).</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Registers the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> into the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Cloud"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If no <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection"&gt;&lt;/xref&gt;</ph> is specified, automatic address selection is used with the port value specified by the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Port"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method registers the peer name specified in the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName%2A&gt;</ph> property with all source addresses and the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph> specified in the constructor.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default port is used by this method only when no endpoints are specified.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Cloud%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, this method registers the peer name specified in the <ph id="ph3">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property using the <ph id="ph4">&lt;xref:System.Net.PeerToPeer.Cloud.Available&gt;</ph> field, which initializes default values for the <ph id="ph5">&lt;xref:System.Net.PeerToPeer.Cloud.Name%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Net.PeerToPeer.Cloud.Scope%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Net.PeerToPeer.Cloud.ScopeId%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph> object has been started, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Stop%2A&gt;</ph> method is used to stop it.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a registration, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Update%2A&gt;</ph> method must be used.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This object had Dispose() called on it previously.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> specified has already been registered.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Update"&gt;&lt;/xref&gt;</ph> method must be used to update a registration.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The remote peer does not own the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName.Authority"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> specified.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Either the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerName"&gt;&lt;/xref&gt;</ph> or the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord.Data"&gt;&lt;/xref&gt;</ph> is not specified; at least one needs to be provided.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The message or data elements are invalid.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Or, <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.UseAutoEndPointSelection"&gt;&lt;/xref&gt;</ph> is not set and no data blob or <ph id="ph2">&lt;xref href="System.Net.IPEndPoint"&gt;&lt;/xref&gt;</ph> is specified.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Unregisters the peer name specified in the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property from all the clouds in which it was registered.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the registration process has been stopped, the registration object's state is equal to the state directly after being constructed by the default constructor.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this state, all of its properties are assumed to have no value.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Start%2A&gt;</ph> method may be used to restart it.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to have multiple registration objects for the same peer name.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such a case, if the peer name is secured, each instance will represent a registration in a different PNRP cloud.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the peer name is not secured, it can be registered in the same cloud multiple times.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this instance is already stopped, calling this method has no effect.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property has not yet been registered.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>This occurs when a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> object is constructed using the empty constructor.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property must be populated in this instance prior to calling <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Start"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This object had Dispose() called on it previously.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Updates the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> for a node registered with a specific <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Cloud"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Update is performed using the information specified in the properties.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>All information registered in cloud(s) for this <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> prior to the call is completely discarded.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new data is not combined with the existing registration.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, first update the properties on this instance and then call this method.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord&gt;</ph> is registered, the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A&gt;</ph> property cannot be updated.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other fields in the record may be updated.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property has not yet been registered.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Update"&gt;&lt;/xref&gt;</ph> method cannot be called until the peer name specified in the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property is registered in one or more clouds.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The peer name specified in the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.PeerName"&gt;&lt;/xref&gt;</ph> property has changed since the corresponding <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord"&gt;&lt;/xref&gt;</ph> was registered.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An object that has been disposed cannot be registered.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRecord"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether to use automatic endpoint selection when traversing a peer mesh or <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration.Cloud"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>When auto endpoint selection is used (this property is set to <ph id="ph1">`true`</ph>) with no endpoint information specified prior to the start of a <ph id="ph2">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration&gt;</ph>, the system chooses individual endpoints and publishes them with the associated peer name into all available clouds.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the port is not specified, auto selection chooses zero as the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.Port%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>When set to <ph id="ph1">`false`</ph>, auto selection as described above is not performed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables the registration process to publish a peer name along with a data blob (as specified by the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRecord.Data%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>No endpoints are associated with the name.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a registration method is used that automatically selects the addresses to register, there is no method to determine what addresses for which the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerName&gt;</ph> object was registered.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PeerNameRegistration.EndPointCollection%2A&gt;</ph> property will not be updated to reflect the addresses selected.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Updating this property after peer name registration has started has no effect.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> if automatic endpoint selection is to be used; <ph id="ph2">`false`</ph> if some other method will be used to determine an endpoint.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ISerializable"&gt;&lt;/xref&gt;</ph> interface and returns the data needed to serialize the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Holds the serialized data associated with the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Contains the destination for the serialized stream associated with the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.PeerNameRegistration"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>