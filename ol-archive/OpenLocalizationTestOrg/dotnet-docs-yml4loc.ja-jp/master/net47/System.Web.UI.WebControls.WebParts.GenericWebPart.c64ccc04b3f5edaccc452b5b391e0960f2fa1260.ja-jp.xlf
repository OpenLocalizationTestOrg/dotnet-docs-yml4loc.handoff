<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">342b883c63ed33fcf9493ab4471ba715fb870205</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.WebControls.WebParts.GenericWebPart.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f68fa1cc3d4b39ea36ca77f1245a2d3f12ca8482</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f4860c91defb267f17f4097b52930612bfccfe8c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Wraps server controls that are not <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.WebPart"&gt;&lt;/xref&gt;</ph> controls so that they can appear and behave as true <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.WebPart"&gt;&lt;/xref&gt;</ph> controls at run time.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control exists to provide a run-time wrapper for server controls that are not <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls, so that such controls can be used in Web Parts pages and applications.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When developers add server controls--such as user controls, ASP.NET server controls, or existing custom controls--to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control automatically wraps the server controls at run time so they can exhibit the same functionality as true <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table compares and contrasts <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> controls and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exists to equip server controls that are not <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls with Web Parts functionality, so that any ASP.NET, custom, or user control can participate in Web Parts applications.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exists to create custom ASP.NET controls that have native Web Parts functionality built in.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes personalization, connections, import and export, and drag-and-drop capabilities.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Is never declared in the markup of a page.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>It exists only to wrap server controls at run time, and to give the wrapped control (or child control) the full functionality of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Can be declared in the markup of a page at design time, like an ASP.NET server control, except that it is declared in a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Includes and integrates its child control into the Web Parts personalization process so that it can act as a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs automatically, which makes it simple for developers to use server controls and user controls in Web Parts applications.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Is automatically included in the Web Parts personalization process.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Can be accessed programmatically at run time (by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A&gt;</ph> method and passing to it the child server control), like a true <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control or a standard ASP.NET control.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Can be accessed programmatically at run time, like a standard ASP.NET control.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users benefit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control because it provides a consistent user experience.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any server control can be made to function like a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control, and will have the same consistent user interface (UI) elements such as verbs, icons, a title, and a header.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers benefit from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control because it enables them to reuse existing user controls and server controls within Web Parts applications.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create Web Parts pages, you do not have to do anything to enable an existing user control or custom control to be wrapped with the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Simply add your server or user control to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone, either programmatically or by declaring it in the page's markup, and the Web Parts control set automatically wraps your control with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> object at run time.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because server controls that are placed in <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zones are wrapped with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control at run time, developers can use ordinary server and user controls exactly as if they were <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that, if you declare custom controls that inherit from the base <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> class within a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;</ph>, these controls cannot support the use of the intrinsic <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, you cannot declare the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> properties on such controls, including properties such as the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, other types of server controls (such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls, user controls, and custom controls that inherit from <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph>) can declare these properties, because they support the use of expando properties.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expando properties are actually strings that can be added to a class dynamically as a property, by means of the <ph id="ph1">&lt;xref:System.Web.UI.IAttributeAccessor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that implement this interface, including the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class and its children, can use expando properties.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the base <ph id="ph1">&lt;xref:System.Web.UI.Control&gt;</ph> class does not support expando properties, when a custom control that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class is placed in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZone&gt;</ph> and wrapped with a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control at run time, the Web Parts control set cannot dynamically add the intrinsic <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> properties to the custom control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You have two choices in this case.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the custom control without the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> properties, or you can implement the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> interface in the custom control, enabling it to use the properties.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example of how controls that inherit from <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> can use the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> properties, if you declare an ASP.NET <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Calendar&gt;</ph> control in the markup of a page (within a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone) at design time, even though this control does not inherit from the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class and does not natively contain <ph id="ph6">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> members, you can still treat it exactly like a <ph id="ph7">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can declare <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> properties on the calendar control, such as <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A&gt;</ph>, and others.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A&gt;</ph> method, which returns the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control that is dynamically wrapping the calendar control, and work with it programmatically exactly as you would with a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control, with access to all the same properties, events, and methods.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control has a critical property that allows you to access its underlying server control: the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows developers to programmatically access the server control.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A&gt;</ph> property is also used by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager&gt;</ph> control to access personalization data from the child control, and to perform authorization, if the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control has several other properties, all of which override properties inherited from the base <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>As noted, you can use these properties with any child control, so that it can behave as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>One important property is the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A&gt;</ph> property; it determines whether all the exportable properties, or only those marked as non-sensitive, can be exported.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The UI-oriented properties inherited from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Height%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Width%2A&gt;</ph>, can be set in the declarative markup for any server control that is placed in a <ph id="ph8">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase&gt;</ph> zone.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Important methods in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> class include the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A&gt;</ph> method, which creates the collection of controls (including child controls) associated with a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control, and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Render%2A&gt;</ph> method, which delegates all rendering to the wrapped child controls.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructors on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> class are protected and are intended either for internal use or for extensibility scenarios.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are some additional helpful insights for working with <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to set default values for the overridden properties in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> class, your user control or custom server control can implement the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.IWebActionable&gt;</ph> interfaces, and override their members.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control will get its values for the implemented properties from the child control that implements the interfaces.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your control defines any of its properties as personalizable (by using the <ph id="ph1">`Personalizable`</ph> metadata attribute), the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control automatically enables those properties for personalization at run time, just like the personalizable properties on a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to provide Web Parts editing features for your control, you can implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>At run time, when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control's code for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.WebBrowsableObject%2A&gt;</ph> property will call into the same property in the child control, and use the child control's implementation to create associated custom <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control by passing in a reference to a control that becomes the child control.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%28System.Web.UI.Control%29&gt;</ph> constructor is called by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager&gt;</ph> control in its <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A&gt;</ph> method, to initialize an instance of a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control by passing in a reference to a child server control.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> object is created, you can reference the child control using the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A server control that becomes the child control of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control instance.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> is of type <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.WebPart"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> has a <ph id="ph2">`null`</ph> or empty <ph id="ph3">&lt;xref href="System.Web.UI.Control.ID"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;control&lt;/code&gt;</ph> has been output-cached.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the URL to an image that represents a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control in a catalog of controls.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Web Parts applications often provide a catalog (or list) of controls that users can add to a page.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A&gt;</ph> property on a control contains the URL to an image that represents the control when it appears in a catalog.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set values for the property on your control in the declarative markup of a Web page, as well as programmatically.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a default value for the property whenever the control is used, you can implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A string that represents the URL to an image used to represent the control in a catalog.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a reference to the child control that is wrapped by a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control at run time.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A&gt;</ph> property provides the means to access the child control wrapped by a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartManager&gt;</ph> control uses the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A&gt;</ph> property to extract personalization data from the child control.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.Control"&gt;&lt;/xref&gt;</ph> that refers to the wrapped child control.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Called by the ASP.NET page framework to notify server controls that use composition-based implementation to create any child controls they contain in preparation for posting back or rendering.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Overrides the base method to create a read-only collection that consists of the child control wrapped by a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateControlCollection%2A&gt;</ph> method creates a private, read-only collection that consists of a single control, which is the child control of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection is created so that developers cannot manually add other controls to a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to create a custom <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control without adding the child control to the private collection, you can derive from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> class, override the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.%23ctor%2A&gt;</ph> constructor, and provide a different method for storing the child control referenced by the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.ChildControl%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.ControlCollection"&gt;&lt;/xref&gt;</ph> that contains the child control.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns a collection of custom <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.EditorPart"&gt;&lt;/xref&gt;</ph> controls that can be used to edit the child control of a <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control when it is in edit mode.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A&gt;</ph> method is called when a control enters edit display mode.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the base method inherited from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class because, in the case of a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control, it is the child control that is being edited, not the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control itself.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CreateEditorParts%2A&gt;</ph> method casts the child control to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable&gt;</ph> interface, which enables the control to be edited.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overridden method is what enables server controls that do not derive from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> class--including ASP.NET server controls, and custom server controls--to be edited as normal <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.EditorPartCollection"&gt;&lt;/xref&gt;</ph> that contains custom <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.EditorPart"&gt;&lt;/xref&gt;</ph> controls associated with a server control.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets a brief phrase that summarizes what a control does, for use in ToolTips and catalogs of server controls.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Description%2A&gt;</ph> property value is typically used as a descriptive string for a control in catalogs that provide lists of server controls, and as a ToolTip in a control's title bar.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content of the property appears in a ToolTip when a user positions the mouse pointer over the title text in a control's title bar.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set values for the property on your control in the declarative markup of a Web page, as well as programmatically.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a default value for the property whenever the control is used, you can implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A string that briefly summarizes the control's functionality.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the height (in pixels) of a control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can get or set the height on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Unit"&gt;&lt;/xref&gt;</ph> that indicates the height of the control.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets or sets the ID of a control.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>This value is not inheritable.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A string that contains the ID of the control.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Delegates rendering the contents of the control to the child control.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.UI.HtmlTextWriter"&gt;&lt;/xref&gt;</ph> that represents the output stream to render HTML content on the client.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets a string that is concatenated with the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart.Title"&gt;&lt;/xref&gt;</ph> property value to form a complete title for a control.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A&gt;</ph> property optionally to return a standard subtitle string that will be appended to your custom <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control's title.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A&gt;</ph> property in a user control or custom control to provide a default value, the Web Parts control set automatically appends it to the value of the control's <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A&gt;</ph> property at run time to create a complete title.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A string that serves as a subtitle for the control.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets the title of a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visible title text in a part control's title bar is set by the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Title%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not supply a title for a control, the Web Parts control set automatically calculates a default string to use as a title.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, it is possible to provide a default subtitle that is appended to the title string.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set values for the property on your control in the declarative markup of a Web page, as well as programmatically.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a default value for the property whenever the control is used, you can implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A string that represents the title of the part control.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the URL to an image used to represent a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control in the control's own title bar.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A&gt;</ph> property provides a way to associate an icon with a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The icon appears in the control's own title bar.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For thematic consistency, application developers often make this icon similar to the image that represents the control in a catalog of Web Parts controls (the image referenced in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>As it is implemented in the Web Parts control set, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl%2A&gt;</ph> property can be personalized by end users to change the image or icon that appears in a control's title bar.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set values for the property on your control in the declarative markup of a Web page, as well as programmatically.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a default value for the property whenever the control is used, you can implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A string that represents the URL to an image.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets a URL to supplemental information about a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you assign a URL to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl%2A&gt;</ph> property, the title of the control becomes a link.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides a convenient way for end users to access additional information about a control.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The additional information could include copyright data, contact data, details about the creator of the control, or a summary of the purpose of a control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set values for the property on your control in the declarative markup of a Web page, as well as programmatically.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a default value for the property whenever the control is used, you can implement the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebPart&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A string that represents a URL to more information about a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets a collection of custom verbs associated with a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Verbs derive from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPartVerb&gt;</ph> class, and provide user interface (UI) actions that users can perform on a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Usually, verbs are represented in the UI as buttons, links, or menu items.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are standard verbs for opening, closing, editing, and minimizing a control, and other verbs for exporting a definition for the control or loading a Help file.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>These verbs are not included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A&gt;</ph> collection, because the collection contains only custom verbs.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can access the property on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you child control implements the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebActionable&gt;</ph> interface and thus overrides its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebActionable.Verbs%2A?displayProperty=fullName&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control uses the child control's implementation when the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A?displayProperty=fullName&gt;</ph> property is invoked on the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create custom verbs and add them to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart.Verbs%2A&gt;</ph> collection, you can then access the verbs programmatically from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart.Verbs%2A&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.WebPartVerbCollection"&gt;&lt;/xref&gt;</ph> that contains custom <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.WebPartVerb"&gt;&lt;/xref&gt;</ph> objects associated with a <ph id="ph3">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.WebPartVerbCollection.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets a reference to the child control, to enable the control to be edited by custom <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.EditorPart"&gt;&lt;/xref&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a child control implements the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable&gt;</ph> interface, and overrides its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A&gt;</ph> property, when a user selects the control for editing, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.GenericWebPart&gt;</ph> control will call into the child control through the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A&gt;</ph> property, and use the child control's implementation of the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mechanism allows a server or user control that is not a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control to work with custom associated <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.EditorPart&gt;</ph> controls in a Web Parts application.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that consists of the child control of a <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.GenericWebPart"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets or sets the width (in pixels) of the control.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides the base property so that you can get or set the width on the child control as if it were a true <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.WebPart&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.Unit"&gt;&lt;/xref&gt;</ph> that indicates the width of the control.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>