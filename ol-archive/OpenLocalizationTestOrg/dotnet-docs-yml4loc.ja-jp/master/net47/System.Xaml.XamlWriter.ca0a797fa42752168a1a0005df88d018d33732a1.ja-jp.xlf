<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e9dcfee3d625d59c016e71c2523cb10d97b60b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xaml.XamlWriter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdc4bbdc4fe08b8edfeaec0d31239a380b66ee7e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">959b305a4a0adc3df1e64ca48291521ee8346a3b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides default implementation and base class definitions for a XAML writer.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This is not a working default XAML writer; you must either derive from <ph id="ph1">&lt;xref href="System.Xaml.XamlWriter"&gt;&lt;/xref&gt;</ph> and implement its abstract members, or use an existing <ph id="ph2">&lt;xref href="System.Xaml.XamlWriter"&gt;&lt;/xref&gt;</ph> derived class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The two most relevant practical derived classes of <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> are the <ph id="ph2">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and <ph id="ph3">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> classes, as the following details explain:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> processes a XAML node set and produces an XML text file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class might be used for serialization or as part of the function of a tool that works with in-memory representation of XAML and produces XAML file output.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> processes a XAML node set and produces an object graph.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class might be used as part of a full or partial customization of a technology's XAML parser.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> is a class for settings that are used by a <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph>; however, by default, the <ph id="ph3">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> class does not hold any specific settings.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter&gt;</ph> base constructor does not use this settings class as an argument, nor does any other <ph id="ph2">&lt;xref:System.Xaml.XamlWriter&gt;</ph> member.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriter&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> classes include their own settings classes as construction arguments.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>These settings classes are <ph id="ph1">&lt;xref:System.Xaml.XamlXmlWriterSettings&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriterSettings&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The settings classes define actual settings values and are based on <ph id="ph1">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph>, so that they can use the <ph id="ph2">&lt;xref:System.Xaml.XamlWriterSettings&gt;</ph> merge feature.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.XamlWriter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Closes the XAML writer object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the base implementation, calling <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.Close%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.Dispose%2A&gt;</ph> method with the <ph id="ph3">`isDisposing`</ph> parameter as <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Xaml.XamlWriter"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call the base class to get <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.IsDisposed%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release the managed resources; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets whether <ph id="ph1">&lt;xref href="System.Xaml.XamlWriter.Dispose(System.Boolean)"&gt;&lt;/xref&gt;</ph> has been called.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Xaml.XamlWriter.Dispose(System.Boolean)"&gt;&lt;/xref&gt;</ph> has been called; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, gets the active XAML schema context.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The active XAML schema context.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces the representation of an end member node.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces the representation of an end object node.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, produces an object for cases where the object is a default or implicit value of the property being set, instead of being specified as a discrete object value in the input XAML node set.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes a XAML namespace declaration node.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The namespace declaration to write.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Performs switching based on node type from the XAML reader (<ph id="ph1">&lt;xref href="System.Xaml.XamlReader.NodeType"&gt;&lt;/xref&gt;</ph>) and calls the relevant <ph id="ph2">`Write`</ph> method for the writer implementation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Inheritors</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> method is not a virtual method because it has practical implementation for all existing <ph id="ph2">&lt;xref:System.Xaml.XamlNodeType&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on <ph id="ph1">&lt;xref:System.Xaml.XamlNodeType&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> calls into the <ph id="ph3">`Write`</ph> virtual members that are dedicated to particular node types.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have an advanced XAML writing scenario that expands the XAML type system and XAML node stream concept so that new node types are defined, do not use <ph id="ph1">&lt;xref:System.Xaml.XamlWriter.WriteNode%2A&gt;</ph> calls in your logic.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must instead provide your own alternative for node-type switching logic in the class or in virtual overrides.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The reader to use for node determination.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The default implementation encountered a <ph id="ph1">&lt;xref href="System.Xaml.XamlNodeType"&gt;&lt;/xref&gt;</ph> that is not in the default enumeration.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes the representation of a start member node.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The member node to write.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes the representation of a start object node.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The XAML type of the object to write.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, writes a value node.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The value to write.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>See <ph id="ph1">&lt;xref href="System.IDisposable.Dispose"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>