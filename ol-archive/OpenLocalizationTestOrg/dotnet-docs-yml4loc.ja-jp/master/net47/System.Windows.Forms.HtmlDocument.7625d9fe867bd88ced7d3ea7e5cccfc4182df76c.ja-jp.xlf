<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45c97450013f95e5b504e27466deb966b958eb0d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.HtmlDocument.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">15a6ac7305e00a23dfd45a8a040620a7ba814300</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">262fc0c0da3dcec5e1aa5fad43f0a3d9c7ababaf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides top-level programmatic access to an HTML document hosted by the <ph id="ph1">&lt;xref href="System.Windows.Forms.WebBrowser"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> provides a managed wrapper around Internet Explorer's document object, also known as the HTML Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You obtain an instance of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> through the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.Document%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML tags inside of an HTML document can be nested inside one another.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> thus represents a document tree, whose children are instances of the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example shows a simple HTML file.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this example, <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> represents the entire document inside the <ph id="ph2">`HTML`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`BODY`</ph>, <ph id="ph2">`DIV`</ph>, <ph id="ph3">`FORM`</ph> and <ph id="ph4">`SPAN`</ph> tags are represented by individual <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are several ways you can access the elements in this tree.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Body%2A&gt;</ph> property to access the <ph id="ph2">`BODY`</ph> tag and all of its children.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> property gives you the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> for the element on an HTML page that has user input focus.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>All elements within an HTML page can have a name; the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.All%2A&gt;</ph> collection provides access to each <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> using its name as an index.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A&gt;</ph> will return an <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElementCollection&gt;</ph> of all <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects with a given HTML tag name, such as <ph id="ph4">`DIV`</ph> or <ph id="ph5">`TABLE`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.GetElementById%2A&gt;</ph> will return the single <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> corresponding to the unique ID that you supply.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A&gt;</ph> will return the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> that can be found on the screen at the supplied mouse pointer coordinates.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Forms%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.Images%2A&gt;</ph> collection to iterate through elements that represent user input forms and graphics, respectively.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> is based on the unmanaged interfaces implemented by Internet Explorer's DHTML DOM: <ph id="ph2">`IHTMLDocument`</ph>, <ph id="ph3">`IHTMLDocument2`</ph>, <ph id="ph4">`IHTMLDocument3`</ph>, and <ph id="ph5">`IHTMLDocument4`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the most frequently used properties and methods on these unmanaged interfaces are exposed by <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access all other properties and methods directly using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.DomDocument%2A&gt;</ph> property, which you can cast to the desired unmanaged interface pointer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An HTML document may contain frames, which are different windows inside of the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each frame displays its own HTML page.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlWindow.Frames%2A&gt;</ph> collection is available through the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.Window%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Window%2A&gt;</ph> property to resize the displayed page, scroll the document, or display alerts and prompts to the user.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> exposes the most common events you would expect to handle when hosting HTML pages.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For events not exposed directly by the interface, you can add a handler for the event using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.AttachEventHandler%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>HTML files may contain <ph id="ph1">`SCRIPT`</ph> tags that encapsulate code written in one of the Active Scripting languages, such as JScript or VBScript.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A&gt;</ph> method provides for execution of properties and methods defined in a <ph id="ph2">`SCRIPT`</ph> tag.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>While most of the properties, methods, and events on <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> have kept the same names as they have on the unmanaged DOM, some have been changed for consistency with the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Provides the <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> which currently has user input focus.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the document has focus, but no element of the document has been given focus, <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> returns the element corresponding to the <ph id="ph2">`&lt;BODY&gt;`</ph> tag.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document does not have focus, <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current element with input focus is a cell (<ph id="ph1">`TD`</ph>) in an HTML <ph id="ph2">`TABLE`</ph> tag, <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlDocument.ActiveElement%2A&gt;</ph> will return the element that contains the <ph id="ph4">`TABLE`</ph> element.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> which currently has user input focus.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> of a hyperlink when clicked by a user.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>A link is active when a user is clicking on it.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Change this property to change the color of the link prior to navigation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> type in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> supports an <ph id="ph3">`Alpha`</ph> value, but the HTML DOM does not.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, <ph id="ph1">`Alpha`</ph> will have no effect when assigned to this property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> for active links.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets an instance of <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;&lt;/xref&gt;</ph>, which stores all <ph id="ph2">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> objects for the document.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.All%2A&gt;</ph> collection provides random access to any element in the HTML document, regardless of its position in the document tree.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use it to access any element in an HTML document by name, ID, or index.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also iterate over all of the elements within a document.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some elements, such as <ph id="ph1">`HEAD`</ph> and <ph id="ph2">`TITLE`</ph>, will never have names associated with them.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other elements will have names only if the author of the HTML file assigned them.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access elements without names by ID or index.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot add elements directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.All%2A&gt;</ph> collection, because all elements in an HTML file outside of the <ph id="ph2">`HTML`</ph> tag must have a parent element.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property on <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> to add new elements to the tree.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;&lt;/xref&gt;</ph> of all elements in the document.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Adds an event handler for the named HTML DOM event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not attach an event to the document or one of its objects until the document has completed loading.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The earliest you should call this method is in the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentCompleted&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows you to attach handlers to unmanaged DOM events not exposed by <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about available unmanaged DOM events, see <bpt id="p1">[</bpt>Accessing Unexposed Members on the Managed HTML Document Object Model<ept id="p1">](~/docs/framework/winforms/controls/accessing-unexposed-members-on-the-managed-html-document-object-model.md)</ept> and the IHTMLDocument interfaces: <bpt id="p2">[</bpt>IHTMLDocument<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=104882)</ept>, <bpt id="p3">[</bpt>IHTMLDocument2<ept id="p3">](http://go.microsoft.com/fwlink/?LinkId=104884)</ept>, <bpt id="p4">[</bpt>IHTMLDocument3<ept id="p4">](http://go.microsoft.com/fwlink/?LinkId=104886)</ept>, <bpt id="p5">[</bpt>IHTMLDocument4<ept id="p5">](http://go.microsoft.com/fwlink/?LinkId=104887)</ept>, <bpt id="p6">[</bpt>IHTMLDocument5<ept id="p6">](http://go.microsoft.com/fwlink/?LinkId=104888)</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the event you want to handle.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The managed code that handles the event.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color of the HTML document.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.BackColor%2A&gt;</ph> will display when no other element occupies that area of the screen.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> type in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> supports an <ph id="ph3">`Alpha`</ph> value, but the HTML DOM does not.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, <ph id="ph1">`Alpha`</ph> will have no effect when assigned to this property.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> of the document's background.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">BODY</ph><ept id="p1">&lt;/code&gt;</ept> tag.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>An HTML document is split into two major sections:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`HEAD`</ph>, which contains the document's title, any document meta-data, and <ph id="ph2">`SCRIPT`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`BODY`</ph>, which contains all of the elements involved in the on-screen appearance of the document.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no equivalent <ph id="ph1">`Head`</ph> property on <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the <ph id="ph1">`HEAD`</ph> element, use <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.GetElementsByTagName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> object for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">BODY</ph><ept id="p1">&lt;/code&gt;</ept> tag.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks anywhere on the document.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Occurs when the user requests to display the document's context menu.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, if you right-click your mouse on a document or an element in a document, it will display a default context menu particular to the element.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to cancel the display of the context menu and display one of your own.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP cookies associated with this document.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Cookie%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> exposes all cookies set for a Web page.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <bpt id="p1">*</bpt>cookie<ept id="p1">*</ept> is an arbitrary name/value pair associated with a given Web page.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Web developers use cookies to track when users visit or return to a Web site.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cookie is composed of multiple parts, called cookie crumbs, that determine the following:</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The document set to which the cookie applies; its domain and path.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name and value of the cookie.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The expiration date of the cookie.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether the cookie can only be sent using a secure connection.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Cookie%2A&gt;</ph> property may contain multiple cookies.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Cookie%2A&gt;</ph> property to set one cookie at a time.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing a list of cookies, with each cookie separated by a semicolon.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">`HtmlElement`</ph> of the specified HTML tag type.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`elementTag`</ph> may be one of any of the supported HTML tags in Internet Explorer, except for <ph id="ph2">`FRAME`</ph> or <ph id="ph3">`IFRAME`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> returns an element unattached to the current document tree.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add the element to the document, use either the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InsertAdjacentElement%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will not affect the state of an existing document's source code when you use the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control's <bpt id="p1">**</bpt>View Source<ept id="p1">**</ept> context menu command or the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser.DocumentText%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.WebBrowser.DocumentStream%2A&gt;</ph> properties of the <ph id="ph4">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create new elements with <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph>, you will not be able to set certain properties, such as <ph id="ph2">`Name`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where you need to set the Name attribute, assign them as HTML to the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property of another object in the document.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The name of the HTML element to create.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A new element of the specified tag type.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets the encoding used by default for the current document.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default encoding is the encoding the managed HTML Document Object Model (DOM) will attempt to use when the page is initially loaded.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This encoding is derived either from Internet Explorer's <bpt id="p1">**</bpt>Encoding<ept id="p1">**</ept> settings, or from a <ph id="ph1">`META`</ph> tag embedded within the page.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the encoding that the browser uses when the page is first displayed.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Removes an event handler from a named event on the HTML DOM.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The name of the event you want to cease handling.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The managed code that handles the event.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets or sets the string describing the domain of this document for security purposes.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, two Web pages in different frames are prevented from accessing each other's content using script; even www.microsoft.com and msdn.microsoft.com are, in this instance, considered different domains.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable cross-frame scripting for pages from the same top-level domain, you can assign a new value to the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Domain%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the pervious URL example, setting <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Domain%2A&gt;</ph> to microsoft.com would allow both pages to communicate with one another.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Strings assigned to the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Domain%2A&gt;</ph> property must be valid top-level domains.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the previous URL example, you can set <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Domain%2A&gt;</ph> to microsoft.com, but not to .com, which would enable any page on the Internet to script a page's contents.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Domain%2A&gt;</ph> property to enable cross-frame scripting for pages accessed using two different protocols.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one frame in your page comes from a Web server (the http:// protocol) and another comes from the file system (the file://) protocol, they will not be able to communicate with one another regardless of the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Domain%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A valid domain.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The argument for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Domain</ph><ept id="p1">&lt;/code&gt;</ept> property must be a valid domain name using Domain Name System (DNS) conventions.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets the unmanaged interface pointer for this <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlDocument"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph> is a wrapper for the Internet Explorer Document Object Model (DOM), which is written in COM.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to access unexposed properties or methods on the underlying COM interfaces, such as <ph id="ph1">`IHTMLDocument2`</ph>, you can use this object to query for them.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the unmanaged interfaces, import the MSHTML library (mshtml.dll) into your application.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can also execute unexposed properties and methods using the <ph id="ph1">`IDispatch::Invoke`</ph> method.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">IDispatch</ph><ept id="p1">&lt;/code&gt;</ept> pointer to the unmanaged document.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets the character encoding for this document.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the current character encoding.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Tests the object for equality against the current object.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The object to test.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the objects are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Executes the specified command against the document.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A&gt;</ph> exposes a large array of commands for which there are no methods exposed on <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A&gt;</ph> you can insert new HTML elements, select and format text, and clear any cached authentication credentials.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a full list of commands, see <bpt id="p1">[</bpt>Command Identifiers<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=198814)</ept>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain commands, such as copy, have return values.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the current implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.ExecCommand%2A&gt;</ph>, you cannot obtain a return value from your call.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve return values, use the corresponding unmanaged method on a <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.DomDocument%2A&gt;</ph> reference instead.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The name of the command to execute.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Whether or not to show command-specific dialog boxes or message boxes to the user.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The value to assign using the command.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Not applicable for all commands.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Sets user input focus on the current document.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Focus%2A&gt;</ph> will set focus on the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control, if the control currently does not have focus.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document is hosted inside of a <ph id="ph1">`FRAME`</ph>, this method will put focus on that <ph id="ph2">`FRAME`</ph> within the <ph id="ph3">`FRAMESET`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the document has user input focus.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the document has focus; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Occurs before focus is given to the document.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets or sets the text color for the document.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph><ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> type in the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> supports an <ph id="ph4">`Alpha`</ph> value, but the HTML DOM does not.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, <ph id="ph1">`Alpha`</ph> will have no effect when assigned to this property.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The color of the text in the document.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets a collection of all of the <ph id="ph1">&lt;code&gt;</ph></source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;/code&gt;</ph> elements in the document.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>An HTML document may have one or more <ph id="ph1">`FORM`</ph> elements with input fields for submitting data back to a server.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can programmatically submit a <ph id="ph1">`FORM`</ph> by obtaining its <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> and calling its <ph id="ph3">`Submit`</ph> method using the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.InvokeMember%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add a new <ph id="ph1">`FORM`</ph> to a document, you can either create a new <ph id="ph2">`FORM`</ph> tag as a string, and assign it to the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property of an element previously added to the HTML DOM; or you can use the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method, set its properties using <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>, and add it as a child of an existing element using <ph id="ph6">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;code&gt;</ph></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;/code&gt;</ph> elements within the document.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Retrieves a single <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> using the element's <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">ID</ph><ept id="p1">&lt;/code&gt;</ept> attribute as a search key.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are multiple elements in the document with the same ID value, <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.GetElementById%2A&gt;</ph> will return the first one it finds.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The ID attribute of the element to retrieve.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Returns the first object with the same <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ID</ph><ept id="p1">&lt;/code&gt;</ept> attribute as the specified value, or <ph id="ph2">`null`</ph> if the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">id</ph><ept id="p2">&lt;/code&gt;</ept> cannot be found.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Retrieves the HTML element located at the specified client coordinates.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.GetElementFromPoint%2A&gt;</ph> uses client coordinates, in which the upper-left corner of the document is assigned the value (0,0).</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client coordinates for the current position of the cursor can be obtained using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlWindow.Position%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The x,y position of the element on the screen, relative to the top-left corner of the document.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> at the specified screen location in the document.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Retrieve a collection of elements with the specified HTML tag.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The name of the HTML tag for the <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> objects you want to retrieve.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The collection of elements who tag name is equal to the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">tagName</ph><ept id="p1">&lt;/code&gt;</ept> argument.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Retrieves the hash code for this object.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing an in-memory hash of this object.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets a collection of all image tags in the document.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Images%2A&gt;</ph> returns a collection of <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access attributes, such as <ph id="ph1">`ALT`</ph> and <ph id="ph2">`SRC`</ph>, that are not directly exposed by <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph>, use the <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add a new image to a document, either create a new <ph id="ph1">`IMG`</ph> tag as a string, and assign it to the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property of an element previously added to the HTML DOM; or use the <ph id="ph3">&lt;xref:System.Windows.Forms.HtmlDocument.CreateElement%2A&gt;</ph> method, set its properties using <ph id="ph4">&lt;xref:System.Windows.Forms.HtmlElement.SetAttribute%2A&gt;</ph>, and add it as a child of an existing element using <ph id="ph5">&lt;xref:System.Windows.Forms.HtmlElement.AppendChild%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> objects, one for each IMG tag in the document.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Elements are returned from the collection in source order.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Executes an Active Scripting function defined in an HTML page.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying type of the object returned by <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A&gt;</ph> will vary.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns a script-based object, such as an object created using JScript or VBScript's <ph id="ph1">`new`</ph> operator, it will be of type <ph id="ph2">`Object`</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>(You can make calls on such objects by calling <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> and using <ph id="ph2">&lt;xref:System.Type.InvokeMember%2A&gt;</ph>.) If it returns an HTML DOM element, such as a <ph id="ph3">`DIV`</ph> or a <ph id="ph4">`TABLE`</ph>, it will be of type <ph id="ph5">`Object`</ph>; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call any function written in any Active Scripting language installed on the user's computer, including JScript and VBScript.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A&gt;</ph> will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The name of the script method to invoke.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The object returned by the Active Scripting call.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Executes an Active Scripting function defined in an HTML page.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying type of the object returned by <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.InvokeScript%2A&gt;</ph> will vary.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the called Active Scripting function returns scalar data, such as a string or an integer, it will be returned as a string.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it returns a script-based object, such as an object created using JScript or VBScript's <ph id="ph1">`new`</ph> operator, it will be of type <ph id="ph2">`Object`</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>(You can make calls on such objects by calling <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> and using <ph id="ph2">&lt;xref:System.Type.InvokeMember%2A&gt;</ph>.) If it returns an HTML DOM element, such as a <ph id="ph3">`DIV`</ph> or a <ph id="ph4">`TABLE`</ph>, it will be of type <ph id="ph5">`Object`</ph>; if you have added a project reference to MSHTML.DLL, however, it will be cast to its specific unmanaged DOM type.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may call any function written in any Active Scripting language installed on the user's machine, including JScript and VBScript.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will do nothing if the user has explicitly turned off script execution in Internet Explorer, or if the current security configuration for the Web page does not allow it.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The name of the script method to invoke.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The arguments to pass to the script method.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The object returned by the Active Scripting call.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets or sets the color of hyperlinks.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> type in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> supports an <ph id="ph3">`Alpha`</ph> value, but the HTML DOM does not.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, <ph id="ph1">`Alpha`</ph> will have no effect when assigned to this property.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The color for hyperlinks in the current document.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Gets a list of all the hyperlinks within this HTML document.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection will contain all links created using the <ph id="ph1">`A`</ph>, <ph id="ph2">`LINK`</ph>, and <ph id="ph3">`AREA`</ph> tags in HTML.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> objects contained within this collection encapsulate the unmanaged <ph id="ph2">`IHTMLLinkElement`</ph> interface.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the properties of the underlying interface safely, use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement.GetAttribute%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlElementCollection"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Windows.Forms.HtmlElement"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Occurs while focus is leaving a control.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks the left mouse button.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.MouseDown&gt;</ph> event occurs before the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.Click&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse is no longer hovering over the document.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse is moved over the document.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse is moved over the document.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Occurs when the user releases the left mouse button.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlDocument"&gt;&lt;/xref&gt;</ph> instances represent the same value.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Equals%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The first instance to compare.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The second instance to compare.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified instances are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlDocument"&gt;&lt;/xref&gt;</ph> instances do not represent the same value.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The first instance to compare.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The second instance to compare.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified instances are not equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Gets a new <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlDocument"&gt;&lt;/xref&gt;</ph> to use with the <ph id="ph2">&lt;xref href="System.Windows.Forms.HtmlDocument.Write(System.String)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.OpenNew%2A&gt;</ph> will clear the previous loaded document, including any associated state, such as variables.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will not cause navigation events in <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> to be raised.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.OpenNew%2A&gt;</ph> always creates a new document in the current window.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>To open a document in a new window, use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlWindow.Open%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlWindow&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Whether the new window's navigation should replace the previous element in the navigation history of the DOM.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A new document for writing.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Gets or sets the direction of text in the current document.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A&gt;</ph> will not have any value unless it has been set explicitly, either in code or in HTML.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A&gt;</ph> property on Windows Forms controls, <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.RightToLeft%2A&gt;</ph> on the managed HTML DOM will not affect the direction of Latin text.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if text renders from right to left; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Occurs when navigation to another Web page is halted.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>The loading of a Web page will halt if program code calls the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.Stop%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Navigation failures caused by network outages or malfunctioning Web sites will not cause <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Stop&gt;</ph> to occur.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Gets or sets the text value of the <ph id="ph1">&lt;code&gt;</ph><ph id="ph2">&lt;TITLE&gt;</ph><ph id="ph3">&lt;/code&gt;</ph> tag in the current HTML document.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Title%2A&gt;</ph> property to identify the document by way of a human-readable name.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to this property will also reflect in the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.DocumentTitle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The title of the current document.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets the URL describing the location of this document.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>To navigate to a new document, use the <ph id="ph1">&lt;xref:System.Windows.Forms.WebBrowser.Url%2A&gt;</ph> property on the <ph id="ph2">&lt;xref:System.Windows.Forms.WebBrowser&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> representing this document's URL.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Gets or sets the Color of links to HTML pages that the user has already visited.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Color`</ph> type in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> supports an <ph id="ph3">`Alpha`</ph> value, but the HTML DOM does not.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, <ph id="ph1">`Alpha`</ph> will have no effect when assigned to this property.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The color of visited links.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Forms.HtmlWindow"&gt;&lt;/xref&gt;</ph> associated with this document.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>All HTML documents have an HTML DOM object called a window, which can be used to manipulate the screen size of the document and open new windows, as well as access other important objects, such as an <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlHistory&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The window for this document.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Writes a new HTML page.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>All calls to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Write%2A&gt;</ph> should be preceded by a call to <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlDocument.OpenNew%2A&gt;</ph>, which will clear the current document and all of its variables.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your calls to <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Write%2A&gt;</ph> will create a new HTML document in its place.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change only a specific portion of the document, obtain the appropriate <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlElement&gt;</ph> and set its <ph id="ph2">&lt;xref:System.Windows.Forms.HtmlElement.InnerHtml%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that you write an entire valid HTML document using the <ph id="ph1">&lt;xref:System.Windows.Forms.HtmlDocument.Write%2A&gt;</ph> method, including <ph id="ph2">`HTML`</ph> and <ph id="ph3">`BODY`</ph> tags.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you write just HTML elements, the Document Object Model (DOM) will supply these elements for you.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The HTML text to write into the document.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>