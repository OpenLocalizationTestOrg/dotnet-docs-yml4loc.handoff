<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6dc239cd7e889fcbc1071638af93b3554cd46515</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.WebClient.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">08d4f093bce124550b073f25e8aaa982d8531482</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7166ad4a5142eecb0719a66fef8c084ced1993ab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides common methods for sending data to and receiving data from a resource identified by a URI.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> class provides common methods for sending data to or receiving data from any local, intranet, or Internet resource identified by a URI.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class to provide access to resources.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> instances can access data with any <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> descendant registered with the <ph id="ph3">&lt;xref:System.Net.WebRequest.RegisterPrefix%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the .NET Framework supports URIs that begin with <ph id="ph1">`http:`</ph>, <ph id="ph2">`https:`</ph>, ftp:, and <ph id="ph3">`file:`</ph> scheme identifiers.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> methods for uploading data to a resource.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> used to send data to the resource.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> used to send data to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a byte array to the resource and returns a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array containing any response.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a local file to the resource and returns a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array containing any response.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a local file to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to the resource and returns a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array containing any response.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to the resource and returns a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array containing any response, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.String&gt;</ph> to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.String&gt;</ph> to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> methods for downloading data from a resource.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns the data from a resource as a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns the data from a resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads data from a resource and returns a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads data from a resource and returns a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads data from a resource to a local file.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads data from a resource to a local file, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads a <ph id="ph1">&lt;xref:System.String&gt;</ph> from a resource and returns a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads a <ph id="ph1">&lt;xref:System.String&gt;</ph> from a resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> instance does not send optional HTTP headers by default.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your request requires an optional header, you must add the header to the <ph id="ph1">&lt;xref:System.Net.WebClient.Headers%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to retain queries in the response, you must add a user-agent header.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, servers may return 500 (Internal Server Error) if the user agent header is missing.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in <ph id="ph3">&lt;xref:System.Net.WebClient&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.WebClient"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor creates a new instance of the <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default HTTP method is GET.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default FTP method is RETR.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Text.Encoding.Default%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of <ph id="ph1">&lt;xref:System.Net.HttpWebRequest.AllowAutoRedirect%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to buffer the data read from the Internet resource for a <ph id="ph1">&lt;xref href="System.Net.WebClient"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Net.WebClient.AllowReadStreamBuffering%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the data is buffered in memory so it is ready to be read by the app.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to enable buffering of the data received from the Internet resource; <ph id="ph2">`false`</ph> to disable buffering.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to buffer the data written to the Internet resource for a <ph id="ph1">&lt;xref href="System.Net.WebClient"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Net.WebClient.AllowWriteStreamBuffering%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the data is buffered in memory so it can be written more efficiently to the Internet resource in larger chunks.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to enable buffering of the data written to the Internet resource; <ph id="ph2">`false`</ph> to disable buffering.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the base URI for requests made by a <ph id="ph1">&lt;xref href="System.Net.WebClient"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property contains a base URI that is combined with a relative address.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call a method that uploads or downloads data, the <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> object combines this base URI with the relative address you specify in the method call.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify an absolute URI, <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> does not use the <ph id="ph2">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>To remove a previously set value, set this property to <ph id="ph1">`null`</ph> or an empty string ("").</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the base URI for requests made by a <ph id="ph2">&lt;xref href="System.Net.WebClient"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> if no base address has been specified.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> is set to an invalid URI.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The inner exception may contain information that will help you locate the error.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the application's cache policy for any resources obtained by this WebClient instance using <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.Cache.RequestCachePolicy"&gt;&lt;/xref&gt;</ph> object that represents the application's caching requirements.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Cancels a pending asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an operation is pending, this method calls <ph id="ph1">&lt;xref:System.Net.WebRequest.Abort%2A&gt;</ph> on the underlying <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph>, your application still receives the completion event associated with the operation.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when you call <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> to cancel a <ph id="ph2">&lt;xref:System.Net.WebClient.DownloadStringAsync%2A&gt;</ph> operation, if you have specified an event handler for the <ph id="ph3">&lt;xref:System.Net.WebClient.DownloadStringCompleted&gt;</ph> event, your event handler receives notification that the operation has ended.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>To learn whether the operation completed successfully, check the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A&gt;</ph> property on the base class of <ph id="ph2">&lt;xref:System.Net.DownloadDataCompletedEventArgs&gt;</ph> in the event data object passed to the event handler.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no asynchronous operation is in progress, this method does nothing.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the network credentials that are sent to the host and used to authenticate the request.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.Credentials%2A&gt;</ph> property contains the authentication credentials used to access a resource on a host.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most client-side scenarios, you should use the <ph id="ph1">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph>, which are the credentials of the currently logged on user.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Net.WebClient.UseDefaultCredentials%2A&gt;</ph> property to <ph id="ph2">`true`</ph> instead of setting this property.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> class is being used in a middle tier application, such as an ASP.NET application, the <ph id="ph2">&lt;xref:System.Net.CredentialCache.DefaultCredentials%2A&gt;</ph> belong to the account running the ASP page (the server-side credentials).</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you would set this property to the credentials of the client on whose behalf the request is made.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.ICredentials"&gt;&lt;/xref&gt;</ph> containing the authentication credentials for the request.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array from the URI specified.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadData%2A&gt;</ph> method downloads the resource with the URI specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The URI from which to download data.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the downloaded resource.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading data.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The method has been called simultaneously on multiple threads.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array from the URI specified.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadData%2A&gt;</ph> method downloads the resource with the URI specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The URI represented by the <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object, from which to download data.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the downloaded resource.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array from the URI specified as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in <ph id="ph1">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadData%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes, the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadDataCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application must handle this event to receive notification.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The downloaded data is available in the <ph id="ph1">&lt;xref:System.Net.DownloadDataCompletedEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> containing the URI to download.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array from the URI specified as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in <ph id="ph1">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadData%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes, the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadDataCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application must handle this event to receive notification.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The downloaded data is available in the <ph id="ph1">&lt;xref:System.Net.DownloadDataCompletedEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> containing the URI to download.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous data download operation completes.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous data download operation completes.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous data downloads are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.DownloadDataCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.DownloadDataCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array from the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the data resource has been downloaded.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in the <ph id="ph1">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following code example requests data from a server and displays the data returned.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>It assumes that <ph id="ph1">`remoteUri`</ph> contains a valid URI for the requested data.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the downloaded resource.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array from the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the data resource has been downloaded.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the specified resource using the default method for the protocol associated with the URI scheme specified in the <ph id="ph1">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the downloaded resource.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Downloads the resource with the specified URI to a local file.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFile%2A&gt;</ph> method downloads to a local file data from the URI specified by in the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method in a middle tier application, such as an ASP.NET page, you will receive an error if the account under which the application executes does not have permission to access the file.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The URI specified as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, from which to download data.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The name of the local file that is to receive the data.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The file does not exist.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading data.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The method has been called simultaneously on multiple threads.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Downloads the resource with the specified URI to a local file.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFile%2A&gt;</ph> method downloads to a local file data from the URI specified by in the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method in a middle tier application, such as an ASP.NET page, you will receive an error if the account under which the application executes does not have permission to access the file.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The URI from which to download data.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The name of the local file that is to receive the data.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;filename&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The file does not exist.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>-or- An error occurred while downloading data.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The method has been called simultaneously on multiple threads.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Downloads, to a local file, the resource with the specified URI.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method downloads the resource at the URI specified by in the <ph id="ph1">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes successfully, the downloaded file is named <ph id="ph1">`fileName`</ph> on the local computer.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the file is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFileCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the resource is being downloaded.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the download to complete, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFile%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The name of the file to be placed on the local computer.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The local file specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> is in use by another thread.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Downloads, to a local file, the resource with the specified URI.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method downloads the resource at the URI specified by in the <ph id="ph1">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes successfully, the downloaded file is named <ph id="ph1">`fileName`</ph> on the local computer.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the file is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFileCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the resource is being downloaded.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the download to complete, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFile%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The name of the file to be placed on the local computer.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The local file specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> is in use by another thread.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous file download operation completes.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous file download operation completes.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous file downloads are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Downloads the specified resource to a local file as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the data resource has been downloaded.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method downloads the resource at the URI specified by in the <ph id="ph1">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes successfully, the downloaded file is named <ph id="ph1">`fileName`</ph> on the local computer.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The name of the file to be placed on the local computer.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The local file specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> is in use by another thread.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Downloads the specified resource to a local file as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the data resource has been downloaded.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method downloads the resource at the URI specified by in the <ph id="ph1">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes successfully, the downloaded file is named <ph id="ph1">`fileName`</ph> on the local computer.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this method in an ASP.NET page, you will receive an error if the account that the page executes under does not have permission to access the local file.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The name of the file to be placed on the local computer.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The local file specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> is in use by another thread.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous download operation successfully transfers some or all of the data.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous download makes progress.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when downloads are started using any of the following methods.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads data from a resource and returns a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Downloads data from a resource to a local file, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns the data from a resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.DownloadProgressChangedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.DownloadProgressChangedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>A passive FTP file transfer will always show a progress percentage of zero, since the server did not send the file size.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>To show progress, you can change the FTP connection to active by overriding the <ph id="ph1">&lt;xref:System.Net.WebClient.GetWebRequest%2A&gt;</ph> virtual method:</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Downloads the requested resource as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The resource to download is specified as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the URI.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the specified resource.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>After it downloads the resource, the method uses the encoding specified in the <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property to convert the resource to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the URI to download.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the requested resource.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The method has been called simultaneously on multiple threads.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Downloads the requested resource as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The resource to download is specified as a <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves the specified resource.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>After it downloads the resource, the method uses the encoding specified in the <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property to convert the resource to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object containing the URI to download.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the requested resource.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The method has been called simultaneously on multiple threads.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Downloads the resource specified as a <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>After downloading the resource, this method uses the encoding specified in the <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property to convert the resource to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and block while waiting for the server's response, use the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes, the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadStringCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application must handle this event to receive notification.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The downloaded string is available in the <ph id="ph1">&lt;xref:System.Net.DownloadStringCompletedEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> containing the URI to download.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Downloads the specified string to the specified resource.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>After downloading the resource, this method uses the encoding specified in the <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property to convert the resource to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>To download a resource and block while waiting for the server's response, use the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the download completes, the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadStringCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application must handle this event to receive notification.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>The downloaded string is available in the <ph id="ph1">&lt;xref:System.Net.DownloadStringCompletedEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> containing the URI to download.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous resource-download operation completes.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous operation to download a resource as a string completes.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>These operations are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.DownloadStringCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.DownloadStringCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> from the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the data resource has been downloaded.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>After downloading the resource, this method uses the encoding specified in the <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property to convert the resource to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the downloaded resource.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Downloads the resource as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> from the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the data resource has been downloaded.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource is downloaded asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>After downloading the resource, this method uses the encoding specified in the <ph id="ph1">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property to convert the resource to a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method to cancel asynchronous operations that have not completed.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The URI of the resource to download.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the downloaded resource.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>Gets and sets the <ph id="ph1">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> used to upload and download strings.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadString%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.WebClient.UploadStringAsync%2A&gt;</ph> methods use this property to convert the specified string to a <ph id="ph3">&lt;xref:System.Byte&gt;</ph> array before uploading the string.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a string is downloaded using the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadString%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.WebClient.DownloadStringAsync%2A&gt;</ph> methods, <ph id="ph3">&lt;xref:System.Net.WebClient&gt;</ph> uses the <ph id="ph4">&lt;xref:System.Text.Encoding&gt;</ph> returned by this to convert the downloaded <ph id="ph5">&lt;xref:System.Byte&gt;</ph> array into a string.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see the <ph id="ph1">&lt;xref:System.Text.Encoding.GetString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> that is used to encode strings.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The default value of this property is the encoding returned by <ph id="ph1">&lt;xref href="System.Text.Encoding.Default"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> object for the specified resource.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method copies the existing <ph id="ph1">&lt;xref:System.Net.WebClient.Headers%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.WebClient.Credentials%2A&gt;</ph>, and method to the newly created <ph id="ph3">&lt;xref:System.Net.WebRequest&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called only by classes that inherit from <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is provided to give inheritors access to the underlying <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes should call the base class implementation of <ph id="ph1">&lt;xref:System.Net.WebClient.GetWebRequest%2A&gt;</ph> to ensure the method works as expected.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that identifies the resource to request.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> object for the specified resource.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Net.WebResponse"&gt;&lt;/xref&gt;</ph> for the specified <ph id="ph2">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned by this method is obtained by calling the <ph id="ph1">&lt;xref:System.Net.WebRequest.GetResponse%2A&gt;</ph> method on the specified <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called only by classes that inherit from <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is provided to give inheritors access to the underlying <ph id="ph1">&lt;xref:System.Net.WebResponse&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> that is used to obtain the response.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebResponse"&gt;&lt;/xref&gt;</ph> containing the response for the specified <ph id="ph2">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Net.WebResponse"&gt;&lt;/xref&gt;</ph> for the specified <ph id="ph2">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> using the specified <ph id="ph3">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned by this method is obtained by calling the <ph id="ph1">&lt;xref:System.Net.WebRequest.EndGetResponse%2A&gt;</ph> method on the specified <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called only by classes that inherit from <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is provided to give inheritors access to the underlying <ph id="ph1">&lt;xref:System.Net.WebResponse&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> that is used to obtain the response.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object obtained from a previous call to <ph id="ph2">&lt;xref href="System.Net.WebRequest.BeginGetResponse(System.AsyncCallback,System.Object)"&gt;&lt;/xref&gt;</ph> .</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebResponse"&gt;&lt;/xref&gt;</ph> containing the response for the specified <ph id="ph2">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of header name/value pairs associated with the request.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.Headers%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> instance containing protocol headers that the <ph id="ph3">&lt;xref:System.Net.WebClient&gt;</ph> sends with the request.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some common headers are considered restricted and are protected by the system and cannot be set or changed in a <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any attempt to set one of these restricted headers in the <ph id="ph1">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> object associated with a <ph id="ph2">&lt;xref:System.Net.WebClient&gt;</ph> object will throw an exception later when attempting to send the <ph id="ph3">&lt;xref:System.Net.WebClient&gt;</ph> request.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>Restricted headers protected by the system include, but are not limited to the following:</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>Host</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, some other headers are also restricted when using a <ph id="ph1">&lt;xref:System.Net.WebClient&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>These restricted headers include, but are not limited to the following:</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accept</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>Connection</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content-Length</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expect (when the value is set to "100-continue"</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>If-Modified-Since</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>Range</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transfer-Encoding</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class has properties for setting some of the above headers.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is important for an application to set these headers, then the <ph id="ph1">&lt;xref:System.Net.HttpWebRequest&gt;</ph> class should be used instead of the <ph id="ph2">&lt;xref:System.Net.WebRequest&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not assume that the header values will remain unchanged, because Web servers and caches may change or add headers to a Web request.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebHeaderCollection"&gt;&lt;/xref&gt;</ph> containing header name/value pairs associated with this request.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Gets whether a Web request is in progress.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the Web request is still in progress; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.DownloadDataCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadDataCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept></source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnDownloadDataCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.DownloadDataCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object that contains event data.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.DownloadFileCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadFileCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnDownloadFileCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.AsyncCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.DownloadProgressChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadProgressChanged&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnDownloadProgressChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.DownloadProgressChangedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.DownloadStringCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.DownloadStringCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnDownloadStringCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.DownloadStringCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.OpenReadCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnOpenReadCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.OpenReadCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.OpenWriteCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnOpenWriteCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.OpenWriteCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.UploadDataCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnUploadDataCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.UploadDataCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.UploadFileCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnUploadFileCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.UploadFileCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.UploadProgressChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadProgressChanged&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnUploadProgressChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.UploadProgressChangedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.UploadStringCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnUploadStringCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.UploadStringCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.UploadValuesCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesCompleted&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OnUploadValuesCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.UploadValuesCompletedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.WebClient.WriteStreamClosed"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WriteStreamClosedEventArgs"&gt;&lt;/xref&gt;</ph> object containing event data.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>Opens a readable stream for the data downloaded from a resource with the URI specified as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OpenRead%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> instance used to read the contents of the resource specified by the <ph id="ph3">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while opening the stream.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, it is appended to <ph id="ph3">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The URI specified as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> from which to download data.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to read data from a resource.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading data.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Opens a readable stream for the data downloaded from a resource with the URI specified as a <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OpenRead%2A&gt;</ph> method creates a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> instance used to read the contents of the resource specified by the <ph id="ph3">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while opening the stream.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, it is appended to <ph id="ph3">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>The URI specified as a <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> from which to download data.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to read data from a resource.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading data.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve">
          <source>Opens a readable stream containing the specified resource.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to access the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the stream is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the stream, use the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested resource.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, it is appended to <ph id="ph3">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The URI of the resource to retrieve.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and address is invalid.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>Opens a readable stream containing the specified resource.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to access the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the stream is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the stream, use the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenRead%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested resource.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, it is appended to <ph id="ph3">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>The URI of the resource to retrieve.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and address is invalid.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous operation to open a stream containing a resource completes.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous operation to open a stream containing a resource completes.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>These operations are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenReadAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.OpenReadCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.OpenReadCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a readable stream to the data resource has been opened.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to access the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested resource.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, it is appended to <ph id="ph3">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>The URI of the resource to retrieve.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to read data from a resource.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and address is invalid.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Opens a readable stream containing the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a readable stream to the data resource has been opened.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to access the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested resource.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not <ph id="ph2">`null`</ph>, it is appended to <ph id="ph3">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the RETR command to download an FTP resource.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the GET method is used.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>The URI of the resource to retrieve.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to read data from a resource.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and address is invalid.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>An error occurred while downloading the resource.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> method returns a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while opening the stream.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> method returns a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while opening the stream.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> method returns a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying request is made with the method specified in the <ph id="ph1">`method`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is sent to the server when you close the stream.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while opening the stream.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not specify an absolute address, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource, by using the specified method.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> method returns a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while opening the stream.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is retrieved asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the stream is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of the stream are sent to the server when you close the stream.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is being opened.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is retrieved using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the stream is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you close the stream, the thread blocks until the request is sent to <ph id="ph1">`address`</ph> and a response is received.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is being opened.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a writable stream that is used to send data to a resource.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is retrieved using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the stream is available, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you close the stream, the thread blocks until the request is sent to <ph id="ph1">`address`</ph> and a response is received.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is being opened.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>To block while waiting for the stream, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWrite%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous operation to open a stream to write data to a resource completes.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous operation to open a stream that is used to send data to a resource completes.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT">
          <source>These operations are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.OpenWriteCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.OpenWriteCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a writable stream to the data resource has been opened.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to write data to the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a writable stream to the data resource has been opened.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to write data to the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a writable stream to the data resource has been opened.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to write data to the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>Opens a stream for writing data to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a writable stream to the data resource has been opened.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the stream is opening.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> instance used to write data to the resource specified by the <ph id="ph2">`address`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stream is obtained using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must call <ph id="ph1">&lt;xref:System.IO.Stream.Close%2A?displayProperty=fullName&gt;</ph> when you are finished with the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to avoid running out of system resources.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a method that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> used to write data to the resource.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>Gets or sets the proxy used by this <ph id="ph1">&lt;xref href="System.Net.WebClient"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.Proxy%2A&gt;</ph> property identifies the <ph id="ph2">&lt;xref:System.Net.IWebProxy&gt;</ph> instance that communicates with remote servers on behalf of this <ph id="ph3">&lt;xref:System.Net.WebClient&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT">
          <source>The proxy is set by the system using configuration files and the Internet Explorer Local Area Network settings.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify that no proxy should be used, set the <ph id="ph1">&lt;xref:System.Net.WebClient.Proxy%2A&gt;</ph> property to the proxy instance returned by the <ph id="ph2">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on automatic proxy detection, see <bpt id="p1">[</bpt>Automatic Proxy Detection<ept id="p1">](~/docs/framework/network-programming/automatic-proxy-detection.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Net.IWebProxy"&gt;&lt;/xref&gt;</ph> instance used to send requests.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.WebClient.Proxy"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of query name/value pairs associated with the request.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> instance containing name/value pairs that are appended to the URI as a query string.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property are preceded by a question mark (?), and name/value pairs are separated from one another by an ampersand (&amp;).</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> that contains query name/value pairs associated with the request.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>If no pairs are associated with the request, the value is an empty <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>Gets a collection of header name/value pairs associated with the response.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.ResponseHeaders%2A&gt;</ph> property contains a <ph id="ph2">&lt;xref:System.Net.WebHeaderCollection&gt;</ph> instance containing header information the <ph id="ph3">&lt;xref:System.Net.WebClient&gt;</ph> receives with the response.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.WebHeaderCollection"&gt;&lt;/xref&gt;</ph> containing header name/value pairs associated with the response, or <ph id="ph2">`null`</ph> if no response has been received.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to a resource identified by a URI.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends the content of <ph id="ph2">`data`</ph> to the server without encoding it.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>An error occurred while sending the data.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to a resource identified by a URI.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends the content of <ph id="ph2">`data`</ph> to the server without encoding it.</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve">
          <source>An error occurred while sending the data.</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends a data buffer to a resource using the HTTP method specified in the <ph id="ph2">`method`</ph> parameter, and returns any response from the server.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends the content of <ph id="ph2">`data`</ph> to the server without encoding it.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>An error occurred while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends a data buffer to a resource using the HTTP method specified in the <ph id="ph2">`method`</ph> parameter, and returns any response from the server.</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> method sends the content of <ph id="ph2">`data`</ph> to the server without encoding it.</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source>An error occurred while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to a resource identified by a URI, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the data upload completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the data is being sent.</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send data and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to a resource identified by a URI, using the specified method and identifying token.</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the data upload completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the data is being sent.</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send data and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer to a resource identified by a URI, using the POST method.</source>
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the data upload completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the data is being sent.</source>
        </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send data and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadData%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous data-upload operation completes.</source>
        </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous data upload operation completes.</source>
        </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous data uploads are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadDataAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadDataCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadDataCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer that contains a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array to the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a data buffer has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the data buffer was uploaded.</source>
        </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer that contains a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array to the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a data buffer has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the data buffer was uploaded.</source>
        </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer that contains a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array to the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a data buffer has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the data buffer was uploaded.</source>
        </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>Uploads a data buffer that contains a <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array to the URI specified as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the a data buffer has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a data buffer to a resource.</source>
        </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data buffer is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is not encoded.</source>
        </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the data.</source>
        </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve">
          <source>The data buffer to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the data buffer was uploaded.</source>
        </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to a resource with the specified URI.</source>
        </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> method sends a local file to a resource.</source>
        </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`POST`</ph> method is defined by HTTP.</source>
        </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request does not use HTTP and <ph id="ph1">`POST`</ph> is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve">
          <source>For example, ftp://localhost/samplefile.txt.</source>
        </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve">
          <source>For example, "samplefile.txt".</source>
        </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid characters, or does not exist.</source>
        </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve">
          <source>An error occurred while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to a resource with the specified URI.</source>
        </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> method sends a local file to a resource.</source>
        </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`POST`</ph> method is defined by HTTP.</source>
        </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request does not use HTTP and <ph id="ph1">`POST`</ph> is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve">
          <source>For example, ftp://localhost/samplefile.txt.</source>
        </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve">
          <source>For example, "samplefile.txt".</source>
        </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid characters, or does not exist.</source>
        </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve">
          <source>An error occurred while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT">
          <source>When address specifies an HTTP resource, the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> method sends a local file to a resource using the HTTP method specified in the <ph id="ph2">`method`</ph> parameter and returns any response from the server.</source>
        </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a verb that is not understood by the server or the <ph id="ph2">`address`</ph> resource, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve">
          <source>The method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid characters, or does not exist.</source>
        </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve">
          <source>An error occurred while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>When address specifies an HTTP resource, the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> method sends a local file to a resource using the HTTP method specified in the <ph id="ph2">`method`</ph> parameter and returns any response from the server.</source>
        </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a verb that is not understood by the server or the <ph id="ph2">`address`</ph> resource, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve">
          <source>The method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid characters, or does not exist.</source>
        </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve">
          <source>An error occurred while uploading the file.</source>
        </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to the specified resource, using the POST method.</source>
        </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the file upload completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the file is being sent.</source>
        </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a file and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to the specified resource, using the POST method.</source>
        </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the file upload completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the file is being sent.</source>
        </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a file and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to the specified resource, using the POST method.</source>
        </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the file upload completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the file is being sent.</source>
        </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a file and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFile%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve">
          <source>The file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous file-upload operation completes.</source>
        </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous file upload operation completes.</source>
        </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous file uploads are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadFileAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadFileCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadFileCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to a resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the file has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT">
          <source>BY default, this method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve">
          <source>The local file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the file was uploaded.</source>
        </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to a resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the file has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT">
          <source>BY default, this method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve">
          <source>The method used to send the data to the resource.</source>
        </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve">
          <source>If <ph id="ph1">`null`</ph>, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve">
          <source>The local file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the file was uploaded.</source>
        </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to a resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the file has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve">
          <source>The local file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the file was uploaded.</source>
        </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve">
          <source>Uploads the specified local file to a resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the file has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), <ph id="ph2">`address`</ph> must be a relative URI that is combined with <ph id="ph3">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the file.</source>
        </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve">
          <source>The local file to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response received from the resource when the file was uploaded.</source>
        </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>, is <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, contains invalid character, or the specified path to the file does not exist.</source>
        </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header begins with <ph id="ph2">`multipart`</ph>.</source>
        </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous upload operation successfully transfers some or all of the data.</source>
        </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous upload makes progress.</source>
        </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when uploads are started using any of the following methods.</source>
        </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method</source>
        </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a local file to the resource, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sends a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to the resource and returns a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> array containing any response, without blocking the calling thread.</source>
        </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadProgressChangedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadProgressChangedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource, using the POST method.</source>
        </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve">
          <source>For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource, using the POST method.</source>
        </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string (""), and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve">
          <source>For Http resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve">
          <source>This URI must identify a resource that can accept a request sent with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">method</ph><ept id="p1">&lt;/code&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the string to the resource.</source>
        </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource, using the specified method.</source>
        </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve">
          <source>This URI must identify a resource that can accept a request sent with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">method</ph><ept id="p1">&lt;/code&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the string to the resource.</source>
        </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource.</source>
        </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a string to a resource.</source>
        </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the string upload completes, you can add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the string is being sent.</source>
        </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadString%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource.</source>
        </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a string to a resource.</source>
        </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the string upload completes, you can add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the string is being sent.</source>
        </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadString%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource.</source>
        </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a string to a resource.</source>
        </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the string upload completes, you can add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the string is being sent.</source>
        </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadString%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous string-upload operation completes.</source>
        </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous string upload operation completes.</source>
        </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous string uploads are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadStringCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadStringCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the string has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the string has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the string has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve">
          <source>Uploads the specified string to the specified resource as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the string has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while the string is transmitted.</source>
        </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the string.</source>
        </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve">
          <source>For HTTP resources, this URI must identify a resource that can accept a request sent with the POST method, such as a script or ASP page.</source>
        </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve">
          <source>The string to be uploaded.</source>
        </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI.</source>
        </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sends a <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to a server.</source>
        </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Content-type header is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sets it to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header is not <ph id="ph2">`null`</ph> or "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI.</source>
        </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sends a <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to a server.</source>
        </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Content-type header is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sets it to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header is not <ph id="ph2">`null`</ph> or "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</source>
        </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sends a <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to a resource using the method specified in the <ph id="ph3">`method`</ph> parameter and returns any response from the server.</source>
        </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Content-type`</ph> header is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sets it to <ph id="ph4">`application/x-www-form-urlencoded`</ph>.</source>
        </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header value is not <ph id="ph2">`null`</ph> and is not <ph id="ph3">`application/x-www-form-urlencoded`</ph>.</source>
        </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI, using the specified method.</source>
        </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sends a <ph id="ph2">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to a resource using the method specified in the <ph id="ph3">`method`</ph> parameter and returns any response from the server.</source>
        </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method blocks while uploading the data.</source>
        </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT">
          <source>To continue executing while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Content-type`</ph> header is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> method sets it to <ph id="ph4">`application/x-www-form-urlencoded`</ph>.</source>
        </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> parameter specifies a verb that is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the file to the resource.</source>
        </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the body of the response from the resource.</source>
        </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;data&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header value is not <ph id="ph2">`null`</ph> and is not <ph id="ph3">`application/x-www-form-urlencoded`</ph>.</source>
        </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve">
          <source>Uploads the data in the specified name/value collection to the resource identified by the specified URI.</source>
        </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends a string to a resource.</source>
        </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before uploading the string, this method converts it to a <ph id="ph1">&lt;xref:System.Byte&gt;</ph> array using the encoding specified in the <ph id="ph2">&lt;xref:System.Net.WebClient.Encoding%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the string upload completes, you can add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadStringCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the string is being sent.</source>
        </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadString%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve">
          <source>This URI must identify a resource that can accept a request sent with the default method.</source>
        </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve">
          <source>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method.</source>
        </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread.</source>
        </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends the data contained in a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to the <ph id="ph2">`address`</ph> resource.</source>
        </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to send form data to a URI for processing.</source>
        </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is sent using the form-urlencoded media type; the Content-Type header value must be set to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The header is set correctly by default.</source>
        </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods throw a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> if you call this method with a different Content-Type header value set in the <ph id="ph3">&lt;xref:System.Net.WebClient.Headers%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> method is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the upload operation completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the string is being sent.</source>
        </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not empty, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve">
          <source>This URI must identify a resource that can accept a request sent with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">method</ph><ept id="p1">&lt;/code&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve">
          <source>The method used to send the string to the resource.</source>
        </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve">
          <source>Uploads the data in the specified name/value collection to the resource identified by the specified URI, using the specified method.</source>
        </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve">
          <source>This method does not block the calling thread, and allows the caller to pass an object to the method that is invoked when the operation completes.</source>
        </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sends the data contained in a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> to the <ph id="ph2">`address`</ph> resource.</source>
        </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to send form data to a URI for processing.</source>
        </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is sent using the form-urlencoded media type; the Content-Type header value must be set to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The header is set correctly by default.</source>
        </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods throw a <ph id="ph2">&lt;xref:System.Net.WebException&gt;</ph> if you call this method with a different Content-Type header value set in the <ph id="ph3">&lt;xref:System.Net.WebClient.Headers%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`method`</ph> method is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT">
          <source>To receive notification when the upload operation completes, add an event handler to the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not block the calling thread while the string is being sent.</source>
        </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a string and block while waiting for the server's response, use one of the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValues%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not empty, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve">
          <source>This URI must identify a resource that can accept a request sent with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">method</ph><ept id="p1">&lt;/code&gt;</ept> method.</source>
        </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the string to the resource.</source>
        </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve">
          <source>A user-defined object that is passed to the method invoked when the asynchronous operation completes.</source>
        </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous upload of a name/value collection completes.</source>
        </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous upload of a <ph id="ph1">&lt;xref:System.Collections.Specialized.NameValueCollection&gt;</ph> object's data completes.</source>
        </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT">
          <source>These uploads are started by calling the <ph id="ph1">&lt;xref:System.Net.WebClient.UploadValuesAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadValuesCompletedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.UploadValuesCompletedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the name/value collection has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Content-type header is <ph id="ph1">`null`</ph>, this method sets it to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the collection to the resource.</source>
        </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header is not <ph id="ph2">`null`</ph> or "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the name/value collection has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Content-type header is <ph id="ph1">`null`</ph>, this method sets it to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header is not <ph id="ph2">`null`</ph> or "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the name/value collection has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Content-type header is <ph id="ph1">`null`</ph>, this method sets it to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header value is not <ph id="ph2">`null`</ph> and is not <ph id="ph3">`application/x-www-form-urlencoded`</ph>.</source>
        </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve">
          <source>Uploads the specified name/value collection to the resource identified by the specified URI as an asynchronous operation using a task object.</source>
        </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the name/value collection has been uploaded to the resource.</source>
        </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name/value collection is sent asynchronously using thread resources that are automatically allocated from the thread pool.</source>
        </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Asynchronous operations that have not completed can be canceled using the <ph id="ph1">&lt;xref:System.Net.WebClient.CancelAsync%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying request is not understood by the server, the underlying protocol classes determine what occurs.</source>
        </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a <ph id="ph1">&lt;xref:System.Net.WebException&gt;</ph> is thrown with the <ph id="ph2">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to indicate the error.</source>
        </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Content-type header is <ph id="ph1">`null`</ph>, this method sets it to "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> property is not an empty string ("") and <ph id="ph2">`address`</ph> does not contain an absolute URI, <ph id="ph3">`address`</ph> must be a relative URI that is combined with <ph id="ph4">&lt;xref:System.Net.WebClient.BaseAddress%2A&gt;</ph> to form the absolute URI of the requested data.</source>
        </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.WebClient.QueryString%2A&gt;</ph> property is not an empty string, it is appended to <ph id="ph2">`address`</ph>.</source>
        </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the STOR command to upload an FTP resource.</source>
        </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an HTTP resource, the POST method is used.</source>
        </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
        </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve">
          <source>The URI of the resource to receive the collection.</source>
        </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve">
          <source>The HTTP method used to send the collection to the resource.</source>
        </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve">
          <source>If null, the default is POST for http and STOR for ftp.</source>
        </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> to send to the resource.</source>
        </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the response sent by the server.</source>
        </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve">
          <source>The URI formed by combining <ph id="ph1">&lt;xref href="System.Net.WebClient.BaseAddress"&gt;&lt;/xref&gt;</ph>, and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p1">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;method&lt;/code&gt;</ph> cannot be used to send content.</source>
        </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve">
          <source>There was no response from the server hosting the resource.</source>
        </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve">
          <source>An error occurred while opening the stream.</source>
        </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Content-type`</ph> header is not <ph id="ph2">`null`</ph> or "application/x-www-form-urlencoded".</source>
        </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value that controls whether the <ph id="ph2">&lt;xref href="System.Net.CredentialCache.DefaultCredentials"&gt;&lt;/xref&gt;</ph> are sent with requests.</source>
        </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set this property to <ph id="ph1">`true`</ph> when requests made by this <ph id="ph2">&lt;xref:System.Net.WebClient&gt;</ph> object should, if requested by the server, be authenticated using the default credentials of the currently logged on user.</source>
        </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT">
          <source>For client applications, this is the desired behavior in most scenarios.</source>
        </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For middle tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <ph id="ph1">&lt;xref:System.Net.WebClient.Credentials%2A&gt;</ph> property to the credentials of the client on whose behalf the request is made.</source>
        </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the default credentials are used; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve">
          <source>Occurs when an asynchronous operation to write data to a resource using a write stream is closed.</source>
        </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised each time an asynchronous operation used to write data to a resource using a write stream is closed.</source>
        </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT">
          <source>These operations result from calls to the <ph id="ph1">&lt;xref:System.Net.WebClient.OpenWriteTaskAsync%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WriteStreamClosedEventHandler&gt;</ph> is the delegate for this event.</source>
        </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WriteStreamClosedEventArgs&gt;</ph> class provides the event handler with event data.</source>
        </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>