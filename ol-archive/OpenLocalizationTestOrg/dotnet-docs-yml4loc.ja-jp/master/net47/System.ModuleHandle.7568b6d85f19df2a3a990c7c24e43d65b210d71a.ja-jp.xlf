<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85aed7b2b31eae7a2a38f8113487bb8a5749be77</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ModuleHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a69602451bac8bd535a0843919c0059652d3262f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">327d48e962364876103152a131b505a6e1b8b300</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a runtime handle for a module.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ModuleHandle.ResolveFieldHandle%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ModuleHandle.ResolveMethodHandle%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ModuleHandle.ResolveTypeHandle%2A&gt;</ph> methods provide efficient resolution of metadata tokens to runtime handles for fields, methods, and types in the current module.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Represents an empty module handle.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value indicating whether the specified <ph id="ph2">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure is equal to the current <ph id="ph3">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure to be compared with the current <ph id="ph2">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">handle</ph><ept id="p1">&lt;/code&gt;</ept> is equal to the current <ph id="ph3">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure; otherwise <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value indicating whether the specified object is a <ph id="ph2">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure, and equal to the current <ph id="ph3">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The object to be compared with the current <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p1">&lt;/code&gt;</ept> is a <ph id="ph3">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure, and is equal to the current <ph id="ph4">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure; otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this instance.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer that is the hash code for this instance.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a runtime handle for the field identified by the specified metadata token.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a field in the module.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeFieldHandle"&gt;&lt;/xref&gt;</ph> for the field identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">fieldToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns a runtime method handle for the method or constructor identified by the specified metadata token.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a method or constructor in the module.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeMethodHandle"&gt;&lt;/xref&gt;</ph> for the method or constructor identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">methodToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns a runtime type handle for the type identified by the specified metadata token.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a type in the module.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> for the type identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">typeToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the metadata stream version.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the metadata header, see the Partition II: Metadata Definition and Semantics documentation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A 32-bit integer representing the metadata stream version.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The high-order two bytes represent the major version number, and the low-order two bytes represent the minor version number.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Tests whether two <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structures are equal.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ModuleHandle.Equals%28System.ModuleHandle%2CSystem.ModuleHandle%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure to the left of the equality operator.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure to the right of the equality operator.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structures are equal; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Tests whether two <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structures are unequal.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.ModuleHandle.Equals%28System.ModuleHandle%2CSystem.ModuleHandle%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure to the left of the inequality operator.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structure to the right of the inequality operator.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.ModuleHandle"&gt;&lt;/xref&gt;</ph> structures are unequal; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Returns a runtime handle for the field identified by the specified metadata token.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resolve a metadata token that identifies a field whose parent <ph id="ph1">`TypeSpec`</ph> has a signature containing element type <ph id="ph2">`var`</ph> or <ph id="ph3">`mvar`</ph>, use the <ph id="ph4">&lt;xref:System.ModuleHandle.ResolveFieldHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29&gt;</ph> method overload, which allows you to supply the necessary context.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a field in the module.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeFieldHandle"&gt;&lt;/xref&gt;</ph> for the field identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">fieldToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a field in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> identifies a field whose parent <ph id="ph2">`TypeSpec`</ph> has a signature containing element type <ph id="ph3">`var`</ph> or <ph id="ph4">`mvar`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The method is called on an empty field handle.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns a runtime field handle for the field identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a field in the module.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> structures representing the generic type arguments of the type where the token is in scope, or <ph id="ph2">`null`</ph> if that type is not generic.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> structures representing the generic type arguments of the method where the token is in scope, or <ph id="ph2">`null`</ph> if that method is not generic.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeFieldHandle"&gt;&lt;/xref&gt;</ph> for the field identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">fieldToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a valid token in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a field in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> identifies a field whose parent <ph id="ph2">`TypeSpec`</ph> has a signature containing element type <ph id="ph3">`var`</ph> or <ph id="ph4">`mvar`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The method is called on an empty field handle.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fieldToken&lt;/code&gt;</ph> is not a valid token.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns a runtime method handle for the method or constructor identified by the specified metadata token.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resolve a metadata token for a <ph id="ph1">`MethodSpec`</ph> whose signature contains element type <ph id="ph2">`var`</ph> or <ph id="ph3">`mvar`</ph>, use the <ph id="ph4">&lt;xref:System.ModuleHandle.ResolveMethodHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29&gt;</ph> method overload, which allows you to supply the necessary context.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a method or constructor in the module.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeMethodHandle"&gt;&lt;/xref&gt;</ph> for the method or constructor identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">methodToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;methodToken&lt;/code&gt;</ph> is not a valid metadata token for a method in the current module.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a method or constructor in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id="ph2">`MethodSpec`</ph> whose signature contains element type <ph id="ph3">`var`</ph> or <ph id="ph4">`mvar`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The method is called on an empty method handle.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Returns a runtime method handle for the method or constructor identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a method or constructor in the module.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> structures representing the generic type arguments of the type where the token is in scope, or <ph id="ph2">`null`</ph> if that type is not generic.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> structures representing the generic type arguments of the method where the token is in scope, or <ph id="ph2">`null`</ph> if that method is not generic.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeMethodHandle"&gt;&lt;/xref&gt;</ph> for the method or constructor identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">methodToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;methodToken&lt;/code&gt;</ph> is not a valid metadata token for a method in the current module.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a method or constructor in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id="ph2">`MethodSpec`</ph> whose signature contains element type <ph id="ph3">`var`</ph> or <ph id="ph4">`mvar`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The method is called on an empty method handle.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;methodToken&lt;/code&gt;</ph> is not a valid token.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns a runtime type handle for the type identified by the specified metadata token.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resolve a metadata token for a <ph id="ph1">`TypeSpec`</ph> whose signature contains element type <ph id="ph2">`var`</ph> or <ph id="ph3">`mvar`</ph>, use the <ph id="ph4">&lt;xref:System.ModuleHandle.ResolveTypeHandle%28System.Int32%2CSystem.RuntimeTypeHandle%5B%5D%2CSystem.RuntimeTypeHandle%5B%5D%29&gt;</ph> method overload, which allows you to supply the necessary context.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a type in the module.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> for the type identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">typeToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeToken&lt;/code&gt;</ph> is not a valid metadata token for a type in the current module.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a type in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id="ph2">`TypeSpec`</ph> whose signature contains element type <ph id="ph3">`var`</ph> or <ph id="ph4">`mvar`</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The method is called on an empty type handle.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Returns a runtime type handle for the type identified by the specified metadata token, specifying the generic type arguments of the type and method where the token is in scope.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information about metadata tokens can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics".</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The documentation is available online; see <bpt id="p1">[</bpt>ECMA C# and Common Language Infrastructure Standards<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=99212)</ept> on MSDN and <bpt id="p2">[</bpt>Standard ECMA-335 - Common Language Infrastructure (CLI)<ept id="p2">](http://go.microsoft.com/fwlink/?LinkID=65552)</ept> on the Ecma International Web site.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A metadata token that identifies a type in the module.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> structures representing the generic type arguments of the type where the token is in scope, or <ph id="ph2">`null`</ph> if that type is not generic.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> structures objects representing the generic type arguments of the method where the token is in scope, or <ph id="ph2">`null`</ph> if that method is not generic.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.RuntimeTypeHandle"&gt;&lt;/xref&gt;</ph> for the type identified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">typeToken</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeToken&lt;/code&gt;</ph> is not a valid metadata token for a type in the current module.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is not a token for a type in the scope of the current module.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;metadataToken&lt;/code&gt;</ph> is a <ph id="ph2">`TypeSpec`</ph> whose signature contains element type <ph id="ph3">`var`</ph> or <ph id="ph4">`mvar`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The method is called on an empty type handle.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeToken&lt;/code&gt;</ph> is not a valid token.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>