<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4164594797bf116692577aed05ff701a53b379dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.ArrayExtension.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c165f47007e3fa3cbb0275c1aad05080447f6672</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3bdfdcfae48833b641e2f18eea7167bb7fc0ecf0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements <ph id="ph1">`x:Array`</ph> support for .NET Framework XAML Services</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.ArrayExtension&gt;</ph> is the class that implements the <ph id="ph2">`x:Array`</ph> markup extension behavior, and the <ph id="ph3">`x:ArrayExtension`</ph> information item from [MS-XAML].</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x:Array`</ph> supports a XAML language feature that allows adding arbitrary child elements within an array, through a particular markup extension enabled syntax.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The markup extension syntax requires an explicit <ph id="ph1">&lt;xref:System.Windows.Markup.ArrayExtension.Type%2A&gt;</ph> attribute on the markup extension usage, and a content syntax for specifying the <ph id="ph2">&lt;xref:System.Windows.Markup.ArrayExtension.Items%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information and details on the syntax, see <bpt id="p1">[</bpt>x:Array Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-array-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is a markup extension implementation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Markup extension classes exist mainly to provide infrastructure support for some aspect of a XAML processor implementation, and the members exposed by a markup extension class are not typically called from user code.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This extension supports the <bpt id="p1">[</bpt>x:Array Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-array-markup-extension.md)</ept> usage from XAML for .NET Framework XAML Services implementation of XAML and its XAML readers and XAML writers.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In previous versions of the .NET Framework, this class existed in the WPF-specific assembly PresentationFramework.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.ArrayExtension&gt;</ph> is in the System.Xaml assembly.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes the <ph id="ph1">`x:Array`</ph> usage available to frameworks or technologies such as <ph id="ph2">[!INCLUDE[TLA#tla_workflow](~/includes/tlasharptla-workflow-md.md)]</ph> that are built on .NET Framework XAML Services.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The System.Xaml assembly uses <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsDefinitionAttribute&gt;</ph> to map types from the<ph id="ph2">&lt;xref:System.Windows.Markup&gt;</ph> CLR namespace in the assembly to the XAML namespace for the XAML language (<ph id="ph3">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In typical XAML markup, you declare a prefix for <ph id="ph1">[!INCLUDE[TLA#tla_xamlxmlnsv1](~/includes/tlasharptla-xamlxmlnsv1-md.md)]</ph> in a root element mapping and use the prefix <ph id="ph2">`x`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This creates an empty array.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension"&gt;&lt;/xref&gt;</ph> class based on the provided raw array.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports markup extension behavior and is not typically called by user code, unless that user code implements XAML processing behavior.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The array content that populates the created array.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;elements&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension"&gt;&lt;/xref&gt;</ph> class and initializes the type of the array.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports markup extension behavior and is not typically called by user code, unless that user code implements XAML processing behavior.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The object type of the new array.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;arrayType&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Appends the supplied object to the end of the array.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly, and does not participate in any existing .NET interpretation of the <ph id="ph1">`x:Array`</ph> markup extension behavior.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any code access to the backing array instance should be done with array APIs or language features.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any alternative XAML reader or XAML writer implementations should instead use the .NET System.Xaml service extensions such as <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A&gt;</ph> to determine what method to call, or <ph id="ph2">&lt;xref:System.Xaml.XamlType.LookupCollectionKind%2A&gt;</ph> together with appropriate interface casting.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object to add to the end of the array.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Adds a text node as a new array item.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly, and does not participate in interpretation of the <ph id="ph1">`x:Array`</ph> markup extension behavior.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The text to add to the end of the array.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the contents of the array.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Settable in XAML through XAML collection syntax.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.ArrayExtension.Items%2A&gt;</ph> is the attributed XAML content property of <ph id="ph2">&lt;xref:System.Windows.Markup.ArrayExtension&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML content property designation supports the typical XAML usage of specifying the item elements of an array as child object elements in XAML.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.ArrayExtension.Items%2A&gt;</ph> is the object model and markup extension implementation exposure for the intrinsic <ph id="ph2">`ArrayExtension.Items`</ph> property, as defined for <ph id="ph3">`x:ArrayExtension`</ph> in [MS-XAML].</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type mismatches between <ph id="ph1">&lt;xref:System.Windows.Markup.ArrayExtension.Type%2A&gt;</ph> and the items in <ph id="ph2">&lt;xref:System.Windows.Markup.ArrayExtension.Items%2A&gt;</ph>, or any other validation issues, are not reported as exceptions until <ph id="ph3">&lt;xref:System.Windows.Markup.ArrayExtension.ProvideValue%2A&gt;</ph> is invoked.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is consistent with the general design principles of XAML markup extensions.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>For XAML usage information, see <bpt id="p1">[</bpt>x:Array Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-array-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The array contents.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Returns an array that is sized to the number of objects supplied in the <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension.Items"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method supports markup extension behavior and is not typically called by user code, unless that user code implements XAML processing behavior.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A XAML processor implementation uses this method for proper handling of <ph id="ph1">`x:Array`</ph> elements during object creation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This relies on general behavior for XAML processors when they process any <ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph> and call its <ph id="ph2">`ProvideValue`</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation does not rely on any services based on the passed <ph id="ph1">`serviceProvider`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it does rely on CLR concepts as transmitted by the extension's use while processing with the default XAML schema context for .NET Framework XAML Services.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object that can provide services for the markup extension.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The created array, or null.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Processed an array that did not provide a valid <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension.Type"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>There is a type mismatch between the declared <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension.Type"&gt;&lt;/xref&gt;</ph> of the array and one or more of its <ph id="ph2">&lt;xref href="System.Windows.Markup.ArrayExtension.Items"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of array to be created when calling <ph id="ph1">&lt;xref href="System.Windows.Markup.ArrayExtension.ProvideValue(System.IServiceProvider)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For XAML usage information, see <bpt id="p1">[</bpt>x:Array Markup Extension<ept id="p1">](~/docs/framework/xaml-services/x-array-markup-extension.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Text Usage</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The type of the array.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>