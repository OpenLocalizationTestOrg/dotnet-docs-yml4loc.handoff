<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">17bb3521b14380af785623714134ea9a7ac12e69</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.AccessibleObject.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b0fd4d51cbfb97c0adbe3d4396061709bf72fe7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9a072955651c1707e81645bec57186b282bffc9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information that accessibility applications use to adjust an application's user interface (UI) for users with impairments.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Accessibility applications can adjust features of the application to improve usability for users with disabilities.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For users who are visually impaired, you can adjust software and operating system features to comply with their needs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can enlarge text and images and render them with a contrast.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can accommodate color-blindness with the appropriate use of colors.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For users who are severely visually impaired, computers are accessible with screen review aids that translate on-screen text to speech or to a dynamic, refreshable, Braille display.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For users who are hard of hearing, you can design programs that use visual cues, such as a flashing toolbar; or you can display spoken messages as text.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when turned on, the <ph id="ph1">`SoundSentry`</ph> feature, an accessibility option in Control Panel, provides a visual warning whenever the system makes an alarm sound.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For users with motion disabilities, you can design controls that refine or eliminate keyboard and mouse use, thereby improving computer accessibility.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control Panel offers assistance.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, one alternative is to use the numeric keypad instead of the mouse for navigation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another option, called <ph id="ph1">`StickyKeys`</ph>, enables users who cannot hold down two or more keys at a time (such as CTRL+P) to get the same result by typing one key at a time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For users with cognitive and language disabilities, you can design software programs to better accommodate their needs.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, using conspicuous or cued sequencing, uncomplicated displays, fewer words, and a reading level targeted to elementary school standards can benefit these users.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For users with seizure disorders, you can design software programs to eliminate seizure provoking patterns.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about accessibility, including information about accessibility applications, see the documentation for Microsoft Accessibility in the MSDN library or at the Microsoft Web site.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph>, you must add a reference to the <ph id="ph2">`Accessibility`</ph> assembly installed with the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Forms only supports Active Accessibility 2.0.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, when you use this method to create an accessible object, you are providing your own implementations of the properties and methods of the class to provide functionality specific to your application.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the location and size of the accessible object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Bounds%2A&gt;</ph> property retrieves the object's bounding rectangle in screen coordinates.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object has a nonrectangular shape, then this property represents the smallest rectangle that completely encompasses the entire object region.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, for nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle can fail, if tested, by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.HitTest%2A&gt;</ph> method, because <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.HitTest%2A&gt;</ph> determines the object's boundaries on a pixel-by-pixel basis.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the bounds of the accessible object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The bounds of control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a string that describes the default action of the object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Not all objects have a default action.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string describes the action that is performed on an object, not what the object does as a result.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, a toolbar button that prints a document has a default action of "Press" rather than "Prints the current document."</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not confuse an object's default action with its value.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A description of the default action for an object, or <ph id="ph1">`null`</ph> if this object has no default action.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default action for the control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets a string that describes the visual appearance of the specified object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Not all objects have a description.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property describes the object's visual appearance to the user.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A description of the object's visual appearance to the user, or <ph id="ph1">`null`</ph> if the object does not have a description.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The description for the control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Performs the default action associated with this accessible object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients can retrieve the object's default action by inspecting an object's <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.DefaultAction%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>A client can use automation (if supported) instead of <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A&gt;</ph> to perform an object's default action.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.DoDefaultAction%2A&gt;</ph> provides an easy way to perform an object's most commonly used action.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default action for the control cannot be performed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Retrieves the accessible child corresponding to the specified index.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The zero-based index of the accessible child.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> that represents the accessible child corresponding to the specified index.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Retrieves the number of children belonging to an accessible object.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The number of children belonging to an accessible object.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Retrieves the object that has the keyboard focus.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The concept of keyboard focus is related to that of an active window.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>An active window is the foreground window in which the user is working.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object with the keyboard focus is either the active window or a child object of the active window.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one object or item within a container can have the focus at any one time.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object with the keyboard focus is not necessarily the selected object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> that specifies the currently focused child.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This method returns the calling object if the object itself is focused.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if no object has focus.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets an identifier for a Help topic identifier and the path to the Help file associated with this accessible object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display help for the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> using the Windows Help system, you can pass the file name and topic ID to the appropriate <ph id="ph2">&lt;xref:System.Windows.Forms.Help.ShowHelp%2A?displayProperty=fullName&gt;</ph> method of <ph id="ph3">&lt;xref:System.Windows.Forms.Help&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>On return, this property contains the path to the Help file associated with this accessible object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An identifier for a Help topic, or -1 if there is no Help topic.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>On return, the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains the path to the Help file associated with this accessible object.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The Help topic for the control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Retrieves the currently selected child.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> that represents the currently selected child.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>This method returns the calling object if the object itself is selected.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if is no child is currently selected and the object itself does not have focus.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The selected child cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a description of what the object does or how the object is used.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the description of what the object does or how the object is used.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if no help is defined.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The help string for the control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Retrieves the child object at the specified screen coordinates.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For nonrectangular objects such as list view items, the coordinates of the object's bounding rectangle retrieved by <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Bounds%2A&gt;</ph> can fail if tested with <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.HitTest%2A&gt;</ph>, because <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.HitTest%2A&gt;</ph> determines the object's boundaries on a pixel-by-pixel basis.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The horizontal screen coordinate.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The vertical screen coordinate.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> that represents the child object at the given screen coordinates.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>This method returns the calling object if the object itself is at the location specified.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if no object is at the tested location.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The control cannot be hit tested.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets the shortcut key or access key for the accessible object.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>An access key, also known as a mnemonic, is an underlined character in the text of a menu, menu item, label of a button, or some other control.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a user can display a menu by pressing the ALT key while also pressing the indicated underlined key, such as ALT+F, to open the <ph id="ph1">`File`</ph> menu.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the access key of a menu item, the menu containing the item must be active.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls such as toolbar buttons and menu items often have an associated shortcut key.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>A menu item can have both an access key and a shortcut key associated with it.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.KeyboardShortcut%2A&gt;</ph> property is a single character, you can assume it is an access key.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The shortcut key or access key for the accessible object, or <ph id="ph1">`null`</ph> if there is no shortcut key associated with the object.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The shortcut for the control cannot be retrieved.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets the object name.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Name%2A&gt;</ph> property is a string used by clients to identify, find, or announce an object for the user.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access the name of a child object, you must first call <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.GetChild%2A&gt;</ph> with the index of the child whose name you are retrieving.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The object name, or <ph id="ph1">`null`</ph> if the property has not been set.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The name of the control cannot be retrieved or set.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Navigates to another accessible object.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Navigation, both spatial and logical, is always restricted to the user interface elements within a container.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>With spatial navigation, clients can navigate only to a sibling of the starting object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the navigational flag used with logical navigation, clients can navigate to either a child or to a sibling of the starting object.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the selection or focus.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the focus or to select an object, use <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Select%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Navigate%2A&gt;</ph> method retrieves only user interface elements that have a defined screen location.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleNavigation"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> that represents one of the <ph id="ph2">&lt;xref href="System.Windows.Forms.AccessibleNavigation"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The navigation attempt fails.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets the parent of an accessible object.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> that represents the parent of an accessible object, or <ph id="ph2">`null`</ph> if there is no parent object.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets the role of this accessible object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The role of the object helps describe the function of the object.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleRole"&gt;&lt;/xref&gt;</ph> values, or <ph id="ph2">&lt;xref href="System.Windows.Forms.AccessibleRole.None"&gt;&lt;/xref&gt;</ph> if no role has been specified.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Modifies the selection or moves the keyboard focus of the accessible object.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications can use this method to perform complex selection operations.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following describes which <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection&gt;</ph> values to specify when calling <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleObject.Select%2A&gt;</ph> to perform complex selection operations.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operation</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flag Combination</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>To simulate a click</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> <ph id="ph2">`OR`</ph> <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> <bpt id="p1">**</bpt>Note:<ept id="p1">**</ept>  This combination will not select the desired control if called from within your own application.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will have the desired effect, however, if called from an external application.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select a target item by simulating CTRL + click</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> <ph id="ph2">`OR`</ph> <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cancel selection of a target item by simulating CTRL + click</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> <ph id="ph2">`OR`</ph> <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>To simulate SHIFT + click</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> <ph id="ph2">`OR`</ph> <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select a range of objects and put focus on the last object</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> on the starting object to set the selection anchor.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then call <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Select%2A&gt;</ph> again and specify <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph><ph id="ph3">`OR`</ph><ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> on the last object.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deselect all objects</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> on any object.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag deselects all selected objects except the one just selected.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then call <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Select%2A&gt;</ph> again and specify <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection?displayProperty=fullName&gt;</ph> on the same object.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleSelection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The selection cannot be performed.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets the state of this accessible object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleStates"&gt;&lt;/xref&gt;</ph> values, or <ph id="ph2">&lt;xref href="System.Windows.Forms.AccessibleStates.None"&gt;&lt;/xref&gt;</ph>, if no state has been set.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Associates an object with an instance of an <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> based on the handle of the object.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server applications call <ph id="ph1">`CreateStdAccessibleObject`</ph> and override the <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> methods and properties as needed to match their custom object.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This approach saves server developers the work of fully implementing all the <ph id="ph1">&lt;xref:Accessibility.IAccessible&gt;</ph> properties and methods.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function is similar to <ph id="ph1">`CreateStdAccessibleProxy`</ph>, except that <ph id="ph2">`CreateStdAccessibleProxy`</ph> enables you to specify the class name as a parameter, whereas <ph id="ph3">`CreateStdAccessibleObject`</ph> uses the class name associated with the <ph id="ph4">`hwnd`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this version of the <ph id="ph1">`UseStdAccessible`</ph> is the same as calling the two parameter version with an objid of CLIENT.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph> that contains the handle of the object.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Associates an object with an instance of an <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> based on the handle and the object id of the object.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates an accessible object with the methods and properties for the specified type of system-provided user interface element.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server applications can call this function when they contain a custom UI object that is similar to a system-provided object.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server applications call <ph id="ph1">`CreateStdAccessibleObject`</ph> and override the <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> methods and properties as needed to match their custom object.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This approach saves server developers the work of fully implementing all the <ph id="ph1">&lt;xref:Accessibility.IAccessible&gt;</ph> properties and methods.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid <ph id="ph1">`objid`</ph> values.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>ALERT</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFF6</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to a message associated with a window or application.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>CARET</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFF8</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the text insertion bar (caret) in the window.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>CLIENT</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFFC</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's client area.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, the operating system controls the frame elements, and the client object contains all elements that the application controls.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>CURSOR</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFF7</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the mouse pointer.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is only one mouse pointer in the system and it is not a child of a window.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>HSCROLL</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFFA</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's horizontal scroll bar.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>MENU</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFFD</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's menu bar.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>SIZEGRIP</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFF9</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's size grip, an optional frame component located at the lower right corner of the window frame.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>SOUND</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFF5</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to a sound object.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sound objects do not have screen locations or children, but do have name and state attributes.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are children of the application playing the sound.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>SYSMENU</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFFF</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's system menu.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>TITLEBAR</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFFE</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's title bar.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>VSCROLL</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xFFFFFFFB</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window's vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>WINDOW</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>0x00000000</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refers to the window itself rather than to a child object.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph> that contains the handle of the object.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An Int that defines the type of object that the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">handle</ph><ept id="p1">&lt;/code&gt;</ept> parameter refers to.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of an accessible object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> property represents visual information contained by the object.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all objects support the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> property is used to tell the client about what visual information an object contains.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the value for an edit control is the text it contains, but a menu item has no value.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> property can provide hierarchical information in cases such as a tree view control.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the parent object in the tree view control does not provide information in the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> property, each item within the control has a zero-based value that represents its level within the hierarchy.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Top-level items have a value of zero, second-level items have a value of one, and so on.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values returned from scroll bar and trackbar accessible objects indicate percentages, so they are integers between 0 and 100, inclusive.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The value of an accessible object, or <ph id="ph1">`null`</ph> if the object has no value set.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The value cannot be set or retrieved.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets the number of child interfaces that belong to this object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accChildCount"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The number of child accessible objects that belong to this object.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>If the object has no child objects, this value is 0.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Performs the specified object's default action.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Not all objects have a default action.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accDoDefaultAction(System.Object)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The child ID in the <ph id="ph1">&lt;xref href="Accessibility.IAccessible"&gt;&lt;/xref&gt;</ph> interface/child ID pair that represents the accessible object.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets the object that has the keyboard focus.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accFocus"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value type of the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A&gt;</ph> property depends on the object that has keyboard focus.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the object types that the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accFocus%2A&gt;</ph> property returns.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>This object does not have the keyboard focus itself and does not contain a child that has the keyboard focus.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>0 if the current object has keyboard focus; otherwise, the child ID of the child accessible object with keyboard focus.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child accessible object that has the keyboard focus.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The object that has keyboard focus.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Gets the child object at the specified screen coordinates.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accHitTest(System.Int32,System.Int32)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the object types that the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accHitTest%2A&gt;</ph> method can return.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The accessible object at the specified direction.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>0 if the point specified is either the current object or outside the object’s boundaries; otherwise, the child ID that identifies the accessible object at the specified direction.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The vertical coordinate.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The accessible object at the point specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xLeft</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">yTop</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the object's current screen location.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accLocation(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Object)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the x-coordinate of the object’s left edge.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the y-coordinate of the object’s top edge.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the width of the object.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the height of the object.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The ID number of the accessible object.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>This parameter is 0 to get the location of the object, or a child ID to get the location of one of the object's child objects.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Navigates to an accessible object relative to the current object.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accNavigate(System.Int32,System.Object)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the object types that the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accNavigate%2A&gt;</ph> method can return.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is not an accessible object at the specified direction.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The accessible object at the specified direction.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child ID that identifies the accessible object at the specified direction.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the parent <ph id="ph1">&lt;xref:Accessibility.IAccessible&gt;</ph> and the child ID to access the accessible object.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleNavigation"&gt;&lt;/xref&gt;</ph> enumerations that specifies the direction to navigate.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The ID number of the accessible object.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This parameter is 0 to start from the object, or a child ID to start from one of the object's child objects.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The accessible object positioned at the value specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">navDir</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Gets the parent accessible object of this object.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accParent"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface..</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="Accessibility.IAccessible"&gt;&lt;/xref&gt;</ph> that represents the parent of the accessible object, or <ph id="ph2">`null`</ph> if there is no parent object.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Modifies the selection or moves the keyboard focus of the accessible object.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accSelect(System.Int32,System.Object)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following describes which <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection&gt;</ph> values to specify when calling <ph id="ph2">`Select`</ph> to perform complex selection operations.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operation</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flag Combination</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>To simulate a click</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeFocus&gt;</ph> OR <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeSelection&gt;</ph></source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select a target item by simulating CTRL+click</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeFocus&gt;</ph> OR <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection.AddSelection&gt;</ph></source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cancel selection of a target item by simulating CTRL+click</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeFocus&gt;</ph> OR <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection.RemoveSelection&gt;</ph></source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>To simulate SHIFT+click</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeFocus&gt;</ph> OR <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection.ExtendSelection&gt;</ph></source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select a range of objects and put focus on the last object</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeFocus&gt;</ph> on the starting object to set the selection anchor.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then call Select again and specify <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeFocus&gt;</ph> OR <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleSelection.ExtendSelection&gt;</ph> on the last object.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deselect all objects</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.TakeSelection&gt;</ph> on any object.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag deselects all selected objects except the one just selected.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then call Select again and specify <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleSelection.RemoveSelection&gt;</ph> on the same object.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleSelection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The ID number of the accessible object on which to perform the selection.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>This parameter is 0 to select the object, or a child ID to select one of the object's child objects.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Gets the selected child objects of an accessible object.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="Accessibility.IAccessible.accSelection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the object types that the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Accessibility%23IAccessible%23accSelection%2A&gt;</ph> property returns</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>No child objects are selected.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child accessible object that is selected.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>The child ID that identifies the accessible object that is selected.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the parent <ph id="ph1">&lt;xref:Accessibility.IAccessible&gt;</ph> and the child ID to access the accessible object.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>A list of child objects that are selected.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:Accessibility.IAccessible&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The selected child objects of an accessible object.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Reflection.FieldInfo"&gt;&lt;/xref&gt;</ph> object corresponding to the specified field and binding flag.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The name of the field to find.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.FieldInfo"&gt;&lt;/xref&gt;</ph> object containing the field information for the named object that meets the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The object implements multiple fields with the same name.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Gets an array of <ph id="ph1">&lt;xref href="System.Reflection.FieldInfo"&gt;&lt;/xref&gt;</ph> objects corresponding to all fields of the current class.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each field must have a unique name.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph> flag specifies that nonpublic fields are included in the search.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph> flag specifies that public fields are included in the search.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.FieldInfo"&gt;&lt;/xref&gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Gets an array of <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> objects corresponding to all public members or to all members that match a specified name.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> objects matching the name parameter.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Gets an array of <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> objects corresponding either to all public members or to all members of the current class.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> objects containing all the member information for this reflection object.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> object corresponding to a specified method under specified search constraints.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The object implements multiple methods with the same name.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> object corresponding to a specified method, using a Type array to choose from among overloaded methods.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is a match based on the method name, the <ph id="ph1">&lt;xref:System.Reflection.BindingFlags?displayProperty=fullName&gt;</ph> enumeration, the kind of type conversion specified by the <ph id="ph2">`binder`</ph> parameter, the overload, and the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo?displayProperty=fullName&gt;</ph> that describes the signature of the method.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>An object that implements <ph id="ph1">&lt;xref href="System.Reflection.Binder"&gt;&lt;/xref&gt;</ph>, containing properties related to this method.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>An array used to choose among overloaded methods.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The requested method that matches all the specified parameters.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The object implements multiple methods with the same name.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Gets an array of <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> objects with all public methods or all methods of the current class.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <ph id="ph2">`bindingAttr`</ph>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Gets an array of <ph id="ph1">&lt;xref href="System.Reflection.PropertyInfo"&gt;&lt;/xref&gt;</ph> objects corresponding to all public properties or to all properties of the current class.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The binding attribute used to control the search.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.PropertyInfo"&gt;&lt;/xref&gt;</ph> objects for all the properties defined on the reflection object.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Reflection.PropertyInfo"&gt;&lt;/xref&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The name of the property to find.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.PropertyInfo"&gt;&lt;/xref&gt;</ph> object for the located property that meets the search constraints specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">bindingAttr</ph><ept id="p1">&lt;/code&gt;</ept>, or <ph id="ph3">`null`</ph> if the property was not located.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The object implements multiple methods with the same name.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Reflection.PropertyInfo"&gt;&lt;/xref&gt;</ph> object corresponding to a specified property with specified search constraints.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The binding attributes used to control the search.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>An object that implements Binder, containing properties related to this method.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>An array used to choose among overloaded methods.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>An array used to choose the parameter modifiers.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.PropertyInfo"&gt;&lt;/xref&gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <ph id="ph2">`null`</ph> if the property was not located.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Invokes a specified member.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`invokeAttr`</ph> parameter may be a constructor, method, property, or field.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>A suitable invocation attribute must be specified.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke the default member of a class by passing the empty string ("") as the name of the member.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`modifiers`</ph> parameter has the same length as the <ph id="ph2">`args`</ph> parameter, representing the invoked member's argument attributes in the metadata.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parameter can have the following attributes: pdIn, pdOut, pdRetval, pdOptional, and pdHasDefault.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The name of the member to find.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Reflection.BindingFlags"&gt;&lt;/xref&gt;</ph> invocation attributes.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Reflection.BindingFlags"&gt;&lt;/xref&gt;</ph> bit flags.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Implements Binder, containing properties related to this method.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>The object on which to invoke the specified member.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>This parameter is ignored for static members.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>This is an empty array if there are no parameters.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.ParameterModifier"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> used to govern the coercion of types.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>A String array of parameters.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The specified member.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>More than one argument is specified for a field set operation.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The field or property cannot be found.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The method cannot be found.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>A private member is invoked without the necessary <ph id="ph1">&lt;xref href="System.Security.Permissions.ReflectionPermission"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Gets the underlying type that represents the <ph id="ph1">&lt;xref href="System.Reflection.IReflect"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Reflection.IReflect.UnderlyingSystemType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The underlying type that represents the <ph id="ph1">&lt;xref href="System.Reflection.IReflect"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>