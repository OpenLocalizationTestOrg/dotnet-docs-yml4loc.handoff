<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12c297cd5d8f9a174bf54583682b6a7f565742fd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.ServiceHostBase.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c550a8733a847eb40e68b4d8dcc4fd989690e99</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da38eaafabf7cb7cb8cfe6cedfc7b18380477ee1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Extends the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph> class to implement hosts that expose custom programming models.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> class to create hosts that provide a custom programming model.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service programming model uses the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special note for Managed C++ users deriving from this class:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid destructors; they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid non-reference members; they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Adds a base address to the service host.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property allows users extending <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> to provide the base address after the host is constructed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.AddBaseAddress%28System.Uri%29&gt;</ph> can be used to add base addresses to an existing host, but throws an exception if the description is already initialized.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the base address for services hosted on the current host.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseAddress</ph><ept id="p1">&lt;/code&gt;</ept> cannot be called.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Adds service endpoints for all base addresses in each contract found in the service host with the default binding.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A read-only collection of default endpoints.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adds the specified service endpoint to the hosted service.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using the method, the service host does a "by-configuration-name" validation on the contract description.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, the host verifies that <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription.ConfigurationName%2A&gt;</ph> exists in the list of configuration names of the service contracts implemented by the service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the validation passes, the description in the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> is used as it is, even if the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> reflected from the service is different.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, assume that the description in the ServiceEndpoint and the contract description reflected from the service have the same name, but different operation behaviors.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implication of only "by-configuration-name" validation is that there is no validation that the behaviors are the same and there are one updates to one description because of another description.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`address`</ph> is a relative URI, one of the base addresses of the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The service endpoint.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Endpoint&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The host is not in a Created or an Opening state or there is no <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Address</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Binding</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">Contract</ph><ept id="p3">&lt;/code&gt;</ept> property is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and endpoint address.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The contract implemented by the endpoint.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The address for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This can be an absolute or relative URI.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;&lt;/xref&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> added to the hosted service.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>or is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The host is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Created"&gt;&lt;/xref&gt;</ph> or an <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state or there is no <ph id="ph3">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service and so an endpoint cannot be added or the binding lacks a transport of binding scheme.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, and a URI that contains the endpoint address.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The contract implemented by the endpoint.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the address for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>This can be an absolute or relative URI.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;&lt;/xref&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> added to the hosted service.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>or is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The host is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Created"&gt;&lt;/xref&gt;</ph> or an <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state or there is no <ph id="ph3">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service and so an endpoint cannot be added.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with a specified contract, binding, endpoint address and URI that contains the address at which it listens.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`address`</ph> is a relative URI, one of the base addresses of the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The contract implemented by the endpoint.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The address for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This address can be an absolute or relative URI.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;&lt;/xref&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the address which the endpoint listens to for incoming messages.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>This URI can be relative or absolute.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> added to the hosted service.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>or is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The host is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Created"&gt;&lt;/xref&gt;</ph> or an <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state or there is no <ph id="ph3">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service and so an endpoint cannot be added.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Adds a service endpoint to the hosted service with the specified contract, binding, and URIs that contain the endpoint and listening addresses.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The contract implemented by the endpoint.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the address for the endpoint added.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If it is a relative URI, one of the base address of the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHost"&gt;&lt;/xref&gt;</ph> (depending on the binding protocol) is used as the endpoint's base address.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the address at which the endpoint listens for incoming messages.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> added to the hosted service.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>This URI can be absolute or relative.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;implementedContract&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>or is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The host is not in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Created"&gt;&lt;/xref&gt;</ph> or an <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> state or there is no <ph id="ph3">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service and so an endpoint cannot be added.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Loads the service description information from the configuration file and applies it to the runtime being constructed.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The description of the service hosted is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets the service authentication behavior.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The service authentication behavior.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets the authorization behavior for the service hosted.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceAuthorizationBehavior"&gt;&lt;/xref&gt;</ph> for the service hosted.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the base addresses used by the hosted service.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets the collection of channel dispatchers used by the service host.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcherCollection"&gt;&lt;/xref&gt;</ph> that contains the channel dispatchers used by the service host.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the interval of time allowed for the service host to close.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time allowed for the service host to close.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The value, in milliseconds, is less than zero or is larger than <ph id="ph1">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The host is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The host is already in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The host is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, creates the description of the hosted service.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Generic.IDictionary`2"&gt;&lt;/xref&gt;</ph> that contains the <ph id="ph2">&lt;xref href="System.ServiceModel.Description.ContractDescription"&gt;&lt;/xref&gt;</ph> objects for the service.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets the credential for the service hosted.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceCredentials"&gt;&lt;/xref&gt;</ph> for the service hosted.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets the default interval of time allowed for the service host to close.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the default interval of time allowed for the service host to close.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets the default interval of time allowed for the service host to open.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the default interval of time allowed for the service host to open.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the description of the service hosted.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceDescription"&gt;&lt;/xref&gt;</ph> for the hosted service.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets the extensions for the current specified service host.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.IExtensionCollection`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves the contracts implemented by the service hosted.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Generic.IDictionary`2"&gt;&lt;/xref&gt;</ph> that contains the <ph id="ph2">&lt;xref href="System.ServiceModel.Description.ContractDescription"&gt;&lt;/xref&gt;</ph> objects for the service.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Increases the limit on the flow rate of messages to the hosted service by a specified increment.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This limit can be accessed using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.ManualFlowControlLimit%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The number of messages by which to increase the flow control limit.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The new limit after the increment is added.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The value is less than zero.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Creates and initializes the service host with the contract and service descriptions.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.UriSchemeKeyedCollection"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the service hosted.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Initializes the runtime for the service host.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The description of the service hosted is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Loads the service element from the configuration file of the hosted service.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Configuration.ServiceElement"&gt;&lt;/xref&gt;</ph> to be loaded from configuration.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceSection&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The description of the service hosted is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets or sets the flow control limit for messages received by the service hosted.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This limit can be incremented using the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit%28System.Int32%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The flow control limit for messages received by the service hosted.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The value is less than zero.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Aborts the service.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation invoked on the close of the service host.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on-close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous operation on-close completion.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous on-close operation.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation invoked on the opening of the service host.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on-open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous operation on-open completion.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on-open operation.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous on-open operation.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Closes down the hosted service, including their channel dispatchers and associated instance contexts and listeners.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29&gt;</ph> does the following:</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closes all input to <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph>, which also closes their associated <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This stops any new channels from being accepting.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput%2A&gt;</ph> on all <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects, which mean they stop accepting new messages.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Waits for all <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects to close down, which happens when their associated channels finish sending all pending messages.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects associated with the host.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on-close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Releases resources used by the service host.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation invoked on the closing of the service host.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation invoked on the opening of the service host.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Opens the channel dispatchers.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on-open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets the service credentials,service authentication and authorization behavior for the hosted service.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once these behaviors are initialized when opening the service, they cannot be changed.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets the interval of time allowed for the service host to open.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time allowed for the service host to open.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The value is less than zero or is larger than <ph id="ph1">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph> (2,147,483,647 or, in hexadecimal notation, 0X7FFFFFFF).</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The host is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The host is already in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The host is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state and cannot be modified.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Releases the service and channel dispatcher performance counters for the hosted service.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is invoked when calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnClose%28System.TimeSpan%29&gt;</ph> and</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase.OnEndClose%28System.IAsyncResult%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Sets the endpoint address of the specified endpoint to the specified address.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The service endpoint.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The endpoint address.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Occurs when an unknown message is received.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using <ph id="ph1">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph>, exposing a hosting endpoint, and a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.UnknownMessageReceived&gt;</ph> exception is thrown, the host passes the message to the event handler.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an attempt is made to read this message an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The description of the exception will say "This message cannot support the operation because it has been read."</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WCF infrastructure reads the message while extracting the message parameters.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message is then passed to the event handler and any attempt to read it causes an exception.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to access message parameters in your <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> handler from a hosting endpoint, define the hosting endpoint contract using MessageContract and place the needed data into a message header.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> hosting endpoints see <bpt id="p1">[</bpt>Workflow Service Host Extensibility<ept id="p1">](~/docs/framework/wcf/feature-details/workflow-service-host-extensibility.md)</ept></source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Closes the service host.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>