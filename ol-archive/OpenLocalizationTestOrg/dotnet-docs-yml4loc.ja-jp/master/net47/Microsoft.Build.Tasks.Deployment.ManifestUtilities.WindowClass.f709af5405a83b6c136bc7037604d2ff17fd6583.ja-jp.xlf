<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">601dba2c1ed1ff8e077f876ef704b91c1e3f2fe9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7cd75c72dc828fcfceec7ba65bd216ad983d819c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ecca146f9469768793580e3caa7cf9b4a9a0c160</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a window class in an application manifest.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass"&gt;&lt;/xref&gt;</ph> class, specifying information about the versioning status of the window class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`versioned`</ph> parameter controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this attribute can be <ph id="ph1">`yes`</ph> or <ph id="ph2">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`yes`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value <ph id="ph1">`no`</ph> should be used only if the same window class is defined by a side-by-side component and an equivalent non-side-by-side component and you want to treat them as the same window class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the usual rules about window class registration apply: only the first component that registers the window class will be able to register it, because it does not have a version applied to it.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The name of the class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the name of the window class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The name of the window class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets a value that controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property controls whether the internal window class name that is used in registration contains the version of the assembly that contains the window class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this attribute can be <ph id="ph1">`yes`</ph> or <ph id="ph2">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`yes`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value <ph id="ph1">`no`</ph> should be used only if the same window class is defined by a side-by-side component and an equivalent non-side-by-side component and you want to treat them as the same window class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the usual rules about window class registration apply: only the first component that registers the window class will be able to register it, because it does not have a version applied to it.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`yes`</ph> if the name that is used in registration contains the version of the assembly; otherwise, <ph id="ph2">`no`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`yes`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets a property that is used to serialize the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name"&gt;&lt;/xref&gt;</ph> property to an XML file.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Name"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets a property that is used to serialize the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned"&gt;&lt;/xref&gt;</ph> property to an XML file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.Deployment.ManifestUtilities.WindowClass.Versioned"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>