<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fe38f24ddadf7e5a893535bc01608f20d2c844c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XmlAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04eecc81fb3955dc44b8ab1d59f55ec54b863ea2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bcdd782520aae0210d36173af9e226e579294406</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an attribute.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Valid and default values for the attribute are defined in a document type definition (DTD) or schema.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes can be associated with an element.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.OwnerElement%2A&gt;</ph> property to get the <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> to which the attribute belongs.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlElement`</ph> class has several methods which allow you to access attribute nodes (<ph id="ph2">&lt;xref:System.Xml.XmlElement.GetAttribute%2A?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlElement.SetAttribute%2A?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.XmlElement.RemoveAttribute%2A?displayProperty=fullName&gt;</ph>, and so on).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, you can call the <ph id="ph1">&lt;xref:System.Xml.XmlElement.Attributes%2A?displayProperty=fullName&gt;</ph> property, which returns an <ph id="ph2">&lt;xref:System.Xml.XmlAttributeCollection&gt;</ph> enabling you to access attributes by name or index from the collection.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not instantiate an <ph id="ph1">&lt;xref:System.Xml.XmlAttribute&gt;</ph> directly; instead, use methods such as <ph id="ph2">&lt;xref:System.Xml.XmlDocument.CreateAttribute%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The namespace prefix.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The namespace uniform resource identifier (URI).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The parent XML document.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Adds the specified node to the end of the list of child nodes, of this node.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is first removed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> to add.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> added.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the base Uniform Resource Identifier (URI) of the node.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>A networked XML document is comprised of chunks of data aggregated using various World Wide Web Consortium (W3C) standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`BaseURI`</ph> tells you where these nodes came from.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information on <ph id="ph1">`BaseURI`</ph> and how it behaves with other node types, see <ph id="ph2">&lt;xref:System.Xml.XmlNode.BaseURI%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The location from which the node was loaded or String.Empty if the node has no base URI.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Attribute nodes have the same base URI as their owner element.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If an attribute node does not have an owner element, <ph id="ph1">`BaseURI`</ph> returns String.Empty.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of this node.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method serves as a copy constructor for nodes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlAttribute.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cloning an unspecified attribute returns a specified attribute (<ph id="ph1">&lt;xref:System.Xml.XmlAttribute.Specified%2A&gt;</ph> returns <ph id="ph2">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to recursively clone the subtree under the specified node; <ph id="ph2">`false`</ph> to clone only the node itself</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The duplicate node.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Sets the concatenated values of the node and all its children.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property replaces all the children with the parsed contents of the given string.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The concatenated values of the node and all its children.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>For attribute nodes, this property has the same functionality as the <ph id="ph1">&lt;xref href="System.Xml.XmlAttribute.Value"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Sets the value of the attribute.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The attribute value.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The XML specified when setting this property is not well-formed.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Inserts the specified node immediately after the specified reference node.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`refChild`</ph> is <ph id="ph2">`null`</ph>, insert <ph id="ph3">`newChild`</ph> at the beginning of the list of child nodes.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`newChild`</ph> is an <ph id="ph2">&lt;xref:System.Xml.XmlDocumentFragment&gt;</ph> object, its child nodes are inserted, in the same order, after <ph id="ph3">`refChild`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is first removed.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> to insert.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> that is the reference node.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is placed after the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">refChild</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> inserted.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">refChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Inserts the specified node immediately before the specified reference node.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`refChild`</ph> is <ph id="ph2">`null`</ph>, insert <ph id="ph3">`newChild`</ph> at the end of the list of child nodes.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`newChild`</ph> is an <ph id="ph2">&lt;xref:System.Xml.XmlDocumentFragment&gt;</ph> object, its child nodes are inserted, in the same order, before <ph id="ph3">`refChild`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is first removed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> to insert.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> that is the reference node.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is placed before this node.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> inserted.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The current node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">refChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the local name of the node.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node does not have a prefix, <ph id="ph1">`LocalName`</ph> is the same as <ph id="ph2">&lt;xref:System.Xml.XmlAttribute.Name%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The name of the attribute node with the prefix removed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>In the following example <ph id="ph1">&lt;book bk:genre= 'novel'&gt;</ph>, the <ph id="ph2">`LocalName`</ph> of the attribute is <ph id="ph3">`genre`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets the qualified name of the node.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute node.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the namespace URI of this node.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attribute does not inherit its namespace from the element it is attached to.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an attribute is not explicitly given a namespace, the namespace URI is considered to be String.Empty.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The namespace URI of this node.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>If the attribute is not explicitly given a namespace, this property returns String.Empty.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the type of the current node.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The node type for <ph id="ph1">`XmlAttribute`</ph> nodes is XmlNodeType.Attribute.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> to which this node belongs.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An XML document to which this node belongs.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> to which the attribute belongs.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlElement`</ph> that the attribute belongs to or <ph id="ph2">`null`</ph> if this attribute is not part of an <ph id="ph3">`XmlElement`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets the parent of this node.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlAttribute`</ph> nodes, this property always returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.OwnerElement%2A&gt;</ph> property to get the <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> to which the attribute belongs.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlAttribute`</ph> nodes, this property always returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace prefix of this node.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because changing the prefix of an attribute does not change its namespace URI, changing the prefix of an attribute that is known to have a default value does not create a new attribute with the default value and the original prefix.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The namespace prefix of this node.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>If there is no prefix, this property returns String.Empty.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The specified prefix contains an invalid character.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The specified prefix is malformed.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The namespaceURI of this node is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The specified prefix is "xml", and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This node is an attribute, the specified prefix is "xmlns", and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/".</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This node is an attribute, and the qualifiedName of this node is "xmlns" [Namespaces].</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Adds the specified node to the beginning of the list of child nodes for this node.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is first removed.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> to add.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>If it is an <ph id="ph1">&lt;xref href="System.Xml.XmlDocumentFragment"&gt;&lt;/xref&gt;</ph>, the entire contents of the document fragment are moved into the child list of this node.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> added.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes the specified child node.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> to remove.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> removed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Or this node is read-only.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Replaces the child node specified with the new child node specified.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is first removed.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> was created from another document, you can use <ph id="ph2">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The new child <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> to replace.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> replaced.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets the post-schema-validation-infoset that has been assigned to this node as a result of schema validation.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.SchemaInfo%2A&gt;</ph> property is set when this node is validated.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;&lt;/xref&gt;</ph> containing the post-schema-validation-infoset of this node.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the attribute value was explicitly set.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation is in charge of this property, not the user.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user changes the value of the attribute (even if it ends up having the same value as the default/fixed value), then the specified flag is automatically flipped to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>To re-specify the attribute as the default/fixed value from the DTD, the user must delete the attribute.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation then makes a new attribute available with specified set to <ph id="ph1">`false`</ph> and the default/fixed value (if one exists).</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>In summary:</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute has an assigned value in the document, <ph id="ph1">`Specified`</ph> is <ph id="ph2">`true`</ph>, and the value is the assigned value.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute has no assigned value in the document and has a default/fixed value in the DTD, <ph id="ph1">`Specified`</ph> is <ph id="ph2">`false`</ph>, and the value is the default/fixed value in the DTD.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the attribute does not appear in the structure model of the document.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this attribute was explicitly given a value in the original instance document; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A value of <ph id="ph1">`false`</ph> indicates that the value of the attribute came from the DTD.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the node.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The value returned depends on the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.NodeType"&gt;&lt;/xref&gt;</ph> of the node.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>For <ph id="ph1">`XmlAttribute`</ph> nodes, this property is the value of attribute.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The node is read-only and a set operation is called.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Saves all the children of the node to the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is functionally equivalent to the <ph id="ph1">&lt;xref:System.Xml.XmlAttribute.InnerXml%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Saves the node to the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is functionally equivalent to the <ph id="ph1">&lt;xref:System.Xml.XmlNode.OuterXml%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>