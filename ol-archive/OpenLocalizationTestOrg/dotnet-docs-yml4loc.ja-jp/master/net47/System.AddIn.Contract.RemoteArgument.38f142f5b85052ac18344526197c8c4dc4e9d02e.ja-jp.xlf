<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0e2357ffc3ce7a6a010539fee76c36babbb6ca96</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.AddIn.Contract.RemoteArgument.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba443563f3a91c84a947b4aa1081adf913bfbd68</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05c2fad75270731975903b5180830d5b412183f3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an instance of a type that can be passed across process and application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> structure to pass arguments of types that are not determined until run time across process and application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> is similar to that of the <ph id="ph2">`VARIANT`</ph> type in COM.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> to pass the following types and values as remote arguments:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Type.Missing?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.IContract&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Intrinsic data types.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arrays that contain elements of intrinsic data types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> provides constructors for each of the types that it supports.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A&gt;</ph> methods to create <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.CreateRemoteArgument%2A&gt;</ph> methods automatically call the appropriate <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor for your argument type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you create a <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> using the default parameterless constructor, the <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property is set to the value <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgumentKind?displayProperty=fullName&gt;</ph> and the <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property is set to the value <ph id="ph5">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Contract&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to the type code of the array element type, and the <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph5">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">array</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The array element type is not a base type (that is, the <ph id="ph1">&lt;xref href="System.Type.GetTypeCode(System.Type)"&gt;&lt;/xref&gt;</ph> method returns <ph id="ph2">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> for the array element type).</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Int16"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int16"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Single"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Single"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.UInt16"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UInt16"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.UInt32"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UInt32"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.UInt64"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UInt64"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class using the specified <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> for an argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor assigns the default value of the data type specified by the <ph id="ph1">`typeCode`</ph> parameter to the <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> values that indicates whether the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents an intrinsic type, an array of intrinsic types, an <ph id="ph3">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph>, or the <ph id="ph4">&lt;xref href="System.Type.Missing"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> that specifies the base type of the remote argument.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the remote argument is passed by reference; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;code&gt;typeCode&lt;/code&gt;</ph> is <ph id="ph5">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> or <ph id="ph6">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Missing"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;code&gt;typeCode&lt;/code&gt;</ph> is not <ph id="ph4">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Contract"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;code&gt;typeCode&lt;/code&gt;</ph> is not <ph id="ph4">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class using the specified <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> for an argument that is not passed by reference.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor assigns the default value of the data type specified by the <ph id="ph1">`typeCode`</ph> parameter to the <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> values that indicates whether the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents an intrinsic type, an array of intrinsic types, an <ph id="ph3">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph>, or the <ph id="ph4">&lt;xref href="System.Type.Missing"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> that specifies the base type of the remote argument.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;code&gt;typeCode&lt;/code&gt;</ph> is <ph id="ph5">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> or <ph id="ph6">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Missing"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;code&gt;typeCode&lt;/code&gt;</ph> is not <ph id="ph4">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;remoteArgKind&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Contract"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;code&gt;typeCode&lt;/code&gt;</ph> is not <ph id="ph4">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.SByte"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.SByte"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.UInt64"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UInt64"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to the type code of the array element type, and the <ph id="ph4">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The array element type is not a base type (that is, the <ph id="ph1">&lt;xref href="System.Type.GetTypeCode(System.Type)"&gt;&lt;/xref&gt;</ph> method for the array element type returns <ph id="ph2">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;array&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Contract&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to the value of the <ph id="ph6">`isByRef`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.SByte"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.SByte"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.Single"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Single"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.UInt16"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UInt16"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents a <ph id="ph2">&lt;xref href="System.UInt32"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.UInt32"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> class that represents an <ph id="ph2">&lt;xref href="System.Int16"&gt;&lt;/xref&gt;</ph> argument.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.RemoteArgumentKind%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.AddIn.Contract.RemoteArgumentKind.Intrinsic&gt;</ph>, the <ph id="ph3">&lt;xref:System.AddIn.Contract.RemoteArgument.TypeCode%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.TypeCode?displayProperty=fullName&gt;</ph>, and the <ph id="ph5">&lt;xref:System.AddIn.Contract.RemoteArgument.IsByRef%2A&gt;</ph> property to <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int16"&gt;&lt;/xref&gt;</ph> argument that can be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">`null`</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.IntrinsicArray"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is set to the <ph id="ph2">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">`false`</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Boolean"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Byte"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">&lt;xref href="System.Char.MinValue"&gt;&lt;/xref&gt;</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Char"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">`null`</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Contract"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> for an argument that is not passed by reference.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor that applies to the type of the <ph id="ph2">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The argument that will be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> that represents the specified argument.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">value</ph><ept id="p2">&lt;/code&gt;</ept> is not an <ph id="ph5">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">value</ph><ept id="p2">&lt;/code&gt;</ept> is not set to <ph id="ph5">&lt;xref href="System.Reflection.Missing.Value"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> does not implement the <ph id="ph2">&lt;xref href="System.IConvertible"&gt;&lt;/xref&gt;</ph> interface and <ph id="ph3">&lt;code&gt;value&lt;/code&gt;</ph> is not an <ph id="ph4">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that contains elements with a <ph id="ph3">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> value of <ph id="ph4">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> for an argument that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor that applies to the type of the <ph id="ph2">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The argument that will be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to pass the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> argument by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> that represents the specified argument.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">value</ph><ept id="p2">&lt;/code&gt;</ept> is not an <ph id="ph5">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">value</ph><ept id="p2">&lt;/code&gt;</ept> is not set to <ph id="ph5">&lt;xref href="System.Reflection.Missing.Value"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> does not implement the <ph id="ph2">&lt;xref href="System.IConvertible"&gt;&lt;/xref&gt;</ph> interface and <ph id="ph3">&lt;code&gt;value&lt;/code&gt;</ph> is not an <ph id="ph4">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that contains elements with a <ph id="ph3">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> value of <ph id="ph4">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> for an argument that has the specified type code and that can be passed by reference.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument.%23ctor%2A&gt;</ph> constructor that applies to the type of the <ph id="ph2">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use this method to create a <ph id="ph1">&lt;xref:System.AddIn.Contract.RemoteArgument&gt;</ph> that represents a <ph id="ph2">`null`</ph> array that contains elements of intrinsic data types.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The argument that will be passed across process or application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to pass the argument by reference; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> that indicates the type code of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p2">&lt;/code&gt;</ept> is not an <ph id="ph4">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Otherwise, a <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> that indicates the type code of the elements in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> that represents the specified argument.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">value</ph><ept id="p2">&lt;/code&gt;</ept> is not an <ph id="ph5">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph6">value</ph><ept id="p3">&lt;/code&gt;</ept> is not <ph id="ph7">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">value</ph><ept id="p2">&lt;/code&gt;</ept> is not <ph id="ph5">&lt;xref href="System.Reflection.Missing.Value"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> does not implement the <ph id="ph2">&lt;xref href="System.IConvertible"&gt;&lt;/xref&gt;</ph> interface, <ph id="ph3">&lt;code&gt;value&lt;/code&gt;</ph> is not <ph id="ph4">`null`</ph>, and <ph id="ph5">&lt;code&gt;value&lt;/code&gt;</ph> is not an <ph id="ph6">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that contains elements with a <ph id="ph3">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> value of <ph id="ph4">&lt;xref href="System.TypeCode.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is not <ph id="ph3">&lt;xref href="System.TypeCode.DBNull"&gt;&lt;/xref&gt;</ph> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">typeCodeToUse</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph5">&lt;xref href="System.TypeCode.DBNull"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;typeCodeToUse&lt;/code&gt;</ph> does not specify a valid <ph id="ph2">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.DateTime"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">`null`</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.DBNull"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Decimal"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0.0 if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Double"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Int16"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Int16"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Int16"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Int32"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Int64"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Int64"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents an argument that is passed by reference.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents an argument that is passed by reference; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Type.Missing"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type.Missing"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>This property value is retrieved while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Empty"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> that indicates the kind of argument that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>An intrinsic data type is a primitive data type (that is, the <ph id="ph1">&lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt;</ph> property of the type is <ph id="ph2">`true`</ph>) or a <ph id="ph3">&lt;xref:System.String&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph5">&lt;xref:System.DateTime&gt;</ph>, or <ph id="ph6">&lt;xref:System.DBNull&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> values that indicates whether the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents an intrinsic type, an array of intrinsic types, an <ph id="ph3">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph>, or the <ph id="ph4">&lt;xref href="System.Type.Missing"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.SByte"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.SByte"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.SByte"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Single"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Single"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0.0 if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.Single"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; <ph id="ph3">`null`</ph> if the value of the <ph id="ph4">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.String"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> that indicates the base type of the argument that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> that indicates the base type of the argument that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.UInt16"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.UInt16"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.UInt16"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.UInt32"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.UInt32"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.UInt32"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.UInt64"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.UInt64"&gt;&lt;/xref&gt;</ph> that the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> represents; 0 (zero) if the value of the <ph id="ph3">&lt;xref href="System.AddIn.Contract.RemoteArgument"&gt;&lt;/xref&gt;</ph> has not yet been specified.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.RemoteArgumentKind"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.AddIn.Contract.RemoteArgumentKind.Intrinsic"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.TypeCode"&gt;&lt;/xref&gt;</ph> property is not set to the <ph id="ph2">&lt;xref href="System.TypeCode.UInt64"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>This property is set while the <ph id="ph1">&lt;xref href="System.AddIn.Contract.RemoteArgument.IsByRef"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>