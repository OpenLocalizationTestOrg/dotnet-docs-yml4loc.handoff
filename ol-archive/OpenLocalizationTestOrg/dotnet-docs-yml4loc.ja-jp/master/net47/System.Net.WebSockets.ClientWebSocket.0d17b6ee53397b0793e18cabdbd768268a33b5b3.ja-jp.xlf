<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">900d213c29a8a92379da606e92454f98b6a74222</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.WebSockets.ClientWebSocket.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a5aece721448a2a642c455c589c5756b48a86d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e1dcd18636da5efc1ba15059858ba764dd62456</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a client for connecting to WebSocket services.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some of the classes and class elements in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class elements in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract class elements.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows an application developer to inherit and extend these abstract class classes and class elements with an actual implementation of client WebSockets.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates an instance of the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aborts the connection and cancels any pending IO operations.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Close the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance is closed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The WebSocket close status.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A description of the close status.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Close the output for the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the output on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance is closed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The WebSocket close status.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A description of the close status.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the reason why the close handshake was initiated on <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocketCloseStatus"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The reason why the close handshake was initiated.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a description of the reason why the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance was closed.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The description of the reason why the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance was closed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Connect to a WebSocket server as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket.ConnectAsync%2A&gt;</ph> method initiates the WebSocket handshake with a remote network destination, and then negotiates the sub-protocol.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For plain WebSocket connections, use the <ph id="ph1">`ws://`</ph> scheme in the uri.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For secure WebSocket connections over TLS/SSL, use the <ph id="ph1">`wss://`</ph> scheme.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the connect request on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance has completed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The URI of the WebSocket server to connect to.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A cancellation token used to propagate notification that the  operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets the WebSocket options for the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocketOptions"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The WebSocket options for the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Receive data on <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the receive request on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance has completed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> object in parallel.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The buffer to receive the response.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Send data on <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> as an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the send request on the <ph id="ph2">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> instance has completed.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.ClientWebSocket&gt;</ph> object in parallel.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The buffer containing the message to be sent.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Specifies whether the buffer is clear text or in a binary format.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Specifies whether this is the final asynchronous send.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Set to <ph id="ph1">`true`</ph> if this is the final send; <ph id="ph2">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A cancellation token used to propagate notification that this  operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Get the WebSocket state of the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocketState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The WebSocket state of the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the supported WebSocket sub-protocol for the <ph id="ph1">&lt;xref href="System.Net.WebSockets.ClientWebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The supported WebSocket sub-protocol.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>