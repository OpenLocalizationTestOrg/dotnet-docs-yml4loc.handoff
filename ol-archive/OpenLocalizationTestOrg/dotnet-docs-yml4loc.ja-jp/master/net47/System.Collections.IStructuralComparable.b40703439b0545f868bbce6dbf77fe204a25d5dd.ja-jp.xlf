<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b244d91af00141ab8d2173f85f2aa5f7790c2099</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Collections.IStructuralComparable.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82c06b5847e38b5166f6e95bcb85d154aac729ec</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a16b8848d0fca8971ba2f8c356a7398280d3602b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Supports the structural comparison of collection objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface enables you to implement customized comparisons for collection members.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, you can define precisely what it means for one collection object to precede, follow, or occur in the same position in the sort order as a second collection object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then specify that this definition be used with a collection type that accepts the <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The interface has a single member, <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph>, which determines whether the current collection object is less than, equal to, or greater than a second object in the sort order.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual comparison of the members or elements in the current instance with those in a second object is performed by an <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface implementation, which contains the definition of your custom comparison.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface supports only structural comparisons for sorting or ordering.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralEquatable&gt;</ph> interface supports custom comparisons for structural equality.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework provides two default comparers.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>One is returned by the <ph id="ph1">&lt;xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=fullName&gt;</ph> property; the other is returned by the <ph id="ph2">&lt;xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generic tuple classes (<ph id="ph1">&lt;xref:System.Tuple%601&gt;</ph>, <ph id="ph2">&lt;xref:System.Tuple%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Tuple%603&gt;</ph>, and so on) and the <ph id="ph4">&lt;xref:System.Array&gt;</ph> class provide explicit implementations of the <ph id="ph5">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By casting (in C#) or converting (in Visual Basic) the current instance of an array or tuple to an <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable&gt;</ph> interface value and providing your <ph id="ph2">&lt;xref:System.Collections.IComparer&gt;</ph> implementation as an argument to the <ph id="ph3">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method, you can define a custom sort order for the array or collection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you do not call the <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method directly in most cases.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method is called by sorting methods such as <ph id="ph2">&lt;xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you define your <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> implementation and pass it as an argument to a sorting method or collection object's class constructor.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method with your custom comparer is then called automatically whenever the collection is sorted.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method supports custom structural comparison and sorting of array and tuple objects.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method calls the <ph id="ph2">`comparer`</ph> object's <ph id="ph3">&lt;xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName&gt;</ph> method to compare individual array elements or tuple components, starting with the first element or component.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The individual calls to <ph id="ph1">&lt;xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName&gt;</ph> end and the <ph id="ph2">&lt;xref:System.Collections.IStructuralComparable.CompareTo%2A&gt;</ph> method returns a value when one of the following conditions becomes true:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName&gt;</ph> method returns -1.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName&gt;</ph> method returns 1.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IComparer.Compare%2A?displayProperty=fullName&gt;</ph> method is called for the last element or component in the collection object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The object to compare with the current instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An object that compares members of the current collection object with the corresponding members of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An integer that indicates the relationship of the current collection object to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The current instance precedes <ph id="ph1">&lt;code&gt;other&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The current instance and <ph id="ph1">&lt;code&gt;other&lt;/code&gt;</ph> are equal.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The current instance follows <ph id="ph1">&lt;code&gt;other&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This instance and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">other</ph><ept id="p1">&lt;/code&gt;</ept> are not the same type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>