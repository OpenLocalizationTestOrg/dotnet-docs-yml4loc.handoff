<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7e20c99306b6e78900c3c63528c4aebd88b97b0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Text.DecoderExceptionFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ee5d74e546b67b31ea1c1d54251d6d6db08e704</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b1283b517e280be0ea23658737290ee525f6f8e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Throws <ph id="ph1">&lt;xref href="System.Text.DecoderFallbackException"&gt;&lt;/xref&gt;</ph> when an encoded input byte sequence cannot be converted to a decoded output character.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the input byte sequence cannot be converted to an output character, the decoding operation calls the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method, which throws <ph id="ph2">&lt;xref:System.Text.DecoderFallbackException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderFallbackBuffer?displayProperty=fullName&gt;</ph> class, which represents a data buffer used in a decoding operation, is the base class for the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, instead of a data buffer, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> class represents a standard behavior in which an exception is thrown if a decoding operation fails.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Throws <ph id="ph1">&lt;xref href="System.Text.DecoderFallbackException"&gt;&lt;/xref&gt;</ph> when the input byte sequence cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The nominal return value is not used.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Decoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown byte in their input.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In response, the <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method always throws <ph id="ph2">&lt;xref:System.Text.DecoderFallbackException&gt;</ph> and displays the input data.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method nominally indicates whether an exception is thrown if an input byte sequence cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An input array of bytes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The index position of a byte in the input.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>No value is returned because the <ph id="ph1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer.Fallback(System.Byte[],System.Int32)"&gt;&lt;/xref&gt;</ph> method always throws an exception.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The nominal return value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method always throws an exception that reports the value and index position of the input byte that cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the exception data buffer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> method always returns the Unicode NULL character.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The return value is always the Unicode character NULL (U+0000).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Causes the next call to <ph id="ph1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer.GetNextChar"&gt;&lt;/xref&gt;</ph> to access the exception data buffer character position that is prior to the current position.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> method always returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The return value is always <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current <ph id="ph1">&lt;xref href="System.Text.DecoderExceptionFallbackBuffer"&gt;&lt;/xref&gt;</ph> object that remain to be processed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Text.DecoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.DecoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> property always returns zero.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>