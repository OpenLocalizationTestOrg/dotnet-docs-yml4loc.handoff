<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82f3d9c0dfb217476fe0d59aa8c26b1d53ec4572</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.CommunicationException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19e23b2aa1932597896d1c7777d1f684f840ac64</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0f84ce8daf56c8d0b972f3f80f92bfc39742248</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a communication error in either the service or client application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Robust client and service <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> applications handle <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> objects that may be thrown during communication.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are also two <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>-derived exception types (<ph id="ph2">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.FaultException&gt;</ph>) that clients also often expect.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, in order to prevent the generic <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> handler from catching these more specific exception types, catch these exceptions prior to handling <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.FaultException%601&gt;</ph> objects are thrown on the client when a SOAP fault that is specified in the operation contract is received in response to a two-way operation (that is, a method with an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute with <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> set to <ph id="ph4">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph> objects are thrown when a listener receives a SOAP fault that is not expected or specified in the operation contract.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This usually occurs when the application is being debugged and the service has the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A&gt;</ph> property set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When implementing custom channels and binding elements, it is strongly recommended that your components throw only <ph id="ph1">&lt;xref:System.TimeoutException?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>-derived objects.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case where your components throw a recoverable exception that is specific to the component, wrap that exception inside a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph>object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details about designing and using the <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> fault system, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The WCF Runtime will not throw a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationException&gt;</ph> that is unsafe to handle at the point where it leaves the WCF Runtime and enters user code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationException"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationException"&gt;&lt;/xref&gt;</ph> class, using the specified message.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The description of the error condition.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationException"&gt;&lt;/xref&gt;</ph> class, using the specified serialization information and context objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Information relevant to the deserialization process.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The context of the deserialization process.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationException"&gt;&lt;/xref&gt;</ph> class, using the specified message and the inner exception.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The description of the error condition.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The inner exception to be used.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>