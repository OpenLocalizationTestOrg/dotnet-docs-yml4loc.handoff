<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">664be22e22536338829aa8cf8d0ee620eb7503de</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XPath.XPathNodeIterator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7d83bc560763a046f0d2d59340162bf4869834</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5cd5c45f77b3b004806ac6b31c17392f264b72e0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an iterator over a selected set of nodes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class is not positioned on the first node in a selected set of nodes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A call to the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class must be made to position the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object on the first node in the selected set of nodes.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>, if you edit the current node or any of its ancestors, your current position is lost.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to edit a number of nodes that you have selected, create a <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> array, copy all of the nodes from the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> into the array, then iterate through the array and modify the nodes.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#55)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#55)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#55)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#56<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#56)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#56<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#56)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#56<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#56)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should either use <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining these two approaches can cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a clone of this <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is positioned at the same node in the node set if calls have been made to the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is not affected by subsequent changes to this <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;&lt;/xref&gt;</ph> object clone of this <ph id="ph2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the index of the last node in the selected set of nodes.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> property does not affect the position of the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The index of the last node in the selected set of nodes, or 0 if there are no selected nodes.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for this <ph id="ph2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;&lt;/xref&gt;</ph>, positioned on the current context node.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the properties of the returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object to obtain information on the current node.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object should not be modified.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object cannot be moved away from the selected node set.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can clone the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.Clone%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cloned <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object can then be moved away from the selected node set.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method of cloning the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> object might affect the performance of the XPath query.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator.SelectAncestors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNavigator.SelectDescendants%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator.SelectChildren%2A&gt;</ph> methods result in no nodes being selected, the <ph id="ph4">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> property might not be pointing to the context node.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To test whether nodes have been selected, use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.Count%2A&gt;</ph> property as shown in the following example.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object positioned on the context node from which the node set was selected.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNodeIterator.MoveNext"&gt;&lt;/xref&gt;</ph> method must be called to move the <ph id="ph2">&lt;xref href="System.Xml.XPath.XPathNodeIterator"&gt;&lt;/xref&gt;</ph> to the first node in the selected set.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the index of the current position in the selected set of nodes.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The index is 1-based.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the first node has an index of 1.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>An index of 0 indicates there are no selected nodes.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property always returns a positive integer.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The index of the current position.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> object to iterate through the selected node set.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator is positioned on the current position of the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#55)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#55)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#55)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#56<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#56)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#56<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#56)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#56<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#56)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should either use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining these two approaches can cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> object to iterate through the selected node set.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, moves the <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object returned by the <ph id="ph2">&lt;xref href="System.Xml.XPath.XPathNodeIterator.Current"&gt;&lt;/xref&gt;</ph> property to the next node in the selected node set.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> object is positioned on the first node in the selected node set only after the initial call to the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The node set is created in document order.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, calling the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method moves to the next node in document order.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways to iterate over an <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> collection by using the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>One way is to use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and then call <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> to get the current <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNavigator&gt;</ph> instance, as in the following example:</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#55<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#55)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#55<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#55)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#55<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#55)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another way is to use a <ph id="ph1">`foreach`</ph> loop to call the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method and use the returned <ph id="ph3">&lt;xref:System.Collections.IEnumerator&gt;</ph> interface to enumerate the nodes, as in the following example:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>XPathNavigatorMethods#56<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Data/XPathNavigatorMethods/CPP/xpathnavigatormethods.cpp#56)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>XPathNavigatorMethods#56<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Data/XPathNavigatorMethods/CS/xpathnavigatormethods.cs#56)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>XPathNavigatorMethods#56<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Data/XPathNavigatorMethods/VB/xpathnavigatormethods.vb#56)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should either use the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> or use the <ph id="ph3">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Combining these two approaches can cause unexpected results.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator.MoveNext%2A&gt;</ph> method is called first, and then the <ph id="ph2">&lt;xref:System.Xml.XPath.XPathNodeIterator.GetEnumerator%2A&gt;</ph> method is called in the <ph id="ph3">`foreach`</ph> loop, the <ph id="ph4">`foreach`</ph> loop will not start enumerating the results from the beginning of the collection, but from the position after the <ph id="ph5">&lt;xref:System.Xml.XPath.XPathNodeIterator.Current%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object moved to the next node; <ph id="ph3">`false`</ph> if there are no more selected nodes.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Creates a new object that is a copy of the current instance.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XPath.XPathNodeIterator&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A new object that is a copy of this instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>