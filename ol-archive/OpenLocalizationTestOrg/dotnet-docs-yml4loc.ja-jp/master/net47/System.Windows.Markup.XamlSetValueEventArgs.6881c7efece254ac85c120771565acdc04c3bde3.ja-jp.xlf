<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab0cf571abd03cc85b513cfaecacfb99187b30e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.XamlSetValueEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afc181d22b258efe8032f32fea277d5b99761774</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eed42ccd87a2705fc1b8df4e8678c97fe0cdb475</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides data for callbacks that are invoked when a <ph id="ph1">&lt;xref href="System.Xaml.XamlObjectWriter"&gt;&lt;/xref&gt;</ph> sets certain values.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> provides data specifically for callbacks associated with a <ph id="ph2">&lt;xref:System.Xaml.XamlObjectWriter&gt;</ph> or its settings.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callbacks use the generic <ph id="ph1">&lt;xref:System.EventHandler%601&gt;</ph> delegate, with <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> event data constraint.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event data class is potentially used for set-value callback scenarios that are not specifically markup extensions or type converters acting.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are also two subclasses of <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs&gt;</ph> for more specific XAML value setting cases, and the specific event data class constrains that event data.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ph> is used for the markup extension callback case and <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ph> is used for the type converter callback case.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a scenario where the set-value operation is not a markup extension or type converter is the DataTrigger scenario in WPF data binding.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Markup.XamlSetValueEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>XAML type system / schema information for the member being set.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The value to provide for the member.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides a way to invoke a <ph id="ph1">`SetValue`</ph> callback as defined on a base class of the current acting type.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetValueEventArgs.CallBase%2A&gt;</ph> might be invoked as part of a <ph id="ph2">`ReceiveMarkupExtension`</ph> implementation, in cases where the implementation is expecting a particular markup extension as the primary case but wants a way to attempt alternative cases without immediately failing.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful for dealing with a markup extension that might itself be extensible.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "current acting type information" is only available internally, and refers to the type of the instance where the set operation is occurring.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ph> both override this method by using the internal current acting type information.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether a caller that is using the <ph id="ph1">&lt;xref href="System.Windows.Markup.XamlSetValueEventArgs"&gt;&lt;/xref&gt;</ph> can use the values without having to call <ph id="ph2">&lt;xref href="System.Windows.Markup.XamlSetValueEventArgs.CallBase"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property as a sentinel for cases where a callback referenced as <ph id="ph1">&lt;xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute.XamlSetMarkupExtensionHandler%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.XamlSetTypeConverterAttribute.XamlSetTypeConverterHandler%2A&gt;</ph> has code pathways that has processed the set value attempt.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the values were useful and calling <ph id="ph2">&lt;xref href="System.Windows.Markup.XamlSetValueEventArgs.CallBase"&gt;&lt;/xref&gt;</ph> is not necessary; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets XAML type system and XAML schema information for the member being set.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>XAML type system and XAML schema information for the member being set.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the value to provide for the member being set.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The value to provide for the member being set.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>