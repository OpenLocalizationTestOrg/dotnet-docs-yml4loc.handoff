<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dad768a9a0bf490e649dc77e517d2cff98bef9c2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.Win32.RegistryKey.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ab944e0e35d05d05205388ea36ab59ab9a4dd07</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9585731ccf2f79a1510c36149322069851e37526</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a key-level node in the Windows registry.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is a registry encapsulation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The registry acts as a central repository of information for the operating system and the applications on a computer.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The registry is organized in a hierarchical format, based on a logical ordering of the elements stored within it (please see <ph id="ph1">&lt;xref:Microsoft.Win32.Registry&gt;</ph> for the base-level items in this hierarchy).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When storing information in the registry, select the appropriate location based on the type of information being stored.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Be sure to avoid destroying information created by other applications, because this can cause those applications to exhibit unexpected behavior, and can also have an adverse effect upon your own application.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registry keys are the base unit of organization in the registry, and can be compared to folders in File Explorer.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A particular key can have subkeys, just as a folder can have subfolders.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each key can be deleted, as long as the user has the appropriate permissions to do so, and the key is not a base key or at the level directly under the base keys.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each key can also have multiple values associated with it (a value can be compared to a file), which are used to store the information â€” for example, information about an application installed on the computer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each value holds one particular piece of information, which can be retrieved or updated when required.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For instance, you can create a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> for your company, under the key HKEY_LOCAL_MACHINE\Software, and then a subkey for each application that your company creates.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each subkey holds the information specific to that application, such as color settings, screen location and size, or recognized file extensions.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that information stored in the registry is available to other applications and users, and therefore should not be used to store security data or critical application information.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the length of a registry key is no longer limited to 255 characters.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Closes the key and flushes it to disk if its contents have been modified.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method on system keys will have no effect, because system keys are never closed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does nothing if you call it on an instance of <ph id="ph1">`RegistryKey`</ph> that is already closed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates a new subkey or opens an existing subkey for write access.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If a zero-length string is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept>, the current <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> on which this method is being invoked is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> cannot be written to; for example, it was not opened as a writable key , or the user does not have the necessary access rights.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key, or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether the key is opened for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If a zero-length string is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept>, the current <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;permissionCheck&lt;/code&gt;</ph> contains an invalid value.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> on which this method is being invoked is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key, or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Creates a new subkey or opens an existing subkey with the specified access.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the new subkey is writable; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>If a zero-length string is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept>, the current <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key, or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Creates a subkey or opens a subkey for write access, using the specified permission check and registry options.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the current <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object, specify an empty string ("") for <ph id="ph2">`subkey`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether the key is opened for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The registry option to use; for example, that creates a volatile key.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Creates a new subkey or opens an existing subkey for write access, using the specified permission check option and registry security.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A&gt;</ph> method creates a registry key that has the access control specified by the <ph id="ph2">`registrySecurity`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object that is returned represents the registry key, but that object is not restricted by the access control specified in the <ph id="ph2">`registrySecurity`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`permissionCheck`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>, the key is opened for read/write access.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`permissionCheck`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>, the key is opened for read access.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>For backward compatibility, the key is opened for reading and writing if <ph id="ph1">`permissionCheck`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph> and the parent key also has <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parent key has any other setting, read/write status is controlled by the parent key's setting.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to perform this action, the user must have permissions at this level and below in the registry hierarchy.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether the key is opened for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The access control security for the new key.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>If a zero-length string is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept>, the current <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;permissionCheck&lt;/code&gt;</ph> contains an invalid value.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> on which this method is being invoked is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key, or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Creates a new subkey or opens an existing subkey with the specified access.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to perform this action, the user must have permission at this level and below in the registry hierarchy.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.CreateSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the new subkey is writable; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The registry option to use.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>If a zero-length string is specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept>, the current <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is returned.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> does not specify a valid Option</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> cannot be written to; for example, it was not opened as a writable key, or the user does not have the necessary access rights.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key, or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Creates a subkey or opens a subkey for write access, using the specified permission check option, registry option, and registry security.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the current <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object, specify an empty string ("") for <ph id="ph2">`subkey`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether the key is opened for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The registry option to use.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The access control security for the new subkey.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The newly created subkey, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object is closed.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Closed keys cannot be accessed.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object cannot be written to; for example, it was not opened as a writable key, or the user does not have the required access rights.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The nesting level exceeds 510.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the key or an attempt to create a key in the <ph id="ph1">&lt;xref href="Microsoft.Win32.Registry.LocalMachine"&gt;&lt;/xref&gt;</ph> root.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or open the registry key.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Deletes the specified subkey.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>To delete child subkeys, use <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use caution when deleting registry keys.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The name of the subkey to delete.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept> has child subkeys</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">subkey</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not specify a valid registry key</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to delete the key.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Deletes the specified subkey, and specifies whether an exception is raised if the subkey is not found.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>To delete child subkeys, use <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.DeleteSubKeyTree%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use caution when deleting registry keys.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The name of the subkey to delete.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Indicates whether an exception should be raised if the specified subkey cannot be found.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>If this argument is <ph id="ph1">`true`</ph> and the specified subkey does not exist, an exception is raised.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If this argument is <ph id="ph1">`false`</ph> and the specified subkey does not exist, no action is taken.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> has child subkeys.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> does not specify a valid registry key, and <ph id="ph2">&lt;code&gt;throwOnMissingSubKey&lt;/code&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to delete the key.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Deletes the specified subkey and any child subkeys recursively, and specifies whether an exception is raised if the subkey is not found.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The name of the subkey to delete.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Indicates whether an exception should be raised if the specified subkey cannot be found.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>If this argument is <ph id="ph1">`true`</ph> and the specified subkey does not exist, an exception is raised.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>If this argument is <ph id="ph1">`false`</ph> and the specified subkey does not exist, no action is taken.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>An attempt was made to delete the root hive of the tree.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> does not specify a valid registry subkey, and <ph id="ph2">&lt;code&gt;throwOnMissingSubKey&lt;/code&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to delete the key.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Deletes a subkey and any child subkeys recursively.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have appropriate permissions to delete the subkey and its tree.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deleting a particular key will remove all entries below the key in the tree.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>No warning will be provided.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to delete a subkey only when it has no child subkeys, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.DeleteSubKey%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The subkey to delete.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Deletion of a root hive is attempted.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;subkey&lt;/code&gt;</ph> does not specify a valid registry subkey.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>An I/O error has occurred.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to delete the key.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Deletes the specified value from this key.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the <ph id="ph1">`name`</ph> parameter does not delete the default value.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The name of the value to delete.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid reference to a value.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to delete the value.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is read-only.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Deletes the specified value from this key, and specifies whether an exception is raised if the value is not found.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`throwOnMissingValue`</ph> is <ph id="ph2">`false`</ph>, there is no way to tell if the deletion was successful, without subsequently trying to access the value just deleted.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, use caution when deleting values from the registry in this manner.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows 95, Windows 98, Windows 98 Second Edition, and Windows Millennium Edition, specifying an empty string for the <ph id="ph1">`name`</ph> parameter does not delete the default value.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The name of the value to delete.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Indicates whether an exception should be raised if the specified value cannot be found.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>If this argument is <ph id="ph1">`true`</ph> and the specified value does not exist, an exception is raised.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>If this argument is <ph id="ph1">`false`</ph> and the specified value does not exist, no action is taken.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid reference to a value and <ph id="ph2">&lt;code&gt;throwOnMissingValue&lt;/code&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to delete the value.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is read-only.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Writes all the attributes of the specified open registry key into the registry.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to call <ph id="ph1">`Flush`</ph> to write out changes to a key.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registry changes are flushed to disk when the registry uses its lazy flusher.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lazy flushing occurs automatically and regularly after a system-specified time interval.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Registry changes are also flushed to disk at system shutdown.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.Close%2A&gt;</ph>, the <ph id="ph2">`Flush`</ph> function returns only when all the data has been written to the registry.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Flush`</ph> function might also write out parts of or all of the other keys.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this function excessively can have a negative effect on an application's performance.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application should only call <ph id="ph1">`Flush`</ph> if it must be absolute certain that registry changes are recorded to disk.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, <ph id="ph1">`Flush`</ph> rarely, if ever, need be used.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Creates a registry key from a specified handle.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The handle to the registry key.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A registry key.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;handle&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to perform this action.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Creates a registry key from a specified handle and registry view setting.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`view`</ph> parameter for this method is used in subsequent operations, such as opening subkeys.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`view`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryView.Registry64&gt;</ph> but the machine is running a 32-bit operating system, the returned key will use the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryView.Registry32&gt;</ph> view.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The handle to the registry key.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The registry view to use.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>A registry key.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;view&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;handle&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to perform this action.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Returns the access control security for the current registry key.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overload is equivalent to calling the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%28System.Security.AccessControl.AccessControlSections%29&gt;</ph> method overload with the bitwise combination of the following flags: <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use that overload to search for other permissions.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user must have <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName&gt;</ph> rights to call this method.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>An object that describes the access control permissions on the registry key represented by the current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary permissions.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The current key has been deleted.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Returns the specified sections of the access control security for the current registry key.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>To request the access permissions currently granted to users, specify the bitwise combination of the following flags: <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Security.AccessControl.AccessControlSections?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl&gt;</ph> method overload, which specifies exactly that combination of values.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user must have <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName&gt;</ph> rights to call this method.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies the type of security information to get.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>An object that describes the access control permissions on the registry key represented by the current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary permissions.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The current key has been deleted.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Retrieves an array of strings that contains all the subkey names.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not recursively find names.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns the names on the base level from which it was called.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>An array of strings that contains the names of the subkeys for the current key.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read from the key.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>A system error occurred, for example the current key has been deleted.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Retrieves the value associated with the specified name and retrieval options.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>If the name is not found, returns the default value that you provide.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to specify special processing of the retrieved value.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can specify <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueOptions?displayProperty=fullName&gt;</ph> when retrieving a registry value of type <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph> to retrieve the string without expanding embedded environment variables.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`defaultValue`</ph> parameter to specify the value to return if <ph id="ph2">`name`</ph> does not exist.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have one value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> does not support reading values of type REG_NONE or REG_LINK.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>In both cases, the default value (<ph id="ph1">`null`</ph>) is returned instead of the actual value.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The value to return if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies optional processing of the retrieved value.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, processed according to the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">options</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">defaultValue</ph><ept id="p3">&lt;/code&gt;</ept> if <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">name</ph><ept id="p4">&lt;/code&gt;</ept> is not found.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read from the registry key.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value has been marked for deletion.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;options&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryValueOptions"&gt;&lt;/xref&gt;</ph> value; for example, an invalid value is cast to <ph id="ph3">&lt;xref href="Microsoft.Win32.RegistryValueOptions"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Retrieves the value associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if the name/value pair does not exist in the registry.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have one value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> method retrieves expandable string values (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), it expands environment strings using data from the local environment.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve expandable string values from the registry on a remote computer, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueOptions%29&gt;</ph> method overload to specify that you do not want environment strings expanded.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value containing expandable references to environment variables has been stored as a string (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), rather than as an expandable string (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> does not expand it.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can expand such a string after it has been retrieved by calling the <ph id="ph1">&lt;xref:System.Environment.ExpandEnvironmentVariables%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to retrieve data from the <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.PerformanceData&gt;</ph> key is to use the <ph id="ph2">&lt;xref:System.Diagnostics.PerformanceCounter&gt;</ph> class rather than the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> does not support reading values of type REG_NONE or REG_LINK.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>In both cases, the default value (<ph id="ph1">`null`</ph>) is returned instead of the actual value.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, or <ph id="ph2">`null`</ph> if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">name</ph><ept id="p2">&lt;/code&gt;</ept> is not found.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read from the registry key.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value has been marked for deletion.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Retrieves the value associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>If the name is not found, returns the default value that you provide.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> to handle the case where a name does not exist yet â€” for example, the first time your application is run.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever you call this overload, use the <ph id="ph1">`defaultValue`</ph> parameter to specify the value to return if <ph id="ph2">`name`</ph> does not exist.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have one value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> method retrieves expandable string values (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), it expands environment strings using data from the local environment.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve expandable string values from the registry on a remote computer, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> overload to specify that you do not want environment strings expanded.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a value containing expandable references to environment variables has been stored as a string (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), rather than as an expandable string (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> method does not expand it.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can expand such a string after it has been retrieved by calling the <ph id="ph1">&lt;xref:System.Environment.ExpandEnvironmentVariables%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended way to retrieve data from the <ph id="ph1">&lt;xref:Microsoft.Win32.Registry.PerformanceData&gt;</ph> key is to use the <ph id="ph2">&lt;xref:System.Diagnostics.PerformanceCounter&gt;</ph> class rather than the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValue%2A&gt;</ph> does not support reading values of type REG_NONE or REG_LINK.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>In both cases, the default value (<ph id="ph1">`null`</ph>) is returned instead of the actual value.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The value to return if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, with any embedded environment variables left unexpanded, or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">defaultValue</ph><ept id="p2">&lt;/code&gt;</ept> if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">name</ph><ept id="p3">&lt;/code&gt;</ept> is not found.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read from the registry key.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value has been marked for deletion.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Retrieves the registry data type of the value associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have one value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the registry data type of this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of supported registry data types, please see the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The name of the value whose registry data type is to be retrieved.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>This string is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The registry data type of the value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read from the registry key.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>The subkey that contains the specified value does not exist.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>The name/value pair specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>This exception is not thrown on Windows 95, Windows 98, or Windows Millennium Edition.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Retrieves an array of strings that contains all the value names associated with this key.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no value names for the key are found, an empty array is returned.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have a default value â€” that is, a name/value pair in which the name is the empty string ("").</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a default value has been set for a registry key, the array returned by the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetValueNames%2A&gt;</ph> method includes the empty string.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>An array of strings that contains the value names for the current key.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read from the registry key.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>A system error occurred; for example, the current key has been deleted.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="Microsoft.Win32.SafeHandles.SafeRegistryHandle"&gt;&lt;/xref&gt;</ph> object that represents the registry key that the current <ph id="ph2">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object encapsulates.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The handle to the registry key.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The registry key is closed.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>Closed keys cannot be accessed.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>A system error occurred, such as deletion of the current key.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read the key.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Retrieves the name of the key.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of the key includes the absolute path of this key in the registry, always starting at a base key, for example, HKEY_LOCAL_MACHINE.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>The absolute (qualified) name of the key.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Opens a new <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that represents the requested key on the local machine with the specified view.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The HKEY to open.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The registry view to use.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The requested registry key.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hKey&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;view&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to perform this action.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Opens a new <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that represents the requested key on a remote machine.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local machine registry is opened if <ph id="ph1">`machineName`</ph> is <ph id="ph2">&lt;xref:System.String?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requested key must be a root key on the remote machine, and is identified by the appropriate <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryHive&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The HKEY to open, from the <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryHive"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The remote machine.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The requested registry key.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hKey&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is not found.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The user does not have the proper permissions to perform this operation.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Opens a new registry key that represents the requested key on a remote machine with the specified view.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local machine registry is opened if <ph id="ph1">`machineName`</ph> is <ph id="ph2">&lt;xref:System.String?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>The requested key must be a root key on the remote machine, and is identified by the appropriate <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryHive&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for a key to be opened remotely, both the server and client machines must be running the remote registry service, and have remote administration enabled.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`view`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryView.Registry64&gt;</ph> but the remote machine is running a 32-bit operating system, the returned key will use the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryView.Registry32&gt;</ph> view.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The HKEY to open from the <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryHive"&gt;&lt;/xref&gt;</ph> enumeration..</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The remote machine.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>The registry view to use.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The requested registry key.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hKey&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;view&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is not found.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The user does not have the required permissions to perform this operation.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Retrieves the specified subkey for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than throwing an exception, this method returns <ph id="ph1">`null`</ph> if the requested key does not exist.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`permissionCheck`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>, the key is opened for reading and writing; if <ph id="ph3">`permissionCheck`</ph> is <ph id="ph4">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph> or <ph id="ph5">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>, the key is opened for reading unless the parent key was opened with <ph id="ph6">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether the key is opened for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>The subkey requested, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;permissionCheck&lt;/code&gt;</ph> contains an invalid value.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read the registry key.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>Retrieves the specified subkey for read or read/write access, requesting the specified access rights.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than throwing an exception, this method returns <ph id="ph1">`null`</ph> if the requested key does not exist.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`permissionCheck`</ph> is <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>, the key is opened for reading and writing; if <ph id="ph3">`permissionCheck`</ph> is <ph id="ph4">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph> or <ph id="ph5">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>, the key is opened for reading unless the parent key was opened with <ph id="ph6">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>The access specified for <ph id="ph1">`permissionCheck`</ph> takes precedence over the access specified for <ph id="ph2">`rights`</ph>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you specify <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKeyPermissionCheck?displayProperty=fullName&gt;</ph> for <ph id="ph2">`permissionCheck`</ph> and <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistryRights?displayProperty=fullName&gt;</ph> for <ph id="ph4">`rights`</ph>, an attempt to write to the subkey throws an exception.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether the key is opened for read or read/write access.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies the desired security access.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>The subkey requested, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;permissionCheck&lt;/code&gt;</ph> contains an invalid value.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rights&lt;/code&gt;</ph> includes invalid registry rights values.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The user does not have the requested permissions.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Retrieves a subkey with the specified name and .</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Available starting in <ph id="ph1">[!INCLUDE[net_2015](~/includes/net-2015-md.md)]</ph></source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must open a key before it can be manipulated with other methods and properties.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>To modify a key, you must open it with an overload of the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method that allows you to specify write access.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to create or open.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The rights for the registry key.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The subkey requested, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to access the registry key in the specified mode.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>Retrieves a subkey as read-only.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must open a key before it can be manipulated with other methods and properties.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>To modify a key, you must open it with an overload of the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method that allows you to specify write access, such as the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CMicrosoft.Win32.RegistryKeyPermissionCheck%29&gt;</ph> overload or the <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%28System.String%2CSystem.Boolean%29&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified subkey cannot be found, then <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method, you must have an instance of <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use the one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The name or path of the subkey to open as read-only.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The subkey requested, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to read the registry key.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Retrieves a specified subkey, and specifies whether write access is to be applied to the key.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the requested key does not exist, this method returns <ph id="ph1">`null`</ph> instead of throwing an exception.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`writable`</ph> is <ph id="ph2">`true`</ph>, the key will be opened for reading and writing, otherwise, the key will be opened as read-only.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.OpenSubKey%2A&gt;</ph> method, you must have an instance of the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get an instance of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>, use one of the static members of the <ph id="ph2">&lt;xref:Microsoft.Win32.Registry&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Name or path of the subkey to open.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Set to <ph id="ph1">`true`</ph> if you need write access to the key.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The subkey requested, or <ph id="ph1">`null`</ph> if the operation failed.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to access the registry key in the specified mode.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>Applies Windows access control security to an existing registry key.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>To modify permissions for a registry key, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A&gt;</ph> method to obtain a <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object representing the existing Windows access control security, modify that <ph id="ph3">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object, and then use the <ph id="ph4">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A&gt;</ph> method to update security for the key.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object specified for <ph id="ph2">`registrySecurity`</ph> replaces the existing security for the registry key.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A&gt;</ph> method to obtain the existing access control security, and then modify it.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The access control security to apply to the current subkey.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object represents a key with access control security, and the caller does not have <ph id="ph2">&lt;xref href="System.Security.AccessControl.RegistryRights.ChangePermissions"&gt;&lt;/xref&gt;</ph> rights.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registrySecurity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Sets the specified name/value pair.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because many values can be stored in each key in the registry, you must use the <ph id="ph1">`name`</ph> parameter to specify the particular value you want to set.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have one value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to set values in a key, you must open the key with write access.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you have opened a key with write access, you can change any of the name/value pairs in that key.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified <ph id="ph1">`name`</ph> does not exist in the key, it is created and the associated value is set to <ph id="ph2">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A&gt;</ph> stores 64-bit integers as strings (<ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>To store 64-bit numbers as <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph> values, use the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph> overload that specifies <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryValueKind&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A&gt;</ph> stores all string values as <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>, even if they contain expandable references to environment variables.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>To save string values as expandable strings (<ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>), use the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%28System.String%2CSystem.Object%2CMicrosoft.Win32.RegistryValueKind%29&gt;</ph> overload that specifies <ph id="ph3">&lt;xref:Microsoft.Win32.RegistryValueKind&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>Numeric types other than 32-bit integers are stored as strings by this method overload.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumeration elements are stored as strings containing the element names.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode character that is invalid for the current code page is replaced by the best available match.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The name of the value to store.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The data to be stored.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is an unsupported data type.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is read-only, and cannot be written to; for example, the key has not been opened with write access.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or modify registry keys.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Sets the value of a name/value pair in the registry key, using the specified registry data type.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because many values can be stored in each key in the registry, you must use the <ph id="ph1">`name`</ph> parameter to specify the particular value you want to set.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registry key can have one value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this unnamed value is displayed in the registry editor, the string "(Default)" appears instead of a name.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set this unnamed value, specify either <ph id="ph1">`null`</ph> or the empty string ("") for <ph id="ph2">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to set values in a key, you must open the key with write access.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you have opened a key with write access, you can change any of the name/value pairs in that key.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified <ph id="ph1">`name`</ph> does not exist in the key, it is created, and the associated value is set to <ph id="ph2">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifying the registry data type <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind.Unknown&gt;</ph> is the same as using the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type of the specified <ph id="ph1">`value`</ph> does not match the specified <ph id="ph2">`valueKind`</ph>, and the data cannot be converted, <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can store a <ph id="ph1">&lt;xref:System.Int64?displayProperty=fullName&gt;</ph> as a <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>, but only if its value is less than the maximum value of a <ph id="ph3">&lt;xref:System.Int32?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot store a single string value as a <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>If boxed values are passed for <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryValueKind?displayProperty=fullName&gt;</ph>, the conversion is done using the invariant culture.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph> objects in such a way that a malicious program could create thousands of meaningless subkeys or key/value pairs.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, do not allow callers to enter arbitrary keys or values.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows 98 and Windows Millennium Edition the registry is not Unicode, and not all Unicode characters are valid for all code pages.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Unicode character that is invalid for the current code page is replaced by the best available match.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is thrown.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>The name of the value to be stored.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The data to be stored.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The registry data type to use when storing the data.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The type of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> did not match the registry data type specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">valueKind</ph><ept id="p2">&lt;/code&gt;</ept>, therefore the data could not be converted properly.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> that contains the specified value is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> is read-only, and cannot be written to; for example, the key has not been opened with write access.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object represents a root-level node, and the operating system is Windows Millennium Edition or Windows 98.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The user does not have the permissions required to create or modify registry keys.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> object represents a root-level node, and the operating system is Windows 2000, Windows XP, or Windows Server 2003.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Retrieves the count of subkeys of the current key.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not recursively count names.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>It only returns the count of names on the base level from which it was called.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The number of subkeys of the current key.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The user does not have read permission for the key.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>A system error occurred, for example the current key has been deleted.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>Retrieves a string representation of this key.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value includes the registry path of the specified key and the hexadecimal value for the key.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>The registry path includes the absolute root of the specified key, always starts at one of the base keys for the registry, for example, HKEY_LOCAL_MACHINE.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>A string representing the key.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>If the specified key is invalid (cannot be found) then <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being accessed is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Retrieves the count of values in the key.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each registry key has a default value that is not associated with any name.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>This unnamed value can be set by using the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.SetValue%2A&gt;</ph> method and specifying either <ph id="ph2">`null`</ph> or the empty string ("") for <ph id="ph3">`name`</ph>.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the default value has never been set, it does not contribute to the total count returned by the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.ValueCount%2A&gt;</ph> property; once it has been set, however, it is always counted.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>The number of name/value pairs in the key.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>The user does not have read permission for the key.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryKey"&gt;&lt;/xref&gt;</ph> being manipulated is closed (closed keys cannot be accessed).</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The user does not have the necessary registry rights.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>A system error occurred, for example the current key has been deleted.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Gets the view that was used to create the registry key.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the 64-bit versions of Windows, portions of the registry are stored separately for 32-bit and 64-bit applications.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is a 32-bit view for 32-bit applications and a 64-bit view for 64-bit applications.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not assume that the view always corresponds to the actual view of the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>The view that was used to create the registry key.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="Microsoft.Win32.RegistryView.Default"&gt;&lt;/xref&gt;</ph>, if no view was used.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>