<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">29b22f1b07407c828d2b8e64cdd7a9017f722cf7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.BindingSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b01b20458cecbbef3e2510a879c8e0b12c59b694</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">341ff5fa4816027cc29b0d9d2f42616587df47d4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates the data source for a form.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component serves many purposes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, it simplifies binding controls on a form to data by providing currency management, change notification, and other services between Windows Forms controls and data sources.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is accomplished by attaching the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component to your data source using the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For complex binding scenarios you can optionally set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> property to a specific column or list in the data source.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You then bind controls to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>All further interaction with the data is accomplished with calls to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples on how the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> can simplify the binding process, see <bpt id="p1">[</bpt>How to: Bind Windows Forms Controls to DBNull Database Values<ept id="p1">](~/docs/framework/winforms/controls/how-to-bind-windows-forms-controls-to-dbnull-database-values.md)</ept> and <bpt id="p2">[</bpt>How to: Handle Errors and Exceptions that Occur with Databinding<ept id="p2">](~/docs/framework/winforms/controls/how-to-handle-errors-and-exceptions-that-occur-with-databinding.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Navigation and updating of the data source is accomplished through methods such as <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.MoveNext%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.MoveLast%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.Remove%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operations such as sorting and filtering are handled through the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on using sorting and filtering with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>, see <bpt id="p1">[</bpt>How to: Sort and Filter ADO.NET Data with the Windows Forms BindingSource Component<ept id="p1">](~/docs/framework/winforms/controls/sort-and-filter-ado-net-data-with-wf-bindingsource-component.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component can act as a strongly typed data source.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the type of the underlying data source is fixed through one of the following mechanisms:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Add%2A&gt;</ph> method to add an item to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property to a list, single object, or type.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both of these mechanisms create a strongly-typed list.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how to use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to bind to a type, see <bpt id="p1">[</bpt>How to: Bind a Windows Forms Control to a Type<ept id="p1">](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-type.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to bind your controls to a factory object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how to do this, see <bpt id="p1">[</bpt>How to: Bind a Windows Forms Control to a Factory Object<ept id="p1">](~/docs/framework/winforms/controls/how-to-bind-a-windows-forms-control-to-a-factory-object.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> handles both simple and complex data sources, terminology is problematic.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within this class documentation, the term <bpt id="p1">*</bpt>list<ept id="p1">*</ept> refers to a data collection within the hosted data source, and <bpt id="p2">*</bpt>item<ept id="p2">*</ept> denotes a single element.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When discussing functionality associated with complex data sources, the equivalent terms <bpt id="p1">*</bpt>table<ept id="p1">*</ept> and <bpt id="p2">*</bpt>row<ept id="p2">*</ept> are used.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> provides members for accessing the underlying data.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current item can be retrieved through the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> property, and the entire list can be retrieved through the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Editing operations are supported on the current item through <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.BindingSource.CancelEdit%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.BindingSource.Add%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although currency management is handled automatically for all underlying data source types, this class exposes a number of events, such as <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CurrentItemChanged&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSourceChanged&gt;</ph>, that allow for customization.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data sources that are bound to a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component can also be navigated and managed with the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> class, which provides a VCR-like user interface (UI) for navigating items within a list.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although <ph id="ph1">&lt;xref:System.Windows.Forms.BindingNavigator&gt;</ph> can be bound to any data source, it was designed to integrate with a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component through its <ph id="ph3">&lt;xref:System.Windows.Forms.BindingNavigator.BindingSource%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default property for the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class is <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default event is <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CurrentChanged&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the members of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class operate on the underlying list represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property and simply refer their operation to the underlying list.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, when the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> is bound to a custom implementation of <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>, the exact behavior of these members may differ from the behavior described in the class documentation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.RemoveAt%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> documentation describes the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RemoveAt%2A&gt;</ph> method with the understanding that the <ph id="ph3">&lt;xref:System.Collections.IList.RemoveAt%2A&gt;</ph> method for the underlying <ph id="ph4">&lt;xref:System.Collections.IList&gt;</ph> is correctly implemented.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> class to the default property values.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the default <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> property values initialized by this constructor.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> class and adds the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> to the specified container.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor calls the default constructor, and then adds the current <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to the specified container.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not typically used by the solutions programmer, but instead by authors of design-time environments.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.IContainer"&gt;&lt;/xref&gt;</ph> to add the current <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> to.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> class with the specified data source and data member.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The data source for the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The specific column or list name within the data source to bind to.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Adds an existing item to the internal list.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Add%2A&gt;</ph> method refers the call to the underlying list's <ph id="ph2">`Add`</ph> method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The internal list must contain homogenous types.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property has not already been set, then the first object added to the list defines the type for the list.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be added to the internal list.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> was added to the underlying list represented by the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> differs in type from the existing items in the underlying list.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Occurs before an item is added to the underlying list.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event occurs before a new object is added to the underlying list represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is fired after the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph> method is called, but before the new item is created and added to the underlying list.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>By handling this event, the programmer can provide custom item creation and insertion behavior without being forced to derive from the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is accomplished in the event handler by setting the <ph id="ph1">&lt;xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.AddingNewEventArgs?displayProperty=fullName&gt;</ph> parameter to the new item.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new object created in the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event must be of the same type as the type contained in the list or an exception will occur.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set the <ph id="ph1">&lt;xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt;</ph> property when bound to a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> because you cannot add a new <ph id="ph4">&lt;xref:System.Data.DataRowView&gt;</ph> to the list.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about supplying custom new item functionality, see the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ComponentModel.AddingNewEventArgs.NewObject"&gt;&lt;/xref&gt;</ph> is not the same type as the type contained in the list.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds a new item to the underlying list.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddNew%2A&gt;</ph> method adds a new item to the underlying list represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sets up the following series of actions:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A&gt;</ph> method is automatically called to commit any pending edit operations.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event is automatically raised.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can be programmatically handled to construct the new item.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is accomplished in the event handler by setting the <ph id="ph1">&lt;xref:System.ComponentModel.AddingNewEventArgs.NewObject%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.AddingNewEventArgs?displayProperty=fullName&gt;</ph> parameter to the new item.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new object created in the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event must be of the same type as the type contained in the list or an exception will occur.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event is not handled, and the underlying list is an <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, then the request is passed to the list's <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.AddNew%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, the item is automatically created through its public default constructor.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case, the new item is added to the end of the list.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new item is added immediately to the internal list unless the data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the new item is not committed until an explicit call to <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A&gt;</ph> is made or until a new list operation is initiated.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before it is committed, the new item can be rolled back by calling <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CancelEdit%2A&gt;</ph>, in which case the new item is discarded.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that was created and added to the list.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.AllowNew"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A public default constructor could not be found for the current item type.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether items in the underlying list can be edited.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AllowEdit%2A&gt;</ph> property is typically used by other components to determine if editing of items in the list is allowed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate list items can be edited; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.AddNew"&gt;&lt;/xref&gt;</ph> method can be used to add items to the list.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AllowNew%2A&gt;</ph> property depends on the underlying data source type.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, this property will delegate to the underlying list.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this property will return <ph id="ph1">`false`</ph> if the underlying list has any of the following characteristics:</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>It has a fixed size, as determined by the <ph id="ph1">&lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is read-only, as determined by the <ph id="ph1">&lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The item's type does not have a default constructor.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the value of this property is set, the getter no longer refers the call to the underlying list.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it simply returns the value that was previously set until the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event with <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName&gt;</ph> set to <ph id="ph3">&lt;xref:System.ComponentModel.ListChangedType?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AllowNew%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and the underlying list type does not have a default constructor, you must handle the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.AddingNew&gt;</ph> event and create the appropriate type.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.AddNew"&gt;&lt;/xref&gt;</ph> can be used to add items to the list; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>This property is set to <ph id="ph1">`true`</ph> when the underlying list represented by the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property has a fixed size or is read-only.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The property is set to <ph id="ph1">`true`</ph> and the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.AddingNew"&gt;&lt;/xref&gt;</ph> event is not handled when the underlying list type does not have a default constructor.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether items can be removed from the underlying list.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.AllowRemove%2A&gt;</ph> property is typically used by other components to determine if editing of items in the list is allowed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate list items can be removed from the list; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Sorts the data source using the specified property descriptor and sort direction.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> implements single column sorting using a <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> to indicate a property to sort by and a <ph id="ph3">&lt;xref:System.ComponentModel.ListSortDirection&gt;</ph> indicating whether the property contents should be sorted in ascending or descending order.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that describes the property by which to sort the data source.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.ListSortDirection"&gt;&lt;/xref&gt;</ph> indicating how the list should be sorted.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The data source is not an <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Sorts the data source with the specified sort descriptions.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> implements multi-column sorting as a set of property descriptor-direction pairs.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.ListSortDescriptionCollection"&gt;&lt;/xref&gt;</ph> containing the sort descriptions to apply to the data source.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The data source is not an <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingListView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Occurs when all the clients have been bound to this <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.BindingComplete&gt;</ph> event occurs after all the clients, typically controls, have been bound to the current <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The handler of this event can take the appropriate action based on the success, error, or exceptions in the binding process, by examining the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Cancels the current edit operation.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method discards modifications to data since the last save or load operation if both of the following conditions are met:</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A&gt;</ph> method has not been called yet.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> method of the underlying <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>, and is scoped to row-level changes.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Removes all elements from the list.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Clear%2A&gt;</ph> method removes all elements from the underlying list represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property and sets the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> property to zero.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Determines whether an object is an item in the list.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the implementation is dependent on the underlying list's <ph id="ph1">`Contains`</ph> method, typically the following characteristics apply:</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> is searched starting at the first element and ending at the last element.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying method determines equality by calling the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to locate in the underlying list represented by the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter is found in the <ph id="ph3">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Copies the contents of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> to the specified array, starting at the specified index value.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to combine items from multiple sources into a single array.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The destination array.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The index in the destination array at which to start the copy operation.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets the total number of items in the underlying list, taking the current <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.Filter"&gt;&lt;/xref&gt;</ph> value into consideration.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> property gets the number of items in the underlying list represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property as modified by the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The total number of filtered items in the underlying list.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets the currency manager associated with this <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to access the currency manager for another binding to the same data member use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;&lt;/xref&gt;</ph> associated with this <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Gets the current item in the list.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> property to access the current item, but use the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property to get the entire list.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the type of the current object, use the <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the current item, set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property to a new integral value, or use one of the navigation methods such as <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.MoveNext%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the current item in the underlying list represented by the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph3">`null`</ph> if the list has no items.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Occurs when the currently bound item changes.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CurrentChanged&gt;</ph> event is raised whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> property changes for any of the following reasons:</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current position of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> changes.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> properties change.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The membership of the underlying <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> changes, which causes <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> to refer to a different item.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples include adding or deleting an item before the current item, deleting or moving the current item itself, or moving an item to the current position.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying list is refreshed by a new sorting or filtering operation.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this event is triggered, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> property will already contain its new value.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CurrentChanged&gt;</ph> is the default event for the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Occurs when a property value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.Current"&gt;&lt;/xref&gt;</ph> property has changed.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CurrentItemChanged&gt;</ph> event is raised in response to all of the circumstances that raise the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.CurrentChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.CurrentItemChanged&gt;</ph> is also fired whenever the value of one of the properties of <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> is changed.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Occurs when a currency-related exception is silently handled by the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is informational and reports CLS-compliant exceptions only.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine what type of exception occurred, handle this event and check the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerDataErrorEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerDataErrorEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets or sets the specific list in the data source to which the connector currently binds to.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> contains multiple lists (or tables) of data, you should set the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> property to the name of one of the sources.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataMemberChanged&gt;</ph> event</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The name of a list (or row) in the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.DataSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.DataMember"&gt;&lt;/xref&gt;</ph> property value has changed.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataMemberChanged&gt;</ph> event occurs after the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Gets or sets the data source that the connector binds to.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property can be set to a number of data sources, including types, objects, and lists of types.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting data source will be exposed as a list.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows some of the common data sources and the resulting list evaluation.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>DataSource property</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>List results</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> of objects.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding an item sets the list to the type of the added item.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph> with <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> set</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not supported, raises <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Non-list type or object of type "T"</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Empty <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> of type "T".</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Array instance</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> containing the array elements.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> containing the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> items.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>List instance containing type "T"</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> instance containing type "T".</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> can be set to other list types such as <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> will handle them appropriately.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the type contained in the list should have a default constructor.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting a data source, if the supplied reference contains more than one list or table, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> property to a string that specifies the list to bind to.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSourceChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you make any changes to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property value, you should do so on the user interface (UI) thread to ensure that the UI reflects the changes.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property is the default property for the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that acts as a data source.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.DataSource"&gt;&lt;/xref&gt;</ph> property value has changed.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSourceChanged&gt;</ph> event occurs after the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Applies pending changes to the underlying data source.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A&gt;</ph> method is called, all pending changes are applied to the underlying data source.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has no effect unless the objects contained by the data source implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the objects do not implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface, changes to the data are copied to the underlying data source immediately after each change.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Gets or sets the expression used to filter which rows are viewed.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically used in complex data-binding scenarios, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> property allows you to view a subset of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only underlying lists that implement the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface support filtering.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> is not <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> passes this property to the underlying list.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set this property during object initialization, the call will be deferred until after initialization is complete.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>To form a filter value, specify the name of a column followed by an operator and a value to filter on.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The accepted filter syntax depends on the underlying data source.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying data source is a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, or <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, you can specify Boolean expressions using the syntax documented for the <ph id="ph4">&lt;xref:System.Data.DataColumn.Expression%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> property affects the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> value will persist when the data source changes.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>To stop filtering the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RemoveFilter%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A string that specifies how rows are to be filtered.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Searches for the index of the item that has the given property descriptor.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically used in complex data-binding cases to locate the first row where the value of the field specified by the <ph id="ph1">`prop`</ph> parameter equals the value of the <ph id="ph2">`key`</ph> parameter</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method simply refers the request to the underlying list's <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the underlying data source is a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, or <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, this method calls the <ph id="ph4">&lt;xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;</ph>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> to search for.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prop</ph><ept id="p1">&lt;/code&gt;</ept> to match.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item that has the given value for <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The underlying list is not of type <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>Returns the index of the item in the list with the specified property name and value.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Find%2A&gt;</ph> method can only be used when the underlying list is an <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> with searching implemented.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method simply refers the request to the underlying list's <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList.Find%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the underlying data source is a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, or <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph>, this method converts <ph id="ph4">`propertyName`</ph> to a <ph id="ph5">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> and calls the <ph id="ph6">&lt;xref:System.Data.DataView.System%23ComponentModel%23IBindingList%23Find%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Find%2A&gt;</ph>, such as the value returned if no matching item is found, depends on the implementation of the method in the underlying list.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property name comparison is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The name of the property to search for.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>The value of the item with the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> to find.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item with the specified property name and value.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The underlying list is not a <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph> with searching functionality implemented.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;propertyName&lt;/code&gt;</ph> does not match a property in the list.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Retrieves an enumerator for the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Retrieves an array of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects representing the bindable properties of the data source list type.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects to find in the list as bindable.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects that represents the properties on this list type used to bind data.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets the name of the list supplying data for the binding.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects to find in the list as bindable.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The name of the list supplying the data for binding.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Gets the related currency manager for the specified data member.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`dataMember`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.GetRelatedCurrencyManager%2A&gt;</ph> returns the main currency manager; otherwise, it checks for another <ph id="ph4">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> bound to the specified data member and returns its currency manager.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The name of column or list, within the data source to retrieve the currency manager for.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The related <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;&lt;/xref&gt;</ph> for the specified data member.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Searches for the specified object and returns the index of the first occurrence within the entire list.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the implementation is dependent on the underlying list's <ph id="ph1">`IndexOf`</ph> method, typically the following characteristics apply:</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> is searched starting at the first element and ending at the last element.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying method performs a linear search; therefore, the average execution time is proportional to the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying method determines equality by calling the <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to locate in the underlying list represented by the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter; otherwise, -1 if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p2">&lt;/code&gt;</ept> is not in the list.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Inserts an item into the list at the specified index.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> should be inserted.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to insert.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The list is read-only or has a fixed size.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the list binding is suspended.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the binding is suspended; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the underlying list has a fixed size.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list has a fixed size, it does not allow the addition or removal of elements after the list has been created, but you can modify existing elements.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the underlying list has a fixed size; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the underlying list is read-only.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>A list that is read-only does not allow the addition, removal, or modification of any list items after the list is created.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the list is read-only; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the items in the underlying list are sorted.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.IsSorted%2A&gt;</ph> always returns <ph id="ph2">`false`</ph> if the list is not an <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the list is an <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph> and is sorted; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the collection is synchronized (thread safe).</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the list is synchronized; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Gets or sets the list element at the specified index.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Item%2A&gt;</ph> property represents the indexer for this class.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>It accepts <ph id="ph1">`null`</ph> as a valid value and allows duplicate items within the list.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a value will raise the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to retrieve.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or is equal to or greater than <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Gets the list that the connector is bound to.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class uniformly handles different data sources.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ideally the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property should be set to a general <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, sometimes it may be necessary to cast this property to a more specific type.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the underlying list type, which depends on the type or value of the data source.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data source type</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>Underlying list description</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> are <ph id="ph3">`null`</ph></source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> is <ph id="ph2">`null`</ph>, but <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> is not <ph id="ph4">`null`</ph></source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>None; an attempt to get the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> will throw an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Array&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Array&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value from a call to the <ph id="ph1">&lt;xref:System.ComponentModel.IListSource.GetList%2A&gt;</ph> method of this <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> instance of type "T"</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> with one element.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> instance</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> with one element.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph></source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph> with the elements copied over.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Array&gt;</ph> type with <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> of item type "T"</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> that represents an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> or <ph id="ph3">&lt;xref:System.ComponentModel.ITypedList&gt;</ph></source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance created by a call to the <ph id="ph1">&lt;xref:System.Activator.CreateInstance%28System.Type%29&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Activator&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.NotSupportedException&gt;</ph> may be thrown.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> type with <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> of item type "T"</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-<ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> type</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> type</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>None; an attempt to get the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> will throw an <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type retrieved is the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface, the underlying collection may be more complex, such as an <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> that represents the list, or <ph id="ph2">`null`</ph> if there is no underlying list associated with this <ph id="ph3">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Occurs when the underlying list changes or an item in the list changes.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event occurs when there is a change to the membership or metadata of the underlying list represented by the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, this event is raised when items are added, removed, or moved, or the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> properties change.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> properties will persist when this event occurs.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can be completely suppressed by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Moves to the first item in the list.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes the current value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property to 0, the first item in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Moves to the last item in the list.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes the current value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property to the index of the last item in the underlying data source, which is equal to the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> property minus 1.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Moves to the next item in the list.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes the current value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property to the next item in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Moves to the previous item in the list.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method changes the current value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property to the previous item in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.AddingNew"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnAddingNew%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.BindingComplete"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnBindingComplete%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingCompleteEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.CurrentChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnCurrentChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.CurrentItemChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnCurrentItemChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.DataError"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnDataError%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingManagerDataErrorEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.DataMemberChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnDataMemberChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.DataSourceChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnDataSourceChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.ListChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnListChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.PositionChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.OnPositionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.ListChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>Gets or sets the index of the current item in the underlying list.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>When setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property, out-of-range values are treated in the following manner:</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative values are treated as 0.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values greater than or equal to <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> are treated as <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Count%2A&gt;</ph> minus 1.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property will adjust the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Current%2A&gt;</ph> property likewise.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>A zero-based index that specifies the position of the current item in the underlying list.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Occurs after the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.Position"&gt;&lt;/xref&gt;</ph> property has changed.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.PositionChanged&gt;</ph> event occurs after the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> property has changed.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.ListChanged"&gt;&lt;/xref&gt;</ph> events should be raised.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, it suspends the raising of <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event indicates that the bound list has been modified in some way, including adding, deleting, inserting, or modifying items.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.ListChanged"&gt;&lt;/xref&gt;</ph> events should be raised; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Removes the specified item from the list.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Remove%2A&gt;</ph> method causes the list to be searched for the <ph id="ph2">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>If found, this method will attempt to remove the item from the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.List%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attempt will fail if the list has a fixed size or is read-only.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>These two conditions can be tested with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.IsFixedSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.IsReadOnly%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>The item to remove from the underlying list represented by the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The underlying list has a fixed size or is read-only.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Removes the item at the specified index in the list.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>These two conditions can be tested with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.IsFixedSize%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.IsReadOnly%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item to remove.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than the value of the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.Count"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The underlying list represented by the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property is read-only or has a fixed size.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Removes the current item from the list.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.RemoveCurrent%2A&gt;</ph> method is equivalent to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RemoveAt%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.AllowRemove"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.Position"&gt;&lt;/xref&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The underlying list represented by the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.List"&gt;&lt;/xref&gt;</ph> property is read-only or has a fixed size.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Removes the filter associated with the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.RemoveFilter%2A&gt;</ph> method refers the request to the underlying list's <ph id="ph2">&lt;xref:System.ComponentModel.IBindingListView.RemoveFilter%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only lists that implement <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> support filtering.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a call to this method is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Filter%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The underlying list does not support filtering.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Removes the sort associated with the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.RemoveSort%2A&gt;</ph> method refers the request to the underlying list's <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.RemoveSort%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only lists that implement <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> support sorting.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a call to this method is equivalent to setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The underlying list does not support sorting.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Reinitializes the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.AllowNew"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetAllowNew%2A&gt;</ph> method reinitializes the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.AllowNew%2A&gt;</ph> property to reflect the value of the corresponding <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.AllowNew%2A&gt;</ph> property in the underlying list.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Causes a control bound to the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> to reread all the items in the list and refresh their displayed values.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetBindings%2A&gt;</ph> method informs all controls bound to the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> to refresh their values.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method does this by raising the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event at least once; the <ph id="ph2">`metaDataChanged`</ph> parameter indicates the nature of the underlying change.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`metaDataChanged`</ph> value of <ph id="ph2">`true`</ph> indicates that the data schema of <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> has changed.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event is raised with <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName&gt;</ph> set to <ph id="ph3">&lt;xref:System.ComponentModel.ListChangedType?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`metaDataChanged`</ph> value of <ph id="ph2">`false`</ph> indicates that only the values of one or more items have changed.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value of <ph id="ph1">`metaDataChanged`</ph>, a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event is raised with <ph id="ph3">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName&gt;</ph> set to <ph id="ph4">&lt;xref:System.ComponentModel.ListChangedType?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a consequence, calling <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetBindings%2A&gt;</ph> with a parameter of <ph id="ph2">`true`</ph> will raise two <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetBindings%2A&gt;</ph> is automatically called whenever another member makes major changes to the data-binding, such as setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataSource%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the programmer can also call this method explicitly.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data schema has changed; <ph id="ph2">`false`</ph> if only values have changed.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Causes a control bound to the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> to reread the currently selected item and refresh its displayed value.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method will cause the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event to occur, specifying the item changed at the current position.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>Causes a control bound to the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> to reread the item at the specified index, and refresh its displayed value.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetItem%2A&gt;</ph> method notifies all controls bound to the item at the specified <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.Position%2A&gt;</ph> to refresh their values.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method does this by raising the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> event with <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType?displayProperty=fullName&gt;</ph> set to <ph id="ph3">&lt;xref:System.ComponentModel.ListChangedType?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ResetItem%2A&gt;</ph> is automatically called whenever changes are made to the value of an individual item.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the programmer can also call this method explicitly.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item that has changed.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Resumes data binding.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> prevents changes from being pushed into the data source until <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> is called, but does not actually prevent any events from occurring.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that use complex data binding, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, update their values based on change events such as the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event, so calling <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> will not prevent them from receiving changes to the data source.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, this <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> are designed for use with simple-bound controls, such as the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively you can use these methods in a complex binding scenario if you suppress <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Gets or sets the column names used for sorting, and the sort order for viewing the rows in the data source.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> property is a case-sensitive string that specifies the column names used to sort the rows, along with the sort direction.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>Columns are sorted ascending by default.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple columns can be separated by commas, such as <ph id="ph1">`"State, ZipCode DESC"`</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support sorting, the underlying list must implement the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interfaces.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>This capability can be queried through the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SupportsSorting%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multicolumn sorting is available when the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> property will change the internal list depending on its type:</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list is of type <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.SortProperty%2A?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList.SortDirection%2A?displayProperty=fullName&gt;</ph> properties are set in the internal list.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list is of type <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph>, the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingListView.SortDescriptions%2A?displayProperty=fullName&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The internal list's sort properties are only changed when the sort string is not <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`get`</ph> accessor for this property will not retrieve the sort value of the internal list; instead, it will return the <ph id="ph2">`set`</ph> accessor value.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.Sort%2A&gt;</ph> property will persist when the data source changes.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>A case-sensitive string containing the column name followed by "ASC" (for ascending) or "DESC" (for descending).</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>Gets the collection of sort descriptions applied to the data source.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SortDescriptions%2A&gt;</ph> always returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ListSortDescriptionCollection&gt;</ph> is a read-only collection.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>If the data source is an <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingListView"&gt;&lt;/xref&gt;</ph>, a <ph id="ph2">&lt;xref href="System.ComponentModel.ListSortDescriptionCollection"&gt;&lt;/xref&gt;</ph> that contains the sort descriptions applied to the list; otherwise, <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Gets the direction the items in the list are sorted.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SortDirection%2A&gt;</ph> property will always return <ph id="ph3">&lt;xref:System.ComponentModel.ListSortDirection.Ascending&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ComponentModel.ListSortDirection"&gt;&lt;/xref&gt;</ph> values indicating the direction the list is sorted.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that is being used for sorting the list.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SortProperty%2A&gt;</ph> always returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>If the list is an <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph>, the <ph id="ph2">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that is being used for sorting; otherwise, <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the data source supports multi-column sorting.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SupportsAdvancedSorting%2A&gt;</ph> always returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the list is an <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingListView"&gt;&lt;/xref&gt;</ph> and supports multi-column sorting; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the data source supports change notification.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the data source supports filtering.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SupportsFiltering%2A&gt;</ph> always returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the list is an <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingListView"&gt;&lt;/xref&gt;</ph> and supports filtering; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the data source supports searching with the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource.Find(System.ComponentModel.PropertyDescriptor,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SupportsSearching%2A&gt;</ph> always returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the list is a <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph> and supports the searching with the <ph id="ph3">&lt;xref href="System.Windows.Forms.BindingSource.Find*"&gt;&lt;/xref&gt;</ph> method; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the data source supports sorting.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is not an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.SupportsSorting%2A&gt;</ph> property always returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data source is an <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph> and supports sorting; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Suspends data binding to prevent changes from updating the bound data source.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> are two methods that allow the temporary suspension and resumption of data binding in a simple-binding scenario.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and prevents changes from being pushed into the data source until <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> is called, but does not actually prevent any events from occurring.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that use complex data binding, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, update their values based on change events such as the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event, so calling <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> will not prevent them from receiving changes to the data source.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, this <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> are designed for use with simple-bound controls, such as the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively you can use these methods in a complex binding scenario if you suppress <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the underlying list.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the underlying list.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Adds the <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> to the indexes used for searching.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list is an <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> type, this method will add the <ph id="ph2">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> to the indexes; otherwise, calling this method will throw a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> to add to the indexes used for searching.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The underlying list is not an <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Removes the <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> from the indexes used for searching.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying list is not a <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList?displayProperty=fullName&gt;</ph>, this method will always throw a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> to remove from the indexes used for searching.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Discards a pending new item from the collection.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23CancelNew%2A&gt;</ph> method rolls back a pending addition of an item previously added to the collection at the index specified by <ph id="ph2">`position`</ph>.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`position`</ph> parameter is necessary because several new items can be simultaneously pending.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The index of the item that was added to the collection.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Commits a pending new item to the collection.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.System%23ComponentModel%23ICancelAddNew%23EndNew%2A&gt;</ph> method commits a pending addition of an item previously added to the collection at the index specified by <ph id="ph2">`position`</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`position`</ph> parameter is necessary because several new items can be simultaneously pending.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The index of the item that was added to the collection.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Signals the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> that initialization is starting.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Signals the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> that initialization is complete.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> is initialized.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitializeNotification&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the <ph id="ph2">&lt;xref href="System.Windows.Forms.BindingSource"&gt;&lt;/xref&gt;</ph> is initialized; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>