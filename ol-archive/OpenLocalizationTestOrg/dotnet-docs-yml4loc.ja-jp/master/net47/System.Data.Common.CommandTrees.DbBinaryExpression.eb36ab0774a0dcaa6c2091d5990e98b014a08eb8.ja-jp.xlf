<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b36b26db5df899da1982c4a2647c76e1f903bc9e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Common.CommandTrees.DbBinaryExpression.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ffbdb46fe64e6e8b7ad1f5eb5abc6cc539c7c5fe</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afc97575b23fdbdc725f6ffc3c145ce118974a9d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the basic functionality required by expressions that accept two expression operands.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Data.Common.CommandTrees.DbExpression"&gt;&lt;/xref&gt;</ph> that defines the left argument.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived expression types might perform stricter type checks when the <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbUnionAllExpression&gt;</ph> requires that its left expression has a collection result type, while <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbAndExpression&gt;</ph> requires a Boolean result type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, derived expression types will not allow <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbBinaryExpression.Left%2A&gt;</ph> to be set to an expression with a result type that is not equal or promotable to the result type of the current value.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.CommandTrees.DbExpression"&gt;&lt;/xref&gt;</ph> that defines the left argument.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The expression is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The expression is not associated with the command tree of the <ph id="ph1">&lt;xref href="System.Data.Common.CommandTrees.DbBinaryExpression"&gt;&lt;/xref&gt;</ph>,</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>or its result type is not equal or promotable to the required type for the left argument.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Data.Common.CommandTrees.DbExpression"&gt;&lt;/xref&gt;</ph> that defines the right argument.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived expression types might perform stricter type checks when the <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbUnionAllExpression&gt;</ph> requires that its right expression has a collection result type, while <ph id="ph2">&lt;xref:System.Data.Common.CommandTrees.DbAndExpression&gt;</ph> requires a Boolean result type.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, derived expression types will not allow <ph id="ph1">&lt;xref:System.Data.Common.CommandTrees.DbBinaryExpression.Right%2A&gt;</ph> to be set to an expression with a result type that is not equal or promotable to the result type of the current value.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.CommandTrees.DbExpression"&gt;&lt;/xref&gt;</ph> that defines the right argument.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The expression is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The expression is not associated with the command tree of the <ph id="ph1">&lt;xref href="System.Data.Common.CommandTrees.DbBinaryExpression"&gt;&lt;/xref&gt;</ph>,</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>or its result type is not equal or promotable to the required type for the right argument.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>