<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bb48bc5db3e56a342d79cc515564b31e520dbf10</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.MissingMemberException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">431b7cd9de40b1136ab18570cbc3adbac0e293ef</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e1170fdba580341beb2635ced0a0b4967636f5c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The exception that is thrown when there is an attempt to dynamically access a class member that does not exist or that is not declared as public.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>If a member in a class library has been removed or renamed, recompile any assemblies that reference that library.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally a compilation error is generated if the code attempts to access a nonexistent member of a class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> is designed to handle cases where a field or a method is deleted or renamed in one assembly and the change is not reflected in a second assembly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>At runtime, <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> will be thrown when the code in the second assembly attempts to access the missing member in the first assembly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> is the base class for <ph id="ph2">&lt;xref:System.MissingFieldException&gt;</ph> and <ph id="ph3">&lt;xref:System.MissingMethodException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general it is better to use one of the derived classes of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> to more precisely indicate the exact nature of the error.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Throw a <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> if you are only interested in capturing the general case of a missing member error.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph> uses the HRESULT COR_E_MISSINGMEMBER, that has the value 0x80131512.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.MissingMemberException.%23ctor%2A&gt;</ph> constructors.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.MissingMemberException"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.MissingMemberException.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Attempted to access a missing member."</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message takes into account the current system culture.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The localized error message string.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.MissingMemberException"&gt;&lt;/xref&gt;</ph> class with a specified error message.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The content of the <ph id="ph1">`message`</ph> parameter should be understandable by the user.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The error message string.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The message that describes the error.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.MissingMemberException"&gt;&lt;/xref&gt;</ph> class with serialized data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The contextual information about the source or destination.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.MissingMemberException"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the root cause of this exception.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that is thrown as a direct result of a previous exception can include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic) if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.MissingMemberException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The inner exception reference.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The error message string.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The error message that explains the reason for the exception.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> that is the cause of the current <ph id="ph2">`Exception`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inner</ph><ept id="p1">&lt;/code&gt;</ept> is not a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic), then the current <ph id="ph3">`Exception`</ph> is raised in a catch block handling <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">inner</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.MissingMemberException"&gt;&lt;/xref&gt;</ph> class with the specified class name and member name.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The name of the class in which access to a nonexistent member was attempted.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the member that cannot be accessed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Holds the class name of the missing member.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> object with the class name, the member name, the signature of the missing member, and additional exception information.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.TypeLoadException.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with all the exception object data targeted for serialization.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the exception object is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The contextual information about the source or destination.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> object is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Holds the name of the missing member.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the text string showing the class name, the member name, and the signature of the missing member.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the class name is not specified when the object is constructed, the default text string inherited from the base class is returned.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property overrides <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The error message should be localized.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The error message string.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Holds the signature of the missing member.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.MissingMemberException.Signature&gt;</ph> contains a <ph id="ph2">&lt;xref:System.Byte&gt;</ph> value that represents the signature of the missing member.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> is used to format the signature.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see <ph id="ph1">&lt;xref:System.Reflection.Emit.SignatureHelper&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.Emit.SignatureToken&gt;</ph>, and <ph id="ph3">&lt;xref:System.String&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>