<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df4c846ef153bea1821eb8b59146c6632aee0db1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XmlSecureResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0965d412fd6af0c871ed6487ce73822a759c34ba</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2cdec776b50aa8aaaf53828c7f88c372c7cc3ec3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Helps to secure another implementation of <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> by wrapping the <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> object and restricting the resources that the underlying <ph id="ph3">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> has access to.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is the default resolver for all classes in the <ph id="ph2">&lt;xref:System.Xml&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used to load XML documents and to resolve external resources such as entities, DTDs or schemas, and import or include directives.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this default by specifying the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to use.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to restrict the resources that the underlying <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> can access, you can use an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> wraps around a concrete implementation of <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> and restricts the resources that the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph> has access to.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> has the ability to prohibit cross-domain redirection, which occurs from an embedded Uniform Resource Identifier (URI) reference.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you construct an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object, you provide a valid <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> implementation along with a URL, an instance of an evidence object, or a permission set, which is used by the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to determine security.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Either a <ph id="ph1">&lt;xref:System.Security.PermissionSet?displayProperty=fullName&gt;</ph> is generated or the existing one is used and <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A?displayProperty=fullName&gt;</ph> is called on it to help secure the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> objects can contain sensitive information such as user credentials.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be careful when caching <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> objects and should not pass the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object to an untrusted component.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these differences affects the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class when you have evidence that is based on a URL (that is, when you use the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%28System.String%29&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt;</ph> constructor).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The policy resolution mechanism of the SQL Server integrated CLR does not use the <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph> information.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use a secure resolver</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> with the correct permission set.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object that uses the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#5a<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5a)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#5a<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5a)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass  the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method when you're creating the <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#5b<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#5b)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#5b<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#5b)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restrict access by using a URL</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor to create an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object that is allowed to access your local intranet site only.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restrict access by using a permission set</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.WebPermission&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#4a<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4a)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#4a<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4a)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify the URLs that you want to allow access to.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#4b<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4b)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#4b<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4b)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add the web permissions to the <ph id="ph1">&lt;xref:System.Security.PermissionSet&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#4c<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4c)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#4c<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4c)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.PermissionSet%29&gt;</ph> constructor to create an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object by using the permission set.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#4d<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#4d)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#4d<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#4d)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%2A&gt;</ph> reference page for another example.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restrict access by using evidence</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can restrict access by using the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.Security.Policy.Evidence%29&gt;</ph> constructor and specifying <ph id="ph2">&lt;xref:System.Security.Policy.Evidence&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> is used to create the <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> that is applied to the underlying <ph id="ph3">&lt;xref:System.Xml.XmlResolver&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> calls <ph id="ph2">&lt;xref:System.Security.PermissionSet.PermitOnly%2A&gt;</ph> on the created <ph id="ph3">&lt;xref:System.Security.PermissionSet&gt;</ph> before opening any resources.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Here are some common scenarios and the type of evidence to provide for each:</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working in a fully trusted environment, use your assembly to create the evidence:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`evidence`</ph> parameter to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows no access to resources.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application requires some access to resources, request evidence from the caller.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the secure resolver to load an XSLT style sheet</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> with the correct permission set.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#6<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#6)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#6<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> class with the <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> specified.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The XML resolver that is wrapped by the <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The permission set to apply to the underlying <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> calls the <ph id="ph2">&lt;xref href="System.Security.PermissionSet.PermitOnly"&gt;&lt;/xref&gt;</ph> method on the permission set before calling the <ph id="ph3">&lt;xref href="System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)"&gt;&lt;/xref&gt;</ph> method on the underlying XML resolver.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> class with the <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Security.Policy.Evidence"&gt;&lt;/xref&gt;</ph> specified.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Here are some possible scenarios and the type of evidence to provide for each scenario:</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working in a fully trusted environment, use your assembly to create the evidence:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working in a semi-trusted environment, you have code or data coming from an outside source, and you know the origin of the outside source and have a verifiable URI, use the URI to create the evidence:</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlSecureResolver_Samples#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Data/XmlSecureResolver_Samples/CS/XmlSecureResolver_ex.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlSecureResolver_Samples#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSecureResolver_Samples/VB/XmlSecureResolver_ex.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working in a semi-trusted environment and you have code or data coming from an outside source, but you don't know the origin of the outside source, either:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`evidence`</ph> parameter to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows no access to resources.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application requires some access to resources, request evidence from the caller.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The XML resolver that is wrapped by the <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The evidence used to create the <ph id="ph1">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> that will be applied to the underlying <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> calls the <ph id="ph2">&lt;xref href="System.Security.PermissionSet.PermitOnly"&gt;&lt;/xref&gt;</ph> method on the created <ph id="ph3">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> before calling <ph id="ph4">&lt;xref href="System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)"&gt;&lt;/xref&gt;</ph> on the underlying <ph id="ph5">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> class with the <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> and URL provided.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these differences affects the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class when you have evidence that is based on a URL (that is, when you use the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor).</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The policy resolution mechanism of the SQL Server integrated CLR does not use the <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph> information.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The XML resolver that is wrapped by the <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The URL used to create the <ph id="ph1">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> that will be applied to the underlying <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> calls <ph id="ph2">&lt;xref href="System.Security.PermissionSet.PermitOnly"&gt;&lt;/xref&gt;</ph> on the created <ph id="ph3">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> before calling <ph id="ph4">&lt;xref href="System.Xml.XmlSecureResolver.GetEntity(System.Uri,System.String,System.Type)"&gt;&lt;/xref&gt;</ph> on the underlying <ph id="ph5">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Creates evidence using the supplied URL.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are differences in the security infrastructure for code running on the .NET Framework common language runtime (CLR) and for code running on the CLR that is integrated within Microsoft SQL Server 2005.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can lead to cases where code developed for the .NET Framework CLR operates differently when used on the SQL Server integrated CLR.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of these differences affects the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> class when you have evidence that is based on a URL (that is, when you use the <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver.CreateEvidenceForUrl%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Xml.XmlSecureResolver.%23ctor%28System.Xml.XmlResolver%2CSystem.String%29&gt;</ph> constructor).</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The policy resolution mechanism of the SQL Server integrated CLR doesn't use the <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Zone&gt;</ph> information.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it grants permissions based on the GUID that the server adds when assemblies are loaded.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> in the SQL Server integrated CLR, provide any required evidence directly by using a specified <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The URL used to create the evidence.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The evidence generated from the supplied URL as defined by the default policy.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Sets credentials used to authenticate web requests.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The credentials to be used to authenticate web requests.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> sets the given credentials on the underlying <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If this property is not set, the value defaults to <ph id="ph1">`null`</ph>; that is, the <ph id="ph2">&lt;xref href="System.Xml.XmlSecureResolver"&gt;&lt;/xref&gt;</ph> has no user credentials.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Maps a URI to an object that contains the actual resource.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>This method temporarily sets the <ph id="ph1">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> created in the constructor by calling <ph id="ph2">&lt;xref href="System.Security.PermissionSet.PermitOnly"&gt;&lt;/xref&gt;</ph> before calling <ph id="ph3">`GetEntity`</ph> on the underlying <ph id="ph4">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> to open the resource.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can mitigate memory denial of service threats to the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id="ph1">&lt;xref:System.Xml.XmlSecureResolver.GetEntity%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The URI that is returned from <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The current version only returns <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The stream returned by calling <ph id="ph1">`GetEntity`</ph> on the underlying <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If a type other than <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> is specified, the method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is neither <ph id="ph2">`null`</ph> nor a <ph id="ph3">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The specified URI is not an absolute URI.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>There is a runtime error (for example, an interrupted server connection).</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Asynchronously maps a URI to an object that contains the actual resource.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The URI returned from <ph id="ph1">&lt;xref href="System.Xml.XmlSecureResolver.ResolveUri(System.Uri,System.String)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Currently not used.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The type of object to return.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The current version only returns <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The stream returned by calling <ph id="ph1">`GetEntity`</ph> on the underlying <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>If a type other than <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> is specified, the method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Resolves the absolute URI from the base and relative URIs by calling <ph id="ph1">`ResolveUri`</ph> on the underlying <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The base URI used to resolve the relative URI.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The URI to resolve.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The URI can be absolute or relative.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If absolute, this value effectively replaces the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>If relative, it combines with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">baseUri</ph><ept id="p1">&lt;/code&gt;</ept> to make an absolute URI.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The absolute URI or <ph id="ph1">`null`</ph> if the relative URI cannot be resolved (returned by calling <ph id="ph2">`ResolveUri`</ph> on the underlying <ph id="ph3">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>