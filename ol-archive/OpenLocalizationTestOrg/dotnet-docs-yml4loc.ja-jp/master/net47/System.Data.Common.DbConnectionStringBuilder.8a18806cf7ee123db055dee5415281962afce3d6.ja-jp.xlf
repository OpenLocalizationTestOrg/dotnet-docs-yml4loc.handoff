<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3217efb397b51a34339280a40b416e6ee7a28638</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Common.DbConnectionStringBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8e18b3e732627e49785dab3a217648a58c468ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">739367dd8d406a61de122984b771a86c796a273b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for strongly typed connection string builders.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class provides the base class from which the strongly typed connection string builders (<ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>, and so on) derive.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builders let developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> has been defined in a database-agnostic manner.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the addition of the <ph id="ph1">&lt;xref:System.Data.Common&gt;</ph> namespace, developers require a base class against which they can program in order to build connection strings that can work against an arbitrary database.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class lets users assign arbitrary key/value pairs and pass the resulting connection string to a strongly typed provider.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the data providers that are included as part of the .NET Framework provide a strongly typed class that inherits from <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph>: <ph id="ph2">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.OracleClient.OracleConnectionStringBuilder&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcConnectionStringBuilder&gt;</ph>, and <ph id="ph5">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The developer can build, assign, and edit connection strings for any arbitrary provider.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For providers that support specific key/value pairs, the connection string builder provides strongly typed properties corresponding to the known pairs.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to support providers that require the ability to support unknown values, developers can also supply arbitrary key/value pairs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the class works with Visual Studio designers at design time.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When developers use the designer to build strongly typed DataSets and strongly typed connections within Visual Studio, the strongly typed connection string builder class will display the properties associated with its type and will also have converters that can map common values for known keys.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers needing to create connection strings as part of applications can use the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class or one of its strongly typed derivatives to build and modify connection strings.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class also makes it easy to manage connection strings stored in an application configuration file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers can create connection strings using either a strongly typed connection string builder class, or they can use the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> performs no checks for valid key/value pairs.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is possible using this class to create invalid connection strings.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.SqlClient.SqlConnectionStringBuilder&gt;</ph> supports only key/value pairs that are supported by SQL Server; trying to add invalid pairs will throw an exception.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Add%2A&gt;</ph> method and <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Item%2A&gt;</ph> property handle tries to insert malicious entries.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following code correctly escapes the nested key/value pair:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is the following connection string that handles the invalid value in a safe manner:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class, optionally using ODBC rules for quoting values.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`useOdbcRules`</ph> is <ph id="ph2">`true`</ph>, this <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> uses ODBC rules for quoting values (surrounding values with curly braces ({})).</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`useOdbcRules`</ph> is <ph id="ph2">`false`</ph>, this <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> uses quotation mark character ("") to delimit values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use {} to delimit fields; <ph id="ph2">`false`</ph> to use quotation marks.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Adds an entry with the specified key and value into the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Item%2A&gt;</ph> property can also be used to add new elements by setting the value of a key that does not exist in the dictionary.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example: <ph id="ph1">`myCollection["myNonexistentKey"] = myValue`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Add%2A&gt;</ph> method by passing a null (<ph id="ph2">`Nothing`</ph> in Visual Basic) key throws an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, calling the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Add%2A&gt;</ph> method by passing a null value removes the key/value pair.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The key to add to the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The value for the specified key.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> has a fixed size.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Provides an efficient and safe way to append a key and value to an existing <ph id="ph1">&lt;xref href="System.Text.StringBuilder"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows developers using a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> to create a collection of key/value pairs to be able to take advantage of the features included in the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class when you add key/value pairs, without having to incur the overhead of creating and maintaining a <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`AppendKeyValuePair`</ph> method formats the key and value correctly and adds the new string to the supplied <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Text.StringBuilder"&gt;&lt;/xref&gt;</ph> to which to add the key/value pair.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The key to be added.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The value for the supplied key.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Provides an efficient and safe way to append a key and value to an existing <ph id="ph1">&lt;xref href="System.Text.StringBuilder"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows developers using a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> to create a collection of key/value pairs to be able to take advantage of the features included in the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class when adding key/value pairs, without having to incur the overhead of creating and maintaining a <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`AppendKeyValuePair`</ph> method formats the key and value correctly and adds the new string to the supplied <ph id="ph2">&lt;xref:System.Text.StringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although most data sources let you delimit fields by using quotation marks, ODBC does not--for ODBC connection strings, you must use curly braces ({}).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to have the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> use ODBC rules for delimiting fields, set the <ph id="ph2">`useOdbcRules`</ph> parameter to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Text.StringBuilder"&gt;&lt;/xref&gt;</ph> to which to add the key/value pair.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The key to be added.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The value for the supplied key.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use {} to delimit fields, <ph id="ph2">`false`</ph> to use quotation marks.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder.ConnectionString"&gt;&lt;/xref&gt;</ph> property is visible in Visual Studio designers.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers creating designers that take advantage of the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class must be able to make the connection string visible or invisible within the designer's property grid.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.BrowsableConnectionString%2A&gt;</ph> property lets developers indicate that the property should be invisible by setting the property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the connection string is visible within designers; <ph id="ph2">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Clears the contents of the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Clear%2A&gt;</ph> method removes all key/value pairs from the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> and resets all corresponding properties.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes setting the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> property to 0 and the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property to an empty string.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Clears the collection of <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> objects on the associated <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used by designers to clear all associated property descriptors on the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the connection string associated with the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns a semicolon-delimited list of key/value pairs stored within the collection maintained by the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each pair contains the key and value, separated by an equal sign.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates a typical connection string.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data providers may expect specific keys and values for each connection string property.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>, These values are documented individually.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class does not validate the key/value pairs associated with its connection string, although classes that inherit from it can.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> class acts generally as a mechanism for creating and parsing semicolon-delimited lists of key/value pairs separated with equal signs.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides no validation or other support specific to connection strings.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add items to the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> collection, the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property will reflect the changes.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> will try to parse the value, using the semicolon and equal-sign delimiters.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The current connection string, created from the key/value pairs that are contained within the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An invalid connection string argument has been supplied.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains a specific key.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains an entry with the specified key; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets the current number of keys that are contained within the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder.ConnectionString"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The number of keys that are contained within the connection string maintained by the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Compares the connection information in this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> object with the connection information in the supplied object.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparisons on key names are case insensitive; value comparisons are case sensitive.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.EquivalentTo%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> if the key/value pairs are equal, regardless of their order.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection behavior of the two connection strings are equivalent, because order is never significant within connection strings.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, different order may affect connection pooling behavior of connections based on these connection strings.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> to be compared with this <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the connection information in both of the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> objects causes an equivalent connection string; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Fills a supplied <ph id="ph1">&lt;xref href="System.Collections.Hashtable"&gt;&lt;/xref&gt;</ph> with information about all the properties of this <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Hashtable"&gt;&lt;/xref&gt;</ph> to be filled with information about this <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> has a fixed size.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>A fixed-size collection does not allow adding or removing elements after the collection is created, but it does allow modifying existing elements.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>A fixed-size collection is just a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including adding or removing elements, the fixed-size collection reflects those changes.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> has a fixed size; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>A read-only collection does not allow adding, removing, or modifying elements after the collection is created.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>A read-only collection is just a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> is read-only; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set this property, if the specified key already exists in the dictionary, the value is replaced; otherwise, a new element is created.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The key of the item to get or set.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If the specified key is not found, trying to get it returns a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic), and trying to set it creates a new element using the specified key.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Passing a null (<ph id="ph1">`Nothing`</ph> in Visual Basic) key throws an <ph id="ph2">&lt;xref href="System.ArgumentNullException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Assigning a null value removes the key/value pair.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The property is set, and the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The property is set, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyword</ph><ept id="p1">&lt;/code&gt;</ept> does not exist in the collection, and the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> has a fixed size.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the keys in the original <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> are reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Remove%2A&gt;</ph> method returns a value that indicates its success, it is not required to look for the key before trying to remove the key/value pair from the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The key of the key/value pair to be removed from the connection string in this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key existed within the connection string and was removed; <ph id="ph2">`false`</ph> if the key did not exist.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is null (<ph id="ph2">`Nothing`</ph> in Visual Basic)</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> is read-only, or the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> has a fixed size.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Indicates whether the specified key exists in this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method behaves identically to the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains an entry with the specified key; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns the connection string associated with this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder.ConnectionString"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Retrieves a value corresponding to the supplied key from this <ph id="ph1">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.TryGetValue%2A&gt;</ph> method lets developers safely retrieve a value from a <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> without needing to first call the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ContainsKey%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.TryGetValue%2A&gt;</ph> does not raise an exception when you call it, passing in a nonexistent key, you do not have to look for a key before retrieving its value.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.TryGetValue%2A&gt;</ph> with a nonexistent key will place the null value (<ph id="ph2">`Nothing`</ph> in Visual Basic) in the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The key of the item to retrieve.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The value corresponding to the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">keyword</ph><ept id="p1">&lt;/code&gt;</ept> was found within the connection string, <ph id="ph3">`false`</ph> otherwise.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> contains a null value (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the values in the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated keys in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Keys%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is not a static copy; instead, the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> refers back to the values in the original <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, changes to the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> are reflected in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the values in the <ph id="ph2">&lt;xref href="System.Data.Common.DbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> to an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph>, starting at a particular <ph id="ph3">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> index.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.Collections.ICollection.CopyTo%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The one-dimensional <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The zero-based index in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which copying begins.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Collections.ICollection.IsSynchronized%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access to the <ph id="ph2">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Adds an element with the provided key and value to the <ph id="ph1">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.Collections.IDictionary.Add%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to use as the key of the element to add.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to use as the value of the element to add.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> object contains an element with the specified key.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Collections.IDictionary.Contains%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> contains an element with the key; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Collections.IDictionaryEnumerator"&gt;&lt;/xref&gt;</ph> object for the <ph id="ph2">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.Collections.IDictionary.GetEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IDictionaryEnumerator"&gt;&lt;/xref&gt;</ph> object for the <ph id="ph2">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets or sets the element with the specified key.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Collections.IDictionary.Item%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The key of the element to get or set.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The element with the specified key.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IDictionary&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.Collections.IDictionary.Remove%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that iterates through a collection.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.Collections.IEnumerable.GetEnumerator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Returns a collection of custom attributes for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetAttributes%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.AttributeCollection"&gt;&lt;/xref&gt;</ph> containing the attributes for this object.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Returns the class name of this instance of a component.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetClassName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The class name of the object, or <ph id="ph1">`null`</ph> if the class does not have a name.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Returns the name of this instance of a component.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetComponentName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The name of the object, or <ph id="ph1">`null`</ph> if the object does not have a name.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Returns a type converter for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetConverter%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> that is the converter for this object, or <ph id="ph2">`null`</ph> if there is no <ph id="ph3">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> for this object.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Returns the default event for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetDefaultEvent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventDescriptor"&gt;&lt;/xref&gt;</ph> that represents the default event for this object, or <ph id="ph2">`null`</ph> if this object does not have events.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Returns the default property for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a description of this member, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetDefaultProperty%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that represents the default property for this object, or <ph id="ph2">`null`</ph> if this object does not have properties.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Returns an editor of the specified type for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetEditor%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that represents the editor for this object.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> of the specified type that is the editor for this object, or <ph id="ph2">`null`</ph> if the editor cannot be found.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Returns the events for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetEvents%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the events for this component instance.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns the events for this instance of a component using the specified attribute array as a filter.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetEvents%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Attribute"&gt;&lt;/xref&gt;</ph> that is used as a filter.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the filtered events for this component instance.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Returns the properties for this instance of a component.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the properties for this component instance.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Returns the properties for this instance of a component using the attribute array as a filter.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Attribute"&gt;&lt;/xref&gt;</ph> that is used as a filter.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> that represents the filtered properties for this component instance.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Returns an object that contains the property described by the specified property descriptor.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetPropertyOwner%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> that represents the property whose owner is to be found.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the owner of the specified property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>