<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ccd5816605de14c521d593384cf28528d0733cc5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IEquatable-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf102154497d385b61b8376f1776b1c0e8615b8f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eca8331e2c5fab4f922a652b7b6cc15d59b110b2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines a generalized method that a value type or class implements to create a type-specific method for determining equality of instances.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is implemented by types whose values can be equated (for example, the numeric and string classes).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value type or class implements the <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method to create a type-specific method suitable for determining equality of instances.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method, which determines the sort order of instances of the implementing type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method, which determines the equality of instances of the implementing type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface is used by generic collection objects such as <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.List%601&gt;</ph>, and <ph id="ph4">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> when testing for equality in such methods as <ph id="ph5">`Contains`</ph>, <ph id="ph6">`IndexOf`</ph>, <ph id="ph7">`LastIndexOf`</ph>, and <ph id="ph8">`Remove`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should be implemented for any object that might be stored in a generic collection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The type of objects to compare.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Indicates whether the current object is equal to another object of the same type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method is intended to perform a test for equality with another object of type <ph id="ph2">`T`</ph>, the same type as the current object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method is called in the following circumstances:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`Equals`</ph> method is called and the <ph id="ph2">`other`</ph> parameter represents a strongly-typed object of type <ph id="ph3">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>(If <ph id="ph1">`other`</ph> is of type <ph id="ph2">&lt;xref:System.Object&gt;</ph>, the base <ph id="ph3">&lt;xref:System.Object.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Of the two methods, <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> offers slightly better performance.)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the search methods of a number of generic collection objects are called.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some of these types and their methods include the following:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some of the generic overloads of the <ph id="ph1">&lt;xref:System.Array.BinarySearch%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The search methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class, including <ph id="ph2">&lt;xref:System.Collections.Generic.List%601.Contains%28%600%29?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.IndexOf%2A?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Collections.Generic.List%601.LastIndexOf%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph5">&lt;xref:System.Collections.Generic.List%601.Remove%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The search methods of the <ph id="ph1">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class, including <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602.ContainsKey%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602.Remove%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The search methods of the generic <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> class, including <ph id="ph2">&lt;xref:System.Collections.Generic.LinkedList%601.Contains%2A?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.Generic.LinkedList%601.Remove%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, to handle the possibility that objects of a class will be stored in an array or a generic collection object, it is a good idea to implement <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> so that the object can be easily identified and manipulated.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When implementing the <ph id="ph1">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method, define equality appropriately for the type specified by the generic type argument.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the type argument is <ph id="ph1">&lt;xref:System.Int32&gt;</ph>, define equality appropriately for the comparison of two 32-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An object to compare with this object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current object is equal to the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">other</ph><ept id="p1">&lt;/code&gt;</ept> parameter; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>