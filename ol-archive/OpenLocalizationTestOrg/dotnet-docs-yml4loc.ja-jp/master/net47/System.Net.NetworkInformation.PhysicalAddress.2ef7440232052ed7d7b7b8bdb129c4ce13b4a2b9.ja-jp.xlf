<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fb33ef4c0d16410945940c5faccca9092548916c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.NetworkInformation.PhysicalAddress.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f41cd7872e9de3be32aa04a6d1a41fae855be4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b42e2fb07fbd1488fb6ec1b5731c3b0819ba1af</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the Media Access Control (MAC) address for a network interface (adapter).</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The MAC address, or physical address, is a hardware address that uniquely identifies each node, such as a computer or printer, on a network.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of this class are returned by the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In common scenarios, applications do not need to call this constructor; instances of this class are returned by the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.NetworkInterface.GetPhysicalAddress%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that you can also use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph> method to create a new instance of <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the address.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Compares two <ph id="ph1">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> to compare to the current instance.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this instance and the specified instance contain the same address; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Returns the address of the current instance.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the address.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the hash value of a physical address.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An integer hash value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> instance with a zero length address.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.Parse%2A&gt;</ph> method returns <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.None&gt;</ph> if you specify <ph id="ph3">`null`</ph> address.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Parses the specified <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> and stores its contents as the address bytes of the <ph id="ph2">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> returned by this method.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`address`</ph> parameter must contain a string that can only consist of numbers and upper-case letters as hexadecimal digits.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some examples of string formats that are acceptable are as follows:</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that an address that contains <ph id="ph1">`f0-e1-d2-c3-b4-a5`</ph> will fail to parse and throw an exception.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.NetworkInformation.PhysicalAddress.GetAddressBytes%2A&gt;</ph> method to retrieve the address from an existing <ph id="ph2">&lt;xref:System.Net.NetworkInformation.PhysicalAddress&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the address that will be used to initialize the <ph id="ph2">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> instance returned by this method.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.NetworkInformation.PhysicalAddress"&gt;&lt;/xref&gt;</ph> instance with the specified address.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an illegal hardware address.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This exception also occurs if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">address</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains a string in the incorrect format.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of the address of this instance.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the address contained in this instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>