<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37bf39d45130bb24828fe3938e9b94009765e9f2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Collections.Generic.EqualityComparer-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1026bae99448195e74ed06bcfbb11954c3df086</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cfa5fe07274c448886944c7586c09901d65467d9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for implementations of the <ph id="ph1">&lt;xref href="System.Collections.Generic.IEqualityComparer`1"&gt;&lt;/xref&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derive from this class to provide a custom implementation of the <ph id="ph1">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> generic interface for use with collection classes such as the <ph id="ph2">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> generic class, or with methods such as <ph id="ph3">&lt;xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> generic interface and, if so, returns an <ph id="ph4">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that invokes the implementation of the <ph id="ph5">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it returns an <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph>, as provided by <ph id="ph2">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you derive from the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class instead of implementing the <ph id="ph2">&lt;xref:System.Collections.Generic.IEqualityComparer%601&gt;</ph> interface, because the <ph id="ph3">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> class tests for equality using the <ph id="ph4">&lt;xref:System.IEquatable%601.Equals%2A?displayProperty=fullName&gt;</ph> method instead of the <ph id="ph5">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is consistent with the <ph id="ph1">`Contains`</ph>, <ph id="ph2">`IndexOf`</ph>, <ph id="ph3">`LastIndexOf`</ph>, and <ph id="ph4">`Remove`</ph> methods of the <ph id="ph5">&lt;xref:System.Collections.Generic.Dictionary%602&gt;</ph> class and other generic collections.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The type of objects to compare.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.Generic.EqualityComparer`1"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Returns a default equality comparer for the type specified by the generic argument.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A&gt;</ph> property checks whether type <ph id="ph2">`T`</ph> implements the <ph id="ph3">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface and, if so, returns an <ph id="ph4">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that uses that implementation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it returns an <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601&gt;</ph> that uses the overrides of <ph id="ph2">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</ph> provided by <ph id="ph4">`T`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The default instance of the <ph id="ph1">&lt;xref href="System.Collections.Generic.EqualityComparer`1"&gt;&lt;/xref&gt;</ph> class for type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">T</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether two objects of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept> are equal.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%2A&gt;</ph> method is reflexive, symmetric, and transitive.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, it returns <ph id="ph1">`true`</ph> if used to compare an object with itself; <ph id="ph2">`true`</ph> for two objects <ph id="ph3">`x`</ph> and <ph id="ph4">`y`</ph> if it is <ph id="ph5">`true`</ph> for <ph id="ph6">`y`</ph> and <ph id="ph7">`x`</ph>; and <ph id="ph8">`true`</ph> for two objects <ph id="ph9">`x`</ph> and <ph id="ph10">`z`</ph> if it is <ph id="ph11">`true`</ph> for <ph id="ph12">`x`</ph> and <ph id="ph13">`y`</ph> and also <ph id="ph14">`true`</ph> for <ph id="ph15">`y`</ph> and <ph id="ph16">`z`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified objects are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, serves as a hash function for the specified object for hashing algorithms and data structures, such as a hash table.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The object for which to get a hash code.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A hash code for the specified object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The type of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> is a reference type and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether the specified objects are equal.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.Equals%28%600%2C%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be cast to the type specified by the generic argument <ph id="ph3">`T`</ph> of the current instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it cannot be cast to <ph id="ph1">`T`</ph>, an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparing <ph id="ph1">`null`</ph> is allowed and does not generate an exception.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified objects are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;x&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;y&lt;/code&gt;</ph> is of a type that cannot be cast to type <ph id="ph3">&lt;code&gt;T&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Returns a hash code for the specified object.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a wrapper for the <ph id="ph1">&lt;xref:System.Collections.Generic.EqualityComparer%601.GetHashCode%28%600%29&gt;</ph> method, so <ph id="ph2">`obj`</ph> must be a type that can be cast to the type specified by the generic type argument <ph id="ph3">`T`</ph> of the current instance.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> for which a hash code is to be returned.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A hash code for the specified object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The type of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> is a reference type and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">obj</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;obj&lt;/code&gt;</ph> is of a type that cannot be cast to type <ph id="ph2">&lt;code&gt;T&lt;/code&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>