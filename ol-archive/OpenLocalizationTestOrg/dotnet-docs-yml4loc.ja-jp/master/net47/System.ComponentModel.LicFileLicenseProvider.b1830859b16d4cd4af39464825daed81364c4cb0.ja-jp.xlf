<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba976b2740ea52c8059a7eb6f4177a529d84582b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.LicFileLicenseProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">102510cb7909532559dc16fa3eef71a93082b531</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96229afd7bcddb522d423dec01afad138768b393</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an implementation of a <ph id="ph1">&lt;xref href="System.ComponentModel.LicenseProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The provider works in a similar fashion to the Microsoft .NET Framework standard licensing model.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider&gt;</ph> offers <ph id="ph2">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> method determines whether the <ph id="ph2">&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;</ph> retrieved by the <ph id="ph3">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph> method is valid.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from this class, you can override the <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> method to provide your own validation logic.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class exists to provide similar licensing functionality to COM licensing and uses text license files.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on licensing, see <bpt id="p1">[</bpt>How to: License Components and Controls<ept id="p1">](http://msdn.microsoft.com/library/8e66c1ed-a445-4b26-8185-990b6e2bbd57)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.LicFileLicenseProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Returns a key for the specified type.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The object type to return the key.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A confirmation that the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is licensed.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Returns a license for the instance of the component, if one is available.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>At design time, the <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A&gt;</ph> method looks for a license file named <ph id="ph2">`myClassName.LIC`</ph>, where <ph id="ph3">`myClassName`</ph> is the <ph id="ph4">&lt;xref:System.Type.FullName%2A&gt;</ph> of the component to create.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This file must be in the same directory as the .dll file that contains the component.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Next, this method checks the first line of the license file against a key specified in the <ph id="ph1">&lt;xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the key is valid, this line is used as the <ph id="ph1">&lt;xref:System.ComponentModel.License.LicenseKey%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.LicenseContext"&gt;&lt;/xref&gt;</ph> that specifies where you can use the licensed object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that represents the component requesting the <ph id="ph2">&lt;xref href="System.ComponentModel.License"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An object that requests the <ph id="ph1">&lt;xref href="System.ComponentModel.License"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a <ph id="ph2">&lt;xref href="System.ComponentModel.LicenseException"&gt;&lt;/xref&gt;</ph> should be thrown when a component cannot be granted a license; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A valid <ph id="ph1">&lt;xref href="System.ComponentModel.License"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If this method cannot find a valid <ph id="ph1">&lt;xref href="System.ComponentModel.License"&gt;&lt;/xref&gt;</ph> or a valid <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">context</ph><ept id="p1">&lt;/code&gt;</ept> parameter, it returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Determines whether the key that the <ph id="ph1">&lt;xref href="System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)"&gt;&lt;/xref&gt;</ph> method retrieves is valid for the specified type.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method checks the key against the phrase: " <ph id="ph1">`myClassName is a licensed component.`</ph> ", where <ph id="ph2">`myClassName`</ph> is the <ph id="ph3">&lt;xref:System.Type.FullName%2A&gt;</ph> of the component you want to create.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.License.LicenseKey"&gt;&lt;/xref&gt;</ph> to check.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that represents the component requesting the <ph id="ph2">&lt;xref href="System.ComponentModel.License"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key is a valid <ph id="ph2">&lt;xref href="System.ComponentModel.License.LicenseKey"&gt;&lt;/xref&gt;</ph> for the specified type; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>