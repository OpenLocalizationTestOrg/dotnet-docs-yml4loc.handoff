<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da144fb5449534f2846ae7d27aafb020e2a67b7b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.ListView.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85a5a288225743deddfccbcf1146e4278833fbde</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">808c867bc6d2e9ce5b489aad4a8c02836d630c87</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Windows list view control, which displays a collection of items that can be displayed using one of four different views.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control allows you to display a list of items with item text and, optionally, an icon to identify the type of item.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the Windows Explorer list of files is similar in appearance to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It displays a list of the files and folders currently selected in the tree.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each file and folder displays an icon associated with it to help identify the type of file or folder.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> class represents an item within a <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The items that are displayed in the list can be shown in one of five different views.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Items can be displayed as large icons, as small icons, or as small icons in a vertical list.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Items can also have subitems which contain information that is related to the parent item.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The details view allows you to display the item and its subitems in a grid with column headers that identify the information being displayed in a subitem.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tile view, which has limited availability as described below, allows you to display the item and its subitems as a tile that contains a large icon next to the textual information.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> supports single or multiple selection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The multiple selection feature lets the user select from a list of items in a way similar to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the user can activate selected items to perform a task.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could use a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to display a list of files that the application can then open and utilize.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can select the files to open and then double-click them to activate the items and open the files in the application.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> can also display check boxes, using the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property, to allow the user to check the items that they want to perform an action on.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control in a variety of ways.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control can be used to display information from an application, a database, or a text file.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> can also be used to obtain information from the user, such as selecting a set of files to process.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> provides a large number of properties that provide flexibility in appearance and behavior.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property allows you to change the way in which items are displayed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph> properties allow you to specify the <ph id="ph4">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> objects that contain the images displayed for items and, in the case of the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph>, the check boxes that are displayed when the <ph id="ph6">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property is set to <ph id="ph7">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which items are checked, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckedItems%2A&gt;</ph> property to access the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckedListViewItemCollection&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> property allows access to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ColumnHeaderCollection&gt;</ph>, which stores the column headers that are displayed when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property of the control is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Items are added and removed from the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> through the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> property allows you to access the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> of the control, which provides methods for manipulating the items in the control.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to allow the user to edit the text of an item, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>When your control contains a large number of items, it is often easier for the user to see them in a sorted list.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A&gt;</ph> property to sort the items alphabetically.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also completely customize the appearance of a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and handle one or more of the following events: <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.DrawColumnHeader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control are used when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property of the control is set to <ph id="ph3">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AllowColumnReorder%2A&gt;</ph> property allows the user of your <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to reconfigure the order of columns at run time.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> property allows an item and its subitems to be selected instead of just the item.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display gridlines in the details view to identify the boundaries of items and subitems in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.GridLines%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property allows you to specify the type of column headers to display.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control can operate in virtual mode, where <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> objects are generated dynamically instead of being stored in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be useful for dealing with very large lists or lists whose contents frequently change.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable Virtual mode, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and handle the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.RetrieveVirtualItem&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.CacheVirtualItems&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.SearchForVirtualItem&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the many properties that are available for a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, there are methods and events that your application can use to provide additional capabilities to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> methods allow you to improve performance when you add many items to a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> by preventing the control from repainting every time that an item is added.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is displaying items and subitems, you may want to provide functionality when the user right-clicks a subitem.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the item whose subitem is being clicked, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemAt%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing validation of the items after the user has edited them, you may want to display a specific item to the user to change.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.EnsureVisible%2A&gt;</ph> method can be called to ensure that the specific item is in the visible area of the control.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property set to <ph id="ph2">`true`</ph>, you can perform tasks such as validating the text being edited before and after the text changed by creating an event handler for the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.BeforeLabelEdit&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.AfterLabelEdit&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform tasks such as opening a file or displaying a dialog box to edit an item displayed in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, you can create an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ItemActivate&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you allow the user to sort the items in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> when they click a column header, you can create an event handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ColumnClick&gt;</ph> event to perform the sorting.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, you can determine when a change in an item's check state has occurred by handling the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set a background image for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> with the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application must have the <ph id="ph1">&lt;xref:System.STAThreadAttribute&gt;</ph> on its <ph id="ph2">`Main`</ph> method to correctly display the background image for the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, if a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control with a background image is hosted in Internet Explorer, specify comctl32.dll version 6.0 as a dependent assembly in the application manifest file to ensure the background image is property displayed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control has no affect on the appearance of the cursor in <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> versions 1.1 and earlier.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows XP and Windows Server 2003 provide three features that enhance the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control when your application calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method: tile view, grouping, and the insertion mark.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tile view lets you balance graphical and textual information by displaying item and subitem text next to large icons.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph> to enable this behavior.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The grouping feature lets you visually group items into related categories.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> property to add <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewGroup&gt;</ph> objects to the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control when you want to enable this feature.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To temporarily disable the feature, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ShowGroups%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The insertion mark feature lets you provide drag-and-drop item repositioning with visual feedback to indicate drop locations.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewInsertionMark&gt;</ph> object retrieved through the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.InsertionMark%2A&gt;</ph> property to display the insertion mark.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>These features are available only under Windows XP and Windows Server 2003.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>On earlier operating systems, the code that relate to these features has no effect, the tile view appears as the large icon view, and the insertion mark and groups do not display.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, you might want to include code that determines whether these features are available, and provide alternate functionality when they are unavailable.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>These features are provided by the same library that provides the operating system themes feature.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>To check for the availability of this library, call the <ph id="ph1">&lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName&gt;</ph> method overload and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows some of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> members and the views they are valid in.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>ListView member</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>View</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoArrange%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph></source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoResizeColumn%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.Details&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.View.List&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph></source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemAt%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.Details&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>All views except <ph id="ph1">&lt;xref:System.Windows.Forms.View.List&gt;</ph></source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.InsertionMark%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of action the user must take to activate an item.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property allows you to specify how the user will activate an item in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Activating an item in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> differs from just selecting an item.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an item is activated, an action is typically performed in an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemActivate&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when an item is activated you might open a file or display a dialog box that allows the item to be edited.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, an item is double-clicked by the user to activate it.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ItemActivation.OneClick&gt;</ph>, clicking the item one time activates it.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.ItemActivation.TwoClick&gt;</ph> differs from the standard double-click because the two clicks can have any duration between them.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ItemActivation.OneClick&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ItemActivation.TwoClick&gt;</ph>, label editing will not be allowed regardless of the value of the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemActivation"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemActivation.Standard"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemActivation"&gt;&lt;/xref&gt;</ph> members.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Occurs when the label for an item is edited by the user.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AfterLabelEdit&gt;</ph> event occurs when the user finishes modifying the text for an item.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new string that the user types for the item is passed to the event, and the event handler can reject the change.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event handler rejects the change, the text reverts to the text as it was before the user began editing the item.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AfterLabelEdit?displayProperty=fullName&gt;</ph> event takes place before the label edit is committed, calling the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Sort%2A?displayProperty=fullName&gt;</ph> method in a handler for this event will sort the item using the original value.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AfterLabelEdit&gt;</ph> event to be raised, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control must be set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeforeLabelEdit&gt;</ph> event to perform tasks before the user edits the text of an item.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets the alignment of items in the control.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property only affects alignment when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has no effect with the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View.List&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewAlignment.Top"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user can drag column headers to reorder columns in the control.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AllowColumnReorder%2A&gt;</ph> property has no effect unless the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to allow users to reposition columns in the control at run time.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AllowColumnReorder%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, users can position the columns in the control to display the item and its subitems in a way that meets their needs within your application.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if drag-and-drop column reordering is allowed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Arranges items in the control when they are displayed as icons based on the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.Alignment"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ArrangeIcons%2A&gt;</ph> method is only useful when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ArrangeIcons%2A&gt;</ph> method arranges the items based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cause the items to be aligned based on a value that differs from that of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property, use the other version of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ArrangeIcons%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Arranges items in the control when they are displayed as icons with a specified alignment setting.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ArrangeIcons%2A&gt;</ph> method is only useful when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ArrangeIcons%2A&gt;</ph> method arranges the icons in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> based on the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewAlignment&gt;</ph> value specified in the <ph id="ph4">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method does not change the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property of the control.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used to arrange icons on the control using a different value than that of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>To cause the items to be aligned based on the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property, use the other version of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ArrangeIcons%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The value specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a member of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewAlignment"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets or sets whether icons are automatically kept arranged.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoArrange%2A&gt;</ph> property only arranges items in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the alignment of items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoArrange%2A&gt;</ph> to ensure that all items in your <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control are automatically arranged to avoid overlapping at run time.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if icons are automatically kept arranged and snapped to the grid; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Resizes the width of the given column as indicated by the resize style.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is only effective once the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> and containing <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> have been constructed, and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> column headers and columns are populated with items.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If new items are added to the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, the columns will not resize unless <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.AutoResizeColumn%2A&gt;</ph> is called again.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The zero-based index of the column to resize.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnHeaderAutoResizeStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is greater than 0 when <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.Columns"&gt;&lt;/xref&gt;</ph> is <ph id="ph3">`null`</ph></source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of columns set.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;headerAutoResize&lt;/code&gt;</ph> is not a member of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ColumnHeaderAutoResizeStyle"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Resizes the width of the columns as indicated by the resize style.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method is only effective once the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> and containing <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph> have been constructed, and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> column headers and columns are populated with items.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If new items are added to the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, the columns will not resize unless <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.AutoResizeColumns%2A&gt;</ph> is called again.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnHeaderAutoResizeStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)"&gt;&lt;/xref&gt;</ph> is called with a value other than <ph id="ph2">&lt;xref href="System.Windows.Forms.ColumnHeaderAutoResizeStyle.None"&gt;&lt;/xref&gt;</ph> when <ph id="ph3">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> is not set to <ph id="ph4">&lt;xref href="System.Windows.Forms.View.Details"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> of the background.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets or sets an <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has no effect on the layout of the background image of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, therefore it is not shown in the designer or by IntelliSense.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.BackgroundImageLayout"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the background image of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> should be tiled.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BackgroundImageTiled%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if an image is not set.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the background image of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> should be tiled; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Occurs when the user starts editing the label of an item.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeforeLabelEdit&gt;</ph> event occurs when the user starts modifying the text for an item.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event handler cancels this event, the user cannot edit the text.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to prevent the user from editing specific items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph3">`false`</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.BeforeLabelEdit&gt;</ph> event is not raised; all user attempts to edit item labels are automatically rejected.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Prevents the control from drawing until the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.EndUpdate"&gt;&lt;/xref&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preferred way to add multiple items to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is to use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> (accessed through the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables you to add an array of items to the list in a single operation.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you want to add items one at a time using the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> class, you can use the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> method to prevent the control from repainting the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> every time that an item is added.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have completed the task of adding items to the control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> method to enable the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> to repaint.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This way of adding items can prevent flickered drawing of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> when lots of items are being added to the control.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> is called more than once, <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> must be called an equivalent number of times.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Until the last call to <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> will not repaint.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other than this, multiple calls to <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> have no effect.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Gets or sets the border style of the control.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BorderStyle%2A&gt;</ph> property to change the border style of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to match the border style settings of other controls on the form.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if none of the other controls on your form displays a border, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BorderStyle%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to <ph id="ph3">&lt;xref:System.Windows.Forms.BorderStyle.None&gt;</ph> to match the other controls.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle.Fixed3D"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Occurs when the contents of the display area for a <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> in virtual mode has changed, and the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> determines that a new range of items is needed.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event only occurs when <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualMode%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling this event allows the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> to update the item information held in the cache so that it is readily available.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can improve performance on large lists, or lists whose items are expensive to calculate.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether a check box appears next to each item in the control.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property allows you to display a check box next to each item in the list.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables your application to display a list of items (and subitems if the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">`View.Details`</ph>) that the user can select by clicking the check box.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property offers a way to select multiple items in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control without using the CTRL key.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on your application, using check boxes to select items rather than the standard multiple selection method may be easier for the user.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even if the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.MultiSelect%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph3">`false`</ph>, you can still display checkboxes and provide multiple selection capabilities to the user.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>This feature can be useful if you do not want multiple items to be selected yet still want to allow the user to choose multiple items from the list to perform an operation within your application.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine when an item has been checked, create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get all the items that are checked in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckedItems%2A&gt;</ph> property to access the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.CheckedIndexCollection&gt;</ph> for the control.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the indexes of all items that are checked in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckedIndices%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> is specified in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph> property, the images at index positions 0 and 1 in the <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> are displayed instead of the check box.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The image at index position 0 is displayed instead of the unchecked check box, and the image at index position 1 is displayed instead of the checked check box.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set this property to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Check boxes are not displayed when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a check box appears next to each item in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Gets the indexes of the currently checked items in the control.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only useful when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckedIndices%2A&gt;</ph> property returns a collection that contains the index positions in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> of all items that are checked in the control.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to manipulate the items in the collection, see <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckedIndexCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to obtain a collection of the items that are checked in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, instead of the index positions of the items that are checked, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckedItems%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.CheckedIndexCollection"&gt;&lt;/xref&gt;</ph> that contains the indexes of the currently checked items.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>If no items are currently checked, an empty <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.CheckedIndexCollection"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets the currently checked items in the control.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only useful when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckedItems%2A&gt;</ph> property returns a collection that contains all items that are checked in the control.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to manipulate the items in the collection, see <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckedListViewItemCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to obtain a collection of the index positions within the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> of the items that are checked in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, instead of the items that are checked, use the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.CheckedIndices%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.CheckedListViewItemCollection"&gt;&lt;/xref&gt;</ph> that contains the currently checked items.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>If no items are currently checked, an empty <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.CheckedListViewItemCollection"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Removes all items and columns from the control.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to remove all items and columns from the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control without having to call the individual <ph id="ph2">`Clear`</ph> methods from the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ColumnHeaderCollection&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Clear%2A&gt;</ph> method does not clear <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> specified for the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>To clear <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> call <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks a column header within the list view control.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnClick&gt;</ph> event occurs when the user clicks one of the column headers in a details view of the items in a <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control (when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnClick&gt;</ph> event is typically handled to sort the items in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> using the clicked column as the column to sort by.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Occurs when the column header order is changed.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnReordered&gt;</ph> event is a cancelable event and can be canceled by handling the event and setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the event is canceled, the <ph id="ph1">&lt;xref:System.Windows.Forms.ColumnReorderedEventArgs.NewDisplayIndex%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnReorderedEventArgs&gt;</ph> will not change to the <ph id="ph3">&lt;xref:System.Windows.Forms.ColumnReorderedEventArgs.OldDisplayIndex%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Gets the collection of all column headers that appear in the control.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> property returns a collection that contains the <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> objects that are displayed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> objects define the columns that are displayed in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each column is used to display subitem information for each item in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to manipulate the items in the collection, see <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnHeaderCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control does not have any column headers specified and you set the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control will not display any items.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ColumnHeaderCollection"&gt;&lt;/xref&gt;</ph> that represents the column headers that appear when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">&lt;xref href="System.Windows.Forms.View.Details"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Occurs after the width of a column is successfully changed.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event will not occur if the column width change is canceled in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnWidthChanging&gt;</ph> event</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Occurs when the width of a column is changing.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event allows you to check the new column width with the <ph id="ph1">&lt;xref:System.Windows.Forms.ColumnWidthChangingEventArgs.NewWidth%2A?displayProperty=fullName&gt;</ph> property, and cancel the event if you choose by setting the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Creates a handle for the control.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Gets the default size of the control.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> of the control.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Dispose%2A&gt;</ph> method when the component is no longer needed.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method removes the component from its container (if the component has a site) and triggers the dispose event.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the surface of the control should be drawn using double buffering; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Occurs when the details view of a <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> is drawn and the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.OwnerDraw"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event lets you customize the appearance of a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using owner drawing.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is raised only when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can occur for each column header in the control.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on owner drawing, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property reference topic.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Occurs when a <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> is drawn and the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.OwnerDraw"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event lets you customize the appearance of a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using owner drawing.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is raised only when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about owner drawing, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property reference topic.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event can occur for each <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> item.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.DrawColumnHeader&gt;</ph> events also occur.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event to draw elements common to all items, such as the background, and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event to draw elements for individual subitems, such as text values.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also draw all items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using only one of the two events, although this may be less convenient.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>To draw column headers in the details view, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawColumnHeader&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of a bug in the underlying Win32 control, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event occurs without accompanying <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> events once per row in the details view when the mouse pointer moves over the row, causing anything painted in a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event handler to be painted over by a custom background drawn in a <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> reference topic for a workaround that invalidates each row when the extra event occurs.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>An alternative workaround is to put all your custom drawing code in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event handler and paint the background for the entire item (including subitems) only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DrawListViewSubItemEventArgs.ColumnIndex%2A?displayProperty=fullName&gt;</ph> value is 0.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Occurs when the details view of a <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> is drawn and the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.OwnerDraw"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event lets you customize the appearance of a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using owner drawing.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is raised only when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on owner drawing, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property reference topic.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subitem information typically appears in the tile view as well as the details view, but in the tile view, it must be drawn in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event can occur for each <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> subitem.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event to draw elements common to all subitems, such as the background, and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event to draw elements for individual subitems, such as text values.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also draw all items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using only one of the two events, although this may be less convenient.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>To draw column headers in the details view, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawColumnHeader&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event does not occur for any subitems for which no <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> object has been added to the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note also that the first subitem of each <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> object represents the parent item itself, and is displayed in the first column.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Resumes drawing of the list view control after drawing is suspended by the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.BeginUpdate"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preferred way to add multiple items to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is to use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection.AddRange%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> (accessed through the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables you to add an array of items to the list in a single operation.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you want to add items one at a time using the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> class, you can use the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> method to prevent the control from repainting the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> each time an item is added.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once you have completed the task of adding items to the control, call the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> method to enable the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> to repaint.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>This way of adding items can prevent flickered drawing of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> when a large number of items are being added to the control.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> is called more than once, <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> must be called an equivalent number of times.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>Until the last call to <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.EndUpdate%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> will not repaint.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other than this, multiple calls to <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> have no effect.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Ensures that the specified item is visible within the control, scrolling the contents of the control if necessary.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to ensure that a specific item is visible within the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing validation on the items in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, you can call the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.EnsureVisible%2A&gt;</ph> method to ensure that an item that failed validation is displayed in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to allow the user to perform changes on the item.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item that you want to ensure is visible is located above the viewable region of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, calling the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.EnsureVisible%2A&gt;</ph> method will scroll the contents of the control until it is the first item in the viewable area of the control.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item is below the viewable region of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, calling the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.EnsureVisible%2A&gt;</ph> method will scroll the contents of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control until the item is the last item in the viewable area of the control.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine if an item is located at the top of the display area of a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.TopItem%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item to scroll into view.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Finds the first <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that begins with the specified text value.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The search is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`text`</ph> parameter can specify a substring of the desired matching text.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, this method will return the first item that starts with the specified text.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> contains two list items—the first item's text set to "angle bracket" and the second item's text set to "bracket"—a call to <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> passing <ph id="ph3">`brack`</ph> as the parameter will return the item whose text is "bracket".</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> method returns <ph id="ph2">`null`</ph> if the list is empty or there is no matching item.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The text to search for.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that begins with the specified text value.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Finds the first <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem.ListViewSubItem"&gt;&lt;/xref&gt;</ph>, if indicated, that begins with the specified text value.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The search starts at the specified index.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The search is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`text`</ph> parameter can specify a substring of the desired matching text.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, this method will return the first item that starts with the specified text.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> contains two list items—the first item's text set to "angle bracket" and the second item's text set to "bracket"—a call to <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> passing "brack" as the parameter will return the item whose text is "bracket".</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> method returns <ph id="ph2">`null`</ph> if the list is empty or there is no matching item.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The text to search for.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include subitems in the search; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The index of the item at which to start the search.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that begins with the specified text value.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is less 0 or more than the number items in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Finds the first <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem.ListViewSubItem"&gt;&lt;/xref&gt;</ph>, if indicated, that begins with the specified text value.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The search starts at the specified index.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> method returns <ph id="ph2">`null`</ph> if the list is empty or there is no matching item.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The search is case-insensitive.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`text`</ph> parameter can specify a substring of the desired matching text.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will return the first item that starts with the specified text, unless <ph id="ph1">`false`</ph> is passed in for <ph id="ph2">`isPrefixSearch`</ph>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> contains two list items—the first item's text set to "angle bracket" and the second item's text set to "bracket"—a call to <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> passing "brack" as the search text will return the item whose text is "bracket".</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`isPrefixSearch`</ph> is set to <ph id="ph2">`false`</ph>, this call will return <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The text to search for.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include subitems in the search; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The index of the item at which to start the search.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow partial matches; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that begins with the specified text value.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> is less than 0 or more than the number of items in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Finds the next item from the given point, searching in the specified direction</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> method returns <ph id="ph2">`null`</ph> if no item is found in the given direction.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifying the nearest item can vary depending on the operating system the application is running on, and will affect the results of <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.SearchDirectionHint"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The point at which to begin searching.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that is closest to the given point, searching in the specified direction.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> is set to a value other than <ph id="ph2">&lt;xref href="System.Windows.Forms.View.SmallIcon"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.View.LargeIcon"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Finds the next item from the given x- and y-coordinates, searching in the specified direction.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> method returns <ph id="ph2">`null`</ph> if no item is found in the given direction.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifying the nearest item can vary depending on the operating system the application is running on, and will affect the results of <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.SearchDirectionHint"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The x-coordinate for the point at which to begin searching.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>The y-coordinate for the point at which to begin searching.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that is closest to the given coordinates, searching in the specified direction.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> is set to a value other than <ph id="ph2">&lt;xref href="System.Windows.Forms.View.SmallIcon"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.View.LargeIcon"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Gets or sets the item in the control that currently has focus.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FocusedItem%2A&gt;</ph> property returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> that represents the item currently displaying the focus rectangle for the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control has no directly editable areas other than the items it displays, when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control has focus, an item within the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> displays the focus reticle around its item text.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the last selected item in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is the item with focus.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although an item may be the one displaying the focus reticle, it may not actually be a selected item in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> properties to obtain the selected items in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.FocusedItem%2A&gt;</ph> property is not necessarily selected.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FocusedItem%2A&gt;</ph> property to determine which item was last clicked in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, regardless of selection state.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that represents the item that has focus, or <ph id="ph2">`null`</ph> if no item has the focus in the <ph id="ph3">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>Gets or sets the foreground color.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that is the foreground color.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether clicking an item selects all its subitems.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> property has no effect unless the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> property is typically used when a <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> displays items with many subitems and it is important to be able to see selected items when the item text is not visible due to horizontal scrolling of the control's contents.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, ToolTips for a <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewItem.ListViewSubItem&gt;</ph> will not be shown; only the ToolTip for the parent <ph id="ph4">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> is displayed.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if clicking an item selects the item and all its subitems; <ph id="ph2">`false`</ph> if clicking an item selects only the item itself.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Retrieves the item at the specified location.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemAt%2A&gt;</ph> method lets you determine which item is located at a specific location within the client region of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method when the user clicks or right-clicks a subitem (when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">`View.Details`</ph>) and you want to determine which item owns the subitem that was clicked based on the mouse coordinates at the time the user clicked the mouse.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> property value is <ph id="ph2">`false`</ph>, this method returns an item only when the specified location is within the bounds of the parent item (which is displayed in the first column when the control is in details mode).</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to retrieve an item with this method given a location within the bounds of a subitem.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HitTest%2A&gt;</ph> method to retrieve detailed information about the item at a particular location.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do drag-and-drop repositioning of items within a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, you might want to use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=fullName&gt;</ph> method rather than the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.GetItemAt%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewInsertionMark.NearestIndex%2A?displayProperty=fullName&gt;</ph> method finds the closest item regardless of where the mouse pointer is located.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemAt%2A&gt;</ph> method, on the other hand, returns <ph id="ph2">`null`</ph> if there is no item at the specified location.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewInsertionMark&gt;</ph> class is supported only on Windows XP and Windows Server 2003 when your application calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The x-coordinate of the location to search for an item (expressed in client coordinates).</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The y-coordinate of the location to search for an item (expressed in client coordinates).</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that represents the item at the specified position.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>If there is no item at the specified location, the method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Retrieves the bounding rectangle for a specific item within the list view control.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>The bounding rectangle returned by this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemRect%2A&gt;</ph> method represents the entire item, including the icon, item text, and subitem text.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a specific portion of the item's bounding rectangle, use the other version of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemRect%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item within the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ListViewItemCollection"&gt;&lt;/xref&gt;</ph> whose bounding rectangle you want to return.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the bounding rectangle of the specified <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>Retrieves the specified portion of the bounding rectangle for a specific item within the list view control.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>The bounding rectangle returned by this version of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemRect%2A&gt;</ph> method represents only the section of the item specified in the <ph id="ph2">`portion`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the bounding rectangle of the entire item, use the other version of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemRect%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item within the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ListViewItemCollection"&gt;&lt;/xref&gt;</ph> whose bounding rectangle you want to return.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemBoundsPortion"&gt;&lt;/xref&gt;</ph> values that represents a portion of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> for which to retrieve the bounding rectangle.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the bounding rectangle for the specified portion of the specified <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether grid lines appear between the rows and columns containing the items and subitems in the control.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GridLines%2A&gt;</ph> property has no effect unless the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GridLines%2A&gt;</ph> property allows you to display lines to identify the rows and columns that are displayed in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control when it displays items and their subitems.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The grid lines that are displayed do not provide the ability to resize rows and columns as an application such as Microsoft Excel does.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only columns can be resized, if column headers are displayed, by moving the mouse pointer to the right side of the column to resize and then clicking and dragging until the column is the size you want.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>The grid lines feature is used to provide the user of the control with visible boundaries around items and subitems.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if grid lines are drawn around items and subitems; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Gets the collection of <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewGroup"&gt;&lt;/xref&gt;</ph> objects assigned to the control.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> grouping feature lets you create visual groups of logically related <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> items.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each group consists of a textual header followed by a horizontal line and the items assigned to that group.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can align the header text to the left, right, or center of the control.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any groups assigned to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control appear whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to a value other than <ph id="ph3">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> groups help your users find the items they are looking for by separating the items into useful categories.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create whatever categories you need.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>One typical approach is to group the items based on the way the list is sorted.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can group the items by the initial letter of the item name when the list is sorted alphabetically or by subitems such as type or date when the list is sorted by clicking a column header in the details view.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Explorer uses this type of grouping.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the grouping feature, add one or more <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewGroup&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> collection of a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the group header text and header alignment in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewGroup.%23ctor%2A&gt;</ph> constructor, or set them using the <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewGroup.Header%2A?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewGroup.HeaderAlignment%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>To temporarily disable the grouping feature, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ShowGroups%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign an item to a group by specifying the group in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.%23ctor%2A&gt;</ph> constructor, by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=fullName&gt;</ph> property, or by directly adding the item to the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=fullName&gt;</ph> collection of a group.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>All items should be assigned to groups before they are displayed.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any items that are not assigned to a group will appear in the default group, which has the header label "DefaultGroup{0}".</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default group is not contained in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> collection, and cannot be altered.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is primarily useful in debugging to ensure that all items have been properly added to groups.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>An item can only be in one group at a time.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the group to which an item belongs by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.Group%2A?displayProperty=fullName&gt;</ph> property at run time or by adding it to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewGroup.Items%2A?displayProperty=fullName&gt;</ph> collection of another group, which automatically removes it from the previous group.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>The insertion mark feature is disabled when using groups.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the grouping feature orders items by group membership, while the insertion mark feature is used with drag-and-drop repositioning in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control that does not already order its items.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> groups are available only on Windows XP and Windows Server 2003 when your application calls the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>On earlier operating systems, any code relating to groups has no effect and the groups will not appear.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, any code that depends on the grouping feature might not work correctly.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might want to include code that determines whether the grouping feature is available, and provide alternate functionality when it is unavailable.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might want to provide alternate sorting when running on operating systems that do not support sorting by group.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>The grouping feature is provided by the same library that provides the operating system themes feature.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>To check for the availability of this library, call the <ph id="ph1">&lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName&gt;</ph> method overload and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewGroupCollection"&gt;&lt;/xref&gt;</ph> that contains all the groups in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Gets or sets the column header style.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property allows you to specify the type of column headers to display when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.Details&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control has <ph id="ph6">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> objects specified in the <ph id="ph7">&lt;xref:System.Windows.Forms.ListView.ColumnHeaderCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> objects define the columns that are displayed in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each column is used to display subitem information for each item in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property allows you to specify whether the column headers are visible or, if they are visible, whether they will function as clickable buttons.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeaderStyle?displayProperty=fullName&gt;</ph>, the column headers are not displayed, although the items and subitems of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control are still arranged in columns.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeaderStyle?displayProperty=fullName&gt;</ph>, the column headers act like buttons that users can click to carry out an action, such as sorting the items in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using the items in the clicked column as a key.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement this behavior in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeaderStyle?displayProperty=fullName&gt;</ph>, the column headers appear, but cannot be clicked.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnHeaderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnHeaderStyle.Clickable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnHeaderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the selected item in the control remains highlighted when the control loses focus.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`false`</ph>, selected items in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control remain highlighted in a different color than the current selection color specified by the operating system when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control loses focus.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to keep items that are selected by the user visible when the user clicks a different control on the form or moves to a different window.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are concerned with the accessibility of your applications, it is recommended that you set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HideSelection%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the selected item does not appear highlighted when the control loses focus; <ph id="ph2">`false`</ph> if the selected item still appears highlighted when the control loses focus.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Provides item information, given a point.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether a point is in an item or subitem and where in the item the point is located, such as on the label or image area.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the coordinates are located outside the control, the returned <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewHitTestInfo&gt;</ph> object has a <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A&gt;</ph> property of "None"; and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A&gt;</ph> properties are set to <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> at which to retrieve the item information.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The coordinates are relative to the upper-left corner of the control.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The item information, given a point.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The point contains coordinates that are less than 0.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Provides item information, given x- and y-coordinates.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether a point is in an item or subitem, and where in the item the point is located, such as on the label or image area.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the coordinates are located outside the control, the returned <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewHitTestInfo&gt;</ph> object has a <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewHitTestInfo.Location%2A&gt;</ph> property of "None"; and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewHitTestInfo.Item%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListViewHitTestInfo.SubItem%2A&gt;</ph> properties are set to <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The x-coordinate at which to retrieve the item information.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The coordinate is relative to the upper-left corner of the control.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The y-coordinate at which to retrieve the item information.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The coordinate is relative to the upper-left corner of the control.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The item information, given x- and y- coordinates.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>The x- or y-coordinate is less than 0.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the text of an item or subitem has the appearance of a hyperlink when the mouse pointer passes over it.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enabling hot tracking willcause the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property to be set to <ph id="ph2">&lt;xref:System.Windows.Forms.ItemActivation.OneClick&gt;</ph> andthe<ph id="ph3">&lt;xref:System.Windows.Forms.ListView.HoverSelection%2A&gt;</ph> property to be set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, run-time label editing is not allowed when hot tracking is enabled.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the item text has the appearance of a hyperlink when the mouse passes over it; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether an item is automatically selected when the mouse pointer remains over the item for a few seconds.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the user can point to an item in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to select the item.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple items can be selected (when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.MultiSelect%2A&gt;</ph> property is set to true) by holding down the CTRL key while pointing to each item.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this feature to provide an easier method for the user of your application to select items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an item is automatically selected when the mouse pointer hovers over it; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>Gets an object used to indicate the expected drop location when an item is dragged within a <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> insertion mark feature lets you visually indicate the expected drop location in a drag-and-drop operation when an item is dragged to a new position.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>This feature works only when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoArrange%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control does not sort the items automatically.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent automatic sorting, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Forms.SortOrder?displayProperty=fullName&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property must be set to <ph id="ph4">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, or <ph id="ph6">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the insertion mark feature may not be visible with the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> grouping feature because the grouping feature orders the items by group membership.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewInsertionMark&gt;</ph> class is typically used in a handler for the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DragOver?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.MouseMove?displayProperty=fullName&gt;</ph> event to update the position of the insertion mark as an item is dragged.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also used in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DragDrop?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.Control.MouseUp?displayProperty=fullName&gt;</ph> event to insert a dragged item at the correct location.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewInsertionMark&gt;</ph> and <bpt id="p1">[</bpt>How to: Display an Insertion Mark in a Windows Forms ListView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-display-an-insertion-mark-in-a-windows-forms-listview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The insertion mark feature is available only on Windows XP and Windows Server 2003 when your application calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>On earlier operating systems, any code relating to the insertion mark has no effect and the insertion mark will not appear.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, any code that depends on the insertion mark feature might not work correctly.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might want to include code that determines whether this feature is available, and provide alternate functionality when it is unavailable.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might want to bypass all code that implements drag-and-drop item repositioning when running on operating systems that do not support insertion marks.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>The insertion mark feature is provided by the same library that provides the operating system themes feature.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>To check for the availability of this library, call the <ph id="ph1">&lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName&gt;</ph> method overload and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewInsertionMark"&gt;&lt;/xref&gt;</ph> object representing the insertion mark.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>Occurs when an item is activated.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemActivate&gt;</ph> event occurs when the user activates one or more items in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can activate an item with either a single-click or double-click, depending on the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property, or with the keyboard.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>From within the event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemActivate&gt;</ph> event, you can reference the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> properties to access the collection of items selected in the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> to determine which items are being activated.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Occurs when the check state of an item changes.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property must be set to true in order for check boxes to be displayed next to each item in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event occurs when the check state of an item changes or when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event to perform tasks such as changing the state of an item's icon or another application-specific task each time an item is checked in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the window handle has not been created when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event is raised, the event will be delayed.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the window handle is created (when the form is shown), any delayed <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> events will be raised.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>Occurs when the checked state of an item changes.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is similar to the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemCheck&gt;</ph> event, but is raised after the item has been checked.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Occurs when the user begins dragging an item.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemDrag&gt;</ph> event occurs when the user begins dragging an item.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemDrag&gt;</ph> event performs the task of dragging by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.DoDragDrop%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to perform the tasks necessary to drag items into and out of your application's <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse hovers over an item.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Gets a collection containing all items in the control.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> returned by this property, you can add items, remove items, and obtain a count of items.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the tasks that can be performed with the items in the collection, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> class reference topics.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ListViewItemCollection"&gt;&lt;/xref&gt;</ph> that contains all the items in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Occurs when the selection state of an item changes.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>In virtual mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged&gt;</ph> event will occur when the selection state of multiple items changes.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ItemSelectionChanged&gt;</ph> event occurs whether the item state changes from selected to deselected or deselected to selected.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user can edit the labels of items in the control.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the user is able to modify the text of an item by clicking the item text to select it and then clicking the item text again to put the label text into edit mode.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can then modify or replace the item's text label.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeforeLabelEdit&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.AfterLabelEdit&gt;</ph> events to perform tasks before and after the user edits an item's text.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>The text of subitems cannot be modified if this property is set to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the text of subitems, you can display a dialog box to users when they double-click a subitem in the control.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Activation%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.ItemActivation.OneClick&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ItemActivation.TwoClick&gt;</ph>, label editing will not be allowed regardless of the value of the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.LabelEdit%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can edit the labels of items at run time; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether item labels wrap when items are displayed in the control as icons.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelWrap%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the item text is wrapped to the next line of text if needed.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the text is longer than two lines of text, the text is shortened.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user selects the item, all the item text is displayed.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelWrap%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, all item text is displayed on a single line.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entire item text is displayed when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LabelWrap%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is only used when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if item labels wrap when items are displayed as icons; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> to use when displaying items as large icons in the control.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> property allows you to specify an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> object that contains icons to use when displaying items with large icons (when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control can accept any graphics format that the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> control supports when displaying icons.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is not limited to .ico files.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> is assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> property, you can set the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewItem.ImageIndex%2A&gt;</ph> property of each <ph id="ph4">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> in the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to the index position of the appropriate image in the <ph id="ph6">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the icons for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> is specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList.ImageSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because only one index can be specified for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=fullName&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> objects specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> properties should have the same index positions for the images to display.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.ImageIndex%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> is set to 0, the images to use for both small and large icons should be at the same index position in the <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> objects specified in the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the images are specified with keys, you still need to place small and large versions of the image at the same index location in their respective image lists.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> to use when displaying items with small icons (all view modes other than <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph>), use the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to use images to display item state, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> that contains the icons to use when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">&lt;xref href="System.Windows.Forms.View.LargeIcon"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Gets or sets the sorting comparer for the control.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property allows you to specify the object that performs the sorting of items in a <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.Sort%2A&gt;</ph> method is called or when items are added to the list.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that items are not sorted automatically when their label text changes.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified object must be an instance of a class that implements the <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface, which has a single method called <ph id="ph2">&lt;xref:System.Collections.Comparer.Compare%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to provide custom sorting, for example, when a column header is clicked in the details view.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, create a class that implements the <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface and provides a constructor that accepts the index of a column to sort by.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then implement a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnClick&gt;</ph> event that creates an instance of this class using the index of the clicked column.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property to the new instance, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is automatically sorted using the specified object.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent calls to the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sort%2A&gt;</ph> method use the same object.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Sort%2A&gt;</ph> method is called automatically.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> that represents the sorting comparer for the control.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether multiple items can be selected.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, multiple items can be selected in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select multiple items, the user must hold down the CTRL key while clicking the items to select.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consecutive items can be selected by clicking the first item to select and then, while holding down the SHIFT key, clicking the last item to select.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the multiple selection feature to select multiple items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control and perform an operation on all the items selected.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user could select multiple items and then right-click a selected item to display a shortcut menu that displays a set of tasks that can be performed on the selected items.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which items are selected in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> property allows you to access the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedListViewItemCollection&gt;</ph> that contains a list of the selected items.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want the index positions in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> instead of the items, you can use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> property to access the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.SelectedIndexCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not want to allow multiple selections in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, yet still want to offer the user a way for multiple items to be chosen, you can display check boxes by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if multiple items in the control can be selected at one time; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.AfterLabelEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnAfterLabelEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LabelEditEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.BackgroundImageChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.BeforeLabelEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnBeforeLabelEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LabelEditEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.CacheVirtualItems"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnCacheVirtualItems%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.CacheVirtualItemsEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ColumnClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnColumnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnClickEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ColumnReordered"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnColumnReordered%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnReorderedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ColumnWidthChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnColumnWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnWidthChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ColumnWidthChanging"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ColumnWidthChanging&gt;</ph> event will not occur if the Window's full drag feature, the "Show Window Contents While Dragging" option, is disabled.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnColumnWidthChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ColumnWidthChangingEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.DrawColumnHeader"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnDrawColumnHeader%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DrawListViewColumnHeaderEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.DrawItem"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnDrawItem%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DrawListViewItemEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.DrawSubItem"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnDrawSubItem%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DrawListViewSubItemEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">`FontChanged`</ph> event.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleCreated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleDestroyed"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ItemActivate"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnItemActivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ItemCheck"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnItemCheck%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemCheckEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ItemChecked"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnItemChecked%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemCheckedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ItemDrag"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnItemDrag%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemDragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ItemMouseHover"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnItemMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItemMouseHoverEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.ItemSelectionChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnItemSelectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItemSelectionChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseHover"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnMouseHover%2A&gt;</ph> method is called when the mouse is hovering over a <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph>, the method raises the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ItemMouseHover&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ParentChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Resize"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.RetrieveVirtualItem"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnRetrieveVirtualItem%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.RetrieveVirtualItemEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.RightToLeftLayoutChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnRightToLeftLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SearchForVirtualItem"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnSearchForVirtualItem%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.SearchForVirtualItemEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SelectedIndexChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnSelectedIndexChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.SystemColorsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.VirtualItemsSelectionRangeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OnVirtualItemsSelectionRangeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewVirtualItemsSelectionRangeChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control is drawn by the operating system or by code that you provide.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is normally drawn by the operating system.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to customize the appearance of <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> items, subitems, and column headers, set the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property to <ph id="ph3">`true`</ph> and provide a handler for one or more of the following events: <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.ListView.DrawColumnHeader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is called owner drawing.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, all three events occur; otherwise, only the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subitem information typically appears in the tile view as well as the details view, but in the tile view, it must be drawn in a handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event does not occur for any subitems for which no <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> object has been added to the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note also that the first subitem of each <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> object represents the parent item itself, and is displayed in the first column.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the details view, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawItem&gt;</ph> event to draw elements common to all subitems, such as the background, and handle the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event to draw elements for individual subitems, such as text values.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also draw all items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control using only one of the two events, although this may be less convenient.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>To draw column headers in the details view, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawColumnHeader&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid issues with graphics flickering when owner drawing, override the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control and set the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.DoubleBuffered%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control is drawn by code that you provide; <ph id="ph3">`false`</ph> if the <ph id="ph4">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control is drawn by the operating system.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>Gets or sets the space between the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control and its contents.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> that specifies the space between the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control and its contents.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.Padding"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control is painted.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is drawn by the operating system or is owner drawn, so the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Paint&gt;</ph> event is never raised.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about owner-drawing, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.OwnerDraw%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Initializes the properties of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control that manage the appearance of the control.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>Forces a range of <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> objects to be redrawn.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.RedrawItems%2A&gt;</ph> method can be used whether the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is in virtual mode or regular mode.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.BeginUpdate%2A&gt;</ph> method has been called prior to the call to <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.RedrawItems%2A&gt;</ph>, the redraw will not occur.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The index for the first item in the range to be redrawn.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>The index for the last item of the range to be redrawn.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to invalidate the range of items; <ph id="ph2">`false`</ph> to invalidate and repaint the items.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;startIndex&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endIndex&lt;/code&gt;</ph> is less than 0, greater than or equal to the number of items in the <ph id="ph3">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> or, if in virtual mode, greater than the value of <ph id="ph4">&lt;xref href="System.Windows.Forms.ListView.VirtualListSize"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve">
          <source>The given <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">startIndex</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">endIndex.</ph><ept id="p2">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> is in virtual mode and requires a <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> object is in virtual mode, it creates <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> objects dynamically instead of using the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when the object must create a <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>A handler for this event should create the appropriate <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> or retrieve it from the cache, and pass it back by way of the <ph id="ph2">&lt;xref:System.Windows.Forms.RetrieveVirtualItemEventArgs.Item%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.RetrieveVirtualItemEventArgs.Item"&gt;&lt;/xref&gt;</ph> property is not set to an item when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.RetrieveVirtualItem"&gt;&lt;/xref&gt;</ph> event is handled.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the control is laid out from right to left.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> property is for use with international applications where the language is read from right to left.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft&gt;</ph> to true the control's contents and text will be laid out from right to left.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control is laid out from right to left; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.RightToLeftLayout"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether a scroll bar is added to the control when there is not enough room to display all items.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> displays a vertical scroll bar to use when the number of items exceeds the size of the client area of the control.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to ensure that the user can access all items that are available in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> prior to version 2.0, the column headers were not painted correctly when setting this property to <ph id="ph2">`false`</ph> and resizing the control to make it larger.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>To work around this issue, set this property to <ph id="ph1">`true`</ph> in a <ph id="ph2">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event handler and set it back to <ph id="ph3">`false`</ph> in a <ph id="ph4">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if scroll bars are added to the control when necessary to allow the user to see all the items; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> is in virtual mode and a search is taking place.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is in virtual mode and the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>When handling this event, you should calculate which item from the list of items supplied by the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> property matches the search criteria and set the <ph id="ph2">&lt;xref:System.Windows.Forms.SearchForVirtualItemEventArgs.Index%2A?displayProperty=fullName&gt;</ph> property to the index of the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item is not provided, <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> will return <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SelectedIndices"&gt;&lt;/xref&gt;</ph> collection changes.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> collection changes whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem.Selected%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> changes.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property change can occur programmatically or when the user selects an item or clears the selection of an item.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user selects an item without pressing CTRL to perform a multiple selection, the control first clears the previous selection.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, this event occurs one time for each item that was previously selected and one time for the newly selected item.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which items are selected in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> property to access the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.SelectedListViewItemCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event handler for this event to perform tasks whenever there is a change to the selected items in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Gets the indexes of the selected items in the control.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> property will not contain any indexes if the property is accessed before the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> handle is created, which typically occurs when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is initially loaded for display in the form.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can check to see if the handle is created with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, this property returns a collection containing the indexes of all items that are selected in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a single-selection <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, this property returns a collection containing a single element containing the index of the only selected item in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the tasks that can be performed with the items in the collection, see <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedIndexCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to obtain a collection of the items that are selected in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, instead of the index positions of the items that are selected, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SelectedIndexCollection"&gt;&lt;/xref&gt;</ph> that contains the indexes of the selected items.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>If no items are currently selected, an empty <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SelectedIndexCollection"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>Gets the items that are selected in the control.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> property will not contain any items if the property is accessed before the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> handle is created, which typically occurs when <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is initially loaded for display in the form.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can check to see if the handle is created with the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsHandleCreated%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, this property returns a collection containing the items that are selected in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a single-selection <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, this property returns a collection containing the only selected item in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the tasks that can be performed with the items in the collection, see <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedListViewItemCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to obtain a collection of the index positions within the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemCollection&gt;</ph> of the items that are selected in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, instead of the items that are selected, use the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SelectedListViewItemCollection"&gt;&lt;/xref&gt;</ph> that contains the items that are selected in the control.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>If no items are currently selected, an empty <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.SelectedListViewItemCollection"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether items are displayed in groups.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any groups assigned to a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control appear whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to a value other than <ph id="ph3">&lt;xref:System.Windows.Forms.View.List&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> grouping feature lets you create visual groups of logically related <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> items on Windows XP and Windows Server 2003.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable this feature, your application must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to display items in groups; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether ToolTips are shown for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> objects contained in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ShowItemToolTips%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, any <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> that has a ToolTip will display it; otherwise, nothing is displayed.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> ToolTips should be shown; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> to use when displaying items as small icons in the control.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> property allows you to specify an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> object that contains icons to use when displaying items with small icons (when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to any value other than <ph id="ph4">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control can accept any graphics format that the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> control supports when displaying icons.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control is not limited to .ico files.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> is assigned to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> property, you can set the <ph id="ph3">&lt;xref:System.Windows.Forms.ListViewItem.ImageIndex%2A&gt;</ph> property of each <ph id="ph4">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> in the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to the index position of the appropriate image in the <ph id="ph6">&lt;xref:System.Windows.Forms.ImageList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the icons for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> is specified by the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList.ImageSize%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because only one index can be specified for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.ImageIndex%2A?displayProperty=fullName&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> objects specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> properties should have the same index positions for the images to display.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.ImageIndex%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> is set to 0, the images to use for both small and large icons should be at the same index position in the <ph id="ph3">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> objects specified in the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the images are specified with keys, you still need to place small and large versions of the image at the same index location in their respective image lists.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> to use when displaying items with large icons (when the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph3">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph>), use the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to use images to display item state, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> that contains the icons to use when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">&lt;xref href="System.Windows.Forms.View.SmallIcon"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>Sorts the items of the list view.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically items are sorted using the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A&gt;</ph> property, which sorts items based on the item text.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize the sort order, you must write a class that implements the <ph id="ph1">&lt;xref:System.Collections.IComparer&gt;</ph> interface and set the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property to an object of that class.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful, for example, when you want to sort items by subitem text.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on performing manual sorting of items, see the example for the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName&gt;</ph> property is set to a value other than <ph id="ph2">&lt;xref:System.Windows.Forms.SortOrder?displayProperty=fullName&gt;</ph> or if the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property is set, the list is sorted automatically when items are added.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>Items are not sorted automatically when the label text changes.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>Gets or sets the sort order for items in the control.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A&gt;</ph> property allows you to specify whether or not items are sorted in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, no sorting is performed.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.SortOrder.Ascending&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.SortOrder.Descending&gt;</ph>, the items in the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> are sorted automatically in ascending alphabetical order (when the property is set to <ph id="ph5">&lt;xref:System.Windows.Forms.SortOrder.Ascending&gt;</ph>) or descending alphabetical order (when the property is set to <ph id="ph6">&lt;xref:System.Windows.Forms.SortOrder.Descending&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to automatically sort items that are displayed in your <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control to make it easier for users to find items when a large number of items are available.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to perform your own item sorting instead of using the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A&gt;</ph> property, use the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property in combination with the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.Sort%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Sorting%2A?displayProperty=fullName&gt;</ph> property is set to a value other than <ph id="ph2">&lt;xref:System.Windows.Forms.SortOrder?displayProperty=fullName&gt;</ph> or if the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.ListViewItemSorter%2A&gt;</ph> property is set, the list is sorted automatically when items is added.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>Items are not sorted automatically when the label text changes.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.SortOrder"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.SortOrder.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.SortOrder"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> associated with application-defined states in the control.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph> property allows you to specify an <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> that contains images to use to represent an application-specific state of an item in a <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT">
          <source>State images are displayed to the left of an icon for the item.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use state images, such as checked and unchecked check boxes, to indicate application-defined item states.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>State images are visible in all views of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> is specified in the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.StateImageList%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph>, the images at index positions 0 and 1 in the <ph id="ph5">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> are displayed instead of the check box.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>The image at index position 0 is displayed instead of the unchecked check box, and the image at index position 1 is displayed instead of the checked check box.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageList"&gt;&lt;/xref&gt;</ph> that contains a set of state images that can be used to indicate an application-defined state of an item.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve">
          <source>The text to display in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.Text"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve">
          <source>Gets or sets the size of the tiles shown in tile view.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property controls the size of tiles when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property is useful to prevent line-wrapping when subitem text is too long to be displayed on a single line.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> that contains the new tile size.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Gets or sets the first visible item in the control.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the item with the index position of zero (0) is at the top of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control contents are scrolled, a different item can be at the top of the control.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to indicate or determine which item is visible at the top of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.TopItem%2A&gt;</ph> property will not always persist, depending on where the desired top item is in the list view.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of items visible in a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control at any time depends on the height of the list view and the size of the items it contains.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the items exceed the height of the list view, the items will continue onto multiple pages, which the user can scroll through.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.TopItem%2A&gt;</ph> property to an item in the last page of the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph>, the item will automatically be scrolled into view; however, <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.TopItem%2A&gt;</ph> will be set to the actual top item of the last page.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a specific item is in the visible region of the control (but not necessarily in the top position), use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.EnsureVisible%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Scrollable%2A&gt;</ph> property value is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property is not supported in versions of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> prior to version 2.0.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> that represents the first visible item in the control.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.View"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Windows.Forms.View.LargeIcon"&gt;&lt;/xref&gt;</ph>,  <ph id="ph3">&lt;xref href="System.Windows.Forms.View.SmallIcon"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Windows.Forms.View.Tile"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source>Returns a string representation of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>A string that states the control type, the count of items in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control, and the type of the first item in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph>, if the count is not 0.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>Updates the extended styles applied to the list view control.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.UpdateExtendedStyles%2A&gt;</ph> method in your derived class to override the extended styles used by the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call this method, you should ensure that the extended styles set by properties on the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control are utilized in your derived version of the control.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are the properties that apply an extended style to the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> uses state image behavior that is compatible with the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 1.1 or the <ph id="ph3">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control in the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0 enable custom state images to be set to indicate whether an item is checked or unchecked or in an indeterminate state.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT">
          <source>With the addition of this feature, the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0 has different behavior than the .NET Framework 1.1.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have created applications that depend on the behavior in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 1.1, be sure that the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, which is the default value.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to fully take advantage of custom state images, set <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A&gt;</ph> to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using the <ph id="ph1">[!INCLUDE[vsprvsext](~/includes/vsprvsext-md.md)]</ph> designer, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.UseCompatibleStateImageBehavior%2A&gt;</ph> property will be set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the state image behavior is compatible with the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 1.1; <ph id="ph3">`false`</ph> if the behavior is compatible with the <ph id="ph4">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Gets or sets how items are displayed in the control.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property allows you to specify the type of display the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control uses to display items.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property to display each item with large or small icons or display items in a vertical list.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>The richest option is the details view, which allows you to view not only the items but any subitems specified for each item.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each item is displayed in a grid, with each item listed vertically and the subitems for each item displayed in a column, with column headers.</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>The details view is a perfect way to display database information to a user.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT">
          <source>With Windows XP and Windows Server 2003, you can also display items as tiles that balance graphical and textual information by showing a large icon along with subitem information of your choosing.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable tile view, your application must call the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT">
          <source>The small-image view displays each item with an icon and textual information to the right of the icon.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>The large-image view displays each item with an icon and textual information below the icon.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the icons for the image list is specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.ImageList.ImageSize%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ImageList&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.SmallImageList%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.LargeImageList%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using multiple image lists, for small and large icon view, with a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control, you should place small and large versions of the image at the same index location in their respective image lists.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>When switching between views, the index location of the image in one list is used to locate the image in the other list, regardless of the key value specified.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most of the properties in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control affect how the different views behave or are displayed.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some properties that affect the views of the items are only useful when the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to a specific value, while others are useful in all views.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, properties such as <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GridLines%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FullRowSelect%2A&gt;</ph> are only useful when the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph4">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, while the <ph id="ph5">&lt;xref:System.Windows.Forms.ListView.MultiSelect%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.ListView.CheckBoxes%2A&gt;</ph> properties are useful in all views.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows some of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> members and the views they are valid in.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>ListView member</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source>View</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Alignment%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoArrange%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.AutoResizeColumn%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>All views except <ph id="ph1">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.Details&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.DrawSubItem&gt;</ph> event</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.Details&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.View.List&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.GetItemAt%2A&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.Details&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Groups%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT">
          <source>All views except <ph id="ph1">&lt;xref:System.Windows.Forms.View.List&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.HeaderStyle%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ListView.InsertionMark%2A&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.View.SmallIcon&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property to provide different views of data in your application, or to lock a specific view to utilize that view's benefits.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is often set to <ph id="ph2">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph> because the details view provides a number of viewing options not available in the other views.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control does not have any column headers specified and you set the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control will not display any items.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control does not have any column headers specified and you set the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.Windows.Forms.View?displayProperty=fullName&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control will not display any subitems.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tile view displays each item with a large icon on the left and textual information on the right.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>The textual information consists of the item label followed by subitems.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, only the first subitem is displayed, which corresponds to the item label.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display additional subitems, you must add <ph id="ph1">&lt;xref:System.Windows.Forms.ColumnHeader&gt;</ph> objects to the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each subitem in the tile corresponds to a column header.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT">
          <source>To control which subitems are displayed and the order in which they are displayed, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A?displayProperty=fullName&gt;</ph> property for each item and the <ph id="ph2">&lt;xref:System.Windows.Forms.ColumnHeader.Name%2A?displayProperty=fullName&gt;</ph> property for each header.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then add, remove, and rearrange headers in the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Columns%2A&gt;</ph> collection to achieve the desired result.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>To control the size of the tiles in the tile view, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.TileSize%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful to prevent line-wrapping when subitem text is too long for a single line.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of the tile view, see the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.TileSize%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although columns are only displayed in the details view, subitems without column headers will not display in either the details view or the tile view.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tile view is available only on Windows XP and Windows Server 2003 when your application calls the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source>On earlier operating systems, any code related to the tile view has no effect, and the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> control displays in the large icon view.</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, any code that depends on the tile view might not work correctly.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might want to include code that determines whether tile view is available, and provide alternate functionality when it is unavailable.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when you use owner drawing to customize the appearance of <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> items in the tile view, you might want to use drawing code appropriate to the large icon view when running on operating systems that do not support the tile view.</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tile view feature is provided by the same library that provides the operating system themes feature.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>To check for the availability of this library, call the <ph id="ph1">&lt;xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=fullName&gt;</ph> method overload and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.OSFeature.Themes?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.View"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.View.LargeIcon"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>The value specified is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.View"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>Occurs when a <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> is in virtual mode and the selection state of a range of items has changed.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> is not in virtual mode, the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.ItemSelectionChanged&gt;</ph> event will occur.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> objects contained in the list when in virtual mode.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting or setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualListSize%2A&gt;</ph> property when <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.VirtualMode%2A&gt;</ph> set to <ph id="ph3">`false`</ph> will have no effect on the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualMode%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView.VirtualListSize%2A&gt;</ph> property is greater than 0, you must handle the <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.RetrieveVirtualItem&gt;</ph> event, providing a valid <ph id="ph5">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>The number of <ph id="ph1">&lt;xref href="System.Windows.Forms.ListViewItem"&gt;&lt;/xref&gt;</ph> objects contained in the <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> when in virtual mode.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.VirtualListSize"&gt;&lt;/xref&gt;</ph> is set to a value less than 0.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.VirtualMode"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref href="System.Windows.Forms.ListView.VirtualListSize"&gt;&lt;/xref&gt;</ph> is greater than 0, and <ph id="ph4">&lt;xref href="System.Windows.Forms.ListView.RetrieveVirtualItem"&gt;&lt;/xref&gt;</ph> is not handled.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether you have provided your own data-management operations for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> puts the <ph id="ph3">&lt;xref:System.Windows.Forms.ListView&gt;</ph> into virtual mode.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Virtual mode, the normal <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> collection is unused.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> objects are created dynamically as the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> requires them.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT">
          <source>Virtual mode can be useful under many circumstances.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Forms.ListView&gt;</ph> object must be populated from a very large collection already in memory, creating a <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> object for each entry can be wasteful.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT">
          <source>In virtual mode, only the items required are created.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other cases, the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> objects may need to be recalculated frequently, and doing this for the whole collection would produce unacceptable performance.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>In virtual mode, only the required items are calculated.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to use virtual mode, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.RetrieveVirtualItem&gt;</ph> event, which is raised every time the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView&gt;</ph> requires an item.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event handler should create the <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> object that belongs at the specified index.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.VirtualListSize%2A&gt;</ph> property must be set to the size of the virtual list.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SearchForVirtualItem&gt;</ph> event enables searching in virtual mode.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.FindItemWithText%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.FindNearestItem%2A&gt;</ph> methods will return <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CacheVirtualItems&gt;</ph> event in order to maintain a cache of <ph id="ph2">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the calculation or lookup to create a <ph id="ph1">&lt;xref:System.Windows.Forms.ListViewItem&gt;</ph> object is expensive, maintaining a cache can improve performance.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.View%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.View.Tile&gt;</ph>, the value will automatically be changed to <ph id="ph3">&lt;xref:System.Windows.Forms.View.LargeIcon&gt;</ph> when <ph id="ph4">&lt;xref:System.Windows.Forms.ListView.VirtualMode%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT">
          <source>In virtual mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.Items%2A&gt;</ph> collection is disabled.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to access it results in an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same is true of the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.CheckedItems%2A&gt;</ph> collection and the <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.SelectedItems%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to retrieve the selected or checked items, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ListView.SelectedIndices%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ListView.CheckedIndices%2A&gt;</ph> collections instead.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView"&gt;&lt;/xref&gt;</ph> uses data-management operations that you provide; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.VirtualMode"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph> and one of the following conditions exist:</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.VirtualListSize"&gt;&lt;/xref&gt;</ph> is greater than 0 and <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.RetrieveVirtualItem"&gt;&lt;/xref&gt;</ph> is not handled.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.Items"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Windows.Forms.ListView.CheckedItems"&gt;&lt;/xref&gt;</ph>, or <ph id="ph3">&lt;xref href="System.Windows.Forms.ListView.SelectedItems"&gt;&lt;/xref&gt;</ph> contains items.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>Edits are made to <ph id="ph1">&lt;xref href="System.Windows.Forms.ListView.Items"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>Overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>The Windows <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph> to process.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>