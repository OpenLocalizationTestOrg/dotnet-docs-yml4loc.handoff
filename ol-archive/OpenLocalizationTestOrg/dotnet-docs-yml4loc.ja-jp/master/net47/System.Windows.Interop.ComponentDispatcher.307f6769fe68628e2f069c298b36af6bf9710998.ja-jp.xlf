<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7fcfe74dc5bb4ab53b740f97efefc1b7fd6d49e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Interop.ComponentDispatcher.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f06a161a72d8aca5e07aea0055f264b5a52b51ab</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ef9fde8d7efc6262c397961bc0c8395417208c3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables shared control of the message pump between Win32 and WPF in interoperation scenarios.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the class itself is static, all members of <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> are specific to a particular thread.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you examine the value of <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.IsThreadModal%2A&gt;</ph> on two different threads, you might get different values.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods are static but they are backed by per-thread data structures.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The static methods allow singleton access but the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher&gt;</ph> is sorting out the appropriate per-thread operations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner of the message pump is defined by the code that calls the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> function  <bpt id="p1">[</bpt>GetMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644936.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner calls <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.RaiseThreadMessage%2A&gt;</ph> for every keyboard message.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph> event with the messages contained in the event data.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If that event is not handled, the owner raises the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadPreprocessMessage&gt;</ph> event with the messages contained in the event argument.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only keyboard messages are supported.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets the last message that was raised.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The last message.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Occurs when a thread becomes modal.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the thread is modal.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the thread is modal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Occurs when a modal thread becomes nonmodal.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Called to indicate that a modal thread is no longer modal.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Called to indicate that the thread is modal.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Called to indicate that a thread is idle.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates that a new message is available for possible handling.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The owner of the message pump should call this method for every keyboard message.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The message and its associated data.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph>, if one of the modules listening to the message loop processed the message.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The owner of the message loop should ignore the message.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>, if the message was not processed.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>In this case, the owner of the message pump should call the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> function <bpt id="p1">[</bpt>TranslateMessage<ept id="p1">](http://msdn.microsoft.com/library/ms644955.aspx)</ept> followed by <bpt id="p2">[</bpt>DispatchMessage<ept id="p2">](http://msdn.microsoft.com/library/ms644934.aspx)</ept>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Occurs when the message pump receives a keyboard message.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Occurs when the thread is idle.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are no messages in the queue, then the idle state announced by the <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadIdle&gt;</ph> event is an efficient time to do processing.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Occurs when the message pump receives a keyboard message.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event should be raised after <ph id="ph1">&lt;xref:System.Windows.Interop.ComponentDispatcher.ThreadFilterMessage&gt;</ph>, if that event is not handled.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>