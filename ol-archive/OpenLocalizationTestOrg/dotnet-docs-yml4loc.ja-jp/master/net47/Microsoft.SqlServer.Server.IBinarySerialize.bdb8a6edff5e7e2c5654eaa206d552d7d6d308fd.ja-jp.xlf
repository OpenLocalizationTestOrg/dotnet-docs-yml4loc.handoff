<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eafb57493de321c80c75f1efe744e2f37f8fb3b6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.SqlServer.Server.IBinarySerialize.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">44005e11d1985b1f2a04d07d001b13d712d47818</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">57ac77e7e2dc6e4435a9e5ee6ae383934a4b73b7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides custom implementation for user-defined type (UDT) and user-defined aggregate serialization and deserialization.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>User-defined types (UDTs) and user-defined aggregates are required to define a storage format, which can be either <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.<ph id="ph2">`Native`</ph></source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>or <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.<ph id="ph2">`UserDefined`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.<ph id="ph2">`Native`</ph></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>allows SQL Server to handle serialization and deserialization automatically, but the format has restrictions on the kind of types it can handle.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.<ph id="ph2">`UserDefined`</ph></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>allows user-defined types and aggregates to handle their own serialization.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>User-defined types and aggregates must be marked with <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.Format&gt;</ph>.<ph id="ph2">`UserDefined`</ph></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>in the <ph id="ph1">`SqlUserDefinedType`</ph> or <ph id="ph2">`SqlUserDefinedAggregate`</ph> attribute, and must implement the <ph id="ph3">&lt;xref:Microsoft.SqlServer.Server.IBinarySerialize&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that even with custom serialization, the total size of each instance must be under the maximum allowed limit, currently 8000 bytes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Generates a user-defined type (UDT) or user-defined aggregate from its binary form.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A&gt;</ph> method must reconstitute your object using the information written by the <ph id="ph2">&lt;xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.BinaryReader"&gt;&lt;/xref&gt;</ph> stream from which the object is deserialized.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Converts a user-defined type (UDT) or user-defined aggregate into its binary format so that it may be persisted.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Write sufficient information to the binary stream to allow the <ph id="ph1">&lt;xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A&gt;</ph> method to reconstitute your UDT or user-defined aggregate.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.BinaryWriter"&gt;&lt;/xref&gt;</ph> stream to which the UDT or user-defined aggregate is serialized.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>