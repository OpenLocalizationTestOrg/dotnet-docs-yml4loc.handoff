<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f8e1cf9369ba2e5a90092259465ff4cb20ad1d46</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Serialization.XmlAnyElementAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4f42e6ef0651401ecb98e344d6247ffcf3e6787b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fdab7d8d967dbc7cd63c900c27836ec1f7d26f9c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies that the member (a field that returns an array of <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> objects) contains objects that represent any XML element that has no corresponding member in the object being serialized or deserialized.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working in a portable class library, such as in Silverlight, Windows Phone or Windows Store App project, and you are using the .NET Framework 4.0.3 and above, use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Linq.XNode&gt;</ph> in place of <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to contain arbitrary data (as XML elements) that can be sent as part of an XML document, such as metadata sent as part of the document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such a field can be used in two ways, depending on whether an object is being serialized or deserialized.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When serialized, the object is generated as XML elements or nodes, even though they have no corresponding member (or members) in the object being serialized.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value when applying the attribute, all <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value, you must set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property as well, and the <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph> objects must also have the same name and namespace values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value is specified, the <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects can have any element name.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class, all elements that do not have a corresponding member in the object being deserialized are collected in the array.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>After deserialization, iterate through the collection of <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> items to process the data.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains only XML elements with that name.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains all elements that have no corresponding member in the class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class contains more than one field to which the attribute is applied, use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> properties to differentiate between the contents of the arrays.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If such a class (with multiple fields) also contains one field that has no differentiating property values set (in other words, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph>) during deserialization, this array contains any unknown XML elements that are not already contained in the other arrays.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class contains more than one field that does not have a differentiating <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph>, or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> value set, the behavior during deserialization is unspecified.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a field that returns a single <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do so, you must use the properties and methods of the <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> class to recursively iterate through the unknown elements.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply multiple instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a class member, but each instance must have a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or, if the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property is set for each instance, a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value must be set for each instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownNode&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer.UnknownAttribute&gt;</ph> events of the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> do not occur if you apply the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a member of a class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the word <ph id="ph1">`XmlAnyElement`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> constructor when you are overriding the serialization of a field.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details about overriding serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttribute"&gt;&lt;/xref&gt;</ph> class and specifies the XML element name generated in the XML document.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> constructor when you are overriding the serialization of a field.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details about overriding serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the XML element that the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> generates.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttribute"&gt;&lt;/xref&gt;</ph> class and specifies the XML element name generated in the XML document and its XML namespace.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> constructor when you are overriding the serialization of a field.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details about overriding serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The name of the XML element that the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> generates.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The XML namespace of the XML element.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets or sets the XML element name.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value when applying the attribute, all <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects inserted into the array must have the same element name and default namespace, or an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value, you must set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property as well, and the <ph id="ph3">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.XmlNode&gt;</ph> objects must also have the same name and namespace values.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value is specified, the <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects can have any element name.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class, all attributes that do not have a corresponding member in the object being deserialized are collected in the array.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains only XML elements with that name.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> value, the array contains all elements that have no corresponding member in the class.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a class contains more than one field to which the attribute is applied, use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> properties to differentiate between the contents of the arrays.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If such a class (with multiple fields) also contains one field that has no differentiating property values set (that is, <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph>) during deserialization, the array contains any XML elements that are not already contained in the other arrays.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add more than one field that does not have a differentiating <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> value set, the last field in the class contains all unknown elements that are not already contained in the other arrays, and any other fields are set to <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply multiple instances of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> to a class member, but each instance must have a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or, if the same <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Name%2A&gt;</ph> property is set for each instance, a distinct <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property value must be set for each instance.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The name of the XML element.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The element name of an array member does not match the element name specified by the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttribute.Name"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets the XML namespace generated in the XML document.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property allows you to set a unique name for the XML attribute.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property conforms to the rules for creating an XML namespace as found in the World Wide Web Consortium (www.w3.org) document, "Namespaces in XML."</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property to a prefixed name, create an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph> that contains the namespaces and prefixes used in the XML document.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute.Namespace%2A&gt;</ph> property to one of the namespaces in the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializerNamespaces&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the XML is generated, the attribute name is correctly prefixed with the prefix associated with the specified namespace.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An XML namespace.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets the explicit order in which the elements are serialized or deserialized.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Serialization.CodeGenerationOptions.GenerateOrder&gt;</ph> enumeration to instruct the <ph id="ph2">&lt;xref:System.Web.Services.Description.ServiceDescriptionImporter&gt;</ph> to generate code that sets the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute.Order%2A&gt;</ph> property has been used on one public property or field in a type, it must be applied to all public properties and fields for that type and all inherited types.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The order of the code generation.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>