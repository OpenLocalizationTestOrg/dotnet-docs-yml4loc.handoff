<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d31e996b8bc4d961ca07d0e694e6ffd864a4181</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Automation.ControlType.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">120f2c290f105fdf2c536cfebce34288c0b3cf4f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81c33131ae47295d106b3c6ee8c24ed4a2630060</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Identifies the type of a user interface (UI) control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.ControlType&gt;</ph> inherits from <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationIdentifier&gt;</ph> and is used to identify the type of a control represented by an <ph id="ph3">&lt;xref:System.Windows.Automation.AutomationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control type is determined by the developer of the UI Automation provider.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class contains static fields, which are themselves <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType&gt;</ph> objects, to identify the standard types of controls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is also a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Custom&gt;</ph> type for controls that do not match one of the defined types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only case where a control's control type might change at run time is where the control supports <ph id="ph1">&lt;xref:System.Windows.Automation.MultipleViewPattern&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> list view, which can be a <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.DataGrid&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph>, depending on the current view.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control types do not have a one-to-one equivalence to control patterns.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control can be of only one type, but it may support multiple patterns or no patterns at all, depending on its specific functionality.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For detailed information on the various control types, see <bpt id="p1">[</bpt>UI Automation Control Types<ept id="p1">](~/docs/framework/ui-automation/ui-automation-control-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Identifies a button control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Buttons perform a single action when clicked.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A button can be used as a standalone control or as a subcontrol in another control type.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the drop-down arrow in a combo box control is a button.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used as a subcontrol, a button is in the control view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree (not in the content view).</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Identifies a calendar control, such as a date-picker.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Identifies a check box control.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A check box can be used as a standalone control or as a subcontrol in another control type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a check box at the beginning of a row in a grid control that is used to select the row (used to manipulate the content) appears in the control view but not in the content view.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a labeled checkbox in a form that represents data is in the content and control views.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Identifies a combo box control.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two variations of combo box controls.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A simple combo box presents a list that a user can select from.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editable combo box presents a list of choices and also has an editable text area where a user can type in a choice instead of being limited to selecting from the choices in the list.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Identifies a control that is not one of the defined control types.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Custom&gt;</ph> control type indicates a control that is not identified as one of the predefined control types (such as <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Button&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.ControlType.Calendar&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control developers should check the other control types before designating their control as a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Custom&gt;</ph> control type to be sure that their control does not provide the same functionality as one of the defined control types.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Custom&gt;</ph> control type requires extra work for the provider to implement <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, UI Automation client products will not be able to anticipate the control structure, keyboard interaction, and possible control patterns based on the control type of the control.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Identifies a data grid control.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the cells contain only text, the control type should be <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Table&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Identifies a data item control.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.DataItem&gt;</ph> is a complex item that can contain many other controls.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Identifies a document control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>A document contains text content of more than one line.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Identifies an edit control, such as a text box.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Edit&gt;</ph> control can be used as a standalone control or as a subcontrol in another control type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the area where a user can type in a value in a combo box control is an <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Edit&gt;</ph> control, and in this case the control is not part of the content view.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Edit&gt;</ph> controls can also represent controls that contain passwords.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword%2A&gt;</ph> property enables products such as screen readers to know whether to reveal the contents.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Retrieves the pattern identifiers that are not supported by the control type.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful for UI Automation clients such as test frameworks for a provider implementation that need to find all control patterns that are not permitted on this control type.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> pattern identifiers.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Retrieves an array of sets of required patterns.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element of the array contains an array of patterns, and each element that has this control type must support at least one of these arrays.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful for UI Automation clients that need to find all possible patterns, such as testing frameworks for a provider implementation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An array of sets of required patterns.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Retrieves an array of the required property <ph id="ph1">[!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)]</ph> for this control type.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful for UI Automation clients that need to find all possible properties, such as testing frameworks for a provider implementation.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An array of property <ph id="ph1">[!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Identifies a group control, which acts as a container for other controls.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>A group is a container control that contains different control types and is used to logically associate those controls.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Identifies a header control, which is a container for the labels of rows and columns of information.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Identifies a header item, which is the label for a row or column of information.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Identifies a hyperlink control.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>A hyperlink control navigates to a specified <ph id="ph1">[!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)]</ph> when a user clicks on the control.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Identifies an image control.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Image&gt;</ph> control type can be used as a standalone control or as a subcontrol in another control type.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a button can use an image rather than text to indicate its functionality to the user.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used only for decorative purposes, an image appears in the control view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree (not in the content view).</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Identifies a list control, such as a list box.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph> is a control type that contains <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.ListItem&gt;</ph> and (perhaps) <ph id="ph3">&lt;xref:System.Windows.Automation.ControlType.Group&gt;</ph> control types.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph> control can be used as a standalone control or as a subcontrol in another control type.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a combo box has a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph> control that contains choices that appear when the drop-down button is clicked.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used as a subcontrol, a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph> is only in the control view of the <ph id="ph2">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree (not in content view).</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used as a subcontrol, a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph> does not have a <ph id="ph2">`Name`</ph> property assigned.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.List&gt;</ph> can contain <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.DataItem&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Identifies a list item control, which is a child item of a list control.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Header&gt;</ph> can also be a child of a list control.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a description of the control type.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A localized description of the control type, such as "button".</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.Windows.Automation.ControlType"&gt;&lt;/xref&gt;</ph> that encapsulates a specified numerical identifier.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally the type of a control is identified by a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to construct such an object when only the numerical identifier is known.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Identifier of the control type.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Identifies a menu control, such as a top-level menu in an application window.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>A menu is a container for a collection of menu items; for instance, the control that appears beneath <bpt id="p1">**</bpt>File<ept id="p1">**</ept> when you click on it and that contains <bpt id="p2">**</bpt>New<ept id="p2">**</ept>, <bpt id="p3">**</bpt>Open<ept id="p3">**</ept>, and so on.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Identifies a menu bar control, which generally contains a set of top-level menus.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.MenuBar&gt;</ph> control type represents the container for the set of top-level menus of an application.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Identifies a menu item control.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.MenuItem&gt;</ph> is a child of a <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Menu&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.ControlType.MenuBar&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Identifies a pane control.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Pane&gt;</ph> is used to visually separate content within a <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Window&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user typically navigates between panes by pressing TAB, F6, or CTRL+TAB, depending on the context.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Identifies a progress bar control, which visually indicates the progress of a lengthy operation.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Identifies a radio button control, which is a selection mechanism allowing exactly one selected item in a group.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Identifies a scroll bar control, such as a scroll bar in an application window.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.ScrollBar&gt;</ph> control type contains a set of buttons and a thumb control that enable a user using a mouse to scroll the contents of a window or item container.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A&gt;</ph> property to differentiate between the <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Button&gt;</ph> elements that correspond to the large-increment, large-decrement, small-increment, and small-decrement buttons.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Identifies a separator, which creates a visual division in controls like menus and toolbars.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Identifies a slider control.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Slider&gt;</ph> control type consists of a set of buttons associated with an <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Edit&gt;</ph> control that enable a user to select from a set of items or set a numerical value from within a range.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Identifies a spinner control.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Spinner&gt;</ph> control type consists of a set of buttons that enable a user to select from a set of items or set a numerical value from within a range.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Identifies a split button, which is a button that performs a default action and can also expand to a list of other possible actions.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Identifies a status bar control.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.StatusBar&gt;</ph> control types are generally subcontrols of <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Window&gt;</ph> control type <ph id="ph3">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> elements.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Identifies a tab control.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Tab&gt;</ph> is a control type that contains at least one <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.TabItem&gt;</ph> child control.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Identifies a tab item control, which represents a page of a tab control.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Identifies a table.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Table&gt;</ph> control type is similar to a <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.DataGrid&gt;</ph> but contains only text.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tables can also contain <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Header&gt;</ph> control types.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Identifies an edit control, such as a text box or rich text box.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Text&gt;</ph> control can be used as a standalone control, such as an <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Edit&gt;</ph> control, or as a subcomponent, such as the area of a <ph id="ph3">&lt;xref:System.Windows.Automation.ControlType.ComboBox&gt;</ph> where a user can type in a value.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Identifies the control in a scrollbar that can be dragged to a different position.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Thumb&gt;</ph> control is used as a subcontrol in a <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.ScrollBar&gt;</ph> control type.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a subcontrol, a <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Thumb&gt;</ph> does not have a <ph id="ph2">&lt;xref:System.Windows.Automation.AutomationElement.NameProperty&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Identifies the caption bar on a window.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Identifies a toolbar, such as the control that contains a set of command buttons in an application window.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Identifies a tooltip control, an informational window that appears as a result of moving the pointer over a control or sometimes when tabbing to a control using the keyboard.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Identifies a tree control.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.Tree&gt;</ph> control type is a container for a hierarchical arrangement of <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.TreeItem&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Automation.ControlType.DataItem&gt;</ph> control types.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each node of a tree can contain other nodes.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>A node that contains child nodes can be displayed as expanded or collapsed.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Identifies a node in a <ph id="ph1">&lt;xref href="System.Windows.Automation.ControlType.TreeItem"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.ControlType.TreeItem&gt;</ph> control type can be used only as a subcontrol of a <ph id="ph2">&lt;xref:System.Windows.Automation.ControlType.Tree&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Identifies a window frame, which contains child objects.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls of this type always support <ph id="ph1">&lt;xref:System.Windows.Automation.WindowPattern&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>