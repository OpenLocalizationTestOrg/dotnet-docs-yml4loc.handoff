<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6d0e2ab6841d1f2eb98c957980fb587072e9551</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Text.RegularExpressions.RegexMatchTimeoutException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0d59a670fef1e7877600ac99a1749b25c996f4a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a4295154aa6665f66b2be74ee271e84c4f5f3b90</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The exception that is thrown when the execution time of a regular expression pattern-matching method exceeds its time-out interval.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The presence of a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception generally indicates one of the following conditions:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The regular expression engine is backtracking excessively as it attempts to match the input text to the regular expression pattern.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time-out interval has been set too low, especially given high machine load.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The way in which an exception handler handles an exception depends on the cause of the exception:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the time-out results from excessive backtracking, your exception handler should abandon the attempt to match the input and inform the user that a time-out has occurred in the regular expression pattern-matching method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If possible, information about the regular expression pattern, which is available from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph> property, and the input that caused excessive backtracking, which is available from the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph> property, should be logged so that the issue can be investigated and the regular expression pattern modified.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Time-outs due to excessive backtracking are always reproducible.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the time-out results from setting the time-out threshold too low, you can increase the time-out interval and retry the matching operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current time-out interval is available from the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> exception is thrown, the regular expression engine maintains its state so that any future invocations return the same result, as if the exception did not occur.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended pattern is to wait for a brief, random time interval after the exception is thrown before calling the matching method again.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be repeated several times.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the number of repetitions should be small in case the time-out is caused by excessive backtracking.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example in the next section illustrates both techniques for handling a <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.RegularExpressions.RegexMatchTimeoutException"&gt;&lt;/xref&gt;</ph> class with a system-supplied message.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default constructor of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This message is localized for the current system culture.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.RegularExpressions.RegexMatchTimeoutException"&gt;&lt;/xref&gt;</ph> class with the specified message string.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string is assigned to the <ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string should be localized for the current culture.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A string that describes the exception.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.RegularExpressions.RegexMatchTimeoutException"&gt;&lt;/xref&gt;</ph> class with serialized data.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is not called directly by your code to instantiate the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it is called by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatter.Deserialize%2A?displayProperty=fullName&gt;</ph> method when deserializing the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object from a stream.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The object that contains the serialized data.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The stream that contains the serialized data.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.RegularExpressions.RegexMatchTimeoutException"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you use this overload to handle an exception in a <ph id="ph1">`try/catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`innerException`</ph> parameter should be a reference to the exception object handled in the <ph id="ph2">`catch`</ph> block, or it can be <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is then assigned to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object's <ph id="ph2">&lt;xref:System.Exception.InnerException%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string is assigned to the <ph id="ph2">&lt;xref:System.Exception.Message%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string should be localized for the current culture.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A string that describes the exception.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The exception that is the cause of the current exception.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.RegularExpressions.RegexMatchTimeoutException"&gt;&lt;/xref&gt;</ph> class with information about the regular expression pattern, the input text, and the time-out interval.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`regexInput`</ph>, <ph id="ph2">`regexPattern`</ph>, and <ph id="ph3">`matchTimeout`</ph> values are assigned to the <ph id="ph4">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Pattern%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.MatchTimeout%2A&gt;</ph> properties of the new <ph id="ph7">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The input text processed by the regular expression engine when the time-out occurred.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The pattern used by the regular expression engine when the time-out occurred.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The time-out interval.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the input text that the regular expression engine was processing when the time-out occurred.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reflects the value of the <ph id="ph1">`regexInput`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this parameter is not explicitly initialized in a constructor call, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the exception is thrown by the regular expression engine, the value of the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.Input%2A&gt;</ph> property reflects the entire input string passed to the regular expression engine.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not reflect a partial string, such as the substring that the engine searches in the call to a method such as <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex.Match%28System.String%2CSystem.Int32%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The regular expression input text.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the time-out interval for a regular expression match.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reflects the value of the <ph id="ph1">`matchTimeout`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parameter is not properly initialized in a constructor call, its value is <ph id="ph1">`Timespan.FromTicks(-1)`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property reflects the time-out interval set in the call to the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.Regex&gt;</ph> constructor or static method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not reflect the exact interval that has elapsed from the beginning of the method call to the time the exception is thrown.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The time-out interval.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the regular expression pattern that was used in the matching operation when the time-out occurred.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property reflects the value of the <ph id="ph1">`regexPattern`</ph> parameter of the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException.%23ctor%28System.String%2CSystem.String%2CSystem.TimeSpan%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parameter is not properly initialized in a constructor call, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The regular expression pattern.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> object with the data needed to serialize a <ph id="ph2">&lt;xref href="System.Text.RegularExpressions.RegexMatchTimeoutException"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Text.RegularExpressions.RegexMatchTimeoutException&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any objects that are included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object are automatically tracked and serialized by the formatter.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The object to populate with data.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The destination for this serialization.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>