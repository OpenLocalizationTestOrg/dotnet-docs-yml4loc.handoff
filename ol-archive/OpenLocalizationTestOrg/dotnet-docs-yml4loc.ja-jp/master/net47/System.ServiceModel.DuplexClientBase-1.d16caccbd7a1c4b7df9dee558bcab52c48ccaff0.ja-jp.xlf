<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5ba925f9223afef15c34c68e2f5fe7f69ce5877</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.DuplexClientBase-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a41d4212f7a37e44d725a066d1e5c121ec172f3b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56ffb1885bbe9774623512783d97e0075daa1316</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Used to create a channel to a duplex service and associate that channel with a callback object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.DuplexClientBase%601&gt;</ph> class to create a channel to a service that specifies a callback object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.DuplexClientBase%601&gt;</ph> object wraps a <ph id="ph2">&lt;xref:System.ServiceModel.DuplexChannelFactory%601?displayProperty=fullName&gt;</ph> object, which provides the connectivity for the <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use either type to connect to a duplex service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about duplex services, see <bpt id="p1">[</bpt>Duplex Services<ept id="p1">](~/docs/framework/wcf/feature-details/duplex-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special note for Managed C++ users deriving from this class:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) in order to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The type of the channel to be created.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object using the <ph id="ph3">`callbackInstance`</ph> object to handle all callback operations.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The callback instance is null.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callbackInstance`</ph> provided by the user is used to service all callback operations.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> object that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The callback instance is null.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class with the specified callback object and service endpoint.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The service endpoint.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The service endpoint is null.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object and configuration name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object using the <ph id="ph3">`callbackInstance`</ph> object to handle all callback operations.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The name of the client endpoint information in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The configuration name is null.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class with the specified callback object and service endpoint.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> object that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The service endpoint.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The service endpoint is null.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object and configuration name.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callbackInstance`</ph> provided by the user is used to service all callback operations.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The name of the client endpoint information in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The configuration name is null.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object, binding, and service endpoint address.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object using the <ph id="ph3">`callbackInstance`</ph> object to handle all callback operations.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The binding with which to call the service.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The service endpoint address to use.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The address is null.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object, configuration name, and service endpoint address.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object using the <ph id="ph3">`callbackInstance`</ph> object to handle all callback operations.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The address of the service endpoint to use.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The address is null.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object, endpoint configuration name, and service endpoint address.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> creates a new <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object using the <ph id="ph3">`callbackInstance`</ph> object to handle all callback operations.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The name of the client endpoint information in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The address of the service endpoint to use.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The address is null.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object, binding, and service endpoint address.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callbackInstance`</ph> provided by the user is used to service all callback operations.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The binding with which to call the service.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The service endpoint address to use.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object, configuration name, and service endpoint address.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callbackInstance`</ph> provided by the user is used to service all callback operations.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The name of the client endpoint information in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The address is null.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexClientBase`1"&gt;&lt;/xref&gt;</ph> class using the specified callback object, configuration name, and service endpoint address.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`callbackInstance`</ph> provided by the user is used to service all callback operations.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>An object used to create the instance context that associates the callback object with the channel to the service.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name of the client endpoint information in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The address of the service endpoint to use.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The address is null.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets the inner duplex channel.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The inner duplex channel.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>