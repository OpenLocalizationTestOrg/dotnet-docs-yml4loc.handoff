<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5687cddcd0a52e0e18820a460c2d31676509a5b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Linq.Expressions.LambdaExpression.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">38a6ce6de153022d0e1df27d5298be201b230aac</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54c23c6717e72f023f93752ad1e69e3019bfa280</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Describes a lambda expression.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This captures a block of code that is similar to a .NET method body.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> type represents a lambda expression in the form of an expression tree.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression%601&gt;</ph> type, which derives from <ph id="ph2">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> and captures the type of the lambda expression more explicitly, can also be used to represent a lambda expression.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>At runtime, an expression tree node that represents a lambda expression is always of type <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.NodeType%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> is <ph id="ph3">&lt;xref:System.Linq.Expressions.ExpressionType.Lambda&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Linq.Expressions.Expression.Lambda%2A&gt;</ph> factory methods to create a <ph id="ph2">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Gets the body of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> that represents the body of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Produces a delegate that represents the lambda expression.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Linq.Expressions.LambdaExpression.Compile%2A&gt;</ph> method can be used to convert a <ph id="ph2">&lt;xref:System.Linq.Expressions.LambdaExpression&gt;</ph> expression tree into the delegate that it represents.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Delegate"&gt;&lt;/xref&gt;</ph> that contains the compiled version of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Produces a delegate that represents the lambda expression.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Debugging information generator used by the compiler to mark sequence points and annotate local variables.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A delegate containing the compiled version of the lambda.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Compiles the lambda into a method definition.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.Emit.MethodBuilder"&gt;&lt;/xref&gt;</ph> which will be used to hold the lambda's IL.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Compiles the lambda into a method definition and custom debug information.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.Emit.MethodBuilder"&gt;&lt;/xref&gt;</ph> which will be used to hold the lambda's IL.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Debugging information generator used by the compiler to mark sequence points and annotate local variables.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the name of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Used for debugging.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Returns the node type of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.ExpressionType"&gt;&lt;/xref&gt;</ph> that represents this expression.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the parameters of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Linq.Expressions.ParameterExpression"&gt;&lt;/xref&gt;</ph> objects that represent the parameters of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the return type of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object representing the type of the lambda expression.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the value that indicates if the lambda expression will be compiled with the tail call optimization.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>True if the lambda expression will be compiled with the tail call optimization, otherwise false.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.LambdaExpression.Type"&gt;&lt;/xref&gt;</ph> that represents the static type of the expression.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>