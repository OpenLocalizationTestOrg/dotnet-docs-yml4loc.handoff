<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6dc3f14cb4f456d1f5fc1a094d5b9ee2e601a252</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.PeerToPeer.Collaboration.PeerCollaboration.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1fde950bd8a9515cdbe29f3ca9d2ba8c1b032a9c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3438719702171a8ab64ad93ce53d8a427424129d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Interacts with the Peer Collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Many of the core collaboration scenarios begin with this class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is a static class â€“ it is sealed, abstract and does not have a public constructor.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used to contain and manage application, object, and presence information for peers that have accepted invitations to a collaboration session.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In terms of peers, objects, and applications, the PeerCollaboration class provides three accessors, one for each collection, as an interface or point of connectivity for whatever else is happening on the machine.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class cannot be inherited; a compile-time error will occur if this sealed class is specified as the base class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods and properties in this class can be used to:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Launch and manage collaborative applications</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Register and delete applications and collaboration objects (such as certificates, pictures, avatars, and text descriptions)</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invite peers to collaboration sessions, including items such as scope and objects which will identify them over the Internet</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Allow peers to <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A&gt;</ph> of the collaboration infrastructure, manage lists of contacts, or publish their presence to each other</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Utilize <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A&gt;</ph> properties and events to coordinate asynchronous application communication, especially for changes in name, presence, application, or other objects.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Link-local cloud", "subnet of the calling peer", and "NearMe scope" are synonymous terms.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Internet scope" and "serverless presence" are synonymous.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The site-local <ph id="ph1">&lt;xref:System.Net.PeerToPeer.PnrpScope&gt;</ph> has no equivalent in the collaboration namespace.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The use of every method or property in this class requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the peer collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo"&gt;&lt;/xref&gt;</ph> object that contains information needed when an application is started due to a collaboration request from a remote peer.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is to be used by a collaboration-aware <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerApplication&gt;</ph> instance after it is started to determine whether it was started due to a collaboration request from a remote peer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The calling application should inspect the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A&gt;</ph> properties to get further information about the invitation request.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this property requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If the application was started due to an invitation, a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo"&gt;&lt;/xref&gt;</ph> object that contains both information about the peer that sent the application invitation and the invitation itself is returned; otherwise, <ph id="ph2">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default value for this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the persistent store that contains all <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerContact"&gt;&lt;/xref&gt;</ph> objects for remote peers.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.ContactManager"&gt;&lt;/xref&gt;</ph> object that contains all peer contact objects for remote peers.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The default value for this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Deregisters a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> associated with the calling peer.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Peer objects are automatically deregistered (removed) from the Peer Collaboration infrastructure when a reference to the object is no longer valid.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a caller does not maintain a reference to the object, it is deregistered from the Peer Collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, an object can be manually deregistered by using this method.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> to deregister.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">peerObject</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Unable to complete <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)"&gt;&lt;/xref&gt;</ph> operation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets all <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> objects that are registered on the local machine.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller is required to sign-in to the peer collaboration infrastructure via the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A&gt;</ph> method prior to the use of this method.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this property requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection"&gt;&lt;/xref&gt;</ph> that contains all applications that are registered on the local machine.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If an application is not found, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An invalid value was returned when this method attempted to enumerate the application registered to this peer.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Please make sure that all applications have valid registry values.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets a collection of all <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> objects that are registered on the local machine for the specified <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller is required to sign-in to the Peer Collaboration infrastructure via the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A&gt;</ph> method prior to the use of this method.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType"&gt;&lt;/xref&gt;</ph> to return for the specified application.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection"&gt;&lt;/xref&gt;</ph> that contains all applications of the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p1">&lt;/code&gt;</ept> that are registered on the local machine.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>If an application is not found, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not set to a known value in the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An invalid value was returned when this method attempted to enumerate the application registered to this peer.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Please make sure that all applications have valid registry values.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Obtains all <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> instances registered by the calling peer with the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> infrastructure on this machine.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this property requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObjectCollection"&gt;&lt;/xref&gt;</ph> which contains all the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> instances registered by the calling peer with the <ph id="ph3">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> infrastructure on the local machine.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If registered <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> instances are not discovered on the local machine, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An invalid value was returned when this method attempted to enumerate all available <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns a collection of all the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> endpoints currently signed in on the network subnet of the calling peer.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return of a fully populated <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection&gt;</ph> via this method can require an indeterminate amount of time after sign-in depending on network topology and latency.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerNearMeCollection"&gt;&lt;/xref&gt;</ph> that contains all the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> endpoints currently signed into the 'Near Me' scope.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If peers are not discovered on the subnet, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The peer is not signed in to the 'Near Me' scope.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An invalid value was returned when this method attempted to enumerate all known People Near Me endpoints.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Raised when a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> in the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationCollection"&gt;&lt;/xref&gt;</ph> for the local peer on the local host has changed.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint"&gt;&lt;/xref&gt;</ph> associated with the calling peer.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this property requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains the name associated with the calling peer's endpoint (provided as the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name"&gt;&lt;/xref&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The default value for this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Unable to set <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Raised when the name of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint"&gt;&lt;/xref&gt;</ph> on the local host for the local peer has changed.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> in the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObjectCollection"&gt;&lt;/xref&gt;</ph> for the local peer on the local host has changed.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo"&gt;&lt;/xref&gt;</ph> of the local peer on the local host has changed.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets or sets the presence for the calling peer within the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> infrastructure.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo"&gt;&lt;/xref&gt;</ph> that contains presence information for the calling peer that has registered for a <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> session.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo"&gt;&lt;/xref&gt;</ph> cannot specify <ph id="ph2">`null`</ph></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerPresenceStatus"&gt;&lt;/xref&gt;</ph> is offline</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Unable to set  <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Registers the specified <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> for a collaboration session with the calling peer.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The calling peer is required to sign in to the peer collaboration infrastructure with the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A&gt;</ph> method prior to calling this method.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> for which to register the calling peer within the associated scope (global, local, and link-local).</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The type of registration to perform.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The application may be registered for just the calling peer or for all peers using the machine.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication.Path"&gt;&lt;/xref&gt;</ph> property on the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> object passed to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">application</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph4">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The peer application instance provided has the same globally unique <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication.Id"&gt;&lt;/xref&gt;</ph> as an application which is already registered.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The existing registration must be unregistered before a new application can be registered with the provided identifier.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">application</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept> parameters cannot be <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Both parameters must be specified.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The type parameter is not set to a known value in the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)"&gt;&lt;/xref&gt;</ph> operation cannot be completed until the caller has signed-in to the infrastructure.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Registers a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> associated with the calling peer.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows the object to be queried by remote peers participating in the scope in which the object was registered.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object was previously registered, this method updates its registration.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a registered object falls out of scope, it can be retrieved via the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of the data portion of the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerObject&gt;</ph> must be less than or equal to 16,384 bytes.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> to register.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Object already registered</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> cannot be <ph id="ph2">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject.Id"&gt;&lt;/xref&gt;</ph> cannot be <ph id="ph2">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)"&gt;&lt;/xref&gt;</ph> operation could not be completed.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Signs the peer into the collaboration infrastructure with the specified <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Display names are not necessarily unique.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users should verify the identity of the person using the display name by e-mail, phone, or in person before accepting a collaboration invitation.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function signs the users into the Collaboration Infrastructure.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access to this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The scope the peer is using to join the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> activity.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;peerScope&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerScope.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">peerScope</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an invalid enumeration value.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)"&gt;&lt;/xref&gt;</ph> operation could not be completed.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerScope"&gt;&lt;/xref&gt;</ph> to which the calling peer can publish presence, capability and object information.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The peer host or host application may limit or differentiate peer participation in collaboration activities by using separate scopes.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The calling peer should inspect the return value from this method to determine what further actions it can successfully perform.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerScope"&gt;&lt;/xref&gt;</ph> object that specifies the scope in which the calling peer will participate.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default value for this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Signs the peer out of the specified scope.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not an application-specific operation and signing out may affect other applications that may be currently running.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user is not already signed into the specified scope calling this method results in a no-op.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a user signs out of People Near Me, their published information is deleted from the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration&gt;</ph> endpoint object set.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A&gt;</ph>, in addition to any identifying objects registered by the calling peer into the collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this information is deleted, it is no longer available to either remote peers or a peer host for collaboration.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>From the perspective of the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration&gt;</ph> class, other sharing of the same information with trusted contacts is not relevant; use of the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration&gt;</ph> class does not affect other objects in which this information was persisted, such as a remote peer <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, deleting a peer from the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager&gt;</ph> does not affect its presence in a collaboration application; other contacts are still able to view its presence and collaborate with it.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Scope enumeration specified by <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerScope"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">peerScope</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains an invalid enumeration value.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)"&gt;&lt;/xref&gt;</ph> operation could not be completed.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Gets or sets the event handler callback object for all event handlers.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An object with <ph id="ph1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;&lt;/xref&gt;</ph> implemented on it, to be used for application thread synchronization.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default value for this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Deregisters the specified <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> from the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration"&gt;&lt;/xref&gt;</ph> infrastructure.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deregistering a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerApplication&gt;</ph> stops the calling peer from receiving collaboration invitations for it.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the application being deregistered was not previously registered, this is a no-op.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> to deregister for the calling peer.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The type of deregistration to perform for either the calling peer or for all peers that exist on the machine.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The globally unique <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication.Id"&gt;&lt;/xref&gt;</ph> for the specified application does not exist or is empty.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">application</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept> parameter is set to <ph id="ph3">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not set to a known value in <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The  <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)"&gt;&lt;/xref&gt;</ph> operation could not be completed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>