<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">df0c3409c76e2180b7ca6924269c75a2af36dc0c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.VisualBasic.Constants.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7ec78507db832813274a4ad58ce4f8895d4d195</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a4e8e7c4a00cf0801c0540bd0eb66551117db41</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Constants`</ph> module contains miscellaneous constants.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>These constants can be used anywhere in your code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This module supports the Visual Basic language constants that correspond to the members of many Visual Basic enumerations:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Abort`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Abort`</ph>, <ph id="ph2">`Retry`</ph>, and <ph id="ph3">`Ignore`</ph> buttons will be displayed when the <ph id="ph4">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Indicates that the message box will be displayed as a modal dialog box when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Indicates that the file has changed since the last backup operation for file-access functions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is an array.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Represents a backspace character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Specifies that a binary comparison should be performed when comparison functions are called.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call comparison functions, you can use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompareMethod&gt;</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument takes the <ph id="ph2">`CompareMethod`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For binary and text comparisons, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Boolean`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Byte`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Cancel`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Represents a carriage-return character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Indicates that the critical message icon will be displayed when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Represents a carriage-return character combined with a linefeed character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Currency`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Date`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Decimal`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Indicates that the leftmost button is selected as the default button when the message box appears.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Indicates that the second button from the left is selected as the default button when the message box appears.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Indicates that the third button from the left is selected as the default button when the message box appears.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a directory or folder for file-access functions.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Double`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Indicates that the exclamation icon will be displayed when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Indicates that a <ph id="ph1">`Boolean`</ph> value of <ph id="ph2">`False`</ph> should be used when number-formatting functions are called.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Indicates that the first week of the year that has at least four days should be used when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Indicates that the first full week of the year should be used when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Indicates that the week of the year in which January 1 occurs should be used when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Represents a form-feed character for print functions.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Specifies that Friday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Indicates that the general date format for the current culture should be used when the <ph id="ph1">`FormatDateTime`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Specifies that a property value should be retrieved when the <ph id="ph1">`CallByName`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a hidden file for file-access functions.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is hidden for the invoked program when the <ph id="ph1">`Shell`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Indicates Hiragana characters should be converted to Katakana characters when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Ignore`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Indicates that the information icon will display when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Integer`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Indicates that Katakana characters should be converted to Hiragana characters when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Indicates that a property value should be set to an object instance when the <ph id="ph1">`CallByName`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Represents a linefeed character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to use linguistic rules for casing instead of file system rules for casing to when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Indicates the type of a variant object is <ph id="ph1">`Long`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Indicates that the long date format for the current culture should be used when the <ph id="ph1">`FormatDateTime`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Indicates that the long time format for the current culture should be used when the <ph id="ph1">`FormatDateTime`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to lowercase when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is maximized with focus for the invoked program when the <ph id="ph1">`Shell`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Specifies that a method should be called when the <ph id="ph1">`CallByName`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is minimized with focus for the invoked program when the <ph id="ph1">`Shell`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is minimized without focus for the invoked program when the <ph id="ph1">`Shell`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Specifies that Monday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Help`</ph> button will be displayed when the <ph id="ph2">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Indicates that text will be right-aligned when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Indicates that right-to-left reading text (Hebrew and Arabic systems) will be displayed when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>Indicates that the message box will display in the foreground when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Indicates that wide (double-byte) characters should be converted to narrow (single-byte) characters when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Represents a newline character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`No`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a normal file for file-access functions.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is normal with focus for the invoked program when the <ph id="ph1">`Shell`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Indicates that the window style is normal without focus for the invoked program when the <ph id="ph1">`Shell`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you issue <ph id="ph1">`Shell`</ph> commands, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Style`</ph> argument takes the <ph id="ph2">`AppWinStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Nothing`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Represents a null character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Represents a zero-length string for print and display functions, and for calling external procedures.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Object`</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>Represents the object error number.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>User-defined error numbers should be greater than this value.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`OK`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`OK`</ph> and <ph id="ph2">`Cancel`</ph> buttons will be displayed when the <ph id="ph3">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Indicates that only the <ph id="ph1">`OK`</ph> button will be displayed when the <ph id="ph2">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Indicates that the first letter of every word in a string should be converted to uppercase and the remaining characters to lowercase when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Indicates that the question icon will be displayed when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a read-only file for file-access functions.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Retry`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Retry`</ph> and <ph id="ph2">`Cancel`</ph> buttons will be displayed when the <ph id="ph3">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Specifies that Saturday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Indicates that a property value should be set when the <ph id="ph1">`CallByName`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`CallByName`</ph> function, you can use the following <ph id="ph2">`CallType`</ph> enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UseCallType`</ph> argument takes the <ph id="ph2">`CallType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Indicates that the short-date format for the current culture should be used when the <ph id="ph1">`FormatDateTime`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Indicates that the short-time format for the current culture should be used when the <ph id="ph1">`FormatDateTime`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`FormatDateTime`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access your computer's regional settings by double-clicking the <bpt id="p1">**</bpt>Regional Options<ept id="p1">**</ept> icon, found in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to Simplified Chinese when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Single`</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`String`</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Specifies that Sunday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Indicates that the file is a system file for file-access functions.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Indicates that the message box will be displayed as a modal dialog box when the <ph id="ph1">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Represents a tab character for print and display functions.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Indicates that a text comparison should be performed when comparison functions are called.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call comparison functions, you can use the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.CompareMethod&gt;</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Compare`</ph> argument takes the <ph id="ph2">`CompareMethod`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about more information about binary and text comparisons, see <bpt id="p1">[</bpt>Option Compare Statement<ept id="p1">](~/docs/visual-basic/language-reference/statements/option-compare-statement.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Specifies that Thursday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to Traditional Chinese when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Indicates that a <ph id="ph1">`Boolean`</ph> value of <ph id="ph2">`True`</ph> should be used when number-formatting functions are called.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Specifies that Tuesday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Indicates that characters should be converted to uppercase when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Indicates that the default <ph id="ph1">`Boolean`</ph> value should be used when number-formatting functions are called.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call number-formatting functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is a user-defined type.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Indicates that the week specified by your system as the first week of the year should be used when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstWeekOfYear`</ph> enumeration specifies the valid values for the <ph id="ph2">`WeekOfYear`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`WeekOfYear`</ph> argument takes the <ph id="ph2">`FirstWeekOfYear`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Indicates that the day specified by your system as the first day of the week should be used when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>Indicates that the type of a variant object is <ph id="ph1">`Variant`</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`VarType`</ph> function.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`VarType`</ph> function, you can use enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`VariantType`</ph> enumeration defines constants used to identify possible <ph id="ph2">`Variant`</ph> types.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the <ph id="ph1">`VariantType`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>Represents a carriage-return character for print functions.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Indicates the volume label file attribute for file-access functions.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute is not valid for the <ph id="ph1">`SetAttr`</ph> function.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Dir`</ph>, <ph id="ph2">`GetAttr`</ph>, or <ph id="ph3">`SetAttr`</ph> functions, you can use the <ph id="ph4">`FileAttribute`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Attributes`</ph> argument takes the <ph id="ph2">`FileAttribute`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>When performing file I/O operations, the <ph id="ph1">`My.Computer.FileSystem`</ph> object provides greater performance and ease of use than legacy file I/O methods.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:Microsoft.VisualBasic.FileSystem&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>Specifies that Wednesday should be used as the first day of the week when date-related functions are called.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call date-related functions, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some date-related functions take a <ph id="ph1">`DayOfWeek`</ph> argument, a <ph id="ph2">`WeekOfYear`</ph> argument, or both.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`FirstDayOfWeek`</ph> enumeration specifies the valid values for the <ph id="ph2">`DayOfWeek`</ph> arguments, as well as the possible return values from the functions.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DayOfWeek`</ph> argument takes the <ph id="ph2">`FirstDayOfWeek`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date-related functions also return <ph id="ph1">`FirstDayOfWeek`</ph> values (except <ph id="ph2">`System`</ph>).</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Indicates that narrow (single-byte) characters should be converted to wide (double-byte) characters when the <ph id="ph1">`StrConv`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`StrConv`</ph> function, you can use the following enumeration members in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Conversion`</ph> argument takes the <ph id="ph2">`VbStrConv`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Yes`</ph> button was clicked in a message box.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>Returned by the <ph id="ph1">`MsgBox`</ph> function.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxResult`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`MsgBox`</ph> function returns a <ph id="ph2">`MsgBoxResult`</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Yes`</ph> and <ph id="ph2">`No`</ph> buttons will be displayed when the <ph id="ph3">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">`Yes`</ph>, <ph id="ph2">`No`</ph>, and <ph id="ph3">`Cancel`</ph> buttons will be displayed when the <ph id="ph4">`MsgBox`</ph> function is called.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`MsgBox`</ph> function, you can use the <ph id="ph2">`MsgBoxStyle`</ph> enumeration in your code in place of the actual values.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Buttons`</ph> argument takes the <ph id="ph2">`MsgBoxStyle`</ph> enumeration members.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>