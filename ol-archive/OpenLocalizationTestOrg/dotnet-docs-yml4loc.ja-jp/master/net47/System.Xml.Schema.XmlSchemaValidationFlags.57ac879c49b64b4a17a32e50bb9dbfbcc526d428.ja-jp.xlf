<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">114a3ec9fa3cf23da8fd8cc56eef5156cc9b43dd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Schema.XmlSchemaValidationFlags.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">34c698a9960747502d10b9dc226f3f5205c95034</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">99cb0be757c5805c7b3f8670048cdb7e0370328c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies schema validation options used by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaValidator"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are notes to consider when using <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> values with the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> values define validation options used by a schema validating <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> to perform XML validation against a schema.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags&gt;</ph> values for a validating <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> are specified using the <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings.ValidationFlags%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are notes to consider when using the AllowXmlAttributes value.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a schema doesnâ€™t import the Xml namespace.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will load a snapshot of the default Xml namespace schema and use it for validation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes, the validation engine will report an error.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a schema imports the Xml namespace without a location.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will use the default Xml namespace schema for validation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Xml attributes used in the instance document are not found in the default schema, the document will not validate.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using the default Xml namespace schema.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a schema imports a custom Xml namespace schema with a custom schemaLocation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default) and the instance document contains Xml attributes, the validation engine will use the custom Xml namespace schema for validation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If Xml attributes used in the instance document are not found in the specified schema, the document will not validate.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are not explicitly allowed by the schema, the validation engine will report an error.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph> and the instance document contains Xml attributes that are explicitly allowed by the schema, the validation engine will validate the attributes the same way it validates other attributes using specified Xml namespace schema.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a schema defines an xml:* attribute with use="required".</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following applies when AllowXmlAttributes is set to <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Required xml:* attributes should be treated as other attributes and validated using the specified Xml namespace schema.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a schema defines an xml:* attribute with use="prohibited".</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following applies when AllowXmlAttributes is set to <ph id="ph1">`true`</ph> and <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an instance document contains xml:* attributes that are explicitly prohibited by the schema, the validation engine will report an error.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a schema specifies an attribute wildcard.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents either omitted or set to "strict", the validation engine will use the Xml namespace schema present in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no Xml namespace schema is specified, the validation engine will behave as follows.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph>, the validation engine will use the default Xml namespace schema to perform validation.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph>, the validation engine will report an error.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "skip", the validation engine will skip attribute validation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an instance document contains an Xml attribute and the schema specifies an attribute wildcard with processContents set to "lax", the validation engine will use the Xml namespace schema present in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no Xml namespace schema is specified, the validation engine will behave as follows.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`true`</ph>, the validation engine will use the default Xml namespace schema to perform validation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If AllowXmlAttributes is set to <ph id="ph1">`false`</ph>, attribute validation will not be performed.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When validating simple types.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When AllowXmlAttributes is set to <ph id="ph1">`true`</ph> (default), Xml attributes will be allowed on elements of simple types.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Allow xml:* attributes even if they are not defined in the schema.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The attributes will be validated based on their data type.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Do not process identity constraints, inline schemas, schema location hints, or report schema validation warnings.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Process identity constraints (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xs:ID</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">xs:IDREF</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">xs:key</ph><ept id="p3">&lt;/code&gt;</ept>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">xs:keyref</ph><ept id="p4">&lt;/code&gt;</ept>, <bpt id="p5">&lt;code&gt;</bpt><ph id="ph5">xs:unique</ph><ept id="p5">&lt;/code&gt;</ept>) encountered during validation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Process inline schemas encountered during validation.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Process schema location hints (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsi:schemaLocation</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">xsi:noNamespaceSchemaLocation</ph><ept id="p2">&lt;/code&gt;</ept>) encountered during validation.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Report schema validation warnings encountered during validation.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>