<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4abb6824d2aa94c3976e58824d7be7d14c49cef7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Collections.ObjectModel.KeyedCollection-2.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23812d09cad3c862d01f28a197d8352ede1efd4d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5fada3f3cf323f2ff938d77c3e2dda9961a04edd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the abstract base class for a collection whose keys are embedded in the values.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class provides both O(1) indexed retrieval and keyed retrieval that approaches O(1).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is an abstract type, or more accurately an infinite set of abstract types, because each of its constructed generic types is an abstract base class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, derive your collection type from the appropriate constructed type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is a hybrid between a collection based on the <ph id="ph2">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface and a collection based on the <ph id="ph3">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like collections based on the <ph id="ph1">&lt;xref:System.Collections.Generic.IList%601&gt;</ph> generic interface, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is an indexed list of items.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Like collections based on the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> generic interface, <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a key associated with each element.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike dictionaries, an element of <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is not a key/value pair; instead, the entire element is the value and the key is embedded within the value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an element of a collection derived from <ph id="ph1">`KeyedCollection\&lt;String,String&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of String, String)`</ph> in Visual Basic) might be "John Doe Jr."</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>where the value is "John Doe Jr."</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>and the key is "Doe"; or a collection of employee records containing integer keys could be derived from <ph id="ph1">`KeyedCollection\&lt;int,Employee&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The abstract <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method extracts the key from the element.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that you can obtain with the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Dictionary%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior is overridden by specifying a dictionary creation threshold when you create the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lookup dictionary is created the first time the number of elements exceeds that threshold.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify â€“1 as the threshold, the lookup dictionary is never created.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the internal lookup dictionary is used, it contains references to all the items in the collection if <ph id="ph1">`TItem`</ph> is a reference type, or copies of all the items in the collection if <ph id="ph2">`TItem`</ph> is a value type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, using the lookup dictionary may not be appropriate if <ph id="ph1">`TItem`</ph> is a value type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access an item by its index or key by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph>property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add items without a key, but these items can subsequently be accessed only by index.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The type of keys in the collection.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The type of items in the collection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph> class that uses the default equality comparer.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> created with this constructor uses the default generic equality comparer for the type of the key, obtained from <ph id="ph2">&lt;xref:System.Collections.Generic.EqualityComparer%601.Default%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a different generic equality comparer, use the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%29&gt;</ph> constructor or the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph> class that uses the specified equality comparer.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">&lt;xref href="System.Collections.Generic.IEqualityComparer`1"&gt;&lt;/xref&gt;</ph> generic interface to use when comparing keys, or <ph id="ph2">`null`</ph> to use the default equality comparer for the type of the key, obtained from <ph id="ph3">&lt;xref href="System.Collections.Generic.EqualityComparer`1.Default"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph> class that uses the specified equality comparer and creates a lookup dictionary when the specified threshold is exceeded.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor allows you to override that behavior.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify 0 to create the dictionary when the first element is added, 1 to create the dictionary when the second element is added, and so on.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify â€“1 as the threshold, the lookup dictionary is never created.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For very small collections the improvement in retrieval speed provided by the lookup dictionary might not be worth the extra memory required by the dictionary.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting a threshold allows you to decide when to make that tradeoff.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> class is abstract (<ph id="ph2">`MustInherit`</ph> in Visual Basic), you must derive from it in order to use it.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the constructor for your derived type, call the appropriate <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to expose functionality like the equality comparer or the dictionary creation threshold in your constructors.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">&lt;xref href="System.Collections.Generic.IEqualityComparer`1"&gt;&lt;/xref&gt;</ph> generic interface to use when comparing keys, or <ph id="ph2">`null`</ph> to use the default equality comparer for the type of the key, obtained from <ph id="ph3">&lt;xref href="System.Collections.Generic.EqualityComparer`1.Default"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The number of elements the collection can hold without creating a lookup dictionary (0 creates the lookup dictionary when the first item is added), or â€“1 to specify that a lookup dictionary is never created.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dictionaryCreationThreshold&lt;/code&gt;</ph> is less than â€“1.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Changes the key associated with the specified element in the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not modify the key embedded in <ph id="ph1">`item`</ph>; it simply replaces the key saved in the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if <ph id="ph1">`newKey`</ph> is different from the key that is embedded in <ph id="ph2">`item`</ph>, you cannot access <ph id="ph3">`item`</ph> by using the key returned by <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does nothing if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> does not have a lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every key in a <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> must be unique.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>A key cannot be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Implementers</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before modifying the key embedded in an item, you must call this method to update the key in the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the dictionary creation threshold is â€“1, calling this method is not necessary.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not expose the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.ChangeItemKey%2A&gt;</ph> method as a public method of a derived class.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Misuse of this method puts the lookup dictionary out of sync with item keys.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, setting the key to <ph id="ph1">`null`</ph> and then setting it to another value adds multiple keys for an item to the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expose this method internally to allow mutable item keys: When the key for an item changes, this method is used to change the key in the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The element to change the key of.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The new key for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;item&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;item&lt;/code&gt;</ph> is not found.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> already exists in the <ph id="ph2">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Removes all elements from the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a lookup dictionary, this method clears it but does not delete it.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Implementers</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Clear%2A&gt;</ph> method, inherited from the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the base class implementation of this method to clear the underlying collection and to clear the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the generic equality comparer that is used to determine equality of keys in the collection.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The implementation of the <ph id="ph1">&lt;xref href="System.Collections.Generic.IEqualityComparer`1"&gt;&lt;/xref&gt;</ph> generic interface that is used to determine equality of keys in the collection.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Determines whether the collection contains an element with the specified key.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary, <ph id="ph2">`key`</ph> is used to search the dictionary.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no lookup dictionary, the key of each element is extracted using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and compared with the specified key.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary; otherwise it is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph> contains an element with the specified key; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets the lookup dictionary of the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> includes a lookup dictionary that is created when the first item is added.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an item is added to the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>, the item's key is extracted once and saved in the lookup dictionary for faster searches.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.%23ctor%28System.Collections.Generic.IEqualityComparer%7B%600%7D%2CSystem.Int32%29&gt;</ph> constructor and specifying a dictionary creation threshold.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The lookup dictionary of the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>, if it exists; otherwise, <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, extracts the key from the specified element.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the key in the lookup dictionary is different from the key that is embedded in <ph id="ph1">`item`</ph>, you cannot access <ph id="ph2">`item`</ph> by using the key returned by <ph id="ph3">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can implement this method to return <ph id="ph1">`null`</ph> for a collection that contains items without keys, in which case the items can be accessed only by their index.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Implementers</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must override this method to provide the dictionary with a way to extract keys from items in the dictionary.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called internally.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary for it to be public.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The element from which to extract the key.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The key for the specified element.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Inserts an element into the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph> at the specified index.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>, <ph id="ph3">`item`</ph> is added to the end of the <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.InsertItem%2A&gt;</ph> is called by the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Implementers</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.Insert%2A&gt;</ph> methods, inherited from the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the base class implementation of this method to insert the item into the underlying collection and to update the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">item</ph><ept id="p1">&lt;/code&gt;</ept> should be inserted.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The object to insert.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref href="System.Collections.ObjectModel.Collection`1.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets the element with the specified key.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[key]`</ph> (<ph id="ph2">`myCollection(key)`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is distinct from the inherited <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A?displayProperty=fullName&gt;</ph> property, which gets and sets elements by numeric index.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if <ph id="ph1">`TKey`</ph> is of type <ph id="ph2">&lt;xref:System.Int32&gt;</ph>, this property masks the inherited property.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you can access the inherited property by casting the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> to its base type.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`KeyedCollection&lt;int, MyType&gt;`</ph> (<ph id="ph2">`KeyedCollection(Of Integer, MyType)`</ph> in Visual Basic, <ph id="ph3">`KeyedCollection&lt;int, MyType^&gt;`</ph> in C++) can be cast to <ph id="ph4">`Collection&lt;MyType&gt;`</ph> (<ph id="ph5">`Collection(Of MyType)`</ph> in Visual Basic, <ph id="ph6">`Collection&lt;MyType^&gt;`</ph> in C++).</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary, <ph id="ph2">`key`</ph> is used to retrieve the element from the dictionary.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is no lookup dictionary, the key of each element is extracted using the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.GetKeyForItem%2A&gt;</ph> method and compared with the specified key.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The C# language uses the  keyword to define the indexers instead of implementing the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Basic implements <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A&gt;</ph> as a default property, which provides the same indexing functionality.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of this property is an O(1) operation if the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> has a lookup dictionary; otherwise it is an O(<ph id="ph2">`n`</ph>) operation, where <ph id="ph3">`n`</ph> is <ph id="ph4">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The key of the element to get.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The element with the specified key.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>If an element with the specified key is not found, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An element with the specified key does not exist in the collection.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Removes the element with the specified key from the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The key of the element is also removed from the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize the behavior of this method, override the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.RemoveItem%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The key of the element to remove.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the element is successfully removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>This method also returns <ph id="ph1">`false`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept> is not found in the <ph id="ph3">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;key&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Removes the element at the specified index of the <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.KeyedCollection`2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The key of the element is also removed from the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of elements has exceeded the dictionary creation threshold and the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602&gt;</ph> is using a lookup dictionary, it will continue to use a lookup dictionary even though the number of elements is again under the threshold.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Implementers</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide customized behavior for the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Remove%28%600%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601.RemoveAt%28System.Int32%29&gt;</ph> methods, inherited from the <ph id="ph3">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class, and the <ph id="ph4">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Remove%28%600%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the base class implementation of this method to remove the item from the underlying collection and to update the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The index of the element to remove.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Replaces the item at the specified index with the specified item.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lookup dictionary is updated accordingly.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the key of the item that is being replaced is removed from the lookup dictionary, and the key of the new item is added.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is an O(1) operation.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes for Implementers</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide customized behavior for setting the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.Collection%601.Item%2A&gt;</ph> property inherited from the <ph id="ph2">&lt;xref:System.Collections.ObjectModel.Collection%601&gt;</ph> generic class.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not affect the behavior of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.KeyedCollection%602.Item%2A?displayProperty=fullName&gt;</ph> property, which is read-only.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the base class implementation of this method to set the item in the underlying collection and to update the lookup dictionary.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item to be replaced.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The new item.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>