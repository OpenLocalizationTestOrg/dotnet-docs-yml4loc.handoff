<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">82461f13c60838803fd19bc15a64f5cb2a13694b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.XmlSerializerFormatAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">964bb3d7743e102eddce7957ca67504bb7f1f773</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d2a583877b0082040c296f371ecf6b9f421c292</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Instructs the Windows Communication Foundation (WCF) infrastructure to use the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> instead of the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.XmlObjectSerializer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute is similar to the <ph id="ph1">&lt;xref:System.ServiceModel.DataContractFormatAttribute&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both attributes can be applied to a method, class, or interface.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>, see <bpt id="p1">[</bpt>Using the XmlSerializer Class<ept id="p1">](~/docs/framework/wcf/feature-details/using-the-xmlserializer-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A method can have either of the two attributes applied, but not both.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any operation that has neither applied uses the attribute applied to the containing class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the containing class does not have either attribute applied, the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> is used.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying the attribute also causes a <ph id="ph1">&lt;xref:System.ServiceModel.Description.XmlSerializerOperationBehavior&gt;</ph> to be created at runtime.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior allows customization at runtime of the serializer behavior.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.XmlSerializerFormatAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets the SOAP style of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Style%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Use%2A&gt;</ph> properties affect how messages are formatted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.OperationFormatStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.OperationFormatStyle.Document"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates that the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> should be used for reading and writing faults.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default formatter for fault serialization is the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>, set this property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting in .NET 4 the serializer set by the <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.SupportFaults%2A&gt;</ph> property will be used even if a custom behavior is set on the contract to which the <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute&gt;</ph> is applied.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> should be used for reading and writing faults; <ph id="ph3">`false`</ph> if the <ph id="ph4">&lt;xref href="System.Runtime.Serialization.DataContractSerializer"&gt;&lt;/xref&gt;</ph> should be used.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the format to use.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Style%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.XmlSerializerFormatAttribute.Use%2A&gt;</ph> properties affect how messages are formatted.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.OperationFormatUse"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.OperationFormatUse.Literal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>