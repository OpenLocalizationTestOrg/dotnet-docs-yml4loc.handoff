<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">162ca24bb9e61fcc8e2cd4f53c0437d857b593a0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.MaskedTextBox.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">189240ea777fba2f0cef82099fba74c946057cb5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b9b52dd811fda7df86f6b9840b280c148662948</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Uses a mask to distinguish between proper and improper user input.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class is an enhanced <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control that supports a declarative syntax for accepting or rejecting user input.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property, you can specify the following input without writing any custom validation logic in your application:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Required input characters.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optional input characters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of input expected at a given position in the mask; for example, a digit, or an alphabetic or alphanumeric character.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mask literals, or characters that should appear directly in the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>; for example, the hyphens (-) in a phone number, or the currency symbol in a price.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special processing for input characters; for example, to convert alphabetic characters to uppercase.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control is displayed at run time, it represents the mask as a series of prompt characters and optional literal characters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each editable mask position, representing a required or optional input, is shown with a single prompt character.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the number sign (#) is often used as a placeholder for a numeric character input.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt;</ph> property to specify a custom prompt character.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A&gt;</ph> property determines if the user sees the prompt characters when the control loses input focus.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the user types input into the masked text box, valid input characters replace their respective prompt characters in a sequential fashion.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user types an invalid input character, no replacement occurs, but instead a beep is issued if the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, and the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide your own custom error logic by handing this event.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the current insertion point is at a literal character, the user has a number of options:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a character other than the prompt character is typed, the literal will automatically be skipped and the input character will be applied to the next editable position, represented by the next prompt character.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the prompt character is typed and the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;</ph> property is true, the input will overtype the prompt character and insertion point will be moved to the next position in the mask.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>As is always the case, the arrow keys can be used to navigate to a previous or subsequent position.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A&gt;</ph> property to verify whether or not the user has entered all of the required input.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property will always retrieve the user's input formatted according to the mask and the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control actually defers all mask processing to the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt;</ph> class specified by the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This standard provider supports all Unicode characters except for surrogates and vertically combined characters; however, the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph> property can be used to restrict input to the characters sets a-z, A-Z, and 0-9.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Masks do not necessarily guarantee that a user's input will represent a valid value for a given type; for example, -9 could be entered for an age in years.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can verify that a user's input represents a valid value by assigning an instance of that value's type to the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can detect whether the user removes focus from <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> when it contains an invalid value by monitoring for the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>If type validation succeeds, the object representing the value will be available through the <ph id="ph1">&lt;xref:System.Windows.Forms.TypeValidationEventArgs.ReturnValue%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.TypeValidationEventArgs&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, several common keyboard shortcuts do not work with <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, CTRL-R (right justify text), CTRL-L (left justify text), and CTRL-L (center text) have no effect.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compatibility with Visual Basic 6.0</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> was designed to retain most of the functionality of the Masked Edit control in <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> 6.0.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists common properties on the Masked Edit control and gives their equivalents on <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Masked Edit control (<ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> 6.0) property</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Equivalent MaskedTextBox (<ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>) property</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AllowPrompt`</ph> property</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`AutoTab`</ph> property</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ClipMode`</ph> property</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ClipText`</ph> property</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> (when <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.MaskFormat.ExcludePromptAndLiterals&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Format`</ph> property</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`FormattedText`</ph> property</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> (when <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Forms.MaskFormat.IncludePromptAndLiterals&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Mask`</ph> property</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`PromptChar`</ph> property</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`PromptInclude`</ph> property</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ValidationError`</ph> event</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration or undo functionality.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, while the members associated with these features have been retained for compatibility with the <ph id="ph1">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> base class, their implementations perform no actions.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> class using defaults.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph> property to a null mask, represented by the string "&lt;&gt;".</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null mask will accept any combination of characters as input.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> class using the specified custom mask language provider.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`maskedTextProvider`</ph> parameter defines the masking language used by <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is responsible for parsing the mask and determining whether user input conforms to the current mask position.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can derive a new class from <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt;</ph> to define your own custom masking language, and use the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29&gt;</ph> constructor to replace the standard <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to use the default masking language and supply your own input mask, you do not need to use this constructor.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can either use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29&gt;</ph> constructor, or use the default constructor then set the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A custom mask language provider, derived from the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maskedTextProvider&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> class using the specified input mask.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.String%29&gt;</ph> constructor uses the standard <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt;</ph> with the input <ph id="ph3">`mask`</ph> to parse user input into the <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign a new mask to the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property, it will override the value set by this constructor.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the input mask.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The initial value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.Mask"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mask&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets a value determining how TAB keys are handled for multiline configurations.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>This property is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A&gt;</ph> property is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this property is not supported.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.AcceptsTab"&gt;&lt;/xref&gt;</ph> property has changed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>This event is not raised by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AcceptsTabChanged&gt;</ph> event is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this event is not supported.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.PromptChar"&gt;&lt;/xref&gt;</ph> can be entered as valid data by the user.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the prompt character must be valid for the current location in the mask in order to be accepted.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt;</ph> is "*", and the current location in the mask demands the user enter a digit, entering an asterisk (<ph id="ph2">\*</ph>) will fail and cause the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event to occur.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;</ph> property takes precedence over <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can enter the prompt character into the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> control accepts characters outside of the ASCII character set.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph> restricts user input to the characters a-z and A-Z.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASCII control characters are not allowed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if only ASCII is accepted; <ph id="ph2">`false`</ph> if the <ph id="ph3">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> control can accept any arbitrary Unicode character.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the masked text box control raises the system beep for each user key stroke that it rejects.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event will still occur if the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> control should beep on invalid input; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the user can undo the previous operation.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This property is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.CanUndo%2A&gt;</ph> property is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> does not support undo functionality, this property always has a value of <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Clears information about the most recent operation from the undo buffer of the text box.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This method is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ClearUndo%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> does not support undo functionality.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Creates a handle for the control.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets the required creation parameters when the control handle is created.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.CreateParams"&gt;&lt;/xref&gt;</ph> representing the information needed when creating a control.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets or sets the culture information associated with the masked text box.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> representing the culture supported by the <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.Culture"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether literals and prompt characters are copied to the clipboard.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A&gt;</ph> property determines how text, selected within the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control, is interpreted when it is copied to the clipboard or retrieved through the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it determines whether literal characters, prompt characters, or both are included when selected text is accessed.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>When prompt characters are excluded, they are transformed into spaces in the copied string.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> property serves a similar purpose with respect to how the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property is interpreted.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskFormat"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskFormat.IncludeLiterals"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Property set with a <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskFormat"&gt;&lt;/xref&gt;</ph> value that is not valid.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> to use when performing type validation.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> determines which symbols are used for the currency, date, and other culture-specific mask placeholders when type validation occurs and the control has a non-null <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Retrieves the character that is closest to the specified location within the control.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The location from which to seek the nearest character.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The character at the specified location.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the character nearest to the specified location.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The location to search.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The zero-based character index at the specified location.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the first character of a given line.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>This method is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexFromLine%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this method is not supported.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>This method will always return 0.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Retrieves the index of the first character of the current line.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>This method is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.GetFirstCharIndexOfCurrentLine%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this method is not supported.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>This method will always return 0.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Retrieves the line number from the specified character position within the text of the control.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>This method is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.GetLineFromCharIndex%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this method is not supported.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>This parameter is not used.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>This method will always return 0.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Retrieves the location within the control at the specified character index.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The index of the character for which to retrieve the location.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The location of the specified character within the client rectangle of the control.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the prompt characters in the input mask are hidden when the masked text box loses focus.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox.PromptChar"&gt;&lt;/xref&gt;</ph> is hidden when <ph id="ph3">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> does not have focus; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets the text insertion mode of the masked text box control.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> property controls the character insertion behavior of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The state of this property is defined by the <ph id="ph1">&lt;xref:System.Windows.Forms.InsertKeyMode&gt;</ph> enumeration, which can be always on, always off or set to respect the setting of the user's keyboard.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property supersedes the insertion mode of the keyboard.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the keyboard is set to overwrite, but <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> is set to <ph id="ph2">`Insert`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will operate in insert mode.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> property will access the true insertion mode of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changing <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> changes the value of <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will raise the <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has no effect if no mask has been set.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.InsertKeyMode"&gt;&lt;/xref&gt;</ph> value that indicates the current insertion mode.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.InsertKeyMode.Default"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>An invalid <ph id="ph1">&lt;xref href="System.Windows.Forms.InsertKeyMode"&gt;&lt;/xref&gt;</ph> value was supplied when setting this property.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is an input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies whether new user input overwrites existing input.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> takes into account both the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> property and the state of the user's keyboard.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> is set to either <ph id="ph2">&lt;xref:System.Windows.Forms.InsertKeyMode.Insert&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.InsertKeyMode.Overwrite&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> will return <ph id="ph5">`false`</ph> or <ph id="ph6">`true`</ph>, respectively.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.InsertKeyMode.Default&gt;</ph>, it will return the state of the INSERT key.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> is <ph id="ph2">`false`</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will reject as invalid any character entry that would result in a violation anywhere in the mask.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>In explanation, if inserting a character would cause a character to be shifted over into a mask position where it would not be valid, the character insertion will be rejected.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> will overwrite existing characters as the user enters new ones; <ph id="ph3">`false`</ph> if <ph id="ph4">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> will shift existing characters forward.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Occurs after the insert mode has changed.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged&gt;</ph> event is raised after value of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> property is changed.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is required to properly bind data to a <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets or sets the lines of text in multiline configurations.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>This property is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Lines%2A&gt;</ph> property is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this property is not supported.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains a single line.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Gets or sets the input mask to use at run time.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> is the default property for the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> must be a string composed of one or more of the masking elements, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The masking language used by <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> is defined by its associated <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The standard provider specifies a masking language based upon the one used by the Masked Edit control in <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> 6.0, and should be very familiar to users migrating from that platform.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Masking element</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Digit, required.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element will accept any single digit between 0 and 9.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>9</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Digit or space, optional.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Digit or space, optional.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this position is blank in the mask, it will be rendered as a space in the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Plus (+) and minus (-) signs are allowed.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>L</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Letter, required.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Restricts input to the ASCII letters a-z and A-Z.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mask element is equivalent to [a-zA-Z] in regular expressions.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>?</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Letter, optional.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Restricts input to the ASCII letters a-z and A-Z.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mask element is equivalent to [a-zA-Z]?</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>in regular expressions.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Character, required.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph> property is set to true, this element behaves like the "L" element.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>C</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Character, optional.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any non-control character.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, this element behaves like the "?" element.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>A</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alphanumeric, required.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the only characters it will accept are the ASCII letters a-z and A-Z.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mask element behaves like the "a" element.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>a</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alphanumeric, optional.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the only characters it will accept are the ASCII letters a-z and A-Z.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mask element behaves like the "A" element.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Decimal placeholder.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual display character used will be the decimal symbol appropriate to the format provider, as determined by the control's <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>,</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thousands placeholder.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual display character used will be the thousands placeholder appropriate to the format provider, as determined by the control's <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>:</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Time separator.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual display character used will be the time symbol appropriate to the format provider, as determined by the control's <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Date separator.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual display character used will be the date symbol appropriate to the format provider, as determined by the control's <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Currency symbol.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual character displayed will be the currency symbol appropriate to the format provider, as determined by the control's <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shift down.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Converts all characters that follow to lowercase.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shift up.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Converts all characters that follow to uppercase.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>&amp;#124;</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disable a previous shift up or shift down.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Escape.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Escapes a mask character, turning it into a literal.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph>" is the escape sequence for a backslash.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other characters</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Literals.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>All non-mask elements will appear as themselves within <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Literals always occupy a static position in the mask at run time, and cannot be moved or deleted by the user.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change a mask when <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> already contains user input filtered by a previous mask, <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will attempt to migrate that input into the new mask definition.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it fails, it will clear the existing input.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assigning a zero-length string as the mask will preserve any existing data in the control.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>When used with a zero-length mask, <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> behaves like a single-line <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The decimal (.), thousandths (,), time (:), date (/), and currency ($) symbols default to displaying those symbols as defined by the application's culture.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can force them to display symbols for another culture by using the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Character insertion into the mask at run time is controlled by the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.InsertKeyMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can navigate through the mask by using the left and right arrow keys or the mouse cursor, and can skip optional positions in the mask by entering a space.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> supports all Unicode characters except for surrogates and vertically combined characters.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows example masks.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mask</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>Behavior</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>A date (day, numeric month, year) in international date format.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "/" character is a logical date separator, and will appear to the user as the date separator appropriate to the application's current culture.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>A date (day, month abbreviation, and year) in United States format in which the three-letter month abbreviation is displayed with an initial uppercase letter followed by two lowercase letters.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>United States phone number, area code optional.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>If users do not want to enter the optional characters, they can either enter spaces or place the mouse pointer directly at the position in the mask represented by the first 0.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>A currency value in the range of 0 to 999999.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The currency, thousandth, and decimal characters will be replaced at run time with their culture-specific equivalents.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the current mask.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The default value is the empty string which allows any input.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The string supplied to the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.Mask"&gt;&lt;/xref&gt;</ph> property is not a valid mask.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Invalid masks include masks containing non-printable characters.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Occurs after the input mask is changed.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskChanged&gt;</ph> event is raised after the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property is changed.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is also raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph> is indirectly altered by a member such as <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.MaskedTextBox.Culture%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether all required inputs have been entered into the input mask.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A&gt;</ph> checks only required input elements.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether all required and optional input elements have been filled in, use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A&gt;</ph> property instead.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all required input has been entered into the mask; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets a clone of the mask provider associated with this instance of the masked text box control.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph> property defines the mask-parsing engine and the masking language used by the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default provider is the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider?displayProperty=fullName&gt;</ph> class; however, a custom provider can be specified using the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.%23ctor%28System.ComponentModel.MaskedTextProvider%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph> cannot be set directly.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, setting some of the properties of <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>—such as <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox.AsciiOnly%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.MaskedTextBox.Culture%2A&gt;</ph>—may internally cause the creation of a new <ph id="ph6">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A masking language provider of type <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.MaskedTextProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether all required and optional inputs have been entered into the input mask.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A&gt;</ph> property within the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event handler to determine if the user's input was rejected because there are no remaining inputs in the mask.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether only required input elements have been entered, use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all required and optional inputs have been entered; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Occurs when the user's input or assigned character does not match the corresponding format element of the input mask.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> is the default event for the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event occurs when a character is rejected by the input mask.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input mask, represented by the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property, is interpreted by the masked text provider associated with the control through the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskedTextProvider%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> is raised in the following situations:</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>An input character does not match the corresponding format element.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user enters an alphabetic character when a digit is required.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is probably the most common reason why this event is raised.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user is trying to input extraneous characters beyond the end of the mask either because the mask has already been filled or the current caret position has been moved to the very end of the displayed input mask string.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>A paste operation either inserts a character that does not match its associated format element, or if the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, it shifts existing characters into new positions where they do not match their format elements.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cut operation shifts existing characters to the left, and one or more characters do not match their newly associated format elements.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>An assignment was made to the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property and the assigned string caused one or more mask violations.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a string was assigned to the control that causes <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> to occur, no part of the string will appear in <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default handling for <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> will play a beep sound if the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.BeepOnError%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is often handled to implement custom error handling, for example, to move to the next user input control if the mask is full, or to display a custom error dialog box or ToolTip if the input character is invalid.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of characters the user can type or paste into the text box control.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>This property is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskInputRejectedEventArgs.Position%2A&gt;</ph> property in the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskInputRejectedEventArgs&gt;</ph> class for information about how to determine the maximum length of a string in a <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>This property always returns 0.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether this is a multiline text box control.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>This property is not fully supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.AcceptsTab%2A&gt;</ph> property is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this property is not fully supported; it cannot be set and it always resolves to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>This property always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Typically occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.Multiline"&gt;&lt;/xref&gt;</ph> property has changed; however, this event is not raised by <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MultilineChanged&gt;</ph> event is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this event is not implemented in <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.BackColor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleCreated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.IsOverwriteModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnIsOverwriteModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyPress"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyPressEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyUp"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.MaskChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnMaskChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Typically raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.MultilineChanged"&gt;&lt;/xref&gt;</ph> event, but disabled for <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnMultilineChanged%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this method is overridden to perform no actions.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.TextAlignChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnTextAlignChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.TextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A&gt;</ph> method causes the input string to be validated against the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph> property, if a <ph id="ph3">&lt;xref:System.Type&gt;</ph> has been specified for this property.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will then also raise the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure consistency with text-based controls, validation will occur even if the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> is read-only (its <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ReadOnly%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.OnValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.CancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains event data.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>A critical exception occurred during the parsing of the input string.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Gets or sets the character to be displayed in substitute for user input.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>For sensitive user input, it is common practice to conceal the actual information entered by the user.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;</ph> property is set to a non-null character, <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will display this character for all input into the control.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`null`</ph> will disable this functionality.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to use the operating system supplied password character, which is defined in COMCTL32.dll, use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt;</ph> property instead.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt;</ph> properties are activated, the latter takes precedence.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a security consideration, the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control disables cut and copy operations on password-protected strings.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value used as the password character.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The character specified when setting this property is not a valid password character, as determined by the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)"&gt;&lt;/xref&gt;</ph> method of the <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The password character specified is the same as the current prompt character, <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.PromptChar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The two are required to be different.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>Processes a command key.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the shortcut key to process.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the command key was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>Overrides the base implementation of this method to handle input language changes.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> overrides its base control's implementation of <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A&gt;</ph> to properly handle character events when the user is entering characters using an Input Method Editor (IME), such as is used for entering Japanese, Chinese, and other complex non-Latin scripts.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ProcessKeyMessage%2A&gt;</ph> detects any WM_CHAR messages that occur after it receives a WM_IME_CHAR message and suppresses them in order to prevent these characters from showing up in the control.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you derive from this control and override this message, you should duplicate this behavior if you wish your new control to work with IMEs.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message was processed by the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Gets or sets the character used to represent the absence of user input in <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt;</ph> will be displayed in <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> for any mask position that the user has not yet filled in.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.HidePromptOnLeave%2A&gt;</ph> property to specify whether the prompt is displayed when <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> does not have focus.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The character used to prompt the user for input.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The default is an underscore (_).</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The character specified when setting this property is not a valid prompt character, as determined by the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)"&gt;&lt;/xref&gt;</ph> method of the <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The prompt character specified is the same as the current password character, <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.PasswordChar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The two are required to be different.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether text in the text box is read-only.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the text is read only; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the parsing of user input should stop after the first invalid character is reached.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sometimes the user will enter several characters into a <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> in a single input operation, typically by copying and pasting a string.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the entire string only contains valid characters, according to their paste position in the input mask, then the entire operation will succeed.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when a parsing error occurs, the behavior of <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> depends on the value of <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.RejectInputOnFirstFailure%2A&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`true`</ph>, then processing of the input string stops at the invalid character.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>All subsequent characters are ignored.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, then the invalid character is rejected, but parsing continues with the next character in the input string.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event is raised for every invalid character in the input string.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph> properties can also influence the interpretation of the user input.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.IsOverwriteMode%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, then any characters already in the input mask to the right of the insertion point will be displaced by the accepted number of characters.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>This shifting may cause additional parsing errors.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>A pasting operation can be mimicked programmatically by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if processing of the input string should be terminated at the first parsing error; otherwise, <ph id="ph2">`false`</ph> if processing should ignore all errors.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines how an input character that matches the prompt character should be handled.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> can treat two categories of characters—spaces and prompt characters—specially.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, each input character will be tested against the mask and either accepted or rejected.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assuming that the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A&gt;</ph> property is set to non-<ph id="ph2">`null`</ph>, then setting the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;</ph> property to <ph id="ph4">`true`</ph> will result in special processing for the prompt character.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user enters the prompt character into the mask, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;</ph> takes precedence over the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.AllowPromptAsInput%2A&gt;</ph> property, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>ResetOnPrompt value</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>AllowPromptAsInput value</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resulting behavior</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character can be entered and it causes the current mask position to be reset.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character can be entered and it causes the current mask position to be reset.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character is processed as a standard input character.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character is not valid and raises a <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <ph id="ph2">`false`</ph> to indicate that the prompt character is to be processed as a normal input character.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines how a space input character should be handled.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> can treat two categories of characters—spaces and prompt characters—specially.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, each input character will be tested against the mask and either accepted or rejected.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A&gt;</ph> property to <ph id="ph2">`true`</ph> will result in the current mask character position to be cleared and the current position to be advanced to the next editable character.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The type of character input will determine whether the masking engine moves forward to the next character in the mask, or stays at the current position and waits for a matching character.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the input character is a space, and does not match the current non-editable character in the mask, the masking engine will skip ahead to the next character in the mask.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the input character is not a space, and does not match the current non-editable character in the mask, the masking engine will remain at the current mask position, and attempt to match the next input character against it.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the space input character causes the current editable position in the mask to be reset; otherwise, <ph id="ph2">`false`</ph> to indicate that it is to be processed as a normal input character.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Scrolls the contents of the control to the current caret position.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>This method is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ScrollToCaret%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control does not support multiline configuration, this method is overridden to perform no actions.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Gets or sets the current selection in the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Selections retrieved using this property are formatted according to the control's formatting properties, such as <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.FormatProvider%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Selections set using this property behave like a Paste operation: each character is matched against the mask, and the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event is raised for invalid characters.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A&gt;</ph> is <ph id="ph2">`true`</ph>, literals and prompt characters are allowed when setting <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.SelectedText%2A&gt;</ph>, and will be removed silently unless they violate the mask.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The currently selected text as a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>If no text is currently selected, this property resolves to an empty string.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user is allowed to reenter literal values.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>Input masks commonly contain literals.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user enters characters into the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> at runtime, the current character position will sometimes fall on a literal.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph> property describes how user input for the next character is to be handled, as follows:</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`true`</ph>, the user can either redundantly enter the same character as the literal at the current position, or can enter the next editable character, thereby jumping the current position to that position.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, the user can only enter the next editable character.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the next position in the mask will not accept the literal character (for example, the user types "/" and the next position only accepts digits), the control will raise the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskInputRejected&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example, in the "90/90/0000" date entry mask, the forward slash characters are literals.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assume that the user has entered two initial digits, "11", so the current position in the mask is at the first forward slash (/) literal.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph> is <ph id="ph2">`true`</ph>, then the user has the following valid choices:</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can enter a "/" character.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This results in the position being moved to the next character, which in this example is the fourth position, a 9 masking element.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can enter the next editable character, which in this example is a digit.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>The digit would be validated and the current position would automatically be moved to the fifth position, which is a 0 masking element.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph> is <ph id="ph2">`false`</ph>, then only a valid data input is allowed, which in this example would be a digit.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow literals to be reentered; otherwise, <ph id="ph2">`false`</ph> to prevent the user from overwriting literal characters.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Gets or sets the text as it is currently displayed to the user.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> is the default binding property for the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>Strings retrieved using this property are formatted according to the control's formatting properties, such as <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign a string with or without literal characters to <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> depending on the values of <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnPrompt%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.ResetOnSpace%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> is the default binding property for <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event whenever the formatted text value changes.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>Different properties may or may not cause this value to change.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, changing the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;</ph> property will not raise the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.TextChanged&gt;</ph> event, but changing the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property will.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the text currently displayed by the control.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Gets or sets how text is aligned in a masked text box control.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A&gt;</ph> property to align the displayed text within a <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> to match the layout of visual elements on your form.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if your controls are all located on the right side of the form, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.HorizontalAlignment.Right&gt;</ph>, and the text will be aligned with the right side of the control instead of the default left alignment.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.HorizontalAlignment"&gt;&lt;/xref&gt;</ph> enumeration values that specifies how text is aligned relative to the control.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.HorizontalAlignment.Left"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The value assigned to this property is not of type <ph id="ph1">&lt;xref href="System.Windows.Forms.HorizontalAlignment"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Occurs when the text alignment is changed.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextAlignChanged&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TextAlign%2A&gt;</ph> property is changed.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Gets the length of the displayed text.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>An Int32 representing the number of characters in the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.Text"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.TextLength"&gt;&lt;/xref&gt;</ph> respects properties such as <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox.HidePromptOnLeave"&gt;&lt;/xref&gt;</ph>, which means that the return results may be different depending on whether the control has focus.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether literals and prompt characters are included in the formatted string.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> property determines how the literal and prompt characters in the mask are processed when the generating the formatted string.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>More specifically, it determines whether literal characters, prompt characters, or both are included in the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>When prompt characters are excluded, they are transformed into spaces in the formatted string.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.CutCopyMaskFormat%2A&gt;</ph> property serves a similar purpose with respect to how the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property is interpreted.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskFormat"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskFormat.IncludeLiterals"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Property set with a <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskFormat"&gt;&lt;/xref&gt;</ph> value that is not valid.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current masked text box.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>This method overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.TextBoxBase.ToString"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ToString%2A&gt;</ph> method calls the base class implementation of this method, <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.ToString%2A?displayProperty=fullName&gt;</ph>, then appends the input string after processing by the mask.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method honors properties that alter the appearance of the formatted string, with the following exceptions:</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned string always includes prompt and literal characters, regardless of the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>Password characters are ignored, so that the actual user-typed characters are returned.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, the values of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt;</ph> properties are ignored.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that contains information about the current <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The string includes the type, a simplified view of the input string, and the formatted input string.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Occurs when <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> has finished parsing the current value using the <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox.ValidatingType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control will optionally validate user input against the type defined by its <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is not <ph id="ph1">`null`</ph>, the following series of events occurs:</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>The validation sequence begins when one of the following occurs:</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control looses focus.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property is retrieved.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any of these events result in a call to the <ph id="ph1">`Parse`</ph> method of the type specified with the <ph id="ph2">&lt;xref:System.Windows.Forms.TypeValidationEventArgs.ValidatingType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Parse`</ph> is responsible for the conversion of the formatted input string to the target type.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>A successful conversion equates to a successful validation.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>After <ph id="ph1">`Parse`</ph> returns, the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler for this event is most commonly implemented to perform type or mask validation processing.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>It receives a <ph id="ph1">&lt;xref:System.Windows.Forms.TypeValidationEventArgs&gt;</ph> parameter containing information about the conversion; for example, the <ph id="ph2">&lt;xref:System.Windows.Forms.TypeValidationEventArgs.IsValidInput%2A&gt;</ph> member indicates whether the conversion was successful.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event returns, the standard validation event, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph>, is raised.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>A handler can be implemented to perform standard validation, perhaps including canceling the event.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event is not canceled in step 3, the standard control validation event <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> is raised.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.TypeValidationEventArgs.Cancel%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> in the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event handler, the event will be canceled and the <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control retains focus, unless the subsequent <ph id="ph5">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event sets its version of the <ph id="ph6">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName&gt;</ph> property back to <ph id="ph7">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>Undoes the last edit operation in the text box.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>This method is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.Undo%2A&gt;</ph> method is inherited from the base <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> does not support undo functionality.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the operating system-supplied password character should be used.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt;</ph> property determines whether user-supplied input should be displayed in the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> as multiple occurrences of a password character defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt;</ph> functions similarly to the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;</ph> property, but instead of using a programmer-supplied character for the prompt, <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.UseSystemPasswordChar%2A&gt;</ph> uses a prompt defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has precedence over <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PasswordChar%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a security consideration, the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control disables cut and copy operations on password-protected strings.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the system password should be used as the prompt character; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>The password character specified is the same as the current prompt character, <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.PromptChar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The two are required to be different.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Converts the user input string to an instance of the validating type.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A&gt;</ph> method attempts to convert the formatted string contained in the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.Text%2A&gt;</ph> property to an instance of the type that is specified by the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prompt characters are ignored in the formatted string, but literals are handled in accordance with the current value of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TextMaskFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidateText%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event after the conversion is attempted, regardless of its success.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> of the type specified by the <ph id="ph2">&lt;xref href="System.Windows.Forms.MaskedTextBox.ValidatingType"&gt;&lt;/xref&gt;</ph> property; otherwise, <ph id="ph3">`null`</ph> to indicate conversion failure.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>A critical exception occurred during the parsing of the input string.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Gets or sets the data type used to verify the data input by the user.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Masks do not in themselves guarantee that a user's input will represent a valid value for a given type.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code shows a mask:</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following <ph id="ph1">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph> code shows a mask:</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mask can demand that the user enter eight digits, but cannot verify that the user enters month, date, and year values in the correct range; "12/20/2003" and "70/90/0000" are equally valid as far as the mask is concerned.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph> to verify whether the data entered by the user falls within the correct range—in the previously mentioned case, by assigning it an instance of the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current text in the control will be validated either when the user leaves the control.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can determine whether or not the data fails validation by monitoring for the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.TypeValidationCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> will only perform the check against <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph> if <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskCompleted%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to use your own custom data types with <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.ValidatingType%2A&gt;</ph>, you must implement a static <ph id="ph2">`Parse`</ph> method that takes a string as a parameter.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method must be implemented with one or both of the following signatures:</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the data type used in validation.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>Processes Windows messages.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The Windows <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph> to process.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether a multiline text box control automatically wraps words to the beginning of the next line when necessary.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>This property is not supported by <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> does not support multiple lines of input, the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox.WordWrap%2A&gt;</ph> property is ignored.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.WordWrap"&gt;&lt;/xref&gt;</ph> property always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>