<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">30a7637bde8bd4eb436b4005befcfc09e2cf22e8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Drawing.IDeviceContext.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">74ae0185eb4146d41dd0f9de8178245b6577cd16</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">420744ee7ab11e397303744f744ba36d81da3f79</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines methods for obtaining and releasing an existing handle to a Windows device context.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A device context defines the graphics object for drawing on a Windows-based device.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a class that implements the <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext&gt;</ph> interface is the <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Returns the handle to a Windows device context.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows-based device.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always follow a call to <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> is not designed to obtain handles created using Windows GDI methods such as <ph id="ph2">`CreateDC`</ph> or <ph id="ph3">`CreateCompatibleDC`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph> representing the handle of a device context.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Releases the handle of a Windows device context.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> are two methods that allow you to get and release the handle for a Windows-based device.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always follow a call to <ph id="ph1">&lt;xref:System.Drawing.IDeviceContext.GetHdc%2A&gt;</ph> with a call to <ph id="ph2">&lt;xref:System.Drawing.IDeviceContext.ReleaseHdc%2A&gt;</ph> when you are finished with the Windows handle.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>