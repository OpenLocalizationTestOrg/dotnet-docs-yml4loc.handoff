<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6515ffec6b612d06bb22d8e2b13e1b5ee841544</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.AccessControl.EventWaitHandleAccessRule.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf9b38c79723ad6ad79d079e6c22a45b8a39dae3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">deb7c6fd70c5e92465a50c079f6138d2ea996d8a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on named system events.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows access control security is meaningful only for named system events.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle&gt;</ph> object represents a local event, access control is irrelevant.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a list of the rules currently applied to a named event, use the <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;</ph> method to get an <ph id="ph2">&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</ph> object, and then use its <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> method to obtain a collection of <ph id="ph4">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary access control list (DACL).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you get the set of all access rules for an event, the set contains the minimum number of rules currently required to express all the access control entries.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying access control entries change as you apply and remove rules.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, when you get the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> objects to specify the access rights to allow or deny to a user or group.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> object always represents either allowed access or denied access, never both.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To apply a rule to a named system event, use the <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle.GetAccessControl%2A?displayProperty=fullName&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id="ph2">&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to reattach the security object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes you make to an <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</ph> object do not affect the access levels of the named event until you call the <ph id="ph2">&lt;xref:System.Threading.EventWaitHandle.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to assign the altered security object to the named event.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> objects are immutable.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security for an event is modified using the methods of the <ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleSecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security on synchronization objects is not supported for Windows 98 or Windows Millennium Edition.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;&lt;/xref&gt;</ph> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To wait on an <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle&gt;</ph> (by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method), a user must have <ph id="ph5">&lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an event by calling the <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;</ph> method, or to reset it to the unsignaled state by calling the <ph id="ph2">&lt;xref:System.Threading.EventWaitHandle.Reset%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle&gt;</ph> object and then wait on it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.SignalAndWait%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize&gt;</ph> and <ph id="ph4">&lt;xref:System.Security.AccessControl.EventWaitHandleRights.Modify&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The user or group the rule applies to.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Must be of type <ph id="ph1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> or a type such as <ph id="ph2">&lt;xref href="System.Security.Principal.NTAccount"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id="ph3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;&lt;/xref&gt;</ph> values specifying the rights allowed or denied.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;&lt;/xref&gt;</ph> values specifying whether the rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is neither of type <ph id="ph2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> nor of a type such as <ph id="ph3">&lt;xref href="System.Security.Principal.NTAccount"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id="ph4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.EventWaitHandleAccessRule"&gt;&lt;/xref&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>To wait on an <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle&gt;</ph> (by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.WaitOne%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.WaitHandle.WaitAny%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Threading.WaitHandle.WaitAll%2A&gt;</ph> method), a user must have <ph id="ph5">&lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an event by calling the <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle.Set%2A&gt;</ph> method, or to reset it to the unsignaled state by calling the <ph id="ph2">&lt;xref:System.Threading.EventWaitHandle.Reset%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.EventWaitHandleRights?displayProperty=fullName&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>To signal an <ph id="ph1">&lt;xref:System.Threading.EventWaitHandle&gt;</ph> object and then wait on it by calling the <ph id="ph2">&lt;xref:System.Threading.WaitHandle.SignalAndWait%2A&gt;</ph> method, a user must have <ph id="ph3">&lt;xref:System.Security.AccessControl.EventWaitHandleRights.Synchronize&gt;</ph> and <ph id="ph4">&lt;xref:System.Security.AccessControl.EventWaitHandleRights.Modify&gt;</ph> access.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.EventWaitHandleRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The name of the user or group the rule applies to.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;&lt;/xref&gt;</ph> values specifying the rights allowed or denied.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;&lt;/xref&gt;</ph> values specifying whether the rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is a zero-length string.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is longer than 512 characters.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets the rights allowed or denied by the access rule.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.EventWaitHandleAccessRule&gt;</ph> objects are immutable.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a new access rule representing a different user, different rights, or a different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, but you cannot modify an existing access rule.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.EventWaitHandleRights"&gt;&lt;/xref&gt;</ph> values indicating the rights allowed or denied by the access rule.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>