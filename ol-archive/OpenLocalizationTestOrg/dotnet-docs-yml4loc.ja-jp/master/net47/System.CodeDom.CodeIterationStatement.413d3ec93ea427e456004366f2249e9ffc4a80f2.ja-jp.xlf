<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">215423504e53ca3fc4d2c1f500f3101cd29f4a0c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.CodeDom.CodeIterationStatement.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cb03ef0759d8430422d57952d019f512b33ea546</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5512b80a83264d6cbb6a8afd127c25252c6823f0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a <ph id="ph1">`for`</ph> statement, or a loop through a block of statements, using a test expression as a condition for continuing to loop.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement&gt;</ph> can represent a <ph id="ph2">`for`</ph> loop or <ph id="ph3">`while`</ph> loop.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.InitStatement%2A&gt;</ph> property specifies the statement to execute before the first loop iteration.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.TestExpression%2A&gt;</ph> property specifies the loop continuation expression, which must evaluate to <ph id="ph2">`true`</ph> at the end of each loop iteration for another iteration to begin.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.IncrementStatement%2A&gt;</ph> property specifies the statement to execute at the end of each loop iteration.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeIterationStatement.Statements%2A&gt;</ph> property specifies the collection of statements to execute within the loop.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.CodeIterationStatement"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.CodeIterationStatement"&gt;&lt;/xref&gt;</ph> class using the specified parameters.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> containing the loop initialization statement.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeExpression"&gt;&lt;/xref&gt;</ph> containing the expression to test for exit condition.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> containing the per-cycle increment statement.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> containing the statements within the loop.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the statement that is called after each loop cycle.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This statement is called after each iteration.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> that indicates the per cycle increment statement.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the loop initialization statement.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify an empty initialization statement by setting this property to a <ph id="ph1">&lt;xref:System.CodeDom.CodeExpressionStatement&gt;</ph> that contains a <ph id="ph2">&lt;xref:System.CodeDom.CodeSnippetExpression&gt;</ph> that contains an empty string.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> that indicates the loop initialization statement.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the collection of statements to be executed within the loop.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.CodeDom.CodeStatement"&gt;&lt;/xref&gt;</ph> that indicates the statements within the loop.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets or sets the expression to test as the condition that continues the loop.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this expression resolves to <ph id="ph1">`true`</ph>, the loop will continue.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.CodeExpression"&gt;&lt;/xref&gt;</ph> that indicates the expression to test.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>