<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3186b4318c2658314a16fa605aa6f9a11a8e6cea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.PeerResolver.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ddce4b1eade9c00eab1539a6e9d0be89548f8b5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1de241e97c70e33dabc1a29d5d8e6eef5de3611a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies a base type used to define the contract for the registration and resolution of a peer mesh ID to the endpoint addresses of nodes participating in the mesh.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is the base class for the implementation of custom peer name resolvers.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A peer name resolver is a discovery service used by peer channels to find peer nodes participating in a peer mesh.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is also used to "register" a node with a peer mesh, the mechanism by which the peer node becomes known and available from the peer mesh.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.PeerResolver"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets whether the peer name resolver can share referrals.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If true, the peer name resolver can share referrals; if false, it cannot.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes the current peer resolver instance with the new supplied endpoint address and settings.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method simply initializes the existing peer resolver instance; it does not create a new one.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a new peer resolver, call the CreatePeerResolver method on the corresponding binding element (for example, <ph id="ph1">&lt;xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that contains the new endpoint address of this peer resolver instance.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> that specifies the new network binding for this peer resolver.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> that specifies the new client credentials for this peer resolver.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.ServiceModel.PeerResolvers.PeerReferralPolicy"&gt;&lt;/xref&gt;</ph> that specifies the new referral policy for this peer resolver.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Registers a <ph id="ph1">&lt;xref href="System.ServiceModel.PeerNodeAddress"&gt;&lt;/xref&gt;</ph> for a specific peer mesh.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The ID of the peer mesh in which the peer node is to be registered.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.PeerNodeAddress"&gt;&lt;/xref&gt;</ph> to be registered with the peer mesh.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The length of time to wait for success before aborting the attempt to register with the peer mesh.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>If the attempt fails, <ph id="ph1">&lt;xref href="System.TimeoutException"&gt;&lt;/xref&gt;</ph> is raised on the peer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the registration ID.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>This registration ID object is passed to the <ph id="ph1">&lt;xref href="System.ServiceModel.PeerResolver.Update(System.Object,System.ServiceModel.PeerNodeAddress,System.TimeSpan)"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.ServiceModel.PeerResolver.Unregister(System.Object,System.TimeSpan)"&gt;&lt;/xref&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Resolves the supplied mesh ID to zero or more endpoint addresses of nodes participating in the peer mesh.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The mesh ID of the peer mesh within which the <ph id="ph1">&lt;xref href="System.ServiceModel.PeerNodeAddress"&gt;&lt;/xref&gt;</ph> objects representing participating nodes are to be obtained.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The number of endpoint addresses to return.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The length of time to wait for success before aborting the attempt to resolve endpoint addresses within the peer mesh.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the attempt fails, <ph id="ph1">&lt;xref href="System.TimeoutException"&gt;&lt;/xref&gt;</ph> is raised on the peer.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> that contains <ph id="ph2">&lt;xref href="System.ServiceModel.PeerNodeAddress"&gt;&lt;/xref&gt;</ph> objects representing nodes participating in the peer mesh.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Removes the registration entry for a node from a peer mesh.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A registration ID is a peer resolver token, that, at the very minimum, represents the tuple of a peer node ID and the mesh ID.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ID value must have been obtained in a previous call to <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> is called in two specific cases:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> is leaving the peer mesh (usually as the result of closing the last peer channel or service host that is associated with it).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> can find no available endpoint addresses of other nodes participating in the peer mesh.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the <ph id="ph1">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> is no longer reachable, and it will attempt to call <ph id="ph2">&lt;xref:System.ServiceModel.PeerResolver.Unregister%2A&gt;</ph> to unregister itself from the <ph id="ph3">&lt;xref:System.ServiceModel.PeerResolver&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other peer nodes within the mesh become available subsequent to unregistration, the node can re-register itself by calling <ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Register%2A&gt;</ph> and obtaining a new registration ID.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A registration ID for the node obtained by a previous call to <ph id="ph1">&lt;xref href="System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The length of time to wait for a successful removal of the registration from the peer mesh.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If the attempt fails, <ph id="ph1">&lt;xref href="System.TimeoutException"&gt;&lt;/xref&gt;</ph> is raised on the peer.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Updates the <ph id="ph1">&lt;xref href="System.ServiceModel.PeerNodeAddress"&gt;&lt;/xref&gt;</ph> for a node registered with a specific peer mesh.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.PeerResolver.Update%2A&gt;</ph> is called when the address of the <ph id="ph2">&lt;xref:System.ServiceModel.PeerNode&gt;</ph> changes on the local machine.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A registration ID token for the node, obtained by a previous call to <ph id="ph1">&lt;xref href="System.ServiceModel.PeerResolver.Register(System.String,System.ServiceModel.PeerNodeAddress,System.TimeSpan)"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The updated endpoint address (and other multihoming IP addresses).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The length of time to wait for success before aborting the attempt to update the node's registration within the peer mesh.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>If the attempt fails, <ph id="ph1">&lt;xref href="System.TimeoutException"&gt;&lt;/xref&gt;</ph> is raised on the peer.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>