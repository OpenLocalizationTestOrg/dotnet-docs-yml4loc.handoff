<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3a4f5a2224e8d6a18ba747cfd48c0fec2e386103</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Dispatcher.ChannelDispatcher.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1a30dda3045121ec0c2f40746c1fadfa0e538e94</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5460b17761589587bd3fcac41f09c4a9e40bc75</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>A component that accepts channels and associates them with a service.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> object associates an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> at a particular URI (called a listen URI) with an instance of a service.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different listener and listen URI for that service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message arrives, the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> queries each of the associated <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> objects whether the endpoint can accept the message, and passes the message to the one that can.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> object is responsible for processing messages from a <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> when the destination address of a message matches the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A&gt;</ph> property and the message action matches the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph>, these include custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ph> objects, the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, the <ph id="ph4">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, the associated and <ph id="ph5">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> class from the provided listener, with system-provided default timeouts.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.IChannelListener"&gt;&lt;/xref&gt;</ph> for the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> class from the provided listener and binding, with system-provided default timeouts.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.IChannelListener"&gt;&lt;/xref&gt;</ph> for the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The name of the binding used to configure the service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> class from the provided listener and binding, with the specified default timeouts.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.IChannelListener"&gt;&lt;/xref&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the binding used to configure the service.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.IDefaultCommunicationTimeouts"&gt;&lt;/xref&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the transacted accept method calls on listener are asynchronous; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Attaches the channel dispatcher to the host.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the name of the binding used to configure the service.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Used to obtain the binding name for the binding with which this channel dispatcher is associated.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The binding name of the service.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets a set of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IChannelInitializer"&gt;&lt;/xref&gt;</ph> objects that you can use to inspect and add state to channels when they are first created.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedCollection`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.IChannelInitializer"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Stops the listener from accepting new channels.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method stops the listener listening.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the default interval of time allowed for the channel dispatcher to close.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This default close timeout can be set using <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, a service model default value of 1 minute is used.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the default interval of time allowed for the channel dispatcher to close.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the default interval of time allowed for the channel dispatcher to open.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This default open timeout can be set using <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, a service model default value of 1 minute is used.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the default interval of time allowed for the channel dispatcher to close.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Detaches the service host from the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> can only be detached when the instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sets the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> associated with the channel dispatcher to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;host&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets the endpoint dispatchers which forward messages to the channel endpoints.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> has a distinct <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> for each endpoint that the channel can support.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ph> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedCollection`1"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.EndpointDispatcher"&gt;&lt;/xref&gt;</ph> which forward messages to the channel endpoints.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets a set of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IErrorHandler"&gt;&lt;/xref&gt;</ph> objects that can be used to insert custom error handling functionality for an endpoint.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedCollection`1"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.IErrorHandler"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the host for the service associated with the dispatcher.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> for that service.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph> for the service associated with the dispatcher.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to include the details about an exception in a fault.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the details about an exception are included in the faults; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the accept method calls on the listener are done under a transaction; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A&gt;</ph> property can only be set when the instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the receive method calls on the listener are done under a transaction; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets the listener associated with the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> associates an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> at a particular URI with an instance of a service.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.IChannelListener"&gt;&lt;/xref&gt;</ph> associated with the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the proxy does not add any addressing headers; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum pending messages per channel.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An integer representing a maximum number of messages.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum size for a transacted batch.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A&gt;</ph> property can only be set when the instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The maximum size for a transacted batch.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The value set is less than zero.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> that is used or expected.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Aborts the listener associated with the dispatcher.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the close operation.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous operation to close a channel listener for the dispatcher.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The channel dispatcher must be associated with a non-<ph id="ph1">`null`</ph> service host when this method is called.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the open operation.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous operation to open a channel listener for the dispatcher.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The host or the message version is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Closes the channel listener associated with the dispatcher within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time allowed for the listener to close.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to close a channel listener for the dispatcher.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to open a channel listener for the dispatcher.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Opens the listener associated with the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>The channel dispatcher must be associated with a non-<ph id="ph1">`null`</ph> service host when this method is called and message version must be set to a non-<ph id="ph2">`null`</ph> value.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies the interval of time allowed for the listener to open.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The host or the message version is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Populates and validates filter table used to dispatch to the endpoints.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The channel dispatcher must be associated with a non-<ph id="ph1">`null`</ph> service host when this method is called.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The host is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Checks whether the channel dispatcher is attached to a host.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The channel dispatcher must be associated with a non-<ph id="ph1">`null`</ph> service host on opening.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The host is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets or sets whether ReceiveContext is enabled.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ReceiveContext is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a binding implements <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IBindingRuntimePreferences&gt;</ph>, <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> assigns the value of the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A&gt;</ph> property to this property.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>So if this value is <ph id="ph1">`true`</ph>, the <ph id="ph2">`false`</ph> default value of <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A&gt;</ph> is overridden.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets whether messages are sent asynchronously.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages are sent asynchronously; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets or sets the service throttle for the service associated with the channel dispatcher.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides access to the controls used to optimize the availability and performance of a service.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ServiceThrottle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets or sets the default isolation level for transactions.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A&gt;</ph> property to get or set the default isolation level for new transactions created by the dispatcher for the service.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Transactions.IsolationLevel"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Transactions.IsolationLevel.Unspecified"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The isolation level set is not defined.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> value that represents the default timeout period for transactions.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.TimeSpan.Zero"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The value set is less than zero or is too large.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The communication object is in an <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opening"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>