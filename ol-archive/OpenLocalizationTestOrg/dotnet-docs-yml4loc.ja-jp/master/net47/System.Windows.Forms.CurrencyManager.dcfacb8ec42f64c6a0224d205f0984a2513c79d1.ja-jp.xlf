<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2711d162accfc8a0db9a765f5df6913e0e7630e9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.CurrencyManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47efeb8f217ab4551f25f12ad043d52a4c6ca775</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">26c16f680befdc62853fa6a84dfb64f4620905e4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages a list of <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> derives from the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> to return either a <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> or a <ph id="ph3">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual object returned depends on the data source and data member passed to the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is an object that can return only a single property (instead of a list of objects), the type will be a <ph id="ph1">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you specify a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> as the data source, a <ph id="ph2">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph> will be returned.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If, on the other hand, the data source is an object that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph>, or <ph id="ph3">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, a <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> will be returned.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</ph> property returns the current item in the underlying list.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the current item, set the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property to a new value.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value must be greater than 0 and must be less than the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Count%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, and the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, you can use the <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.AddNew%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds a new item to the underlying list.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface and the data source allows adding rows (<ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property was designed to allow complex-bound controls, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, to add new items to list.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use this property only if you are creating your own control that incorporates the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, to add items if the data source is a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Data.DataView.AddNew%2A?displayProperty=fullName&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Data.DataView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Data.DataTable.NewRow%2A&gt;</ph> method and add the row to the <ph id="ph3">&lt;xref:System.Data.DataRowCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The underlying data source does not implement <ph id="ph1">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph>, or the data source has thrown an exception because the user has attempted to add a row to a read-only or fixed-size <ph id="ph2">&lt;xref href="System.Data.DataView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Cancels the current edit operation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the objects contained by the data source implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the objects contained within the data source do not implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> interface, changes made to the data will not be discarded.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property was designed to be used by complex data-bound controls, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, to cancel edits.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the user presses the ESC key, the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> method is called on the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are creating a control that requires this same functionality, you should not use this method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.Data.DataRowView.CancelEdit%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataRowView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Throws an exception if there is no list, or the list is empty.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>There is no list, or the list is empty.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the number of items in the list.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the count property to determine when the end of a list has been reached.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> maintains a 0-based array of items, the end of the list is always <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> minus one.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The number of items in the list.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the current item in the list.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to get the current item, you must know its data type in order to cast it correctly.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the data source is a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, you must cast the current item as a <ph id="ph3">&lt;xref:System.Data.DataRowView&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A list item of type <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Ends the current edit operation.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is supported only if the objects contained by the data source implement the <ph id="ph1">&lt;xref:System.ComponentModel.IEditableObject&gt;</ph> or <ph id="ph2">&lt;xref:System.ComponentModel.ICancelAddNew&gt;</ph> interfaces.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property was designed to be used by complex data-bound controls, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you are creating a control that requires this same functionality, you should not use this method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, if the data source is either a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph>, use the <ph id="ph3">&lt;xref:System.Data.DataRowView.EndEdit%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Data.DataRowView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Specifies the data type of the list.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets the property descriptor collection for the underlying list.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptorCollection&gt;</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is used to specify a column in the list.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> for the list.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets the name of the list supplying the data for the binding using the specified set of bound properties.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.GetListName%2A&gt;</ph> method to be successful, the underlying list must be of type <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ArrayList"&gt;&lt;/xref&gt;</ph> of properties to be found in the data source.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If successful, a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing name of the list supplying the data for the binding; otherwise, an <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> string.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Occurs when the current item has been altered.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> event will occur when the user calls the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> event occurs only when the item itself has been changed in some manner.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the value of an item is changed from 10 to 42, the event will occur.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This should not be confused with the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.PositionChanged&gt;</ph> event where the item has been changed to a new item.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event will also occur if the underlying data changes.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you change the value of a <ph id="ph1">&lt;xref:System.Data.DataRowView&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged&gt;</ph> event will occur.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are creating your own control that uses the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>, you should use the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.ListChanged?displayProperty=fullName&gt;</ph> instead of the <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.ItemChanged?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.ListChangedEventArgs.ListChangedType%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.ListChangedEventArgs&gt;</ph> enables you to determine the type of action that has occurred.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the list for this <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property can be cast to any type that implements the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will be commonly used when you know the type of the underlying list.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you are data-bound to a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, the underlying list is a <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> (which implements <ph id="ph3">&lt;xref:System.Collections.IList&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other classes that implement the interface (this is not a complete list) include <ph id="ph1">&lt;xref:System.Array&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.ArrayList&gt;</ph>, and <ph id="ph3">&lt;xref:System.Collections.CollectionBase&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>How you use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property depends on the class that implements the <ph id="ph2">&lt;xref:System.Collections.IList&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> property to determine the name of the list.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source implements the <ph id="ph1">&lt;xref:System.ComponentModel.ITypedList&gt;</ph> interface, you can use the <ph id="ph2">&lt;xref:System.ComponentModel.ITypedList.GetListName%2A&gt;</ph> method to return the name of the current table.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is shown in the C# code below:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> that contains the list.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Occurs when the list changes or an item in the list changes.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event is thrown by the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> class when changes to an item are made using methods such as <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.EndCurrentEdit%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can also occur when the data source is edited directly if it implements the <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The associated <ph id="ph1">`OnListChanged`</ph> method is a private method in this class.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Specifies the current position of the <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager"&gt;&lt;/xref&gt;</ph> in the list.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> property is greater than 0, the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.listposition&gt;</ph> field is a number between 0 and <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> minus 1.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> is 0, <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.listposition&gt;</ph> is -1.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Occurs when the metadata of the <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager.List"&gt;&lt;/xref&gt;</ph> has changed.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The metadata of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.List%2A&gt;</ph> consists of the schema of the underlying <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.DataSource%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> event is raised when that schema has changed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.MetaDataChanged&gt;</ph> event is raised when a <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> is programmatically added to a <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingManagerBase.CurrentItemChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager.ItemChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnItemChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ItemChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager.MetaDataChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnMetaDataChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingManagerBase.PositionChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.OnPositionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets or sets the position you are at within the list.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>An important property of the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> class is the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a list of items, you can view only one item out of the entire list.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which item is viewed, set the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> to a number between 0 (the beginning of the list) and <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.Count%2A&gt;</ph> minus 1 (the end of the list).</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> determines the currency, or place in the list, of all controls bound to the same <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, imagine a list consisting of two columns called "FirstName" and "LastName".</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> controls are bound to the same list; the first control is bound to the first column, and the second control is bound to the second column.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Position%2A&gt;</ph> of the common <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is set to the third position, both controls display the appropriate values for that position in the list.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if the item at position three consists of the first name "John" and the last name "Smith", the bound controls will display "John" and "Smith".</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A number between 0 and <ph id="ph1">&lt;xref href="System.Windows.Forms.CurrencyManager.Count"&gt;&lt;/xref&gt;</ph> minus 1.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Forces a repopulation of the data-bound list.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.Refresh%2A&gt;</ph> method when the data source does not support notification when it is changed (for example, if it is an <ph id="ph2">&lt;xref:System.Array&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Removes the item at the specified index.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.RemoveAt%2A&gt;</ph> method was designed to allow complex controls, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control, to remove items from the list.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not use this method to actually remove items.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, use the <ph id="ph1">&lt;xref:System.Data.DataView.Delete%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Data.DataView&gt;</ph> class to delete items.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The index of the item to remove from the list.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>There is no row at the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Resumes data binding.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> are two methods that allow the temporary suspension and resumption of in a simple data binding scenario.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must be allowed to make several edits to data fields before validation occurs.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> prevents changes from being pushed into the data source until <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> is called but does not prevent changes in the data source from affecting the bound controls.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that use complex data binding, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, update their values based on change events such as the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method will not prevent these events from occurring.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ResumeBinding%2A&gt;</ph> are designed for use with simple-bound controls, such as a <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use these methods in a complex binding scenario if you suppress <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Suspends data binding to prevents changes from updating the bound data source.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> methods allow the temporary suspension and resumption of data binding in a simple binding scenario.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You would typically suspend data binding if the user must make several edits to data fields before validation occurs.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one field must be changed in accordance with a second, but where validating the first field would cause the second field to be in error.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> prevents changes from being applied to the data source until <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> is called, but does not actually prevent any events from occurring.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that use complex data binding, such as the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, update their values based on change events, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, calling <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> will not prevent complex-bound controls from receiving events to update the data source.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.SuspendBinding%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.ResumeBinding%2A&gt;</ph> are designed for use with simple-bound controls, such as the <ph id="ph3">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can use these methods in a complex binding scenario if you suppress <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource.ListChanged&gt;</ph> events by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.RaiseListChangedEvents%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Updates the status of the binding.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>