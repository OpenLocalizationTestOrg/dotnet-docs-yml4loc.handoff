<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5483e2a8e3918286120d026ed8f120661d21959e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xaml.XamlDirective.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3dccef73cc7b28129307901bda2a2e3f045adbfb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ab7dc6cb45bdc70f7b6d8f941a734f4734b6a50</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the XAML type system identifier for a member if the member is also a XAML directive.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>XAML readers and XAML writers use the <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> identifier during processing of member nodes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>The identifier is used when the XAML reader is positioned on a <ph id="ph1">&lt;xref href="System.Xaml.XamlNodeType.StartMember"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Xaml.XamlMember.IsDirective"&gt;&lt;/xref&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> provides expected values for the XAML type system when the member is a XAML directive.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By definition, a XAML directive has characteristics that always return the same results for a subset of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> properties, and the same XAML type system information is reported for all possible XAML directives.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> <ph id="ph2">`Lookup*`</ph> virtual members in the <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following list shows the returned results of a XAML directive for <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> when the member is actually a <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the internal backing for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> remains unset and returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> is a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> subclass.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> has security considerations regarding how the XAML type system reports access.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> class, specifying values for a name and a single XAML namespace.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Use this signature only when you want or expect <ph id="ph1">&lt;xref href="System.Xaml.XamlMember.IsUnknown"&gt;&lt;/xref&gt;</ph> to report <ph id="ph2">`true`</ph> for the directive.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This signature of the constructor always generates an identifier for the directive where <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> reports <ph id="ph2">`true`</ph> for the XAML type system.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=fullName&gt;</ph> constructor signature instead.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this signature, the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; and the <ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> value and <ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> value are both <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The primary XAML namespace where this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> can exist.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The identifying name of the <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> class, specifying values for each per-case value of a <ph id="ph2">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use this constructor to generate a <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> that does not report <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A set of XAML namespaces where this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> can exist, passed as an enumerable set of the identifier strings.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The identifying name of the <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The XAML type that backs the <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The type converter that this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> uses for text syntax conversion.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A value of the <ph id="ph1">&lt;xref href="System.Xaml.Schema.AllowedMemberLocations"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xamlType</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value that specifies the XAML node types where the directive can be specified.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set this value in the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph> constructor signature.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you construct by using the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph> constructor signature, the <ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the instance always reports <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior typically affects attempts to write object graphs and also affects other practical uses of a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically would not construct a XAML directive case where <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A value of the enumeration.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The default is the enumeration default, which is <ph id="ph1">&lt;xref href="System.Xaml.Schema.AllowedMemberLocations.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An integer hash code.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=fullName&gt;</ph> relies on this ordering.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A list of XAML namespace identifiers, as strings.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Reflection.ICustomAttributeProvider"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a XAML directive cannot have custom attributes, this implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlValueConverter`1"&gt;&lt;/xref&gt;</ph> object, which is used during deferred loading of XAML-declared objects.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a directive cannot have deferred loading, this implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Returns a list of <ph id="ph1">&lt;xref href="System.Xaml.XamlMember"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The list reports the members where dependency relationships for initialization order exist relative to this <ph id="ph1">&lt;xref href="System.Xaml.XamlMember"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a XAML directive cannot have initialization order, this implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;&lt;/xref&gt;</ph> that is associated with a <ph id="ph2">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation returns an internal static <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> value that is specific to directives in the XAML type system.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlMemberInvoker"&gt;&lt;/xref&gt;</ph> information for this <ph id="ph2">&lt;xref href="System.Xaml.XamlMember"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlMember"&gt;&lt;/xref&gt;</ph> is reported as an ambient property.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a XAML directive cannot be an ambient type, this implementation always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents an event.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents an intended read-only property.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>By definition, directives are settable.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents a property that has a public <ph id="ph2">`get`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this <ph id="ph2">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents a non-resolvable member; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents an intended write-only property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Returns whether this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph> represents a property that has a public <ph id="ph2">`set`</ph> accessor.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Xaml.XamlType"&gt;&lt;/xref&gt;</ph> of the type where the <ph id="ph2">&lt;xref href="System.Xaml.XamlMember"&gt;&lt;/xref&gt;</ph> can exist.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Target types are not relevant for directives; therefore, this implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Xaml.XamlType"&gt;&lt;/xref&gt;</ph> of the type that is used by the member.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation returns results based either on internal reflection, or checking for a null value of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, processing in that order.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>See Remarks in <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=fullName&gt;</ph> for more information about what information <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> carries.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xaml.XamlType"&gt;&lt;/xref&gt;</ph> of the type that is used by the member.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Returns a type converter implementation that is associated with this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xaml.Schema.XamlValueConverter`1"&gt;&lt;/xref&gt;</ph> instance that has <ph id="ph2">&lt;xref href="System.ComponentModel.TypeConverter"&gt;&lt;/xref&gt;</ph> constraint; or <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">`get`</ph> accessor that is associated with this <ph id="ph2">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Returns a CLR reflection <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> that is associated with this <ph id="ph2">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">`set`</ph> accessor that is associated with this <ph id="ph2">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Returns a string representation of this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If XAML namespace information is available, this implementation returns a string combination of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If XAML namespace information is unavailable, this implementation returns <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A string representation of this <ph id="ph1">&lt;xref href="System.Xaml.XamlDirective"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>