<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42cd49f712729f407f1e356a534872f5af70a40f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Description.CallbackDebugBehavior.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ab02c45cf6653c565953f001f35c3151a28b24a2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20ca14304c5e08ba871dcc4b18d00212a27750a8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables service debugging for a Windows Communication Foundation (WCF) callback object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph> from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, although the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> properties can also be set programmatically, it can be easy to forget to disable <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> when deploying.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the security issues involved, it is strongly recommended that:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use an application configuration file to set the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only do so only in controlled debugging scenarios.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> the security issues related to managed exception information, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set the values of this attribute by using the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;callbackDebug<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element in a client application configuration file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.CallbackDebugBehavior"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The constructor creates a <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> object in which the value of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property is the value of <ph id="ph3">`includeExceptionDetailInFaults`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Controls whether a <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> callback object includes managed exception information in the detail of the SOAP faults sent back to the service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that controls whether client callback objects return managed exception information in SOAP faults back to the service.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph> from an application configuration file or programmatically to enable the flow of managed exception information in a client callback object back to the service for debugging purposes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returning managed exception information to services can be a security risk because exception details expose information about the internal client implementation that could be used by unauthorized services.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, although the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> properties can also be set programmatically, it can be easy to forget to disable <ph id="ph2">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> when deploying.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of the security issues involved, it is strongly recommended that:</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use an application configuration file to set the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only do so only in controlled debugging scenarios.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> the security issues related to managed exception information, see <bpt id="p1">[</bpt>Specifying and Handling Faults in Contracts and Services<ept id="p1">](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable or disable a feature of CallbackDebugBehavior using a configuration file</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add a <ph id="ph1">`behaviorConfiguration`</ph> attribute to the client <bpt id="p1">[</bpt><ph id="ph2">\&lt;</ph>endpoint&gt;<ept id="p1">](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element for your <ph id="ph3">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> client application.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior&gt;</ph> behavior is an endpoint behavior.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Endpoint behaviors are configured on <ph id="ph1">`&lt;endpoint&gt;`</ph> elements; service behaviors are configured on <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;service<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/service.md)</ept> elements.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add to or create an <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;endpointBehaviors<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> section and add a <bpt id="p2">[</bpt><ph id="ph3">\&amp;</ph>lt;behavior<ph id="ph4">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> element to that with the name that matches the <ph id="ph5">`behaviorConfiguration`</ph> attribute value from step 1.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Endpoint behaviors are added for use in a client <bpt id="p1">[</bpt><ph id="ph1">\&lt;</ph>endpoint&gt;<ept id="p1">](http://msdn.microsoft.com/en-us/13aa23b7-2f08-4add-8dbf-a99f8127c017)</ept> element using an <bpt id="p2">[</bpt><ph id="ph2">\&amp;</ph>lt;endpointBehaviors<ph id="ph3">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/endpointbehaviors.md)</ept> element.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add a <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;callbackDebug<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element to the <bpt id="p2">[</bpt><ph id="ph3">\&amp;</ph>lt;behavior<ph id="ph4">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/wcf/behavior-of-endpointbehaviors.md)</ept> element from step 2 and enable or disable the various properties appropriate to your scenario.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a specific example, see the Example section.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set the values of this attribute by using the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;callbackDebug<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/callbackdebug.md)</ept> element in a client application configuration file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> returns managed client callback exception information in the SOAP faults for service debugging purposes in duplex communication; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)"&gt;&lt;/xref&gt;</ph> method to support the behavior.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The endpoint to modify.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The objects that binding elements require to support the behavior.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)"&gt;&lt;/xref&gt;</ph> to support the behavior.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assigns the value of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.CallbackDebugBehavior.IncludeExceptionDetailInFaults%2A&gt;</ph> property to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The endpoint that is to be customized.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The client runtime to be customized.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Implements the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)"&gt;&lt;/xref&gt;</ph> to support the behavior.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Throws an <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=fullName&gt;</ph>; this behavior can only be used in a client application.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The endpoint that exposes the contract.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The endpoint dispatcher to be modified or extended.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Implements <ph id="ph1">&lt;xref href="System.ServiceModel.Description.IEndpointBehavior.Validate(System.ServiceModel.Description.ServiceEndpoint)"&gt;&lt;/xref&gt;</ph> to support the behavior.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The endpoint to validate.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>