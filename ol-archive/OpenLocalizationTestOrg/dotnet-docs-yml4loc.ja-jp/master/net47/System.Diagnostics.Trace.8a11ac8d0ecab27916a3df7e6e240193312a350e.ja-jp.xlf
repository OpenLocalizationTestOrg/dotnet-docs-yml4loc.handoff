<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">328e7d6620e7fe671199a7ecdeaf4bb03bf0f5d6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.Trace.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac23970d2d4a1f320e8c29bc03a7c16889156106</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bbcdb2db5ffbf69ebb8b329421b199a33b74968e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a set of methods and properties that help you trace the execution of your code.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the properties and methods in the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> class to instrument release builds.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instrumentation allows you to monitor the health of your application running in real-life settings.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tracing helps you isolate problems and fix them without disturbing a running system.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides methods to display an <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> dialog box, and to emit an assertion that will always <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Fail%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides write methods in the following variations: <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Write%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace.WriteLine%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.WriteIf%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.Trace.WriteLineIf%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.BooleanSwitch&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.TraceSwitch&gt;</ph> classes provide means to dynamically control the tracing output.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the values of these switches without recompiling your application.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on using the configuration file to set a switch, see the <ph id="ph1">&lt;xref:System.Diagnostics.Switch&gt;</ph> class and the <bpt id="p1">[</bpt>How to: Create, Initialize and Configure Trace Switches<ept id="p1">](~/docs/framework/debug-trace-profile/how-to-create-initialize-and-configure-trace-switches.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize the tracing output's target by adding <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances to or removing instances from the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, trace output is emitted using the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a trace listener to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection can cause an exception to be thrown while tracing, if a resource used by the trace listener is not available.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The conditions and the exception thrown depend on the trace listener and cannot be enumerated in this topic.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>It may be useful to place calls to the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> methods in <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> blocks to detect and handle any exceptions from trace listeners.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you add trace listeners to partially trusted code, you will get a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception, because adding trace listeners requires <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To trace partially trusted code that is running in a sandbox in Visual Studio, do not add trace listeners.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, view the <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> messages in the <bpt id="p1">**</bpt>Output<ept id="p1">**</ept> window.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> class provides properties to get or set the level of <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Indent%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph>, and whether to <ph id="ph4">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> after each write.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can edit the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute is applied to the methods of <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compilers that support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> ignore calls to these methods unless "TRACE" is defined as a conditional compilation symbol.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refer to a compiler's documentation to determine whether <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is supported and the syntax for defining a conditional compilation symbol.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Studio projects, by default, the "DEBUG" conditional compilation symbol is defined for debug builds, and the "TRACE" symbol is defined for both debug and release builds.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to disable this behavior, see the Visual Studio documentation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>To define the "TRACE" conditional compilation symbol in C#, add the <ph id="ph1">`/d:TRACE`</ph> option to the compiler command line when you compile your code using a command line, or add <ph id="ph2">`#define TRACE`</ph> to the top of your file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Basic, add the <ph id="ph1">`/d:TRACE=True`</ph> option to the compiler command line or add <ph id="ph2">`#Const TRACE=True`</ph> to the file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is not supported by the C++ compiler.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide equivalent functionality, you must enclose calls to the methods of <ph id="ph1">&lt;xref:System.Diagnostics.Trace&gt;</ph> in an <ph id="ph2">`#if defined(TRACE) ... #endif`</ph> block, and add the <ph id="ph3">`/DTRACE`</ph> option to the compiler command line or add <ph id="ph4">`#define TRACE`</ph> to the file.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Checks for a condition; if the condition is <ph id="ph1">`false`</ph>, displays a message box that shows the call stack.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%29&gt;</ph> method is used to identify logic errors during program development.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%29&gt;</ph> evaluates the condition.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends a failure message to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;clear<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">\&amp;</ph>lt;remove<ph id="ph5">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted as follows:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The conditional expression to evaluate.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the condition is <ph id="ph1">`true`</ph>, a failure message is not sent and the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Checks for a condition; if the condition is <ph id="ph1">`false`</ph>, outputs a specified message and displays a message box that shows the call stack.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%29&gt;</ph> evaluates the condition.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;clear<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">\&amp;</ph>lt;remove<ph id="ph5">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted as follows:</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The conditional expression to evaluate.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>If the condition is <ph id="ph1">`true`</ph>, the specified message is not sent and the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The message to send to the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Checks for a condition; if the condition is <ph id="ph1">`false`</ph>, outputs two specified messages and displays a message box that shows the call stack.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A?displayProperty=fullName&gt;</ph> method if you want to do assertions in release builds.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Debug.Assert%2A?displayProperty=fullName&gt;</ph> method works only in debug builds.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Assertions in Managed Code<ept id="p1">](http://msdn.microsoft.com/library/70ab2522-6486-4076-a1a9-e0f11cd0f3a1)</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%28System.Boolean%2CSystem.String%2CSystem.String%29&gt;</ph> method is used to identify logic errors during program development.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.Assert%2A&gt;</ph> evaluates the condition.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the result is <ph id="ph1">`false`</ph>, it sends the specified diagnostic message and detailed message to the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the application runs in user-interface mode, it displays a message box that shows the call stack with file and line numbers.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message box contains three buttons: <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept>, <bpt id="p2">**</bpt>Retry<ept id="p2">**</ept>, and <bpt id="p3">**</bpt>Ignore<ept id="p3">**</ept>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking the <bpt id="p1">**</bpt>Abort<ept id="p1">**</ept> button terminates the application.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking <bpt id="p1">**</bpt>Retry<ept id="p1">**</ept> sends you to the code in the debugger if your application is running in a debugger, or offers to open a debugger if it is not.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clicking <bpt id="p1">**</bpt>Ignore<ept id="p1">**</ept> continues with the next instruction in the code.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display of the message box depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;clear<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">\&amp;</ph>lt;remove<ph id="ph5">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the behavior of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> in the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this file, you can enable and disable the assert message box or set the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener.LogFileName%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted as follows:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The conditional expression to evaluate.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>If the condition is <ph id="ph1">`true`</ph>, the specified messages are not sent and the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The message to send to the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The detailed message to send to the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets whether <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Flush"&gt;&lt;/xref&gt;</ph> should be called on the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> after every write.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can also edit the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Flush"&gt;&lt;/xref&gt;</ph> is called on the <ph id="ph3">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> after every write; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Flushes the output buffer, and then closes the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when the output is going to a file, such as to the <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the correlation manager for the thread for this trace.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is an advanced property that most applications should not have occasion to use.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.CorrelationManager&gt;</ph> class provides methods used to store a logical operation identity in a thread-bound context and automatically tag each trace event generated by the thread with the stored identity.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.CorrelationManager"&gt;&lt;/xref&gt;</ph> object associated with the thread for this trace.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Emits the specified error message.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior for the default trace listener is to output the <ph id="ph1">`message`</ph> parameter to a message box when the application runs in user-interface mode, and to the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;clear<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">\&amp;</ph>lt;remove<ph id="ph5">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or by removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Emits an error message, and a detailed error message.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is for the default trace listener to output the <ph id="ph1">`message`</ph> parameter and the <ph id="ph2">`detailedMessage`</ph> parameter to a message box when the application runs in user-interface mode, and to the <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> instances in the <ph id="ph4">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display of the message box is dependent on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> is not in the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection, the message box is not displayed.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> can be removed by the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;clear<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/trace-debug/clear-element-for-listeners-for-trace.md)</ept>, the <bpt id="p2">[</bpt><ph id="ph4">\&amp;</ph>lt;remove<ph id="ph5">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/trace-debug/remove-element-for-listeners-for-trace.md)</ept>, or by calling the <ph id="ph6">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> method on the <ph id="ph7">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> property (<ph id="ph8">`System.Diagnostics.Trace.Listeners.Clear()`</ph>).</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize this behavior by adding a <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to, or by removing one from, the <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A message to emit.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A detailed message to emit.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Flushes the output buffer, and causes buffered data to be written to the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Flushing the stream will not flush its underlying encoder unless you explicitly call <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Flush%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Trace.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> to <ph id="ph2">`true`</ph> means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Increases the current <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.IndentLevel"&gt;&lt;/xref&gt;</ph> by one.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets or sets the indent level.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace.IndentLevel%2A&gt;</ph> property represents the number of times the indent of size <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> is applied.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is stored on per-thread/per-request basis.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The indent level.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of spaces in an indent.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.TextWriterTraceListener&gt;</ph> interprets this number as spaces.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> ignores this value.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is stored on per-thread/per-request basis.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.AutoFlush%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Trace.IndentSize%2A&gt;</ph> for <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can also edit the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The number of spaces in an indent.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The default is four.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets the collection of listeners that is monitoring the trace output.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The listeners produce formatted output from the trace output.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the collection contains an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to remove the default listener, call the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method, and pass it the instance of the <ph id="ph2">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>To redirect output to the console window, add an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.ConsoleTraceListener&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Listeners%2A&gt;</ph> collection is shared by both the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes; adding a trace listener to either class adds the listener to both.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceListenerCollection"&gt;&lt;/xref&gt;</ph> that represents a collection of type <ph id="ph2">&lt;xref href="System.Diagnostics.TraceListener"&gt;&lt;/xref&gt;</ph> monitoring the trace output.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Refreshes the trace configuration data.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trace configuration data is captured when the application is started.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the configuration data is changed after the application is started, call the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.Refresh%2A&gt;</ph> method to update the trace configuration data.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Writes an error message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified message.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceError%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> method for each trace listener, with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, passing the informative message as the message string.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Writes an error message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified array of objects and formatting information.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceError%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> methods in the trace listeners with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, passing the message content as an object array with formatting information.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> method for more information about the <ph id="ph2">`format`</ph> and <ph id="ph3">`args`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`object`</ph> array containing zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified message.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceInformation%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> method for each trace listener, with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, passing the informative message as the message string.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Writes an informational message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified array of objects and formatting information.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceInformation%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> methods in the trace listeners with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, passing the message content as an object array with formatting information.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> method for more information about the <ph id="ph2">`format`</ph> and <ph id="ph3">`args`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`object`</ph> array containing zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Writes a warning message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified array of objects and formatting information.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> methods in the trace listeners with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, passing the message content as an object array with formatting information.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.String.Format%2A&gt;</ph> method for more information about the <ph id="ph2">`format`</ph> and <ph id="ph3">`args`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items, which correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`object`</ph> array containing zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Writes a warning message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection using the specified message.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Trace.TraceWarning%2A&gt;</ph> calls the <ph id="ph2">`TraceEvent`</ph> method for each trace listener with the trace event type <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, passing the informative message as the message string.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The informative message to write.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Decreases the current <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.IndentLevel"&gt;&lt;/xref&gt;</ph> by one.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the global lock should be used.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The global lock is always used if the trace listener is not thread safe, regardless of the value of <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> property is used to determine if the listener is thread safe.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The global lock is not used only if the value of <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> is <ph id="ph2">`false`</ph> and the value of <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener.IsThreadSafe%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to use the global lock.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the <ph id="ph1">&lt;xref:System.Diagnostics.Trace.UseGlobalLock%2A&gt;</ph> for <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, you can also edit the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted like the following example:</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the global lock is to be used; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>Writes a category name and a message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET supplies tracing functionality tailored for Web pages.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write trace messages in ASP.NET pages, use the <ph id="ph1">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in code associated with an ASP.NET Web page, the statement <ph id="ph1">`Trace.Write("...")`</ph> is a call to the <ph id="ph2">&lt;xref:System.Web.TraceContext.Write%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Web.UI.Page.Trace%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Diagnostics.Trace?displayProperty=fullName&gt;</ph> class in Web pages, you must include the namespace, for example, <ph id="ph2">`System.Diagnostics.Trace.Write("...")`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Write%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Writes a category name and the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Writes the value of the object's <ph id="ph1">&lt;xref href="System.Object.ToString"&gt;&lt;/xref&gt;</ph> method to the trace listeners in the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose name is sent to the <ph id="ph2">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Writes a message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Writes a category name and message to the trace listeners in the <ph id="ph1">&lt;xref href="System.Diagnostics.Trace.Listeners"&gt;&lt;/xref&gt;</ph> collection if a condition is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the output is written to an instance of <ph id="ph1">&lt;xref:System.Diagnostics.DefaultTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter can be used to group output messages.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.WriteLine%2A&gt;</ph> method of the trace listener.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to cause a message to be written; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>A message to write.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>A category name used to organize the output.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>