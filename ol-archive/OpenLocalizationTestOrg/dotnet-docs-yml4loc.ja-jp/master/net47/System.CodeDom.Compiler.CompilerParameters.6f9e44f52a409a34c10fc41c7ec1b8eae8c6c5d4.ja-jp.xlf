<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24015718a9c613b77383a3563c8c0d3ea3eb05f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.CodeDom.Compiler.CompilerParameters.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef29f53c44d3c719d4e86da4d088c24b452dc326</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3ade250b16f2dd0676fc29ef77c3cc90aa6b6ea9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the parameters used to invoke a compiler.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> object represents the settings and options for an <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are compiling an executable program, you must set the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, the compiler will generate a class library.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a new <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> is initialized with its <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A&gt;</ph> property set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are compiling an executable from a CodeDOM graph, a <ph id="ph1">&lt;xref:System.CodeDom.CodeEntryPointMethod&gt;</ph> must be defined in the graph.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are multiple code entry points, you can indicate the class that defines the entry point to use by setting the name of the class to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a file name for the output assembly in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, a default output file name will be used.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include debug information in a generated assembly, set the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your project references any assemblies, you must specify the assembly names as items in a <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> set to the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CompilerParameters&gt;</ph> used when invoking compilation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can compile an assembly that is written to memory rather than disk by setting the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an assembly is generated in memory, your code can obtain a reference to the generated assembly from the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an assembly is written to disk, you can obtain the path to the generated assembly from the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerResults&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a warning level at which to halt compilation, set the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A&gt;</ph> property to an integer that represents the warning level at which to halt compilation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also configure the compiler to halt compilation if warnings are encountered by setting the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a custom command-line arguments string to use when invoking the compilation process, set the string in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a Win32 security token is required to invoke the compiler process, specify the token in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include .NET Framework resource files in the compiled assembly, add the names of the resource files to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reference .NET Framework resources in another assembly, add the names of the resource files to the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include a Win32 resource file in the compiled assembly, specify the name of the Win32 resource file in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;&lt;/xref&gt;</ph> class using the specified assembly names.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The names of the assemblies to reference.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;&lt;/xref&gt;</ph> class using the specified assembly names and output file name.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The names of the assemblies to reference.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CompilerParameters"&gt;&lt;/xref&gt;</ph> class using the specified assembly names, output name, and a value indicating whether to include debug information.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The names of the assemblies to reference.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The output file name.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include debug information; <ph id="ph2">`false`</ph> to exclude debug information.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets optional command-line arguments to use when invoking the compiler.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> typically includes this string on the command line when invoking a command-line compiler.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this property contains an empty string.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Any additional command-line arguments for the compiler.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the core or standard assembly that contains basic types such as <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, or <ph id="ph3">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is an empty string or <ph id="ph1">`null`</ph>, the compiler uses the default core assembly.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the compiler version, the default core assembly may be mscorlib.dll or System.Runtime.dll in a Framework directory or reference assembly directory.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is not empty, the Code Document Object Model (CodeDOM) explicitly references the specified assembly and emits compiler options that cause the compiler to not reference any assemblies implicitly during compilation..</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>For compilers that reference the core or standard assembly only implicitly by default, this property can be used on its own.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For compilers that implicitly reference assemblies in addition to the core or standard assembly, using this option may require specifying additional entries in the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName&gt;</ph>property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeCompiler&gt;</ph> or <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> implementation may choose to ignore this property.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the core assembly that contains basic types.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets the .NET Framework resource files to include when compiling the assembly output.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded resources are built into the generated assembly output file.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Including files through this property is similar to the <ph id="ph1">`/resource`</ph> command-line argument supported by many of the .NET Framework compilers.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all compilers support .NET Framework resource files, so you should test for this support by calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the flag <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Resources&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add one or more .NET Framework resource file paths to the returned <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to embed the file resources in the compiled assembly.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> to include default or neutral culture .NET Framework resources for an assembly; use the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> property to reference .NET Framework resources in satellite assemblies.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>A collection that contains the file paths of .NET Framework resources to include in the generated assembly.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Specifies an evidence object that represents the security policy permissions to grant the compiled assembly.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An  object that represents the security policy permissions to grant the compiled assembly.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to generate an executable.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of this property is <ph id="ph1">`false`</ph>, a DLL will be generated.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the value of this property is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an executable should be generated; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to generate the output in memory.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the compiler should generate the output in memory; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to include debug information in the compiled executable.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if debug information should be generated; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets the .NET Framework resource files that are referenced in the current source.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Linked resource files allow your assembly to reference .NET Framework resources without embedding the actual resources in the assembly.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Referencing files through this property is similar to the <ph id="ph1">`/linkresource`</ph> command-line argument supported by many of the .NET Framework compilers.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all compilers support .NET Framework resource files, so you should test for this support by calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the flag <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Resources&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add one or more .NET Framework resource file paths to the returned <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to create links for the resources in the compiled assembly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding a duplicate or invalid file path results in compilation errors; ensure that each string specifies a unique path to a valid .NET Framework resource file.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> to reference .NET Framework resources in satellite assemblies, localized for a particular culture; use the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> property to embed the resources into the compiled assembly.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A collection that contains the file paths of .NET Framework resources that are referenced by the source.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the main class.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The main class contains the entry point for the program.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The name of the main class.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the output assembly.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The name of the output assembly.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the assemblies referenced by the current project.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string collection should consist of, or include, the assemblies referenced by the current project.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add assembly file names to the returned <ph id="ph1">&lt;xref:System.Collections.Specialized.StringCollection&gt;</ph> to import the assembly manifest and reference the assembly type information in the current project.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A collection that contains the assembly names that are referenced by the source to compile.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets the collection that contains the temporary files.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The temporary files in the collection are retained or deleted upon the completion of compiler activity based on the value of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;</ph> property in the collection.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A&gt;</ph> property is set if the collection is created using the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor with the <ph id="ph3">`keepFiles`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A collection that contains the temporary files.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to treat warnings as errors.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if warnings should be treated as errors; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets the user token to use when creating the compiler process.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The user token to use.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the warning level at which the compiler aborts compilation.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The warning level at which the compiler aborts compilation.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets or sets the file name of a Win32 resource file to link into the compiled assembly.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Linking files through this property is similar to the <ph id="ph1">`/winres`</ph> and <ph id="ph2">`/winresource`</ph> command-line arguments supported by many of the .NET Framework compilers.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A&gt;</ph> to compile a Win32 resource file into the assembly.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A&gt;</ph> to compile with .NET Framework resource files.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all compilers support Win32 resource files, so you should test a code generator for this support before linking a resource file by calling the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A&gt;</ph> method with the flag <ph id="ph2">&lt;xref:System.CodeDom.Compiler.GeneratorSupport.Win32Resources&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A Win32 resource file that will be linked into the compiled assembly.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>