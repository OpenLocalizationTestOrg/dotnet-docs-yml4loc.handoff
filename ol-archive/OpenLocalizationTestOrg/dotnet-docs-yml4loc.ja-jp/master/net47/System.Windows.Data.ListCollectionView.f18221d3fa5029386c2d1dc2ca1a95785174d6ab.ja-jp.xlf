<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2677d12d69c302e18bc3e1d93e67c63df9c7521a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Data.ListCollectionView.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ef0e99ecb3314a7bcfcd00729a2f1d5a2ec4c8e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d68a214aabdfa2b7aa994fe10659286c7441ce4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the collection view for collections that implement <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you bind to a data collection, you may want to sort, filter, or group the data.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do that, you use collection views.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can think of a <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph> as the layer on top of the binding source collection that allows you to navigate and display the source collection based on sort, filter, and group queries, all without having to manipulate the underlying source collection itself.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source collection implements the <ph id="ph1">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged&gt;</ph> interface, the changes raised by the <ph id="ph2">&lt;xref:System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged&gt;</ph> event are propagated to the views.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>All collections have a default <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all collections implementing <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView&gt;</ph> object is the default view object.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingListCollectionView&gt;</ph> is the collection view class used for collections that implement <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the default view, you use the <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewSource.GetDefaultView%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Get the Default View of a Data Collection<ept id="p1">](~/docs/framework/wpf/data/how-to-get-the-default-view-of-a-data-collection.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about collection views, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView"&gt;&lt;/xref&gt;</ph> class, using a supplied collection that implements <ph id="ph2">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The underlying collection, which must implement <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the current active comparer that is used in sorting.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> object that is the active comparer.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets the current active <ph id="ph1">&lt;xref href="System.Windows.Data.CollectionView.Filter"&gt;&lt;/xref&gt;</ph> callback.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The active <ph id="ph1">&lt;xref href="System.Windows.Data.CollectionView.Filter"&gt;&lt;/xref&gt;</ph> callback.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Starts an add transaction and returns the pending new item.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.AddNew%2A&gt;</ph> starts an add transaction.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CommitNew%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.CancelNew%2A&gt;</ph> to end the add transaction.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new item always appears in the collection view.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CommitNew%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The pending new item.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Adds the specified object to the collection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.AddNewItem%2A&gt;</ph> method starts an add transaction.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should call the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CommitNew%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.CancelNew%2A&gt;</ph> methods to end the add transaction.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new item always appears in the collection view.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any filtering, sorting, or grouping that is applied to the view is applied to the new item when <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CommitNew%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object to add to the collection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The object that was added to the collection.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An object cannot be added to the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView"&gt;&lt;/xref&gt;</ph> by using the <ph id="ph2">&lt;xref href="System.Windows.Data.ListCollectionView.AddNewItem(System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a new item can be added to the collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView&gt;</ph> can create a new item for the collection if there is no edit transaction occurring, if the collection is not a fixed size, and if the <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView&gt;</ph> can create an object of the correct type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a new item can be added to the collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a specified object can be added to the collection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you can specify an object to add to the collection by calling the <ph id="ph3">&lt;xref:System.Windows.Data.ListCollectionView.AddNewItem%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CanAddNewItem%2A&gt;</ph> is <ph id="ph2">`false`</ph> if items cannot be added to the collection.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a specified object can be added to the collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection view can discard pending changes and restore the original values of an edited object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A&gt;</ph> is <ph id="ph2">`true`</ph> if the edited item implements the <ph id="ph3">&lt;xref:System.ComponentModel.IEditableObject?displayProperty=fullName&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A&gt;</ph> is <ph id="ph2">`false`</ph>, call <ph id="ph3">&lt;xref:System.Windows.Data.ListCollectionView.CancelEdit%2A&gt;</ph> to cause the view to exit the edit state and provide logic to revert the changes on the object that was edited.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the collection view can discard pending changes and restore the original values of an edited object; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Ends the edit transaction, and if possible, restores the original value to the item.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CancelEdit%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.CurrentEditItem%2A&gt;</ph> to <ph id="ph3">`null`</ph> and causes the collection view to exit the edit state.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CanCancelEdit%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.ListCollectionView.CancelEdit%2A&gt;</ph> also restores the original values of the edited object.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Ends the add transaction and discards the pending new item.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection view supports turning filtering data in real time on or off.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection view supports turning grouping data in real time on or off.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection view supports turning sorting data in real time on or off.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the view supports callback-based filtering.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to test whether the current implementation supports filtering before assigning a callback to the inherited <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.Filter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>For a default instance of <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView"&gt;&lt;/xref&gt;</ph>, this property always returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection view supports grouping.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the collection view supports grouping; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an item can be removed from the collection.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.CanRemove%2A&gt;</ph> is <ph id="ph2">`true`</ph> if the collection is not a fixed size and if an add or edit transaction is not occurring.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an item can be removed from the collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection view supports sorting.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>For a default instance of <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView"&gt;&lt;/xref&gt;</ph>, this property always returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Ends the edit transaction and saves the pending changes.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Ends the add transaction and saves the pending new item.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any filtering, sorting, or grouping that is applied to the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView&gt;</ph> is applied to the new item when <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.CommitNew%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Compares two objects and returns a value that indicates whether one is less than, equal to, or greater than the other.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Less than zero if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">o1</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">o2</ph><ept id="p2">&lt;/code&gt;</ept>, zero if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">o1</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">o2</ph><ept id="p4">&lt;/code&gt;</ept> are equal, or greater than zero if <bpt id="p5">&lt;code&gt;</bpt><ph id="ph5">o1</ph><ept id="p5">&lt;/code&gt;</ept> is greater than <bpt id="p6">&lt;code&gt;</bpt><ph id="ph6">o2</ph><ept id="p6">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether a given item belongs to the collection view.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not make any assumptions about whether the item belongs to the underlying collection.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you know that the item belongs to the underlying collection, it is more efficient to call <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.PassesFilter%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The object to check.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the item belongs to the collection view; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Gets the estimated number of records.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this count represents the filtered count.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>One of the following:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Could not determine the count of the collection.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>This might be returned by a "virtualizing" view, where the view deliberately does not account for all items in the underlying collection because the view is trying to increase efficiency and minimize dependence on always having the whole collection available.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>any other integer</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The count of the collection.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets the item that is being added during the current add transaction.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The item that is being added if <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.IsAddingNew"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the item in the collection that is being edited.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The item in the collection that is being edited if <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.IsEditingItem"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`true`</ph>; otherwise, <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a custom object that implements <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> to sort items in the view.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property causes an immediate refresh unless a <ph id="ph1">&lt;xref:System.Windows.Data.CollectionView.DeferRefresh%2A&gt;</ph> is in effect.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property clears a previously set <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The sort criteria as an implementation of <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Begins an edit transaction of the specified item.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The item to edit.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets or sets a method that is used to determine whether an item is suitable for inclusion in the view.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A delegate that represents the method that is used to determine whether an item is suitable for inclusion in the view.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Returns an object that you can use to enumerate the items in the view.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerator instances are typically used for making asynchronous checks of the contents of a collection, or in this case, the contents of the view.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you are about to start a <ph id="ph1">`foreach`</ph> iteration over the contents of the view, it may be better to obtain an asynchronous copy to ensure that the length of the view items does not change unexpectedly midway through the loop.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> object that you can use to enumerate the items in the view.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Retrieves the item at the specified position in the view.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method evaluates the index with any <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.SortDescriptions%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.GroupDescriptions%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Data.CollectionView.Filter%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Data.ListCollectionView.CustomSort%2A&gt;</ph> properties that are set on the view.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The zero-based index at which the item is located.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The item at the specified position in the view.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">index</ph><ept id="p1">&lt;/code&gt;</ept> is out of range.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets a delegate to select the <ph id="ph1">&lt;xref href="System.ComponentModel.GroupDescription"&gt;&lt;/xref&gt;</ph> as a function of the parent group and its level.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A method that provides the logic for the selection of the <ph id="ph1">&lt;xref href="System.ComponentModel.GroupDescription"&gt;&lt;/xref&gt;</ph> as a function of the parent group and its level.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ComponentModel.GroupDescription"&gt;&lt;/xref&gt;</ph> objects that describe how the items in the collection are grouped in the view.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set by accessing the collection object and using its various methods such as <ph id="ph1">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property to access the collection object itself is read-only; the collection itself is read/write.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.ComponentModel.GroupDescription"&gt;&lt;/xref&gt;</ph> objects that describe how the items in the collection are grouped in the view.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the top-level groups.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The items in the collection are of type <ph id="ph1">&lt;xref:System.Windows.Data.CollectionViewGroup&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A read-only collection of the top-level groups, or <ph id="ph1">`null`</ph> if there are no groups.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Returns the index where the given data item belongs in the collection, or -1 if the index of that item is unknown.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The object to check for in the collection.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The index of the item in the collection, or <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">-1</ph><ept id="p1">&lt;/code&gt;</ept> if the item does not exist in the collection.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Return a value that indicates whether the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph> contains the item.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The item to locate.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph> contains the item; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the number of records in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The number of records in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>An enumerator for the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Returns the index of the specified item in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The item to return an index for.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The index of the specified item in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Returns the item at the given index in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.InternalList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The index at which the item is located.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The item at the specified zero-based index in the view.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets the complete and unfiltered underlying collection.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The underlying collection, which must implement <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an add transaction is in progress.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>You begin an add transaction by calling the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.AddNew%2A&gt;</ph> method, and you end the add transaction by calling <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.CommitNew%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Data.ListCollectionView.CancelNew%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an add transaction is in progress; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the list of items (after applying the sort and filters, if any) is already in the correct order for grouping.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`true`</ph> informs the view that the list of items is already in the correct order for grouping and allows the view to use a more efficient algorithm to build the groups.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is in the correct order if:</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>All items belonging to a given group appear consecutively, and</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.GroupDescription.GroupNames%2A&gt;</ph> collection is non-empty, the groups in <ph id="ph2">&lt;xref:System.ComponentModel.GroupDescription.GroupNames%2A&gt;</ph> appear before any other groups, and in the same order as in <ph id="ph3">&lt;xref:System.ComponentModel.GroupDescription.GroupNames%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the list of items is already in the correct order for grouping; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether an edit transaction is in progress.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>You begin an edit transaction by calling the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.EditItem%2A&gt;</ph> method, and you end the transaction by calling <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.CommitEdit%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Data.ListCollectionView.CancelEdit%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an edit transaction is in progress; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the resulting (filtered) view is empty.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the resulting view is empty; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether there are groups in the view.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if there are groups in the view; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether filtering data in real time is enabled.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if filtering data in real time is enabled; <ph id="ph2">`false`</ph> if live filtering is not enabled; <ph id="ph3">`null`</ph> if it cannot be determined whether the collection view implements live filtering.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.IsLiveFiltering"&gt;&lt;/xref&gt;</ph> cannot be set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether grouping data in real time is enabled.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if grouping data in real time is enabled; <ph id="ph2">`false`</ph> if live grouping is not enabled; <ph id="ph3">`null`</ph> if it cannot be determined whether the collection view implements live grouping.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.IsLiveGrouping"&gt;&lt;/xref&gt;</ph> cannot be set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether sorting in real time is enabled.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if sorting data in real time is enabled; <ph id="ph2">`false`</ph> if live sorting is not enabled; <ph id="ph3">`null`</ph> if it cannot be determined whether the collection view implements live sorting.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView.IsLiveFiltering"&gt;&lt;/xref&gt;</ph> cannot be set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets a collection of objects that describes the properties of the items in the collection.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>A collection of objects that describes the properties of the items in the collection.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets a collection of strings that specify the properties that participate in filtering data in real time.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>A collection of strings that specify the properties that participate in filtering data in real time.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets a collection of strings that specify the properties that participate in grouping data in real time.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A collection of strings that specify the properties that participate in grouping data in real time.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets a collection of strings that specify the properties that participate in sorting data in real time.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>A collection of strings that specify the properties that participate in sorting data in real time.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Sets the item at the specified index to be the <ph id="ph1">&lt;xref href="System.Windows.Data.CollectionView.CurrentItem"&gt;&lt;/xref&gt;</ph> in the view.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The index to set the <ph id="ph1">&lt;xref href="System.Windows.Data.CollectionView.CurrentItem"&gt;&lt;/xref&gt;</ph> to.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the resulting <ph id="ph2">&lt;xref href="System.Windows.Data.CollectionView.CurrentItem"&gt;&lt;/xref&gt;</ph> is an item within the view; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Thrown if the index is out of range.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of the new item placeholder in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the position of the new item placeholder in the <ph id="ph1">&lt;xref href="System.Windows.Data.ListCollectionView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Data.CollectionView.AllowsCrossThreadChanges"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Called by the base class to notify the derived class that a <ph id="ph1">&lt;xref href="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"&gt;&lt;/xref&gt;</ph> event has been posted to the message queue.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of this notification is to allow collection views to take a snapshot of the information, which is often the state of the data collection, that is needed at the time of the post.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NotifyCollectionChangedEventArgs"&gt;&lt;/xref&gt;</ph> object that is added to the change log.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified item in the underlying collection belongs to the view.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Windows.Data.ListCollectionView.Contains%2A&gt;</ph> method, this method assumes that the specified item belongs to the underlying collection.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method takes filters into account.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you use this method during collection-changed notifications to determine whether the added or removed item requires processing.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The item to check.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified item belongs to the view or if there is not filter set on the collection view; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Handles <ph id="ph1">&lt;xref href="System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged"&gt;&lt;/xref&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Collections.Specialized.NotifyCollectionChangedEventArgs"&gt;&lt;/xref&gt;</ph> object to process.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Recreates the view.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Removes the specified item from the collection.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`item`</ph> is not in the collection, <ph id="ph2">&lt;xref:System.Windows.Data.ListCollectionView.Remove%2A&gt;</ph> does nothing.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The item to remove.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Removes the item at the specified position from the collection.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`index`</ph> is relative to the collection view, not the collection.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the collection has 10 items and the view has a <ph id="ph1">&lt;xref:System.ComponentModel.ICollectionView.Filter%2A&gt;</ph> so that 7 items appear, the valid values of <ph id="ph2">`index`</ph> are 0 through 6.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The zero-based index of the item to remove.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than 0 or greater than the number of items in the collection view.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ComponentModel.SortDescription"&gt;&lt;/xref&gt;</ph> objects that describes how the items in the collection are sorted in the view.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can only be set by accessing the collection object and using its various methods such as <ph id="ph1">`Add`</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property to access the collection object itself is read-only; the collection itself is read/write.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A collection of <ph id="ph1">&lt;xref href="System.ComponentModel.SortDescription"&gt;&lt;/xref&gt;</ph> objects that describe how the items in the collection are sorted in the view.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether a private copy of the data is needed for sorting and filtering.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a private copy of the data is needed for sorting and filtering; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`true`</ph> if there is an <ph id="ph2">&lt;xref href="System.Windows.Data.ListCollectionView.ActiveFilter"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Data.ListCollectionView.ActiveComparer"&gt;&lt;/xref&gt;</ph>, or both.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>A value that is less than zero means <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">o1</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">o2;</ph><ept id="p2">&lt;/code&gt;</ept> a value of zero means the objects are equal; and a value that is over zero means <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">o1</ph><ept id="p3">&lt;/code&gt;</ept> is greater than <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">o2</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>