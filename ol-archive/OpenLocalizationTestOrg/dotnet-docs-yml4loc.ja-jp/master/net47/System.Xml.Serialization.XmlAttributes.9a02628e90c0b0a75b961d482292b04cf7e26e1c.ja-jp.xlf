<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1dafc692d8f8ddde2d1bef0dd225266f85670a8b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Serialization.XmlAttributes.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7bc926add3e9b4382ef3b5199b879e211fd3c413</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d4903287fd2d3cf0a1582ebbed2cd29588b4643</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of attribute objects that control how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes and deserializes an object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> is part of a process that overrides the default way the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes class instances.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you want to serialize an object that is created from a DLL which has an inaccessible source.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph>, you can augment or otherwise control how the object is serialized.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The members of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class correspond directly to a family of attribute classes that control serialization.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property must be set to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>, which allows you to override serialization of a field or property by instructing the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to serialize the property value as XML text.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of attributes that control serialization, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details on using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, see <bpt id="p1">[</bpt>How to: Specify an Alternate Element Name for an XML Stream<ept id="p1">](~/docs/framework/serialization/how-to-specify-an-alternate-element-name-for-an-xml-stream.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributes"&gt;&lt;/xref&gt;</ph> class and customizes how the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes and deserializes an object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the default constructor for the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> class, rather than using this constructor.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A class that can provide alternative implementations of attributes that control XML serialization.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyAttributeAttribute"&gt;&lt;/xref&gt;</ph> to override.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlAttribute&gt;</ph> objects on deserialization.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any attributes that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyAttribute%2A&gt;</ph> property allows you to override the serialization of a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyAttributeAttribute&gt;</ph> has been applied.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyAttributeAttribute"&gt;&lt;/xref&gt;</ph> to override.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the collection of <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttribute"&gt;&lt;/xref&gt;</ph> objects to override.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> can be applied to a member that returns an array of <ph id="ph2">&lt;xref:System.Xml.XmlElement&gt;</ph> objects on deserialization.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to deserialize any elements that do not have a corresponding member in the object being deserialized--thus those elements are "unknown" to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when the XML stream has been altered by an XML Web service, or when it is known that random data is always included with the XML stream.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAnyElements%2A&gt;</ph> property allows you to override the serialization of a member to function as a member to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAnyElementAttribute&gt;</ph> has been applied.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttributes"&gt;&lt;/xref&gt;</ph> object that represents the collection of <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlAnyElementAttribute"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a public field or read/write property that returns an array.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two ways in which a public field or public read/write property that returns an array is serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>: the default serialization, and the controlled serialization.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default serialization, no attribute is applied to the member.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When serialized, the array is serialized as a nested sequence of XML elements with the XML element name of the nested sequence taken from the member name.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>To control the serialization more precisely, apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the field or property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can change the generated XML element name from the default to a different name by setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute.ElementName%2A&gt;</ph> property to a new value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to the member.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can change the XML element name generated from the default (the member identifier) to a new value.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, if you apply an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> to a member, it is overridden by any <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayAttribute&gt;</ph> that is assigned to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArray%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlArrayAttribute"&gt;&lt;/xref&gt;</ph> that specifies how the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a public field or read/write property that returns an array.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets or sets a collection of objects that specify how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes items inserted into an array returned by a public field or read/write property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property allows you to specify the derived types that can be inserted into an array returned by a public field or public read/write property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each new type you want the field or property to accept, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlArrayItemAttribute&gt;</ph> object and <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes.Add%2A&gt;</ph> it to the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlArrayItemAttributes&gt;</ph>) returned by the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlArrayItems%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The new type must be derived from the type already accepted by the field or property.) <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Construct an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> with the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object before calling <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlArrayItemAttributes"&gt;&lt;/xref&gt;</ph> object that contains a collection of <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlArrayItemAttribute"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a public field or public read/write property as an XML attribute.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, if no attribute is applied to a public field or public read/write property, it is serialized as an XML element.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also instruct the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> to generate an XML attribute by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the field or property.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property allows you to override the default serialization, as well as the serialization controlled by applying an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> to the member.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute&gt;</ph> and set its properties (such as <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeAttribute.AttributeName%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assign the new object to the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlAttribute%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property, and the name of the field or property.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lastly, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> using the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and call the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlAttributeAttribute"&gt;&lt;/xref&gt;</ph> that controls the serialization of a public field or read/write property as an XML attribute.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that allows you to distinguish between a set of choices.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlChoiceIdentifierAttribute"&gt;&lt;/xref&gt;</ph> that can be applied to a class member that is serialized as an <ph id="ph2">`xsi:choice`</ph> element.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the default value of an XML element or attribute.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify the default value of an XML element or XML attribute by applying a <ph id="ph1">&lt;xref:System.ComponentModel.DefaultValueAttribute&gt;</ph> to a member.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>To examine the result of applying the value, compile the application into a DLL or executable, and pass the resulting file as an argument to the XML Schema Definition tool (XSD.exe).</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the XML schema document, a default value is assigned to the <ph id="ph1">`default`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the following example, the default for the <ph id="ph1">\&lt;</ph>Animal&gt; element is "Dogs."</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the default value, create an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlDefaultValue%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value assigned to a field or property is equal to the default value for that field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> does not serialize the value to the XML-instance.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the assigned value can be recovered from the XML schema.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, setting a field or property to its own default value is equivalent of not setting it at all.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Likewise, if no value is set for the field or property, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the default value found in the schema.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>In both cases, (setting the property to its default, or not setting it at all), the XML-document instance does not contain any value for the property.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the class constructors instead of the schema to assign the default values.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using Xsd.exe to generate a classes from schemas, you can comment out or remove all of the [System.ComponentModel.DefaultValueAttribute("myFieldName")] attributes from the class files.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the default value of an XML element or attribute.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets a collection of objects that specify how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a public field or read/write property as an XML element.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each overridden member that is serialized as an XML element, you must add a new <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttribute&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> by calling the <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlElementAttributes.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlElementAttributes&gt;</ph> object is created and assigned to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlElements%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlElementAttributes"&gt;&lt;/xref&gt;</ph> that contains a collection of <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlElementAttribute"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes an enumeration member.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each identifier you want to override, you must create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlEnum%2A&gt;</ph> property to an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlEnumAttribute&gt;</ph> that overrides the identifier.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify both the <ph id="ph3">&lt;xref:System.Type&gt;</ph> of the class that contains the enumeration, and the overridden member name.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlEnumAttribute"&gt;&lt;/xref&gt;</ph> that specifies how the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes an enumeration member.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether or not the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a public field or public read/write property.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, all public fields and public read/write properties are serialized by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the value of each public field or property is persisted as an XML element or XML attribute in an XML-document instance.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the default serialization of a field or property, create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, and set its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides.Add%2A&gt;</ph> the object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the field or property to ignore, and the name of the field or property to ignore.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> is applied to a field or property, the field or property is ignored.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>However you can override that behavior by creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object, setting its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlIgnore%2A&gt;</ph> property to <ph id="ph3">`false`</ph>, adding it to an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object specifying the type of the object that contains the field or property, and the name of the field or property.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> must not serialize the field or property; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether to keep all namespace declarations when an object containing a member that returns an <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializerNamespaces"&gt;&lt;/xref&gt;</ph> object is overridden.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the namespace declarations should be kept; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a class as an XML root element.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlRootAttribute"&gt;&lt;/xref&gt;</ph> that overrides a class attributed as an XML root element.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that instructs the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> to serialize a public field or public read/write property as XML text.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a public field or public read/write property is serialized as an XML element by the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it can force the field or property to be serialized as XML text by applying an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to the field or property.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> cannot be applied to a field or property that returns an array.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>To override the default serialization of a field or property (that does not return an array), create an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property of an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph> object to an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object and specify the type of the object that contains the overridden field or property, and the name of the overridden field or property.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlTextAttribute"&gt;&lt;/xref&gt;</ph> that overrides the default serialization of a public property or field.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets an object that specifies how the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> serializes a class to which the <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlTypeAttribute"&gt;&lt;/xref&gt;</ph> has been applied.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph> can be used to control how a type is serialized by the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, by default, when a type is serialized, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> uses the class name as the XML element name.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTypeAttribute&gt;</ph>, setting the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlType%2A&gt;</ph> property to it, and creating an <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> object, you can change the XML element name.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlTypeAttribute"&gt;&lt;/xref&gt;</ph> that overrides an <ph id="ph2">&lt;xref href="System.Xml.Serialization.XmlTypeAttribute"&gt;&lt;/xref&gt;</ph> applied to a class declaration.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>