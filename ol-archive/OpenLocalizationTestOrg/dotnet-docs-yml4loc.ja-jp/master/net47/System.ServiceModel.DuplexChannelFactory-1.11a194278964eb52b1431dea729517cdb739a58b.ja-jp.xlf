<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">300f563a715ac429d9f1282547d18e087585d13b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.DuplexChannelFactory-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">25fd4a1bfb486aacd4248655685bb3e7627d92b2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fa92f921335014775e07485da7332d64e94a502</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the means to create and manage duplex channels of different types that are used by clients to send and receive messages to and from service endpoints.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A duplex channel allows clients and servers to communicate with each other independently so that either can initiate calls to the other.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A duplex service can send messages to the client endpoint, providing event-like behavior.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Duplex communication occurs when a client establishes a session with a service and provides the service with a channel on which the service can send messages back to the client.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The various <ph id="ph1">&lt;xref:System.ServiceModel.DuplexChannelFactory%601.CreateChannel%2A&gt;</ph> methods are used to create these duplex channels.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The duplex message pattern is one of three message patterns available to <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> services.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The other two message patterns are one-way and request-reply.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a general discussion of duplex services that allow clients to connect back to the service, see <bpt id="p1">[</bpt>Duplex Services<ept id="p1">](~/docs/framework/wcf/feature-details/duplex-services.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an outline and discussion of the steps involved in writing a <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client application using a channel factory, see <bpt id="p1">[</bpt>How to: Use the ChannelFactory<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-use-the-channelfactory.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a procedure describing how to create a <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client in a client class that implements the callback interface to access a service that uses a duplex messaging pattern, see <bpt id="p1">[</bpt>How to: Access Services with a Duplex Contract<ept id="p1">](~/docs/framework/wcf/feature-details/how-to-access-services-with-a-duplex-contract.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The type of channel produced by the channel factory.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an object that implements the callback contract for the target service programmatically rather than by using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with the specified type of callback instance, configuration, and remote address.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with the specified type of callback instance, binding, and remote address.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The remote address that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance, binding, and remote address.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified configuration and endpoint address.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service address information programmatically, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified instance context, binding, and remote address.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The remote address that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract, and a specified configuration and endpoint address.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service, pass in the address information programmatically, and determine the remaining target endpoint information from the client application configuration file.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified callback object, binding, and remote address.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The remote address that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified binding and endpoint address.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and pass in the binding and address information programmatically rather than using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance and configuration.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified binding and endpoint address.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass in the binding and address information programmatically rather than using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;remoteAddress&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance and binding.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance and service endpoint.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> for the service.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified type of callback instance.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that provides the callback instance that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstanceType&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified binding.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified endpoint.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and to pass the service endpoint information programmatically rather than using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> to which channels produced by the factory connect.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackObject&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with specified instance context.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with a context that implements the callback contract and a specified binding.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the binding information programmatically rather than by using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;binding&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified endpoint.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to pass the endpoint information programmatically rather than by using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ServiceEndpoint"&gt;&lt;/xref&gt;</ph> to which channels produced by the factory connect.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified configuration.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass an instance context object that implements the callback contract for the target service and to determine the target endpoint information from the client application configuration file.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.DuplexChannelFactory`1"&gt;&lt;/xref&gt;</ph> class with an object that implements the callback contract and a specified configuration.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor to pass a service object that implements the callback contract for the target service and determine the target endpoint information from the client application configuration file.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The configuration name used for the endpoint.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackObject&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A duplex channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A duplex channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>A duplex channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The name used for the endpoint configuration.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;endpointConfigurationName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Creates a duplex channel between a service and a callback instance on the client.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> that the client uses to listen for messages from the connected service.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Binding"&gt;&lt;/xref&gt;</ph> used to connect to the service by channels produced by the factory.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept>, the generic parameter for the factory, between the client and service.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;binding&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;endpointAddress&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;callbackInstance&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;callbackInstance&lt;/code&gt;</ph>.UserObject is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>