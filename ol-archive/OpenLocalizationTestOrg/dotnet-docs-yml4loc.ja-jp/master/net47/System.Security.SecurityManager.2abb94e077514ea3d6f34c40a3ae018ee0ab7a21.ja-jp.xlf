<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1178cbb6de3e00089a47ed8f0f8e3493591fd400</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.SecurityManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94276513462c29dd6c98bd4d635aaed04743a1e5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f217555cd4c6a3e3a5539c871c3ec9563cc13982</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the main access point for classes interacting with the security system.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security provides methods to access and manipulate the security policy configuration.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot create instances of <ph id="ph1">&lt;xref:System.Security.SecurityManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether code must have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.Execution"&gt;&lt;/xref&gt;</ph> in order to execute.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, even code without <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.Execution&gt;</ph> can execute.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Execution checking is expensive and can eliminate the advantages of lazy policy resolution.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is provided to disable execution checking when needed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A change to this property is not persisted until <ph id="ph1">&lt;xref:System.Security.SecurityManager.SavePolicy%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>New processes will not be affected by the change until it is persisted in the registry.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if code must have <ph id="ph2">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.Execution"&gt;&lt;/xref&gt;</ph> in order to execute; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Determines whether the current thread requires a security context capture if its security state has to be re-created at a later point in time.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A&gt;</ph> method before you cache sensitive data that is obtained after successful security demands.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> method has been called higher on the stack, the data should not be cached without capturing the corresponding security context.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, sensitive data that is obtained under an <ph id="ph1">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> may become available to code that is no longer be running with that <ph id="ph2">&lt;xref:System.Security.CodeAccessPermission.Assert%2A&gt;</ph> in place.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is reliable only when it is <ph id="ph1">`false`</ph>, which means that the thread is guaranteed not to require a security context capture.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method may return true when a security context capture is not necessary, to avoid security vulnerabilities.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.SecurityManager.CurrentThreadRequiresSecurityContextCapture%2A&gt;</ph> is security-critical because its main use is to avoid unnecessary security context captures, which indicates that the code using it is security-sensitive and must be audited.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> if the stack contains no partially trusted application domains, no partially trusted assemblies, and no currently active <ph id="ph2">&lt;xref href="System.Security.CodeAccessPermission.PermitOnly"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Security.CodeAccessPermission.Deny"&gt;&lt;/xref&gt;</ph> modifiers; <ph id="ph4">`true`</ph> if the common language runtime cannot guarantee that the stack contains none of these.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets a permission set that is safe to grant to an application that has the provided evidence.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, the host evidence in <ph id="ph2">`evidence`</ph> must contain <ph id="ph3">&lt;xref:System.Security.Policy.Zone?displayProperty=fullName&gt;</ph> evidence.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the permission sets that are returned for each zone.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Zone</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Permission set</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other evidence, such as <ph id="ph1">&lt;xref:System.Security.Policy.Url&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Policy.Site&gt;</ph>, may be considered.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned permission set can be used by a sandbox to run the application.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this method does not specify policy, but helps a host to determine whether the permission set requested by an application is reasonable.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to map a zone to a sandbox.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The host evidence to match to a permission set.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A permission set that can be used as a grant set for the application that has the provided evidence.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;evidence&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the granted zone identity and URL identity permission sets for the current assembly.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The recommended alternative to this method is to use the URL and Zone evidence for the executing assembly to call <ph id="ph1">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A&gt;</ph> for each evidence type.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The permission sets returned from the <ph id="ph1">&lt;xref:System.Security.SecurityManager.ResolvePolicy%2A&gt;</ph> calls identify the permissions granted to the executing assembly based on its zone and URL of origin.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member makes a link demand for the ECMA public key, which is not a valid cryptographic key but a pseudo key.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Within the .NET Framework the link demand for the ECMA pseudo key is automatically converted to a link demand for the Microsoft public key.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security exception is based on the Microsoft public key, not the ECMA pseudo key.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An output parameter that contains an <ph id="ph1">&lt;xref href="System.Collections.ArrayList"&gt;&lt;/xref&gt;</ph> of granted <ph id="ph2">&lt;xref href="System.Security.Permissions.ZoneIdentityPermissionAttribute.Zone"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An output parameter that contains an <ph id="ph1">&lt;xref href="System.Collections.ArrayList"&gt;&lt;/xref&gt;</ph> of granted <ph id="ph2">&lt;xref href="System.Security.Permissions.UrlIdentityPermission"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The request for <ph id="ph1">&lt;xref href="System.Security.Permissions.StrongNameIdentityPermission"&gt;&lt;/xref&gt;</ph> failed.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Determines whether a permission is granted to the caller.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Granting of permissions is determined by policy and is different from a demand subject to overrides, such as an assert.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, <ph id="ph1">&lt;xref:System.Security.SecurityManager.IsGranted%2A&gt;</ph> only tests the grant of the calling code assembly, independent of other callers on the stack.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The permission to test against the grant of the caller.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the permissions granted to the caller include the permission <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">perm</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">&lt;xref href="System.Security.Policy.PolicyLevel"&gt;&lt;/xref&gt;</ph> from the specified file.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The physical file path to a file containing the security policy information.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of the policy level to be loaded.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The loaded policy level.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The file indicated by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not exist.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess.Read"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess.Write"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.FileIOPermissionAccess.PathDiscovery"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Loads a <ph id="ph1">&lt;xref href="System.Security.Policy.PolicyLevel"&gt;&lt;/xref&gt;</ph> from the specified string.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The XML representation of a security policy level in the same form in which it appears in a configuration file.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of the policy level to be loaded.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The loaded policy level.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">str</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">str</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not valid.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Provides an enumerator to access the security policy hierarchy by levels, such as computer policy and user policy.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned enumerator provides successive <ph id="ph1">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> objects that represent the policy at the respective (machine, user, enterprise, application domain) level of the hierarchy.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>These objects are the live policy objects; altering these objects can have unpredictable results.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Minimum policy hierarchy consists of a machine level, an enterprise level, and a user level.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the hierarchy can include additional levels.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An enumerator for <ph id="ph1">&lt;xref href="System.Security.Policy.PolicyLevel"&gt;&lt;/xref&gt;</ph> objects that compose the security policy hierarchy.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the security policy engine, providing it with evidence of the calling code's identity.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is determined by the security policy.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The evidence set used to evaluate policy.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The set of permissions that can be granted by the security system.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Determines what permissions to grant to code based on the specified evidence.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the security policy engine, providing it with an array of <ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned permission set represents only those permissions that apply to every evidence in the array.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>These permissions are either equivalent to, or a subset of the permissions that policy would have granted to each individual evidence.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method behaves as if you were performing an intersection on the results of resolving policy on each of the <ph id="ph1">&lt;xref:System.Security.Policy.Evidence&gt;</ph> objects in the array.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An array of evidence objects used to evaluate policy.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The set of permissions that is appropriate for all of the provided evidence.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Determines what permissions to grant to code based on the specified evidence and requests.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the security policy engine, providing it with evidence of the calling code's identity and the set of permissions the code requests.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is determined by the security policy.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the set of permissions that would be granted by the security system, and returns the set of permissions that would be denied as an output parameter.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effective granted permissions are those in the granted set that are not in the denied set.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The evidence set used to evaluate policy.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The required permissions the code needs to run.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The optional permissions that will be used if granted, but aren't required for the code to run.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The denied permissions that must never be granted to the code even if policy otherwise permits it.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An output parameter that contains the set of permissions not granted.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The set of permissions that would be granted by the security system.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Policy fails to grant the minimum required permissions specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">reqdPset</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets a collection of code groups matching the specified evidence.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful in analyzing how a specified policy configuration works with specific kinds of evidence.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Code groups will be returned from all applicable levels of the policy hierarchy matching the <ph id="ph1">`evidence`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The evidence set against which the policy is evaluated.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An enumeration of the set of code groups matching the evidence.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Determines which permissions to grant to code based on the specified evidence, excluding the policy for the <ph id="ph1">&lt;xref href="System.AppDomain"&gt;&lt;/xref&gt;</ph> level.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the security policy engine and provides it with evidence of the calling code's identity.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is determined by the system security policy exclusive of any <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> policy.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The evidence set used to evaluate policy.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The set of permissions that can be granted by the security system.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Saves the modified security policy state.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method saves the policy as exposed by <ph id="ph1">&lt;xref:System.Security.SecurityManager.PolicyHierarchy%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph>, and other classes that represent configuration of the security policy.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless this method is called, changes made to the policy objects will not be saved and will not affect subsequent application runs.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Saves a modified security policy level loaded with <ph id="ph1">&lt;xref href="System.Security.SecurityManager.LoadPolicyLevelFromFile(System.String,System.Security.PolicyLevelType)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Policy.PolicyLevel&gt;</ph> will be saved to the same location from which it loaded.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The policy level object to be saved.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This method uses code access security (CAS) policy, which is obsolete in the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>To enable CAS policy for compatibility with earlier versions of the .NET Framework, use the <bpt id="p1">[</bpt><ph id="ph1">&lt;legacyCasPolicy&gt;</ph> element<ept id="p1">](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether security is enabled.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used by the <bpt id="p1">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept></source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`-security`</ph> (<ph id="ph2">`-s`</ph>) option to turn off code-based security.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.SecurityManager.SecurityEnabled%2A&gt;</ph> provides a way for administrators to disable code access security.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>When code access security is disabled, all code access demands succeed.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Effectively, this grants all code <ph id="ph1">`FullTrust`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disabling code access security bypasses the security system so that code might perform slightly better than the equivalent security policy granting <ph id="ph1">`FullTrust`</ph> to all code.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not disable role-based security; therefore, <ph id="ph1">&lt;xref:System.Security.Permissions.PrincipalPermission&gt;</ph> demands are not affected.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disabling code access security makes the system vulnerable to attacks by malicious code such as viruses and worms.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Disabling code access security does not automatically block managed code from running in any way.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>It only causes managed code to run without restriction by the code access security system, and should only be done with the most extreme caution.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Turning off security to gain extra performance should only be done when other security measures have been taken to help protect system security.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of other security precautions include disconnecting from public networks, physically securing computers, and so on.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>A change to this property is not persisted in the registry until <ph id="ph1">&lt;xref:System.Security.SecurityManager.SavePolicy%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>New processes will not be affected by the change until it is persisted in the registry.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the value of this property in a running process does not necessarily change the state in the expected manner.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure changes have taken effect, you must call <ph id="ph1">&lt;xref:System.Security.SecurityManager.SavePolicy%2A&gt;</ph> and start a new process.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if security is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The code that calls this method does not have <ph id="ph1">&lt;xref href="System.Security.Permissions.SecurityPermissionFlag.ControlPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>