<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">578bc1f64e785eabf1f04d56b98239f7745785a7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.ToolStripItem.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">faea3bad7d06675043fc7d2839a7609d388b67e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1c72de4d647dab5f770d7c3bf11c63d0b8d0abb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the abstract base class that manages events and layout for all the elements that a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph> can contain.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> is an element such as a button, combo box, text box, or label that can be contained in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control or a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph> control, which is similar to a Windows shortcut menu.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> class manages the painting and keyboard and mouse input, including drag-and-drop input, for these elements, and the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> class manages events and layout within the elements themselves.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> classes either inherit directly from <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, or they inherit indirectly from <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> through <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripControlHost&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripDropDownItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> controls must be contained in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph>, or <ph id="ph5">&lt;xref:System.Windows.Forms.ContextMenuStrip&gt;</ph> and cannot be added directly to a form.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The various container classes are designed to contain an appropriate subset of <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> A given <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> cannot have more than one parent <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must copy of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> and add it to other <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the elements that derive from the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> class and which therefore can be hosted in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A toolbar button that supports images and text.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A text label typically used in a status bar or <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> as a comment or title.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A non-selectable space or space with a vertical bar that visually groups elements.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> that hosts a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripComboBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripTextBox&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripProgressBar&gt;</ph>, other Windows Forms controls, or custom controls.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripComboBox&gt;</ph> is a text box in which the user can enter text, along with a list from which the user can select text to fill the text box.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripTextBox&gt;</ph> enables the user to enter text.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripProgressBar&gt;</ph> represents a Windows progress bar control contained in a <ph id="ph2">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> that hosts a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripSplitButton&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripDropDownButton&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> is a selectable option displayed on a menu or context menu.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripSplitButton&gt;</ph> is a combination of a regular button and a drop-down button.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripDropDownButton&gt;</ph> is a button that supports drop-down functionality.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>A panel in a <ph id="ph1">&lt;xref:System.Windows.Forms.StatusStrip&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> class with the specified name, image, and event handler.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the name of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> to display on the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Click"&gt;&lt;/xref&gt;</ph> event when the user clicks the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> class with the specified display text, image, event handler, and name.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The text to display on the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The Image to display on the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The event handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Click"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The name of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> assigned to the control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get or set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibilityObject%2A&gt;</ph> property, you must add a reference to the Accessibility assembly installed with the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about accessible objects, see the "Active Accessibility" section in the MSDN Library at <bpt id="p1">[</bpt>http://msdn.microsoft.com/library<ept id="p1">](http://msdn.microsoft.com/library)</ept>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For samples, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> assigned to the control; if no <ph id="ph2">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> is currently assigned to the control, a new instance is created when this property is first accessed</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the default action description of the control for use by accessibility client applications.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleDefaultActionDescription%2A&gt;</ph> property describes the object's primary method of manipulation from the user's viewpoint.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property should be a verb or a short verb phrase.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not all objects have default actions, and some objects might have a default action that is related to its <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName&gt;</ph> property, such as in the following examples:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>A selected check box has a default action of "Uncheck" and a value of "Checked."</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cleared check box has a default action of "Check" and a value of "Unchecked."</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>A button labeled <bpt id="p1">**</bpt>Print<ept id="p1">**</ept> has a default action of "Press," with no value.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A label or a text box control that shows <bpt id="p1">**</bpt>Printer<ept id="p1">**</ept> has no default action, but would have a value of "Printer."</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about properties of accessible objects, see "Content of Descriptive Properties" in the "Active Accessibility" section of the MSDN Library, at http://msdn.microsoft.com/library.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For samples, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The default action description of the control, for use by accessibility client applications.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets or sets the description that will be reported to accessibility client applications.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>An object's <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A&gt;</ph> property provides a textual description about an object's visual appearance.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The description is primarily used to provide greater context for low-vision or blind users, but can also be used for context searching or other applications.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A&gt;</ph> property is needed if the description is not obvious, or if it is not redundant based on the object's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleObject.State%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleObject.Value%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a button labeled <bpt id="p1">**</bpt>OK<ept id="p1">**</ept> would not need additional information, but a button that shows a picture of a cactus would.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A&gt;</ph> and, perhaps, <ph id="ph3">&lt;xref:System.Windows.Forms.AccessibleObject.Help%2A?displayProperty=fullName&gt;</ph> properties for the cactus button would describe its purpose, but the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleDescription%2A&gt;</ph> property would convey information that is less tangible, such as "A button that shows a picture of a cactus."</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about properties of accessible objects, see "Content of Descriptive Properties" in the "Active Accessibility" section of the MSDN Library, at http://msdn.microsoft.com/library.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For samples, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The description of the control used by accessibility client applications.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the control for use by accessibility client applications.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleName%2A&gt;</ph> property is a label that briefly describes and identifies the object within its container, such as the text in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripButton&gt;</ph>, the name of a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph>, or a label displayed next to a <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripTextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about properties of accessible objects, see "Content of Descriptive Properties" in the "Active Accessibility" section of the MSDN Library, at http://msdn.microsoft.com/library.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For samples, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The name of the control, for use by accessibility client applications.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets the accessible role of the control, which specifies the type of user interface element of the control.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A&gt;</ph> property describes what kind of user interface element an object is.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the control's role cannot be determined, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AccessibleRole%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.AccessibleRole?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about properties of accessible objects, see "Content of Descriptive Properties" in the "Active Accessibility" section of the MSDN Library, at http://msdn.microsoft.com/library.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For samples, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AccessibleObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleRole"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleRole.PushButton"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleRole"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the item aligns towards the beginning or end of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a stack overflow layout, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Alignment%2A&gt;</ph> property along with the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=fullName&gt;</ph> property to control the end to which items are aligned in a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, or to determine the end to which they are already aligned.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=fullName&gt;</ph> property is <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.No&gt;</ph>, items marked as <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemAlignment.Left&gt;</ph> are aligned to the left side of the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and items marked <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItemAlignment.Right&gt;</ph> are aligned to the right.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.RightToLeft%2A?displayProperty=fullName&gt;</ph> property is <ph id="ph2">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>, items marked as <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemAlignment.Left&gt;</ph> are aligned to the right side of the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and items marked <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItemAlignment.Right&gt;</ph> are aligned to the left.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>In flow and table layouts, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Alignment%2A&gt;</ph> property is ignored.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>In flow or table layout, use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Dock%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Anchor%2A&gt;</ph> property to align the items within the row or table cell.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemAlignment.Left"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether drag-and-drop and item reordering are handled through events that you implement.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> property to <ph id="ph4">`false`</ph> to respond to drag-and-drop behavior you have defined in the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter?displayProperty=fullName&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave?displayProperty=fullName&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.ToolStripItem.DragDrop?displayProperty=fullName&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A&gt;</ph> property to <ph id="ph2">`false`</ph> and set the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> property to <ph id="ph4">`true`</ph> to cause the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> class to handle drag-and-drop and item reordering privately.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting both the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AllowDrop%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.AllowItemReorder%2A&gt;</ph> properties to <ph id="ph3">`true`</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if drag-and-drop operations are allowed in the control; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.AllowDrop"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip.AllowItemReorder"&gt;&lt;/xref&gt;</ph> are both set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Gets or sets the edges of the container to which a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is bound and determines how a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is resized with its parent.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Anchor%2A&gt;</ph> property to define how a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> is automatically resized as its parent control is resized.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anchoring a control to its parent control ensures that the anchored edges remain in the same position relative to the edges of the parent control when the parent control is resized.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AnchorStyles"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The value is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.AnchorStyles"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the item is automatically sized.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AutoSize%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to cause the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> to adjust either its height or width, depending on the orientation of the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, to ensure that the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> uses only the required amount of space.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> has a minimum size if the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.AutoSize%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AutoSize%2A&gt;</ph> property to <ph id="ph2">`false`</ph> if you want a <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> to be smaller than the system-defined minimum size or to have a <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> size of zero.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is automatically sized; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to use the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Text"&gt;&lt;/xref&gt;</ph> property or the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem.ToolTipText"&gt;&lt;/xref&gt;</ph> property for the <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> ToolTip.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Text%2A&gt;</ph> property as the default source for the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> content.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A&gt;</ph> to <ph id="ph2">`false`</ph> to use <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A&gt;</ph> as the source for <ph id="ph4">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> content.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use this property, you must also set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to use the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem.Text"&gt;&lt;/xref&gt;</ph> property for the ToolTip; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> should be placed on a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Available%2A&gt;</ph> property is different from the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Visible%2A&gt;</ph> property in that <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.Available%2A&gt;</ph> indicates whether the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> is shown, while <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.Visible%2A&gt;</ph> indicates whether the <ph id="ph6">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> and its parent are shown.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting either <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Available%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Visible%2A&gt;</ph> to <ph id="ph3">`true`</ph> or <ph id="ph4">`false`</ph> sets the other property to <ph id="ph5">`true`</ph> or <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is placed on a <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Available"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color for the item.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.BackColor%2A&gt;</ph> property does not support transparent colors unless the <ph id="ph2">`SupportsTransparentBackColor`</ph> value of <ph id="ph3">&lt;xref:System.Windows.Forms.ControlStyles?displayProperty=fullName&gt;</ph> is set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.BackColor%2A&gt;</ph> property is an ambient property.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> has the same <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that represents the background color of the item.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultBackColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.BackColor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.BackColor%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.BackColorChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets or sets the background image displayed in the item.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.BackgroundImage%2A&gt;</ph> property to place a graphic image onto an item.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Images with translucent or transparent colors are not supported by Windows Forms controls as background images.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not supported on child controls whose <ph id="ph1">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> that represents the image to display in the background of the item.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets or sets the background image layout used for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout.Tile"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets the size and location of the item.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Bounds%2A&gt;</ph> property to determine the size and location of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike other controls, a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> has no property that enables you to set the upper-left corner of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> relative to the upper-left corner of the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to set the absolute position of a <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, you must override the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and define a custom implementation of the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.SetItemLocation%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the size and location of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the item can be selected.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> can be selected; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is clicked.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event passes an <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> to its event handler, so it only indicates that a click has occurred.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need more specific mouse information (button, number of clicks, wheel rotation, or location), use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseUp&gt;</ph> events which pass a <ph id="ph3">&lt;xref:System.Windows.Forms.MouseEventArgs&gt;</ph> to the event handler.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have two event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item is double-clicked that does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event might be raised twice.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets the area where content, such as text and icons, can be placed within a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> without overwriting background borders.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ContentRectangle%2A&gt;</ph> property to do custom painting of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> containing four integers that represent the location and size of <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> contents, excluding its border.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creates a new accessibility object for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether to display the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolTip"&gt;&lt;/xref&gt;</ph> that is defined as the default.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Gets a value indicating what is displayed on the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemDisplayStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemDisplayStyle.ImageAndText"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets the default margin of an item.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DefaultMargin%2A&gt;</ph> property to configure a default margin for a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> representing the margin.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Gets the internal spacing characteristics of the item.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DefaultPadding%2A&gt;</ph> property to configure a default size for a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is more efficient than setting the size in the constructor of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets the default size of the item.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.DefaultSize%2A&gt;</ph> property represents the <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph> of the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> when it is initially created.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AutoSize%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> is sized automatically in accordance with the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> orientation.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can manually adjust the size of the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> by setting its <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.AutoSize%2A&gt;</ph> property value to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The default <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether items on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph> are hidden after they are clicked.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the item is hidden after it is clicked; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Gets or sets whether text and images are displayed on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DisplayStyle%2A&gt;</ph> to set the values of an item's Text and Image properties while displaying only what you want.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically used to change only the display style when showing the same item in a different context.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemDisplayStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemDisplayStyle.ImageAndText"&gt;&lt;/xref&gt;</ph> .</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DisplayStyle"&gt;&lt;/xref&gt;</ph> has changed.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DisplayStyleChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Gets or sets which <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> borders are docked to its parent control and determines how a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is resized with its parent.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property applies only to flow layouts.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Dock%2A&gt;</ph> property to define how a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> is automatically resized as its parent control is resized.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, setting <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Dock%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.Forms.DockStyle.Left&gt;</ph> causes the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> to align itself with the left edges of its parent control and to resize as the parent control is resized.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls are docked in their Z-order, which is the visual layering of controls on a form along the form's Z-axis (depth).</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>A control can be docked to one edge of its parent container or can be docked to all edges and fill the parent container.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Anchor%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Dock%2A&gt;</ph> properties are mutually exclusive.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one can be set at a time, and the last one set takes precedence.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DockStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Begins a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the drag operation needs to interact with applications in another process, the <ph id="ph1">`data`</ph> parameter must either be a base managed class (such as <ph id="ph2">&lt;xref:System.String?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Bitmap?displayProperty=fullName&gt;</ph>, or <ph id="ph4">&lt;xref:System.Drawing.Imaging.Metafile?displayProperty=fullName&gt;</ph>), an object that implements <ph id="ph5">&lt;xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName&gt;</ph>, or an object that implements <ph id="ph6">&lt;xref:System.Windows.Forms.IDataObject&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The object to be dragged.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The drag operations that can occur.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DragDropEffects"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Occurs when the item is double-clicked with the mouse.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>A double-click is determined by the mouse settings of the user's operating system.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can set the time between clicks of a mouse button that should be considered a double-click rather than two clicks.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event is raised every time a control is double-clicked.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have two event handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.DoubleClick&gt;</ph> events of a <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph>, the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.DoubleClick&gt;</ph> events are raised when the form is double-clicked and both methods are called.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an item is double-clicked that does not support the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoubleClick&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event might be raised twice.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> can be activated by double-clicking the mouse.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> can be activated by double-clicking the mouse; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Occurs when the user drags an item and the user releases the mouse button, indicating that the item should be dropped into this item.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Occurs when the user drags an item into the client area of this item.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter&gt;</ph> event is raised when the user first drags the mouse cursor over the item during a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following remarks describe how and when events related to drag-and-drop operations are raised.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A&gt;</ph> method determines the item under the current cursor location.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then checks to see if the item is a valid drop target.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked in the following manner:</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse enters another item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter&gt;</ph> for that control is raised.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse moves but stays within the same item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Continue&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position, as follows:</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Drop&gt;</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Cancel&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DragEventArgs.X%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DragEventArgs.Y%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DragEventArgs&gt;</ph> are in screen coordinates, not client coordinates.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Occurs when the user drags an item and the mouse pointer is no longer over the client area of this item.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised when the user drags the cursor out of the control or the user cancels the current drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following remarks describe how and when events related to drag-and-drop operations are raised.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A&gt;</ph> method determines the item under the current cursor location.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then checks to see if the item is a valid drop target.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked in the following manner:</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse enters another item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter&gt;</ph> for that control is raised.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse moves but stays within the same item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Continue&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position, as follows:</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Drop&gt;</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Cancel&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>Occurs when the user drags an item over the client area of this item.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised when the mouse cursor moves within the bounds of the control during a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following remarks describe how and when events related to drag-and-drop operations are raised.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A&gt;</ph> method determines the item under the current cursor location.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then checks to see if the item is a valid drop target.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked in the following manner:</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse enters another item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter&gt;</ph> for that control is raised.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse moves but stays within the same item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Continue&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position, as follows:</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Drop&gt;</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Cancel&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the parent control of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is enabled.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the parent control of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is enabled; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Enabled"&gt;&lt;/xref&gt;</ph> property value has changed.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Enabled%2A&gt;</ph> property is changed by either a programmatic modification or user interaction.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.EnabledChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Gets or sets the font of the text displayed by the item.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Font%2A&gt;</ph> property to get or set the font that will be used by default for painting and text in the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> to apply to the text displayed by the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultFont"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Gets or sets the foreground color of the item.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The foreground <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> of the item.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultForeColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.ForeColor"&gt;&lt;/xref&gt;</ph> property value changes.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ForeColor%2A&gt;</ph> property is changed by either a programmatic modification or through interaction.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ForeColorChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Retrieves the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> that is the container of the current <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GetCurrentParent%2A&gt;</ph> is a read-only accessor to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Parent%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parent differs from an owner in that a parent denotes the returned current <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> in which the item is displayed, which might be in the overflow area.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> that is the container of the current <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Retrieves the size of a rectangular area into which a control can be fit.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The custom-sized area for a control.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> ordered pair, representing the width and height of a rectangle.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Occurs during a drag operation.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event is raised when a drag-and-drop operation is started.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.GiveFeedback&gt;</ph> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following remarks describe how and when events related to drag-and-drop operations are raised.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A&gt;</ph> method determines the item under the current cursor location.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then checks to see if the item is a valid drop target.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked in the following manner:</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse enters another item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter&gt;</ph> for that control is raised.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse moves but stays within the same item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Continue&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position, as follows:</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Drop&gt;</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Forms.DragAction.Cancel&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Gets or sets the height, in pixels, of a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the height, in pixels.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Gets or sets the image that is displayed on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> to be displayed.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Gets or sets the alignment of the image on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph> property to get or set image alignment on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.TextAlign%2A&gt;</ph> property to get or set text alignment on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Drawing.ContentAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Drawing.ContentAlignment.MiddleLeft"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Drawing.ContentAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Gets or sets the index value of the image that is displayed on the item.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph> property specifies the position of the image in the image list.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph> property specifies the image itself.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The zero-based index of the image in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.ImageList"&gt;&lt;/xref&gt;</ph> that is displayed for the item.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The default is -1, signifying that the image list is empty.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The value specified is less than -1.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>Gets or sets the key accessor for the image in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip.ImageList"&gt;&lt;/xref&gt;</ph> that is displayed on a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph> property specifies the position of the image in the image list.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph> property specifies the image itself.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A string representing the key of the image.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether an image on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is automatically resized to fit in a container.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Image%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ImageIndex%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ImageKey%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> properties pertain to various aspects of image handling.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use images in <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls by setting these properties directly or by setting the run-time–only <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>Image scaling is determined by the interaction of properties in both <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>, as follows:</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageScalingSize%2A&gt;</ph> is the scale of the final image as determined by the combination of the image's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.ImageScaling%2A&gt;</ph> setting and the container's <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> setting.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`true`</ph> (the default) and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.SizeToFit&gt;</ph>, no image scaling occurs, and the <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> size is that of the largest item, or a prescribed minimum size.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.AutoSize%2A&gt;</ph> is <ph id="ph2">`false`</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling&gt;</ph> is <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItemImageScaling.None&gt;</ph>, neither image nor <ph id="ph5">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> scaling occurs.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemImageScaling"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemImageScaling.SizeToFit"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>Gets or sets the color to treat as transparent in a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> image.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Invalidates the specified region of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> by adding it to the update region of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>, which is the area that will be repainted at the next paint operation, and causes a paint message to be sent to the <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the region to invalidate.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Invalidates the entire surface of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> and causes it to be redrawn.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the object has been disposed of.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the control has been disposed of; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Determines whether a character is an input character that the item recognizes.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called during window message preprocessing to determine whether the given input character should be preprocessed or sent directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the specified character is sent directly to the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the method returns <ph id="ph1">`false`</ph>, the character is preprocessed and only sent to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> if it is not consumed by the preprocessing phase.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The preprocessing of a character includes checking whether the character is a mnemonic of another control.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The character to test.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character should be sent directly to the item and not preprocessed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputChar%2A&gt;</ph> method during window-message preprocessing to determine whether the specified key is a regular input key that should be sent directly to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> or a special key (such as PAGE UP, PAGE DOWN, ENTER, ESC, TAB, or arrow keys) that should be preprocessed.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the latter case, the key is sent to the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> only if it is not consumed by the preprocessing phase.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the container of the current <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> is a <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the container of the current <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> is a <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripDropDown"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Placement"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItemPlacement.Overflow"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem.Placement"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItemPlacement.Overflow"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Occurs when the location of a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is updated.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised if the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> is updated by either a programmatic modification or through interaction.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.LocationChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Gets or sets the space between the item and adjacent items.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> representing the space between the item and adjacent items.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Gets or sets how child menus are merged with parent menus.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MergeAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.MergeAction.MatchOnly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.MergeAction"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of a merged item within the current <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MergeIndex%2A&gt;</ph> property to get or set the index of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> so that you can access it for menu-merging operations.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>An integer representing the index of the merged item, if a match is found, or -1 if a match is not found.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer is over the item and a mouse button is pressed.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse events occur in the following order:</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseHover&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer enters the item.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse events occur in the following order:</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseHover&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer hovers over the item.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse events occur in the following order:</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseHover&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer leaves the item.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse events occur in the following order:</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseHover&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer is moved over the item.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse events occur in the following order:</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseHover&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer is over the item and a mouse button is released.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mouse events occur in the following order:</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.MouseHover&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.MouseDown&gt;</ph></source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the item.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Name%2A&gt;</ph> property can be used as a key into the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItemCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>A string representing the name.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Raises the AvailableChanged event.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnAvailableChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.BackColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Bounds"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnBoundsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Click"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DisplayStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnDisplayStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragDrop"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnDragDrop%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragEnter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnDragEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnDragLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragOver"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnDragOver%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.EnabledChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.FontChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.ForeColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.GiveFeedback"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnGiveFeedback%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.GiveFeedbackEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Layout"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LayoutEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.LocationChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.MouseDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.MouseEnter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.MouseHover"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnMouseHover%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.MouseLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.MouseMove"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.MouseUp"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.OwnerChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnOwnerChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.FontChanged"&gt;&lt;/xref&gt;</ph> event when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem.Font"&gt;&lt;/xref&gt;</ph> property has changed on the parent of the <ph id="ph3">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged%2A&gt;</ph> method to notify inheritors of the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Font%2A&gt;</ph> property that the font has changed.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnOwnerFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Paint"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.BackColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnParentBackColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ParentChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnParentChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The original parent of the item.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The new parent of the item.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.EnabledChanged"&gt;&lt;/xref&gt;</ph> event when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem.Enabled"&gt;&lt;/xref&gt;</ph> property value of the item's container changes.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnParentEnabledChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.ForeColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnParentForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.RightToLeftChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnParentRightToLeftChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.QueryContinueDrag"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnQueryContinueDrag%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.QueryContinueDragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.RightToLeftChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnRightToLeftChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.TextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.VisibleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OnVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the item is attached to the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripOverflowButton"&gt;&lt;/xref&gt;</ph> or can float between the two.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Overflow%2A&gt;</ph> property in stack layouts.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>In flow and table layouts, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> overflow button is not rendered, and therefore the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Overflow%2A&gt;</ph> property is ignored.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemOverflow"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemOverflow.AsNeeded"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemOverflow"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source>Gets or sets the owner of this item.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Owner%2A&gt;</ph> returns the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> whose Items collection contains the current <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the best way to reference <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip.ImageList%2A&gt;</ph> or other properties in the top-level <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> without writing special code to handle overflow.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Owner%2A&gt;</ph> remains the same even if the item falls into the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripOverflow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Owner%2A&gt;</ph> can be <ph id="ph2">`null`</ph> for certain elements that are in the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip.DisplayedItems%2A&gt;</ph> collection but not in the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip.Items%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> that owns or is to own the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Owner"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.OwnerChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Gets the parent <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> of this <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.OwnerItem%2A&gt;</ph> of an <bpt id="p1">**</bpt>Open<ept id="p1">**</ept><ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph> would typically be a <bpt id="p2">**</bpt>File<ept id="p2">**</ept><ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripMenuItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>The parent <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> of this <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Gets or sets the internal spacing, in pixels, between the item's contents and its edges.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> representing the item's internal spacing, in pixels.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve">
          <source>Occurs when the item is redrawn.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>Gets or sets the parent container of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GetCurrentParent%2A&gt;</ph> is a read-only accessor to the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Parent%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parent differs from an owner in that a parent denotes the returned current <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> in which the item is displayed, which might be in the overflow area.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> raises paint events and so on, while the owner <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> contains shared data such as image lists.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Parent%2A&gt;</ph> property is set by the layout manager on the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStrip"&gt;&lt;/xref&gt;</ph> that is the parent container of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>Generates a <ph id="ph1">`Click`</ph> event for a <ph id="ph2">`ToolStripItem`</ph>.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>Gets the current layout of the item.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inspect the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Placement%2A&gt;</ph> property in a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.LayoutCompleted&gt;</ph> event to determine whether an item was placed on the main <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, the overflow <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph>, or if it is not currently showing at all.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>The typical reasons why an item is not displayed are that the item did not fit on the main <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> and its <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Overflow%2A&gt;</ph> property was set to <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItemOverflow.Never&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItemPlacement"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the state of the item is pressed.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the state of the item is pressed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>Processes a command key.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called during message preprocessing to handle command keys.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>Command keys are keys that always take precedence over regular input keys.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of command keys include accelerators and menu shortcuts.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method must return <ph id="ph1">`true`</ph> to indicate that it has processed the command key, or <ph id="ph2">`false`</ph> to indicate that the key is not a command key.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base-class implementation of <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ProcessCmdKey%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Processes a dialog key.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called during message preprocessing to handle the ENTER and SPACEBAR keys in order to raise the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called only if the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.IsInputKey%2A&gt;</ph> method indicates that the item is not processing the key.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed by the item; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>Processes a mnemonic character.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called to give an item the opportunity to process a mnemonic character.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method should determine whether the item is in a state to process mnemonics and if whether the given character represents a mnemonic.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>If so, the method should perform the action associated with the mnemonic and return <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, the method should return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>This base-class implementation relies on the host <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> control to call the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.IsMnemonic%2A&gt;</ph> method to determine whether the given character matches a mnemonic in the item's text.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.Click&gt;</ph> event and returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve">
          <source>The character to process.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve">
          <source>Occurs when an accessibility client application invokes help for the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> class to allow users to invoke help on your accessible object by pressing the F1 key.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.HelpProvider&gt;</ph> provides you with complete information in the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>Occurs during a drag-and-drop operation and allows the drag source to determine whether the drag-and-drop operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event is raised when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event allows the drag source to determine whether the drag-and-drop operation should be canceled.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following remarks describe how and when events related to drag-and-drop operations are raised.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DoDragDrop%2A&gt;</ph> method determines the item under the current cursor location.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then checks to see if the item is a valid drop target.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the item is a valid drop target, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the drag-and-drop effect specified.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of drag-and-drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes in the mouse cursor position, keyboard state, and mouse button state are tracked in the following manner:</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user moves out of a window, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse enters another item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragEnter&gt;</ph> for that control is raised.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the mouse moves but stays within the same item, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a change in the keyboard or mouse button state, the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.QueryContinueDrag&gt;</ph> event is raised and determines whether to continue the drag, to drop the data, or to cancel the operation based on the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A&gt;</ph> property of the event's <ph id="ph3">&lt;xref:System.Windows.Forms.QueryContinueDragEventArgs&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Continue`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> event is raised to continue the operation and the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> event is raised with the new effect so appropriate visual feedback can be set.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of valid drop effects, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DragDropEffects&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.DragOver&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.GiveFeedback&gt;</ph> events are paired so that as the mouse moves across the drop target, the user is given the most up-to-date feedback on the mouse's position, as follows:</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Drop`</ph>, the drop effect value is returned to the source, so the source application can perform the appropriate operation on the source data; for example, cut the data if the operation was a move.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of <ph id="ph1">&lt;xref:System.Windows.Forms.DragAction&gt;</ph> is <ph id="ph2">`Cancel`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.DragLeave&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not relevant to this class.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether items are to be placed from right to left and text is to be written from right to left.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if items are to be placed from right to left and text is to be written from right to left; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>Mirrors automatically the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> image when the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem.RightToLeft"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">&lt;xref href="System.Windows.Forms.RightToLeft.Yes"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to automatically mirror the image; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.RightToLeft"&gt;&lt;/xref&gt;</ph> property value changes.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.RightToLeftChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Selects the item.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the item is selected.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> is selected; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Sets the size and location of the item.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the size and location of the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> to the specified visible state.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically override this method to change the visibility behavior of the control.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>When overriding <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.SetVisibleCore%2A&gt;</ph> in a derived class, be sure to call the base class's <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.SetVisibleCore%2A&gt;</ph> method to force the visibility of the control to change.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the <ph id="ph2">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> visible; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether to show or hide shortcut keys.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shortcut keys, such as CTRL+C for copying, provide keyboard alternatives to selecting a command with a mouse or other pointing device.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to show shortcut keys; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve">
          <source>Gets or sets the size of the item.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph>, representing the width and height of a rectangle.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that contains data about the item.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains data about the control.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source>Gets or sets the text that is to be displayed on the item.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an access key to the item by adding an ampersand ("&amp;") before a letter in the text value.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Create Access Keys for Windows Forms Controls<ept id="p1">](~/docs/framework/winforms/controls/how-to-create-access-keys-for-windows-forms-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem.Text%2A&gt;</ph> property as the default source for the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> content.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A&gt;</ph> to <ph id="ph2">`false`</ph> to use <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A&gt;</ph> as the source for <ph id="ph4">&lt;xref:System.Windows.Forms.ToolTip&gt;</ph> content.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>A string representing the item's text.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve">
          <source>The default value is the empty string ("").</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>Gets or sets the alignment of the text on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripLabel"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.TextAlign%2A&gt;</ph> property to get or set text alignment on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ImageAlign%2A&gt;</ph> property to get or set image alignment on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Drawing.ContentAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Drawing.ContentAlignment.MiddleRight"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>The value assigned is not one of the <ph id="ph1">&lt;xref href="System.Drawing.ContentAlignment"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Text"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.TextChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Gets the orientation of text used on a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripTextDirection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source>Gets or sets the position of <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph> text and image relative to each other.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.TextImageRelation%2A&gt;</ph> property to define or determine the relative placement of the image with respect to the text on a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Items that lack an image, text, or both are treated as special cases so that the <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem&gt;</ph> does not display a blank spot for the missing element or elements.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.TextImageRelation"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.TextImageRelation.ImageBeforeText"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Gets or sets the text that appears as a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolTip"&gt;&lt;/xref&gt;</ph> for a control.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A&gt;</ph> works only if <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip.ShowItemToolTips%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.AutoToolTip%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property for the item is used as the <ph id="ph4">&lt;xref:System.Windows.Forms.ToolStripItem.ToolTipText%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve">
          <source>A string representing the ToolTip text.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the name of the <ph id="ph2">&lt;xref href="System.ComponentModel.Component"&gt;&lt;/xref&gt;</ph>, if any.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>This method should not be overridden.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the name of the <ph id="ph2">&lt;xref href="System.ComponentModel.Component"&gt;&lt;/xref&gt;</ph>, if any, or <ph id="ph3">`null`</ph> if the <ph id="ph4">&lt;xref href="System.ComponentModel.Component"&gt;&lt;/xref&gt;</ph> is unnamed.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the item is displayed.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the item is displayed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.Visible"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> does not raise the <ph id="ph3">&lt;xref:System.Windows.Forms.ToolStripItem.VisibleChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raise this event with specific property settings.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Gets or sets the width in pixels of a <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the width in pixels.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragDrop"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragDrop%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragEnter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.ToolStripItem.DragLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">`DragOver`</ph> event.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.ToolStripItem.System%23Windows%23Forms%23IDropTarget%23OnDragOver%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DragEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>