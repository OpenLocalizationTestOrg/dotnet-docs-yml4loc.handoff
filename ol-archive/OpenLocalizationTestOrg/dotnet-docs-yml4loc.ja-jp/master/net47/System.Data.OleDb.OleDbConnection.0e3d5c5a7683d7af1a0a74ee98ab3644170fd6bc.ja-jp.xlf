<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f2996c01de4375dbd49bf512696587272e87009</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.OleDb.OleDbConnection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1085efea838797a484f8db46266af7545cc01796</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f698620edda89960bc1b20eee98fafcb1d39a20</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an open connection to a data source.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object represents a unique connection to a data source.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>With a client/server database system, it is equivalent to a network connection to the server.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object may not be available.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, all properties are set to their initial values.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of these values, see the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can open more than one DataReader on a single <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> goes out of scope, it is not closed.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept>, or by using the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object within a <ph id="ph3">`Using`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To deploy high-performance applications, you must use connection pooling.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see <bpt id="p1">[</bpt>OLE DB, ODBC, and Oracle Connection Pooling<ept id="p1">](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a fatal <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbException&gt;</ph> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> might be closed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the user can reopen the connection and continue.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that creates an instance of the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> makes security demands using the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbPermission&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can verify that their code has sufficient permissions by using the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbPermissionAttribute&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users and administrators can also use the <bpt id="p1">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id="p1">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept> to modify security policy at the computer, user, and enterprise levels.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Code Access Security and ADO.NET<ept id="p1">](~/docs/framework/data/adonet/code-access-security.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling warning and informational messages from the data server, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object does not support setting or retrieving dynamic properties specific to an OLE DB provider.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only properties that can be passed in the connection string for the OLE DB provider are supported.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>15</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> class with the specified connection string.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new instance of <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>15</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>empty string ("")</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value for these properties only by using the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The connection used to open the database.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Starts a database transaction with the current <ph id="ph1">&lt;xref href="System.Data.IsolationLevel"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbTransaction.Rollback%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Starts a database transaction with the specified isolation level.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly commit or roll back the transaction using the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbTransaction.Commit%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbTransaction.Rollback%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify an isolation level, the default isolation level for the underlying provider is used.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify an isolation level with the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A&gt;</ph> method, use the overload that takes the <ph id="ph2">`isolationLevel`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The isolation level under which the transaction should run.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An object representing the new transaction.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Parallel transactions are not supported.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Changes the current database for an open <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value supplied in the <ph id="ph1">`database`</ph> parameter must be a valid database name.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`database`</ph> parameter cannot contain a null value, an empty string, or a string with only blank characters.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The database name.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The database name is not valid.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The connection is not open.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Cannot change the database.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Closes the connection to the data source.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> method rolls back any pending transactions.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> is called while handling a <ph id="ph2">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> event, no additional <ph id="ph3">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> events are fired.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application can call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> more than one time.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>No exception is generated.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> on an <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, an <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>, or any other managed object in the <ph id="ph4">`Finalize`</ph> method of your class.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a finalizer, you should only release unmanaged resources that your class owns directly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your class does not own any unmanaged resources, do not include a <ph id="ph1">`Finalize`</ph> method in your class definition.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Garbage Collection<ept id="p1">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the string used to open a database.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> is designed to match OLE DB connection string format as closely as possible with the following exceptions:</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The "Provider = <ph id="ph1">`value`</ph> " clause is required.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you cannot use "Provider = MSDASQL" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL).</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access ODBC data sources, use the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object that is in the <ph id="ph2">&lt;xref:System.Data.Odbc&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>, minus security information if <ph id="ph2">`Persist Security Info`</ph> is set to <ph id="ph3">`false`</ph> (default).</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the <ph id="ph1">`Persist Security Info`</ph> keyword to <ph id="ph2">`true`</ph> (not recommended).</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain a high level of security, it is strongly recommended that you use the <ph id="ph1">`Integrated Security`</ph> keyword with <ph id="ph2">`Persist Security Info`</ph> set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property to connect to a variety of data sources.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates several possible connection strings.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`Data Source`</ph> keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about connection strings, see <bpt id="p1">[</bpt>Using Connection String Keywords with SQL Server Native Client<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=126696)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property can be set only when the connection is closed.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the connection string values have corresponding read-only properties.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the connection string is set, these properties are updated, except when an error is detected.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, none of the properties are updated.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> properties return only those settings that are contained in the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> on a closed connection resets all connection string values and related properties.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes the password.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set a connection string that includes "Initial Catalog= AdventureWorks", and then reset the connection string to "Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI", the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Database%2A&gt;</ph> property is no longer set to AdventureWorks.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The Initial Catalog value of the connection string corresponds to the <ph id="ph1">`Database`</ph> property.)</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>A preliminary validation of the connection string is performed when the property is set.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If values for the <ph id="ph1">`Provider`</ph>, <ph id="ph2">`Connect Timeout`</ph>, <ph id="ph3">`Persist Security Info`</ph>, or <ph id="ph4">`OLE DB Services`</ph> are included in the string, these values are checked.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an application calls the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Open%2A&gt;</ph> method, the connection string is fully validated.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection string contains invalid or unsupported properties, a run-time exception, such as <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>, is generated.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible to supply connection information for an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> in a Universal Data Link (UDL) file; however you should avoid doing so.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>UDL files are not encrypted and expose connection string information in clear text.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equal sign (=) connects each keyword and its value.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The single quotation mark is also useful if the value starts with a double-quote character.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, the double quotation mark can be used if the value starts with a single quotation mark.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, spaces within a string literal keyword or value are preserved.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single or double quotation marks may be used within a connection string without using delimiters (for example, <ph id="ph1">`Data Source= my'Server`</ph> or <ph id="ph2">`Data Source= my"Server`</ph>) unless a quotation-mark character is the first or last character in the value.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the hypothetical connection string</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>the keyword is "key=word" and the value is "value".</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keywords are not case sensitive.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as "validpassword;database= somedb" in an attempt to attach to a different database.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of <ph id="ph1">`Persist Security Info= false`</ph> does not affect the <ph id="ph2">`Extended Properties`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>An invalid connection string argument has been supplied or a required connection string argument has not been supplied.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>A value of 0 indicates no limit, and should be avoided in a <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> because an attempt to connect will wait indefinitely.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The time in seconds to wait for a connection to open.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The default value is 15 seconds.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The value set is less than 0.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Creates and returns an <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;&lt;/xref&gt;</ph> object associated with the <ph id="ph2">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbCommand"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Gets the name of the current database or the database to be used after a connection is opened.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Database%2A&gt;</ph> property updates dynamically.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the current database using a SQL statement or the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A&gt;</ph> method, an informational message is sent and the property is updated automatically.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The name of the current database or the name of the database to be used after a connection is opened.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Gets the server name or file name of the data source.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection to the database is closed, the <ph id="ph1">`DataSource`</ph> property returns whatever is contained in <ph id="ph2">`ConnectionString`</ph> for the data source keyword.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection is open and the <ph id="ph1">`ConnectionString`</ph> data source keyword's value starts with "&amp;#124;datadirectory&amp;#124;", the property returns whatever is contained in <ph id="ph2">`ConnectionString`</ph> for the data source keyword only.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the connection to the database is open, the property returns what the native provider returns for the <ph id="ph1">`DBPROP_INIT_DATASOURCE,`</ph> and if that is empty, the native provider’s <ph id="ph2">`DBPROP_DATASOURCENAME`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The server name or file name of the data source.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept> for this purpose.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can continue to enlist in an existing distributed transaction using the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A&gt;</ph> method if auto-enlistment is disabled.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A&gt;</ph> returns an exception if the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> has already started a transaction using <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <ph id="ph1">&lt;xref:System.Data.OleDbClient.OleDbCommand&gt;</ph> object), <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A&gt;</ph> rolls back the local transaction and enlists in the existing distributed transaction as requested.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.EnterpriseServices.ITransaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Enlists in the specified transaction as a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>New in ADO.NET 2.0 is support for using the <ph id="ph1">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it enlists a connection in a <ph id="ph1">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id="p1">**</bpt>EnlistTransaction<ept id="p1">**</ept> takes advantage of functionality available in the <ph id="ph2">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id="p2">**</bpt>EnlistDistributedTransaction<ept id="p2">**</ept>, which uses a <ph id="ph3">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about distributed transactions, see <bpt id="p1">[</bpt>Distributed Transactions<ept id="p1">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A reference to an existing <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> in which to enlist.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema table is returned as a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> that has the same format as the OLE DB schema rowset specified by the <ph id="ph2">`schema`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">`restrictions`</ph> parameter to filter the rows to be returned in the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> (for example, by specifying restrictions for table name, type, owner, or schema).</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you pass values in the array, include empty strings or nulls for array elements that do not contain values.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you pass an empty array to <ph id="ph1">`restrictions`</ph>, all rows (one for each table) are returned in default order.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values in the array correspond to the order of the columns in the source table and <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the first element in the restrictions array is compared to first column in the rowset.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> method calls the underlying OLE DB <bpt id="p1">**</bpt>IDBSchemaRowset::GetRowset<ept id="p1">**</ept> method using standard common language runtime conversion rules.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>COM Data Types<ept id="p1">](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)</ept>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve information about literals by using <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides information equivalent to calling the OLE DB <bpt id="p1">**</bpt>IDBInfo::GetLiteralInfo<ept id="p1">**</ept> interface, or the ADO <bpt id="p2">**</bpt>Connection.OpenSchema<ept id="p2">**</ept> method with the <ph id="ph1">`adSchemaDBInfoLiterals`</ph> constant.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbSchemaGuid"&gt;&lt;/xref&gt;</ph> values that specifies the schema table to return.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> array of restriction values.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>These are applied in the order of the restriction columns.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains the requested schema information.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The specified set of restrictions is invalid.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> is closed.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The specified schema rowset is not supported by the OLE DB provider.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">schema</ph><ept id="p1">&lt;/code&gt;</ept> parameter contains a value of <ph id="ph2">&lt;xref href="System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals"&gt;&lt;/xref&gt;</ph> and the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">restrictions</ph><ept id="p2">&lt;/code&gt;</ept> parameter contains one or more restrictions.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`collectionName`</ph> is specified as null, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> will contain information about all the metadata that is available, and its restrictions.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Returns schema information for the data source of this <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`collectionName`</ph> is specified as null, the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> will contain information about all the metadata that is available, and its restrictions.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`restrictionValues`</ph> parameter can supply <bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept> depth of values which are specified by the restrictions collection for a specific collection.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this is the "Tables" collection.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the "Tables" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner "Carl," you must pass in the following values (at a minimum): null, "Carl".</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a restriction value is not passed in, the default values are used for that restriction.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the empty string ("") is considered to be the value for the specified parameter.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Specifies the name of the schema to return.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Specifies a set of restriction values for the requested schema.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Data.DataTable"&gt;&lt;/xref&gt;</ph> that contains schema information.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Occurs when the provider sends a warning or an informational message.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients that want to process warnings or informational messages sent by the server should create an <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbInfoMessageEventHandler&gt;</ph> delegate to listen to this event.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.InfoMessage&gt;</ph> event occurs when a message with low severity is returned from the data source.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Low severity messages are those that do not cause an exception.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>For Microsoft SQL Server, this includes error messages that have a severity of 10 or less</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information and an example, see <bpt id="p1">[</bpt>Connection Events<ept id="p1">](~/docs/framework/data/adonet/connection-events.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Opens a database connection with the property settings specified by the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection.ConnectionString"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> draws an open connection from the connection pool if one is available.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it establishes a new connection to the data source.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can open more than one DataReader on a single <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> goes out of scope, it is not closed.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must explicitly close the connection by calling <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept>, or using the connection within a <ph id="ph2">`Using`</ph> statement.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The connection is already open.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A connection-level error occurred while opening the connection.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets the name of the OLE DB provider specified in the "Provider= " clause of the connection string.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The name of the provider as specified in the "Provider= " clause of the connection string.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The default value is an empty string.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>Indicates that the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> object pool can be released when the last underlying connection is released.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ReleaseObjectPool`</ph> can be called to free resources that would otherwise be reserved for pooled <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that calling the method alone does not actually release the active connections that exist in the pool.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following must occur before the pool is finally disposed:</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> to return the connection object to the pool.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Allow each connection object to time out of the pool.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invoke garbage collection.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, if you call <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> on all active connections, and invoke garbage collection, but do not call <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A&gt;</ph>, the resources reserved for the pooled objects will remain available.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Updates the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection.State"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some OLE DB providers can check the current state of the connection.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the database server has recycled since you opened your <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph> property will continue to return <ph id="ph3">`Open`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ResetState%2A&gt;</ph> method and then checking the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph> property will tell you that the connection is no longer open.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ResetState%2A&gt;</ph> method relies on functionality in the OLE DB Provider to verify the current state of the connection.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Gets a string that contains the version of the server to which the client is connected.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A&gt;</ph> property maps to the OLE DB DBPROP_DBMSVER property.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A&gt;</ph> is not supported by the underlying OLE DB provider, an empty string is returned.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The version is of the form <bpt id="p1">*</bpt>##.##.####<ept id="p1">*</ept>, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>The provider must render the product version in this form but can also append the product-specific version—for example, "04.01.0000 Rdb 4.1".</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string is of the form <bpt id="p1">*</bpt>major.minor.build<ept id="p1">*</ept>, where major and minor are exactly two digits and build is exactly four digits.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The version of the connected server.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The connection is closed.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Gets the current state of the connection.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are allowed state changes:</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>From <ph id="ph1">`Closed`</ph> to <ph id="ph2">`Open`</ph>, using the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection.Open%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>From <ph id="ph1">`Open`</ph> to <ph id="ph2">`Closed`</ph>, using either the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> method or the <bpt id="p1">**</bpt>Dispose<ept id="p1">**</ept> method of the <ph id="ph4">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>In previous version of the .NET Framework, calling the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>With the release of the .NET Framework 2.0, this is no longer an issue.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Data.ConnectionState"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The default is Closed.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.ICloneable.Clone"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that is a copy of this instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>