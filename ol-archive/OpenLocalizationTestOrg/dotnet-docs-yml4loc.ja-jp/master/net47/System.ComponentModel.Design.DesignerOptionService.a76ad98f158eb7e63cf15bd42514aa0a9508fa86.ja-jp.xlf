<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2f802e8782f6413b536b18b5f4bebfbe33bd4b17</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.Design.DesignerOptionService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">536ea1781e7f027aa1964e24f3fabe44e82ac3fc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">031bbfab5512b2c67ad6e33ae38d6f2e49d870bc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a base class for getting and setting option values for a designer.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerOptionService&gt;</ph> class provides a collection of options.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these option collections has an indexer that enables it to be further filtered.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each option collection contains its own set of options, as well as a rollup of all of its child options.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the event of a naming conflict between properties, the outermost options object takes precedence.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following <bpt id="p1">**</bpt>Tools &amp;#124; Options<ept id="p1">**</ept> user interface (UI) structure shows how the outermost options object takes on greater importance:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>WindowsFormsDesigner &amp;#124; General<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>SnapToGrid<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>ShowGrid<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>GridSize<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Given a <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerOptionService&gt;</ph> named <ph id="ph2">`service`</ph>, to get to the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.Design.ParentControlDesigner.GridSize%2A&gt;</ph> property, you would make the following call:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>IDesignerOptionServiceExample#2<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CPP/idesigneroptionservicecontrol.cpp#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>IDesignerOptionServiceExample#2<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_Winforms/IDesignerOptionServiceExample/CS/idesigneroptionservicecontrol.cs#2)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>IDesignerOptionServiceExample#2<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IDesignerOptionServiceExample/VB/idesigneroptionservicecontrol.vb#2)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This works, until you want to move <ph id="ph1">&lt;xref:System.Windows.Forms.Design.ParentControlDesigner.GridSize%2A&gt;</ph> to another page.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerOptionService&gt;</ph> provides no discovery mechanism.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not know what string to pass in, the service cannot find the property value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerOptionService&gt;</ph> class addresses these issues.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can query collections, and there is a type converter defined on the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection&gt;</ph> object that marks the collection as expandable.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this type converter, you can pass the entire designer option service to a property window and visually inspect the service.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignerOptionService"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection"&gt;&lt;/xref&gt;</ph> with the given name and adds it to the given parent.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter specifies an object whose public properties are used in the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection.Properties%2A&gt;</ph> collection of the option collection.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter can be <ph id="ph2">`null`</ph> if this options collection does not offer any properties.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties are wrapped in such a way that passing anything into the component parameter of the <ph id="ph1">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph> is ignored, and the <ph id="ph2">`value`</ph> object is substituted.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The parent designer option collection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>All collections have a parent except the root object collection.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of this collection.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The object providing properties for this collection.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Can be <ph id="ph1">`null`</ph> if the collection should not provide any properties.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection"&gt;&lt;/xref&gt;</ph> with the given name.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;parent&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the options collection for this service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is always a global options collection that contains child collections.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection"&gt;&lt;/xref&gt;</ph> populated with available designer options.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignerOptionService.DesignerOptionCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerOptionService.PopulateOptionCollection%2A&gt;</ph> method is called on demand the first time a user asks for child options or properties of an options collection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can populate the <ph id="ph1">`options`</ph> collection by calling the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignerOptionService.CreateOptionCollection%2A&gt;</ph> method and passing this collection as the parent.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The collection to populate.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Shows the options dialog box for the given object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignerOptionService.ShowDialog%2A&gt;</ph> method must be implemented for the <ph id="ph2">`optionObject`</ph> parameter's options dialog box to be shown.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The options collection containing the object to be invoked.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The actual options object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the dialog box is shown; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the value of an option defined in this package.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The page to which the option is bound.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name of the option value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The value of the option named <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">valueName</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pageName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;valueName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Sets the value of an option defined in this package.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The page to which the option is bound</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The name of the option value.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The value of the option.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;pageName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;valueName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>