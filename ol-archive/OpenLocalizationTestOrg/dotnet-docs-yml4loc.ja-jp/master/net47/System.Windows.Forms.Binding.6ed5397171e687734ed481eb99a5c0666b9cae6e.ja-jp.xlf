<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">79f62534d60286de18babebcff2e735a5d0bc563</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.Binding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d3c8a3e7ce8a3e24346d4d4e6181f632d497fd45</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2a7300a02ad0a42dbbfe32d612a8a125f132ded</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the simple binding between the property value of an object and the property value of a control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class to create and maintain a simple binding between the property of a control and either the property of an object, or the property of the current object in a list of objects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example of the first case, you can bind the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control to the <ph id="ph3">`FirstName`</ph> property of a <ph id="ph4">`Customer`</ph> object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an example of the second case, you can bind the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control to the <ph id="ph3">`FirstName`</ph> property of a <ph id="ph4">&lt;xref:System.Data.DataTable&gt;</ph> that contains customers.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class also enables you to format values for display through the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event and to retrieve formatted values through the <ph id="ph3">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When constructing a <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> instance with <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.%23ctor%2A&gt;</ph> constructor, you must specify three items:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of the control property to bind to.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The navigation path that resolves to a list or property in the data source.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The navigation path is also used to create the object's <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.BindingMemberInfo%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>First, you must specify name of the control property you want to bind the data to.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to display data in a <ph id="ph1">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control, specify the <ph id="ph2">&lt;xref:System.Windows.Forms.TextBoxBase.Text%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Second, you can specify an instance of any one of the classes in the following table as the data source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Third, you must specify the navigation path, which can be an empty string (""), a single property name, or a period-delimited hierarchy of names.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the navigation path to an empty string, the <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> method will be called on the underlying data source object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source is a <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph>, which can contain multiple <ph id="ph2">&lt;xref:System.Data.DataColumn&gt;</ph> objects, the navigation path must be used to resolve to a specific column.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the data source is a <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>, <ph id="ph2">&lt;xref:System.Data.DataViewManager&gt;</ph>, or <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph>, you are actually binding to a <ph id="ph4">&lt;xref:System.Data.DataView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, the bound rows are actually <ph id="ph1">&lt;xref:System.Data.DataRowView&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>A period-delimited navigation path is required when the data source is set to an object that contains multiple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects (such as a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.DataViewManager&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use a period-delimited navigation path when you bind to an object whose properties return references to other objects (such as a class with properties that return other class objects).</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following navigation paths all describe valid data fields:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Size.Height"</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Suppliers.CompanyName"</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Regions.regionsToCustomers.CustomerFirstName"</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Regions.regionsToCustomers.customersToOrders.ordersToDetails.Quantity"</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each member of the path can return either a property that resolves to a single value (such as an integer), or a list of values (such as an array of strings).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although each member in the path can be a list or property, the final member must resolve to a property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each member builds on the previous member: "Size.Height" resolves to the <ph id="ph1">&lt;xref:System.Drawing.Size.Height%2A&gt;</ph> property for the current <ph id="ph2">&lt;xref:System.Drawing.Size&gt;</ph>; "Regions.regionsToCustomers.CustomerFirstName" resolves to the first name for the current customer, where the customer is one of the customers for the current region.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataRelation&gt;</ph> returns a list of values by linking one <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> to a second <ph id="ph3">&lt;xref:System.Data.DataTable&gt;</ph> in a <ph id="ph4">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> objects, you can specify the data member as a <ph id="ph3">&lt;xref:System.Data.DataTable.TableName%2A&gt;</ph> followed by a <ph id="ph4">&lt;xref:System.Data.DataRelation.RelationName%2A&gt;</ph>, and then a <ph id="ph5">&lt;xref:System.Data.DataColumn.ColumnName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> named "Suppliers" contains a <ph id="ph2">&lt;xref:System.Data.DataRelation&gt;</ph> named "suppliers2products", the data member could be "Suppliers.suppliers2products.ProductName".</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source can consist of a set of related classes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, imagine a set of classes that catalogs solar systems.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class named <ph id="ph1">`System`</ph> contains a property named <ph id="ph2">`Stars`</ph> that returns a collection of <ph id="ph3">`Star`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">`Star`</ph> object has <ph id="ph2">`Name`</ph> and <ph id="ph3">`Mass`</ph> properties, as well as a <ph id="ph4">`Planets`</ph> property that returns a collection of <ph id="ph5">`Planet`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this system, each planet also has <ph id="ph1">`Mass`</ph> and <ph id="ph2">`Name`</ph> properties.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">`Planet`</ph> object further has a <ph id="ph2">`Moons`</ph> property that returns a collection of <ph id="ph3">`Moon`</ph> objects, each of which also has <ph id="ph4">`Name`</ph> and <ph id="ph5">`Mass`</ph> properties.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify a <ph id="ph1">`System`</ph> object as the data source, you can specify any of the following as the data member:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Stars.Name"</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Stars.Mass"</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Stars.Planets.Name"</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Stars.Planets.Mass"</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Stars.Planets.Moons.Name"</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Stars.Planets.Moons.Mass"</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Controls that can be simple-bound feature a collection of <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects in a <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection&gt;</ph>, which you can access through the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DataBindings%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add a <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> to the collection by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlBindingsCollection.Add%2A&gt;</ph> method, thereby binding a property of the control to a property of an object (or to a property of the current object in a list).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can simple-bind to any object that derives from the <ph id="ph1">&lt;xref:System.Windows.Forms.Control?displayProperty=fullName&gt;</ph> class, for example, the following Windows controls:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.Forms.ListControl.SelectedValue%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.CheckedListBox&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.ListBox&gt;</ph> control is simple bound.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class is an abstract class that manages all the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> objects for a particular data source and data member.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that derive from <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> are the <ph id="ph2">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Forms.PropertyManager&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>How a <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> is managed depends on whether the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> is a list binding or a property binding.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if it is a list binding, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> to specify a <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> in the list; the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph>, therefore, determines which item (out of all items in the list) is actually bound to a control.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>To return the appropriate <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add a new row to a set of controls bound to the same <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.DataSource%2A&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.AddNew%2A&gt;</ph> method of the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingContext.Item%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingContext&gt;</ph> class to return the appropriate <ph id="ph3">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>To escape the addition of the new row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.CancelCurrentEdit%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> class that simple-binds the indicated control property to the specified data member of the data source.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify an instance of any of the following classes for the data source:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for more information about creating the <ph id="ph2">`dataMember`</ph> string.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a binding to a control's property, the new <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> inspects the events exposed by the bound control and attaches to two particular events:</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>An event named <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> (for example, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=fullName&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you attempt to bind to a property that does not exist, an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph> will be thrown when the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding&gt;</ph> is added to the control's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.DataBindings%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The name of the control property to bind.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the data source.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The property or list to bind to.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;propertyName&lt;/code&gt;</ph> is neither a valid property of a control nor an empty string ("").</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The property given by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist on the control.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> class that binds the indicated control property to the specified data member of the data source, and optionally enables formatting to be applied.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name of the control property to bind.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the data source.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The property or list to bind to.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to format the displayed data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The property given by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist on the control.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The property given is a read-only property.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Formatting is disabled and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> is neither a valid property of a control nor an empty string ("").</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> class that binds the specified control property to the specified data member of the specified data source.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Optionally enables formatting and propagates values to the data source based on the specified update setting.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify an instance of any of the following classes for the data source:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for more information about creating the <ph id="ph2">`dataMember`</ph> string.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a binding to a control's property, the new <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> inspects the events exposed by the bound control and attaches to two particular events:</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>An event named <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> (for example, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=fullName&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The name of the control property to bind.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the data source.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The property or list to bind to.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to format the displayed data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataSourceUpdateMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The property given by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist on the control.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The data source or data member or control property specified are associated with another binding in the collection.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> class that binds the indicated control property to the specified data member of the specified data source.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Optionally enables formatting, propagates values to the data source based on the specified update setting, and sets the property to the specified value when a <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> is returned from the data source.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify an instance of any of the following classes for the data source:</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for more information about creating the <ph id="ph2">`dataMember`</ph> string.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a binding to a control's property, the new <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> inspects the events exposed by the bound control and attaches to two particular events:</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>An event named <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> (for example, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=fullName&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The name of the control property to bind.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the data source.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The property or list to bind to.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to format the displayed data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataSourceUpdateMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be applied to the bound control property if the data source value is <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The property given by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist on the control.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The data source or data member or control property specified are associated with another binding in the collection.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> class that binds the specified control property to the specified data member of the specified data source.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Optionally enables formatting with the specified format string; propagates values to the data source based on the specified update setting; and sets the property to the specified value when a <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> is returned from the data source.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify an instance of any of the following classes for the data source:</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for more information about creating the <ph id="ph2">`dataMember`</ph> string.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a binding to a control's property, the new <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> inspects the events exposed by the bound control and attaches to two particular events:</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>An event named <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> (for example, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=fullName&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The name of the control property to bind.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the data source.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The property or list to bind to.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to format the displayed data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataSourceUpdateMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be applied to the bound control property if the data source value is <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>One or more format specifier characters that indicate how a value is to be displayed.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The property given by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist on the control.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The data source or data member or control property specified are associated with another binding in the collection.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> class with the specified control property to the specified data member of the specified data source.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Optionally enables formatting with the specified format string; propagates values to the data source based on the specified update setting; enables formatting with the specified format string; sets the property to the specified value when a <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> is returned from the data source; and sets the specified format provider.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify an instance of any of the following classes for the data source:</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any class</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> class for more information about creating the <ph id="ph2">`dataMember`</ph> string.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a binding to a control's property, the new <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> inspects the events exposed by the bound control and attaches to two particular events:</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>An event named <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> (for example, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColorChanged?displayProperty=fullName&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The name of the control property to bind.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> representing the data source.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The property or list to bind to.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to format the displayed data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataSourceUpdateMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be applied to the bound control property if the data source value is <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>One or more format specifier characters that indicate how a value is to be displayed.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An implementation of <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> to override default formatting behavior.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The property given by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">propertyName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist on the control.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The data source or data member or control property specified are associated with another binding in the collection.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Gets the control the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> is associated with.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.IBindableComponent"&gt;&lt;/xref&gt;</ph> the <ph id="ph2">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph> is associated with.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding.FormattingEnabled"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`true`</ph> and a binding operation is complete, such as when data is pushed from the control to the data source or vice versa</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised under any of the following conditions when <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.FormattingEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>:</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data from the data source is pushed onto the control property.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data from the control property is pushed onto the data source.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised at the completion of these operations, independent of the completion status.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a binding operation binds a null value to a <ph id="ph1">&lt;xref:System.Windows.Forms.DateTimePicker.Value%2A&gt;</ph> property, an exception is thrown, but the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.BindingComplete&gt;</ph> event still occurs.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The handler of this event can take the appropriate action, based on the success, error, or exceptions in the binding process, by examining the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;&lt;/xref&gt;</ph> for this <ph id="ph2">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> to iterate through a data-bound list by incrementing or decrementing the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class is abstract.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> class, which manages data-bound lists, inherits from the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingManagerBase"&gt;&lt;/xref&gt;</ph> that manages this <ph id="ph2">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets an object that contains information about this binding based on the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">dataMember</ph><ept id="p1">&lt;/code&gt;</ept> parameter in the <ph id="ph2">&lt;xref href="System.Windows.Forms.Binding.#ctor*"&gt;&lt;/xref&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingMemberInfo&gt;</ph> is created from the <ph id="ph2">`dataMember`</ph> string passed to the <ph id="ph3">&lt;xref:System.Windows.Forms.Binding.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingMemberInfo"&gt;&lt;/xref&gt;</ph> that contains information about this <ph id="ph2">&lt;xref href="System.Windows.Forms.Binding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets the control that the binding belongs to.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> that the binding belongs to.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Gets or sets when changes to the data source are propagated to the bound control property.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ControlUpdateMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ControlUpdateMode.OnPropertyChanged"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Gets the data source for this binding.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Possible data sources include:</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph></source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph></source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Data.DataViewManager&gt;</ph></source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any object that implements the <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any object</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that represents the data source.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Gets or sets the value to be stored in the data source if the control value is <ph id="ph1">`null`</ph> or empty.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.NullValue%2A&gt;</ph> property to specify the value displayed in a bound control when the data source contains <ph id="ph2">&lt;xref:System.DBNull&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be stored in the data source when the control property is empty or <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> for value types and <ph id="ph2">`null`</ph> for non-value types.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates when changes to the bound control property are propagated to the data source.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that even if this property is set to <ph id="ph1">&lt;xref:System.Windows.Forms.DataSourceUpdateMode.Never&gt;</ph>, the binding will update at least one time, when it is first established.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A value that indicates when changes are propagated.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataSourceUpdateMode.OnValidation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Occurs when the property of a control is bound to a data value.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event is raised when data is pushed from the data source into the control.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event to convert unformatted data from the data source into formatted data for display.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>When data is pulled from the control into the data source, the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> event is raised to unformat the displayed value, then the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event occurs to reformat the data for display.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures that the bound control displays correctly formatted data regardless of whether the user enters formatted or unformatted data in the control.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> events allow you to create custom formats for displaying data.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the data in a table is of type <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, you can display the data in the local currency format by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.ConvertEventArgs&gt;</ph> to the formatted value in the <ph id="ph4">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must consequently unformat the displayed value in the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event occurs whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</ph> value of the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> changes, which includes:</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first time the property is bound.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any time the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> changes.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever the data-bound list is sorted or filtered, which is accomplished when a <ph id="ph1">&lt;xref:System.Data.DataView&gt;</ph> supplies the list.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event also occurs after the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when a control loses focus, its contents are parsed.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Immediately afterward, as new data is pushed into the control, the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event occurs allowing the new contents to be formatted.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> that provides custom formatting behavior.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property will override the default formatting behavior, which uses the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property setting.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> implementation that provides custom formatting behavior.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Gets or sets the format specifier characters that indicate how a value is to be displayed.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format string used should follow standard .NET Framework format specifications.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Formatting Types in the .NET Framework<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The string of format specifier characters that indicate how a value is to be displayed.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether type conversion and formatting is applied to the control property data.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`true`</ph> also enables error-handling behavior and causes the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.BindingComplete&gt;</ph> event to be raised.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The handler of this event can take the appropriate action, based on the success, error, or exceptions in the binding process, by examining the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs.BindingCompleteState%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingCompleteEventArgs&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if type conversion and formatting of control property data is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the binding is active.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>A binding is active when it meets these conditions:</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>All its properties are set.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user did not call <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.ResumeBinding%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase.SuspendBinding%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> that the <ph id="ph4">&lt;xref:System.Windows.Forms.Binding&gt;</ph> belongs to.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The control to which the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding&gt;</ph> belongs has been created.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the binding is active; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be set as the control property when the data source contains a <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data source must contain <ph id="ph1">&lt;xref:System.DBNull&gt;</ph> for the <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.NullValue%2A&gt;</ph> property to be correctly applied.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data source type is a type such as a string or integer the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.NullValue%2A&gt;</ph> property will be ignored.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.NullValue%2A&gt;</ph> property is ignored if it is set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>A null value will be added to the data source when the control property is set to the object of <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.NullValue%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.NullValue%2A&gt;</ph> is set to a string value, comparisons are case-insensitive.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> to be set as the control property when the data source contains a <ph id="ph2">&lt;xref href="System.DBNull"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding.BindingComplete"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.OnBindingComplete%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.BindingCompleteEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding.Format"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.OnFormat%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ConvertEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Binding.Parse"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.OnParse%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ConvertEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Occurs when the value of a data-bound control changes.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> events allow you to create custom formats for displaying data.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the data in a table is of type <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, you can display the data in the local currency format by setting the <ph id="ph2">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.ConvertEventArgs&gt;</ph> to the formatted value in the <ph id="ph4">&lt;xref:System.Windows.Forms.Binding.Format&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must consequently unformat the displayed value in the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.Parse&gt;</ph> event occurs under the following conditions:</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> occurs.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.EndCurrentEdit%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.BindingManagerBase.Current%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingManagerBase&gt;</ph> changes (in other words, when the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingManagerBase.Position%2A&gt;</ph> changes).</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Handling and Raising Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the control's data-bound property.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.Binding.PropertyName%2A&gt;</ph> to specify the control property that you want to bind to a list in a data source.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most commonly, you bind a display property such as the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because you can bind any property of a control, you can programmatically create controls at run time using data from a database.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The name of a control property to bind to.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Sets the control property to the value read from the data source.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Reads the current value from the control property and writes it to the data source.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>