<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6d804a32ce05a1bcab9e128e5452539731d74025</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">034847d57d3fd5f30280b41d597325f61a135572</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b57572d614b90d18c68874267bfe6761ccf5ddbd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the implementation for the binary client formatter sink provider.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider&gt;</ph> creates client formatter sinks that use the <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> to serialize messages for the client channel through which remoting messages flow.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The function of the formatter sink is to generate the necessary headers and serialize the message to the stream.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the formatter sink, the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessage&gt;</ph> is forwarded to all sinks in the channel sink chain through the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink.AsyncProcessRequest%2A&gt;</ph> calls.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this stage, the message has already been serialized and is provided as information only.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sinks that need to create or modify the message must be placed in the sink chain before the formatter.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by implementing both the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Messaging.IMessageSink&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSink&gt;</ph> interfaces.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatter sink can then be placed in the sink chain later.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Formatter sinks use sink configuration properties to configure the channel at run time.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sink properties can be specified in a configuration file, or programmatically, inside of a <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a configuration file all values are represented by strings, but when building a property <ph id="ph1">&lt;xref:System.Collections.IDictionary&gt;</ph> programmatically, value types can be specified with their native values or with strings.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the sink configuration properties that can be specified for the current sink provider.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies whether the formatter will include versioning information.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values are <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using an instance of this object with untrusted data or across an unsecure channel is a security risk.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this object only with trusted data and across a secure channel.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Untrusted Data Security Risks<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=330378)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider"&gt;&lt;/xref&gt;</ph> class with default values.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider"&gt;&lt;/xref&gt;</ph> class with the given properties and provider data.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.IDictionary"&gt;&lt;/xref&gt;</ph> of configuration properties to use with the new instance of <ph id="ph2">&lt;xref href="System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Runtime.Remoting.Channels.SinkProviderData"&gt;&lt;/xref&gt;</ph> objects that contain provider data to use with the new instance of <ph id="ph3">&lt;xref href="System.Runtime.Remoting.Channels.BinaryClientFormatterSinkProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates a sink chain.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A&gt;</ph> method is called, it creates its own channel sink, forwards the <ph id="ph2">&lt;xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider.CreateSink%2A&gt;</ph> call to the next sink provider in the chain (if there is one), and ensures that the next sink and the current one are linked together.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Channel for which this sink chain is being constructed.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>URL of object to connect to or the channel URI for the target object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A channel data object that describes a channel on the remote server.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The first sink of the newly formed channel sink chain, or <ph id="ph1">`null`</ph>, which indicates that this provider will not or cannot provide a connection for this endpoint.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the next <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Channels.IClientChannelSinkProvider"&gt;&lt;/xref&gt;</ph> in the sink provider chain.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The next <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Channels.IClientChannelSinkProvider"&gt;&lt;/xref&gt;</ph> in the sink provider chain.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>