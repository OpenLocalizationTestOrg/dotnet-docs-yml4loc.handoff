<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">37075d312ade463a77c54f10980d7894ebb4c03a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Resources.ResXResourceReader.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">54e876034820d77939b26f45c7e3584d28320642</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ed1c34f6cda94fc1493af5007e09ee45a78061c0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates XML resource (.resx) files and streams, and reads the sequential resource name and value pairs.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class provides a default implementation of the <ph id="ph2">&lt;xref:System.Resources.IResourceReader&gt;</ph> interface that reads resource information in an XML format.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read resource information from a binary resource format, use the <ph id="ph1">&lt;xref:System.Resources.ResourceReader&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class to enumerate resources in .resx files by traversing the dictionary enumerator (<ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph>) that is returned by the <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You call the methods provided by <ph id="ph1">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> to advance to the next resource and to read the name and value of each resource in the .resx file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class provides two enumerators.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;</ph> method returns an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object; we recommend that you use this method to enumerate resources.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName&gt;</ph> method is an explicit interface implementation that returns an <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> object; we do not recommend its use.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method to obtain an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that is used to enumerate the resources in a .resx file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example includes a <ph id="ph1">`CreateResourceFile`</ph> routine that creates the necessary resource file.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the value of the <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName&gt;</ph> property is a <ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph> object rather than the resource value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes a resource item's comment available from the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and enumerates the resources in a .resx file,</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/cs/resxresourcereader2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Resources.ResXResourceReader.Class#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.resources.resxresourcereader.class/vb/resxresourcereader2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Resources.ResXDataNode&gt;</ph> items in the enumeration can be either:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Named resources along with their data.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Named resources along with the name of the file that contains the resource data.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Resources.ResXFileRef&gt;</ph> object that provides information about the resource, including its filename.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If relative file names are used, you should always set the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property to provide a reference point for the relative file path.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to retrieve named resources from a .resx file rather than enumerating its resources, you can instantiate a <ph id="ph1">&lt;xref:System.Resources.ResXResourceSet&gt;</ph> object and call its <ph id="ph2">`GetString`</ph> and <ph id="ph3">`GetObject`</ph> methods.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> exception is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class for the specified stream.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Dispose%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> methods do not close the stream you specify in this constructor.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class for the specified <ph id="ph2">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A text input stream that contains resources.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class for the specified resource file.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The path of the resource file to read.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class using an input stream and a type resolution service.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class using a stream and an array of assembly names.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An input stream that contains resources.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.AssemblyName"&gt;&lt;/xref&gt;</ph> objects that specifies one or more assemblies.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class using a text stream reader and a type resolution service.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A text stream reader that contains resources.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class using a <ph id="ph2">&lt;xref href="System.IO.TextReader"&gt;&lt;/xref&gt;</ph> object and an array of assembly names.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An object used to read resources from a stream of text.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.AssemblyName"&gt;&lt;/xref&gt;</ph> objects that specifies one or more assemblies.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class using a file name and a type resolution service.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> class using an XML resource file name and an array of assembly names.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The name of an XML resource file that contains resources.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.AssemblyName"&gt;&lt;/xref&gt;</ph> objects that specifies one or more assemblies.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the base path for the relative file path specified in a <ph id="ph1">&lt;xref href="System.Resources.ResXFileRef"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.BasePath%2A&gt;</ph> property is used to resolve relative file path references that are assigned to the <ph id="ph2">&lt;xref:System.Resources.ResXFileRef.FileName%2A&gt;</ph> property of <ph id="ph3">&lt;xref:System.Resources.ResXFileRef&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, its value is <ph id="ph1">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, and relative file path references are resolved in relationship to the current directory returned by the <ph id="ph2">&lt;xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should set this property before you begin enumerating resources.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A path that, if prepended to the relative file path specified in a <ph id="ph1">&lt;xref href="System.Resources.ResXFileRef"&gt;&lt;/xref&gt;</ph> object, yields an absolute path to a resource file.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>In a set operation, a value cannot be specified because the XML resource file has already been accessed and is in use.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph> enables the resources used by the <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> to be reallocated for other purposes.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.Close%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be called by either the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Object.Finalize%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A&gt;</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>This member overrides the <ph id="ph1">&lt;xref href="System.Object.Finalize"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an <ph id="ph2">&lt;xref href="System.ComponentModel.Design.ITypeResolutionService"&gt;&lt;/xref&gt;</ph> object to resolve type names specified in a resource.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A string containing XML resource-formatted information.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An object that resolves type names specified in a resource.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> object and initializes it to read a string whose contents are in the form of an XML resource file, and to use an array of <ph id="ph2">&lt;xref href="System.Reflection.AssemblyName"&gt;&lt;/xref&gt;</ph> objects to resolve type names specified in a resource.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A string whose contents are in the form of an XML resource file.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.AssemblyName"&gt;&lt;/xref&gt;</ph> objects that specifies one or more assemblies.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The assemblies are used to resolve a type name in the resource to an actual type.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>An object that reads resources from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileContents</ph><ept id="p1">&lt;/code&gt;</ept> string.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph> method retrieves the name/value pairs in the XML resource (.resx) stream or string associated with the current <ph id="ph2">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> before you call <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A&gt;</ph>, the resource items are retrieved as <ph id="ph4">&lt;xref:System.Resources.ResXDataNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, all resource nodes are returned regardless of type.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An enumerator for the current <ph id="ph1">&lt;xref href="System.Resources.ResourceReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Provides a dictionary enumerator that can retrieve the design-time properties from the current XML resource file or stream.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resources are stored as name/value pairs in a resource file or stream.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Design-time properties, which are called metadata, are stored in the resource file or stream along with runtime data resources.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph> method provides an <ph id="ph2">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object that can retrieve the metadata from the resource file or stream associated with the current <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> before you call <ph id="ph3">&lt;xref:System.Resources.ResXResourceReader.GetMetadataEnumerator%2A&gt;</ph>, no resource nodes are retrieved.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An enumerator for the metadata in a resource.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether <ph id="ph1">&lt;xref href="System.Resources.ResXDataNode"&gt;&lt;/xref&gt;</ph> objects are returned when reading the current XML resource file or stream.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A&gt;</ph> property before you begin enumerating resources.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, its value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if resource data nodes are retrieved; <ph id="ph2">`false`</ph> if resource data nodes are ignored.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>In a set operation, the enumerator for the resource file or stream is already open.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the current <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&lt;xref href="System.Collections.IEnumerable.GetEnumerator"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enumerate the resources in a .resx file, we recommend that you call the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName&gt;</ph> method, and then call the <ph id="ph2">`MoveNext`</ph> method on the returned <ph id="ph3">&lt;xref:System.Collections.IDictionaryEnumerator&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>An enumerator that can iterate through the name/value pairs in the XML resource (.resx) stream or string associated with the current <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Resources.ResXResourceReader"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&lt;xref href="System.IDisposable.Dispose"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Resources.ResXResourceReader&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>