<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">48f693418886e843bd5ffed6b238e2d5f2758090</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Drawing.Drawing2D.CustomLineCap.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33690f03222ad0433bcb63bd156b2d8f68d66056</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">366c3eb6d1e6fa1ab13e484966bca7edcf75f72c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Encapsulates a custom user-defined line cap.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is used to create custom cap styles.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> class with the specified outline and fill.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>One parameter must be passed a null value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;&lt;/xref&gt;</ph> object that defines the fill for the custom cap.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;&lt;/xref&gt;</ph> object that defines the outline of the custom cap.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> class from the specified existing <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration with the specified outline and fill.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>One parameter must be passed a null value.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;&lt;/xref&gt;</ph> object that defines the fill for the custom cap.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;&lt;/xref&gt;</ph> object that defines the outline of the custom cap.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The line cap from which to create the custom cap.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> class from the specified existing <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration with the specified outline, fill, and inset.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>One parameter must be passed a null value.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;&lt;/xref&gt;</ph> object that defines the fill for the custom cap.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.GraphicsPath"&gt;&lt;/xref&gt;</ph> object that defines the outline of the custom cap.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The line cap from which to create the custom cap.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The distance between the cap and the line.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration on which this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> is based.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration on which this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> is based.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets the distance between the cap and the line.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The distance between the beginning of the cap and the end of the line.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates an exact copy of this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> this method creates, cast as an object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Releases all resources used by this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object to be reallocated for other purposes.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Allows an <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the caps used to start and end lines that make up this custom cap.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration used at the end of a line within this cap.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Sets the caps used to start and end lines that make up this custom cap.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineCap"&gt;&lt;/xref&gt;</ph> enumeration used at the end of a line within this cap.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineJoin"&gt;&lt;/xref&gt;</ph> enumeration that determines how lines that compose this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> object are joined.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph> enumeration that is used to join lines and curves that make up the stroked path of this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.LineJoin"&gt;&lt;/xref&gt;</ph> enumeration this <ph id="ph2">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> object uses to join lines.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the amount by which to scale this <ph id="ph1">&lt;xref href="System.Drawing.Drawing2D.CustomLineCap"&gt;&lt;/xref&gt;</ph> Class object with respect to the width of the <ph id="ph2">&lt;xref href="System.Drawing.Pen"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The amount by which to scale the cap.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>