<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">919566f76d3d87604d3b875d813eee2c723559e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.AccessControl.RegistryAccessRule.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0615508539e4a4e5bf3b3eabf4a1b968f8269070</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe0740947ce7a515efa7c9fae2015a78072b49dd</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of access rights allowed or denied for a user or group.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an overview of these classes, and their relationship to the underlying Windows access control structures, see <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows access control security can only be applied to registry keys.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>It cannot be applied to individual key/value pairs stored in a key.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get a list of the rules currently applied to a registry key, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName&gt;</ph> method to get a <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object, and then use its <ph id="ph3">&lt;xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A&gt;</ph> method to obtain a collection of <ph id="ph4">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The underlying access control entries change as you apply and remove rules.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information in rules is merged if possible, to maintain the smallest number of access control entries.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> objects to specify access rights to allow or deny to a user or group.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> object always represents either allowed access or denied access, never both.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>To apply a rule to a registry key, use the <ph id="ph1">&lt;xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=fullName&gt;</ph> method to get the <ph id="ph2">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object by using its methods to add the rule, and then use the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to reattach the security object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes you make to a <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> object do not affect the access levels of the registry key until you call the <ph id="ph2">&lt;xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=fullName&gt;</ph> method to assign the altered security object to the registry key.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> objects are immutable.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security for a registry key is modified using the methods of the <ph id="ph1">&lt;xref:System.Security.AccessControl.RegistrySecurity&gt;</ph> class to add or remove rules; as you do this, the underlying access control entries are modified.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryAccessRule"&gt;&lt;/xref&gt;</ph> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor specifies default propagation and inheritance.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The user or group the rule applies to.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Must be of type <ph id="ph1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> or a type such as <ph id="ph2">&lt;xref href="System.Security.Principal.NTAccount"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id="ph3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryRights"&gt;&lt;/xref&gt;</ph> values indicating the rights allowed or denied.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;&lt;/xref&gt;</ph> values indicating whether the rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registryRights&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is neither of type <ph id="ph2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> nor of a type such as <ph id="ph3">&lt;xref href="System.Security.Principal.NTAccount"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id="ph4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryAccessRule"&gt;&lt;/xref&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor specifies default propagation and inheritance.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The name of the user or group the rule applies to.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryRights"&gt;&lt;/xref&gt;</ph> values indicating the rights allowed or denied.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;&lt;/xref&gt;</ph> values indicating whether the rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registryRights&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registryRights&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is a zero-length string.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is longer than 512 characters.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryAccessRule"&gt;&lt;/xref&gt;</ph> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName&gt;</ph> flag.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the flag is present, the rule is propagated as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the path for the grandchild subkey is S\CS\GS.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Propagation flags</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>S</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>CS</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>GS</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph></source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> flag is specified for <ph id="ph2">`inheritanceFlags`</ph> and the <ph id="ph3">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph> propagation flag is specified for <ph id="ph4">`propagationFlags`</ph>, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can specify the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName&gt;</ph> flag for <ph id="ph2">`inheritanceFlags`</ph>, there is no point in doing so.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the purposes of access control, the name/value pairs in a subkey are not separate objects.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The access rights to name/value pairs are controlled by the rights of the subkey.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, specifying the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The user or group the rule applies to.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Must be of type <ph id="ph1">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph> or a type such as <ph id="ph2">&lt;xref href="System.Security.Principal.NTAccount"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id="ph3">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryRights"&gt;&lt;/xref&gt;</ph> values specifying the rights allowed or denied.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;&lt;/xref&gt;</ph> flags specifying how access rights are inherited from other objects.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;&lt;/xref&gt;</ph> flags specifying how access rights are propagated to other objects.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;&lt;/xref&gt;</ph> values specifying whether the rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registryRights&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;propagationFlags&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registryRights&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is neither of type <ph id="ph2">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>, nor of a type such as <ph id="ph3">&lt;xref href="System.Security.Principal.NTAccount"&gt;&lt;/xref&gt;</ph> that can be converted to type <ph id="ph4">&lt;xref href="System.Security.Principal.SecurityIdentifier"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryAccessRule"&gt;&lt;/xref&gt;</ph> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName&gt;</ph> flag.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the flag is present, the rule is propagated as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the path for the grandchild subkey is S\CS\GS.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Propagation flags</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>S</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>CS</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>GS</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit&gt;</ph>, <ph id="ph2">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph></source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>X</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit&gt;</ph> flag is specified for <ph id="ph2">`inheritanceFlags`</ph> and the <ph id="ph3">&lt;xref:System.Security.AccessControl.PropagationFlags.InheritOnly&gt;</ph> propagation flag is specified for <ph id="ph4">`propagationFlags`</ph>, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can specify the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags?displayProperty=fullName&gt;</ph> flag for <ph id="ph2">`inheritanceFlags`</ph>, there is no point in doing so.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the purposes of access control, the name/value pairs in a subkey are not separate objects.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The access rights to name/value pairs are controlled by the rights of the subkey.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, specifying the <ph id="ph1">&lt;xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit&gt;</ph> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is equivalent to creating an <ph id="ph1">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object, by passing <ph id="ph2">`identity`</ph> to the <ph id="ph3">&lt;xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, and passing the newly created <ph id="ph4">&lt;xref:System.Security.Principal.NTAccount&gt;</ph> object to the <ph id="ph5">&lt;xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The name of the user or group the rule applies to.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryRights"&gt;&lt;/xref&gt;</ph> values indicating the rights allowed or denied.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.InheritanceFlags"&gt;&lt;/xref&gt;</ph> flags specifying how access rights are inherited from other objects.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.PropagationFlags"&gt;&lt;/xref&gt;</ph> flags specifying how access rights are propagated to other objects.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlType"&gt;&lt;/xref&gt;</ph> values specifying whether the rights are allowed or denied.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;registryRights&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritanceFlags&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;propagationFlags&lt;/code&gt;</ph> specifies an invalid value.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventRights&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is a zero-length string.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identity&lt;/code&gt;</ph> is longer than 512 characters.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Gets the rights allowed or denied by the access rule.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.RegistryAccessRule&gt;</ph> objects are immutable.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a new access rule representing a different user, different rights, or a different <ph id="ph1">&lt;xref:System.Security.AccessControl.AccessControlType&gt;</ph>, but you cannot modify an existing access rule.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Security.AccessControl.RegistryRights"&gt;&lt;/xref&gt;</ph> values indicating the rights allowed or denied by the access rule.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>