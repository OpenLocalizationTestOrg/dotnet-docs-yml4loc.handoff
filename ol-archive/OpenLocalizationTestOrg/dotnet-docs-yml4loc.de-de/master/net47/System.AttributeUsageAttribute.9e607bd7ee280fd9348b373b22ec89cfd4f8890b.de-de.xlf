<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">501a870ba89e4da7226c66424f39623bef571c16</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.AttributeUsageAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9b8405f1741912b9fbbc9447825548d6cd019b4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">525fc685cd56b41a63ab329538621e3fff91fa51</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the usage of another attribute class.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are defining your own attribute class, you can control the manner in which it is used by placing an <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> on your attribute class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The indicated attribute class must derive from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute classes have positional and named parameters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The three properties of <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> are set by defining the following parameters:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This positional parameter specifies the program elements that the indicated attribute can be placed on.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of all possible elements that you can place an attribute on is listed in the <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can combine several <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> values using a bitwise OR operation to get the desired combination of valid program elements.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> and <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AttributeUsageAttribute"&gt;&lt;/xref&gt;</ph> class with the specified list of <ph id="ph2">&lt;xref href="System.AttributeTargets"&gt;&lt;/xref&gt;</ph>, the <ph id="ph3">&lt;xref href="System.AttributeUsageAttribute.AllowMultiple"&gt;&lt;/xref&gt;</ph> value, and the <ph id="ph4">&lt;xref href="System.AttributeUsageAttribute.Inherited"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can combine several <ph id="ph1">&lt;xref:System.AttributeTargets&gt;</ph> values using a bitwise OR operation to get the desired combination of valid program elements.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For default property values, see the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.ValidOn%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.AttributeUsageAttribute.AllowMultiple%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The set of values combined using a bitwise OR operation to indicate which program elements are valid.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attribute that can be specified more than once for a program element is called a multi-use attribute.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attribute that can be specified only once is called a single-use attribute.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if more than one instance is allowed to be specified; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.AttributeUsageAttribute.Inherited%2A&gt;</ph> property determines:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether classes derived from a base class tagged with the attribute to which the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute is applied inherit that attribute.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether methods of derived classes that override a base class method tagged with the attribute to which the <ph id="ph1">&lt;xref:System.AttributeUsageAttribute&gt;</ph> attribute is applied inherit that attribute.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>(If a class inherits a base class member, it also inherits any attributes applied to that member.)</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the attribute can be inherited by derived classes and overriding members; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a set of values identifying which program elements that the indicated attribute can be applied to.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>One or several <ph id="ph1">&lt;xref href="System.AttributeTargets"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`All`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>