<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f11780fe79ea52a01e82c9075ab75e51199c888a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Serialization.ImportOptions.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1f6feba5b769d0f5c459d067d15cb9e1539ed2ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2ca362e495240943716ecf02104be67eda5d439f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the options that can be set on an <ph id="ph1">&lt;xref href="System.Runtime.Serialization.XsdDataContractImporter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> is used to generate code from XML schema using the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> CodeDOM.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate an XML schema from an assembly, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about importing and exporting schemas, see <bpt id="p1">[</bpt>Schema Import and Export<ept id="p1">](~/docs/framework/wcf/feature-details/schema-import-and-export.md)</ept> and <bpt id="p2">[</bpt>Importing Schema to Generate Classes<ept id="p2">](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ImportOptions"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;&lt;/xref&gt;</ph> instance that provides the means to check whether particular options for a target language are supported.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is done by passing an instance of the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeDomProvider&gt;</ph> class, which provides a <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A&gt;</ph> method to check whether it supports particular <ph id="ph3">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CodeDomProvider"&gt;&lt;/xref&gt;</ph> that provides the means to check whether particular options for a target language are supported.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An implementation of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.IDataContractSurrogate"&gt;&lt;/xref&gt;</ph> interface that handles schema import.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether types in generated code should implement the <ph id="ph1">&lt;xref href="System.ComponentModel.INotifyPropertyChanged"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This interface is used by <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the generated code should implement the <ph id="ph2">&lt;xref href="System.ComponentModel.INotifyPropertyChanged"&gt;&lt;/xref&gt;</ph> interface; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether generated code will be marked internal or public.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the code will be marked <ph id="ph2">`internal`</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether generated data contract classes will be marked with the <ph id="ph1">&lt;xref href="System.SerializableAttribute"&gt;&lt;/xref&gt;</ph> attribute in addition to the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.DataContractAttribute"&gt;&lt;/xref&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to generate classes with the <ph id="ph2">&lt;xref href="System.SerializableAttribute"&gt;&lt;/xref&gt;</ph> applied; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, importing a type that does not conform to a valid data contract schema will fail.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when this property is set to <ph id="ph1">`true`</ph>, all such types will be imported as types that implement the <ph id="ph2">&lt;xref:System.Xml.Serialization.IXmlSerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to import all schema types; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.IDictionary`2"&gt;&lt;/xref&gt;</ph> that contains the namespace mappings.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if there is a matching type in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A&gt;</ph> collection, that type will be used.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the collection contains the <ph id="ph1">&lt;xref:System.Collections.Generic.LinkedList%601&gt;</ph> of type integer, that type will be used instead of the array.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.Generic.ICollection`1"&gt;&lt;/xref&gt;</ph> that contains the referenced collection types.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Collections.Generic.IList`1"&gt;&lt;/xref&gt;</ph> containing types referenced in generated code.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.IList`1"&gt;&lt;/xref&gt;</ph> that contains the referenced types.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>