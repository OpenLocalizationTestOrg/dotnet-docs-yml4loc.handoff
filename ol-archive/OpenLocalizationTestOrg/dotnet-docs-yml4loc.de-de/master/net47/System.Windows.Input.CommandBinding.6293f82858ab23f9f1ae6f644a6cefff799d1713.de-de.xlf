<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e6466d8ef798194bc39099b6ce9971fe9689d302</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Input.CommandBinding.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7eef77f804338dae8f7ac2ea7951f44ce7865c8f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cd7277ae58621fcc0bb965252cc89fe8ed4f19e8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Binds a <ph id="ph1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph> to the event handlers that implement the command.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associates a command with the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph><ph id="ph3">/</ph><ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph><ph id="ph6">/</ph><ph id="ph7">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> events which implement and determine the status of the command.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called, the <ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph><ph id="ph5">/</ph><ph id="ph6">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> or the <ph id="ph7">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph><ph id="ph8">/</ph><ph id="ph9">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> events are raised on the command target.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the appropriate handlers are called.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the events are routed through the element tree until an element that has a <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is found.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> has limited use with an <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is not a<ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> binds the command to the <ph id="ph2">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> and the <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> which listen to the <ph id="ph4">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> routed events which are raised when the <ph id="ph6">&lt;xref:System.Windows.Input.RoutedCommand.Execute%2A&gt;</ph> and <ph id="ph7">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method of the <ph id="ph8">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> are called.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> class by using the specified <ph id="ph2">&lt;xref href="System.Windows.Input.ICommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The command to base the new <ph id="ph1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph> on.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> class by using the specified <ph id="ph2">&lt;xref href="System.Windows.Input.ICommand"&gt;&lt;/xref&gt;</ph> and the specified <ph id="ph3">&lt;xref href="System.Windows.Input.CommandBinding.Executed"&gt;&lt;/xref&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The command to base the new <ph id="ph1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph> on.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding.Executed"&gt;&lt;/xref&gt;</ph> event on the new <ph id="ph2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> class by using the specified <ph id="ph2">&lt;xref href="System.Windows.Input.ICommand"&gt;&lt;/xref&gt;</ph> and the specified <ph id="ph3">&lt;xref href="System.Windows.Input.CommandBinding.Executed"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Windows.Input.CommandBinding.CanExecute"&gt;&lt;/xref&gt;</ph> event handlers.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The command to base the new <ph id="ph1">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph> on.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding.Executed"&gt;&lt;/xref&gt;</ph> event on the new <ph id="ph2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding.CanExecute"&gt;&lt;/xref&gt;</ph> event on the new <ph id="ph2">&lt;xref href="System.Windows.Input.RoutedCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> initiates a check to determine whether the command can be executed on the command target.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called, the <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph> event is raised on the command target.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> handler for that <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event bubbles up the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed Event Information</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routing strategy</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bubbling</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delegate</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The corresponding tunneling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Input.ICommand"&gt;&lt;/xref&gt;</ph> associated with this <ph id="ph2">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The command associated with this binding.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> executes.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> executes, it raises the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event on the command target.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event is not handled, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> event is raised on the command target.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the specific command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> handler for that <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for that specific command the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> event bubbles up the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is not found, the command is not handled.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed Event Information</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routing strategy</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bubbling</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delegate</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The corresponding tunneling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> initiates a check to determine whether the command can be executed on the current command target.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method on a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> is called, the <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding.PreviewCanExecute&gt;</ph> event is raised on the command target if the command target has a <ph id="ph4">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> handler for that <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command, the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event bubbles up the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed Event Information</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routing strategy</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tunneling</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delegate</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The corresponding bubbling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.CanExecute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Occurs when the command associated with this <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding"&gt;&lt;/xref&gt;</ph> executes.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> executes, it raises the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event on the command target.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target has a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> handler for that <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command target does not have a <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> for the command the <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding.PreviewExecuted&gt;</ph> event tunnels down the element tree searching for an element that has a <ph id="ph3">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph> associated with the command.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the preview event is not handled, the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> event is raised on command target.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed Event Information</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routing strategy</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tunneling</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delegate</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The corresponding bubbling event is <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>