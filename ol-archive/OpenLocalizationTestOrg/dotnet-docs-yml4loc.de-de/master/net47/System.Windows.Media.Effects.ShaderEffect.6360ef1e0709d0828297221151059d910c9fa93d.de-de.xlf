<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9ad3699eb5cb9e9d4e42fc95059bc1b8a96901c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Effects.ShaderEffect.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">483ce422f0a62d5d2a5d85080f3271b1512b72f7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">955883680659e852a3c2e3793d96c88d360b0d60</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a custom bitmap effect by using a <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.PixelShader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derive from the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect&gt;</ph> class to implement a custom effect based on a single pixel shader.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following steps show how to create a custom effect.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Load a <ph id="ph1">&lt;xref:System.Windows.Media.Effects.PixelShader&gt;</ph> from precompiled High Level Shading Language (HLSL) bytecode.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define dependency properties that represent the parameters of the effect and the <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph>-based surface inputs.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A&gt;</ph> overloads to associate these inputs with register numbers that are referenced in the HLSL bytecode.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of samplers is limited to 4.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following restrictions apply when using a PS 3.0 shader.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a PS 3.0 shader is assigned, the number of samplers increases to 8.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assign the PS 3.0 shader before other shaders to enable registering 8 samplers.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The full shader constant register limit of 224 for floats is used.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ps_3_0<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166292)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following data types are supported in PS 3.0 shaders only.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if these are used in lower shader versions.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`int`</ph> and types convertible to <ph id="ph2">`int`</ph>: <ph id="ph3">`uint`</ph>, <ph id="ph4">`byte`</ph>, <ph id="ph5">`sbyte`</ph>, <ph id="ph6">`long`</ph>, <ph id="ph7">`ulong`</ph>, <ph id="ph8">`short`</ph>, <ph id="ph9">`ushort`</ph>, <ph id="ph10">`char`</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a valid PS 3.0 shader is loaded on a computer that does not have hardware support for PS 3.0, the shader is ignored.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the shader is invalid, no exception is thrown.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a computer has more than one video card, the behavior is defined by the least capable video card.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the computer has two video cards, one of which supports PS 3.0 and one of which does not, the behavior is the same as if the computer does not support PS 3.0.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a computer supports rendering PS 3.0 in hardware, but an invalid PS 3.0 shader is assigned, the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.PixelShader.InvalidPixelShaderEncountered&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of an invalid PS 3.0 shader is one compiled with the <ph id="ph1">`ps_3_sw`</ph> flag.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect&gt;</ph> class accepts only PS 3.0 shaders that are compiled with the <ph id="ph2">`ps_3_0`</ph> flag passed to fxc.exe.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Effect-Compiler Tool<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=166293)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>PS 2.0 shaders run when rendering in software.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, even if PS 3.0 is supported by the system's hardware, PS 3.0 shaders do not run during software rendering.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.ShaderEffect"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.ShaderEffect"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's values.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (which may no longer resolve), but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.Clone%2A&gt;</ph> method can be used to produce modifiable copies of frozen <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method to provide a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A modifiable clone of this instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The returned clone is effectively a deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The clone's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Makes the instance a clone (deep copy) of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using base (non-animated) property values.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The object to clone.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.ShaderEffect"&gt;&lt;/xref&gt;</ph> object, making deep copies of this object's current values.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Resource references, data bindings, and animations are not copied, but their current values are copied.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property will be <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property was <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Makes the instance a modifiable clone (deep copy) of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using current property values.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> to be cloned.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> derived class.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The new instance.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the shader register to use for the partial derivatives of the texture coordinates with respect to screen space.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A&gt;</ph> property to specify the shader register that contains the partial derivatives of the texture coordinates with respect to screen space.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A&gt;</ph> is set to 4, the shader register c4 is used.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Register c4 contains four float fields.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following High Level Shading Language (HLSL) code shows how this register is used.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`nextPixelUV`</ph> value represents the next pixel to the right.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows how the register specified for <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex%2A&gt;</ph> is filled.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Register Constant</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derivative Value</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>x component</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>ddx(u)</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>y component</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>ddx(v)</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>z component</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>ddy(u)</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>w component</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>ddy(v)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Texture coordinates are denoted as <ph id="ph1">`(u, v)`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ddx(u)`</ph> is the constant partial derivative of the texture coordinate component <ph id="ph2">`u`</ph> with respect to the screen-space x-coordinate.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`ddy(u)`</ph> is the partial derivative of the texture coordinate <ph id="ph2">`u`</ph> with respect to the screen-space y-coordinate.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, <ph id="ph1">`ddx(v)`</ph> and <ph id="ph2">`ddy(v)`</ph> are the corresponding screen-space derivatives for the texture coordinate component <ph id="ph3">`v`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>HLSL has the ddx and ddy instructions to calculate these values, but these instructions are not available on all PixelShader 2.0 hardware.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may think of these constants in the following way.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you step 1 pixel to the right in screen space (in the x direction), then <ph id="ph1">`ddx(u)`</ph> is the amount that <ph id="ph2">`u`</ph> changes in texture space, and <ph id="ph3">`ddx(v)`</ph> is the amount that <ph id="ph4">`v`</ph> changes in texture space.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the effect is axis-aligned when it is rendered, then <ph id="ph1">`ddx(v)`</ph> is 0.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the effect is rotated when it is rendered, then <ph id="ph1">`ddx(v)`</ph> is non-zero.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The index of the register that contains the partial derivatives.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An attempt was made to set the <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.ShaderEffect.DdxUvDdyUvRegisterIndex"&gt;&lt;/xref&gt;</ph> property more than one time or after initial processing of the effect.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Makes the instance a frozen clone of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> using base (non-animated) property values.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The instance to copy.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Makes the current instance a frozen clone of the specified <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If the object has animated dependency properties, their current animated values are copied.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable"&gt;&lt;/xref&gt;</ph> to copy and freeze.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the bottom edge.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The padding along the bottom edge of the effect.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The provided value is less than 0.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the left edge.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The padding along the left edge of the effect.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The provided value is less than 0.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the right edge.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The padding along the right edge of the effect.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The provided value is less than 0.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating that the effect's output texture is larger than its input texture along the top edge.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The padding along the top edge of the effect.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The provided value is less than 0.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.PixelShader"&gt;&lt;/xref&gt;</ph> to use for the effect.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.PixelShader"&gt;&lt;/xref&gt;</ph> for the effect.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Associates a dependency property value with a pixel shader's float constant register.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A&gt;</ph> method when you register a dependency property for a shader constant.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderConstantCallback%2A&gt;</ph> method constructs a <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> delegate that, when invoked, creates an association between the dependency property and the shader constant register specified by <ph id="ph3">`floatRegisterIndex`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The index of the shader register associated with the dependency property.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;&lt;/xref&gt;</ph> delegate that associates a dependency property and the shader constant register specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">floatRegisterIndex</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The dependency property is an unknown type.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;floatRegisterIndex&lt;/code&gt;</ph> is greater than or equal to 32, or <ph id="ph2">&lt;code&gt;floatRegisterIndex&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.ShaderEffect.PixelShader"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Associates a dependency property value with a pixel shader's sampler register.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A&gt;</ph> method when you register a <ph id="ph2">&lt;xref:System.Windows.Media.Brush&gt;</ph>-valued dependency property for a shader sampler.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.PixelShaderSamplerCallback%2A&gt;</ph> method constructs a <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> delegate that, when invoked, creates an association between the dependency property and the shader sampler register specified by <ph id="ph3">`samplerRegisterIndex`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The index of the shader sampler associated with the dependency property.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;&lt;/xref&gt;</ph> delegate that associates a dependency property and the shader sampler register specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">samplerRegisterIndex</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Associates a dependency property value with a pixel shader's sampler register and a <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.SamplingMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A&gt;</ph> method when you register a <ph id="ph2">&lt;xref:System.Windows.Media.Brush&gt;</ph>-valued dependency property for a shader sampler.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Effects.ShaderEffect.RegisterPixelShaderSamplerProperty%2A&gt;</ph> method constructs a <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> delegate that, when invoked, creates an association between the dependency property and the shader sampler register specified by <ph id="ph3">`samplerRegisterIndex`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The index of the shader sampler associated with the dependency property.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.SamplingMode"&gt;&lt;/xref&gt;</ph> for the shader sampler.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.PropertyChangedCallback"&gt;&lt;/xref&gt;</ph> delegate that associates a dependency property and the shader sampler register specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">samplerRegisterIndex</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Associates a dependency property with a shader sampler register.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The name of the dependency property.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The type of the effect that has the dependency property.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The index of the shader sampler associated with the dependency property.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A dependency property associated with the shader sampler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">samplerRegisterIndex</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Associates a dependency property with a shader sampler register and a <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.SamplingMode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The name of the dependency property.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The type of the effect that has the dependency property.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The index of the shader sampler associated with the dependency property.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Effects.SamplingMode"&gt;&lt;/xref&gt;</ph> for the shader sampler.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A dependency property associated with the shader sampler specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">samplerRegisterIndex</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Notifies the effect that the shader constant or sampler corresponding to the specified dependency property should be updated.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The dependency property to be updated.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>