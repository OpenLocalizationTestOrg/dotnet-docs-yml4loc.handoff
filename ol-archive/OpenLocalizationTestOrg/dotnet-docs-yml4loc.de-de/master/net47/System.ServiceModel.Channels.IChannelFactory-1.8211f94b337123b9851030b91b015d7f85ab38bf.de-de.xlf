<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">159fa4c0cb59570202892d295ec8b97382f78223</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.IChannelFactory-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f1ebb7384e0a39a6476604d0e695ddb57d677509</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">095b72a3b90ad20cee7cffa4a602c9dc3c6062d9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the interface that must be implemented by channel factories that create type-specific channels.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601&gt;</ph> contract allows users to create multiple channels of a given type without having to specify the channel type each time.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, defining the channel type as a generic parameter for the channel factory implementing the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601&gt;</ph> interface means that it is not necessary to pass the type into the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If users want to create different channel types, they can create additional channel factories for each type of channel required.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> overload allows you to distinguish the address to which the message is initially sent from the ultimate destination.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a discussion of addressing, see the <bpt id="p1">[</bpt>Addresses<ept id="p1">](~/docs/framework/wcf/feature-details/endpoint-addresses.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The type of channel that the channel factory creates.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a channel of a specified type to a specified endpoint address.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory%601.CreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> overload to distinguish the address to which the message is initially sent from the ultimate destination when you want to do manual routing.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that any channels created by this channel factory are closed when the channel factory is closed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> to the specified endpoint address.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a channel of a specified type to a specified endpoint address and transport address to which messages are sent.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transport address specified by the <ph id="ph1">`via`</ph> is the location to which a message should initially be sent on its way to some other remote address specified by the <ph id="ph2">`to`</ph> at which the service is located.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most Internet scenarios, the <ph id="ph1">`via`</ph> URI is the same as the <ph id="ph2">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> of the final <ph id="ph3">`to`</ph> address of the service.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only distinguish between these two addresses when you want to do some kind of manual routing.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that any channels created by this channel factory are closed when the channel factory is closed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a discussion of addressing, see the <bpt id="p1">[</bpt>Addresses<ept id="p1">](~/docs/framework/wcf/feature-details/endpoint-addresses.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> that provides the location of the service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which the message is sent.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> to the specified endpoint address and transport address.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>