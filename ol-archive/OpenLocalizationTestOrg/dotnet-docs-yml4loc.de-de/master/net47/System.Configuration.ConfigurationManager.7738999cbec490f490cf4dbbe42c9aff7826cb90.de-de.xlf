<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">13ff4cc1863980a9210ae228576746d2dbfefe5b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Configuration.ConfigurationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96ed3efa98ba7f493a45f531d7da4819d385a62d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af312a002d9723e73cc905fa2b9f27a8f4ac1a98</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to configuration files for client applications.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager&gt;</ph> class enables you to access machine, application, and user configuration information.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class replaces the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSettings&gt;</ph> class, which is deprecated.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For web applications, use the <ph id="ph1">&lt;xref:System.Web.Configuration.WebConfigurationManager&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager&gt;</ph> class, your project must reference the <ph id="ph2">`System.Configuration`</ph> assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, some project templates, like Console Application, do not reference this assembly so you must manually reference it.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name and location of the application configuration file depend on the application's host.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Application Configuration Files<ept id="p1">](http://msdn.microsoft.com/en-us/0d05b1b8-b18b-43d8-bb3c-526ff0c44fe0)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the built-in <ph id="ph1">&lt;xref:System.Configuration&gt;</ph> types or derive from them to handle configuration information.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using these types, you can work directly with configuration information and you can extend configuration files to include custom information.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager&gt;</ph> class includes members that enable you to perform the following tasks:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read a section from a configuration file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access configuration information, call the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager.GetSection%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For some sections such as <ph id="ph1">`appSettings`</ph> and <ph id="ph2">`connectionStrings`</ph>, use the <ph id="ph3">&lt;xref:System.Configuration.ConfigurationManager.AppSettings%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Configuration.ConfigurationManager.ConnectionStrings%2A&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>These members perform read-only operations, use a single cached instance of the configuration, and are multithread aware.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Read and write configuration files as a whole.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can read and write configuration settings at any level, for itself or for other applications or computers, locally or remotely.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use one of the methods provided by the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager&gt;</ph> class to open a configuration file such as SampleApp.exe.config.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods return a <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object that in turn exposes methods and properties you can use to work with the associated configuration files.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods perform read or write operations and create the configuration data every time that a file is written.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Support configuration tasks.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following types are used to support various configuration tasks:</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to working with existing configuration information, you can create and work with custom configuration elements by extending the built-in configuration types such as the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Configuration.ConfigurationElementCollection&gt;</ph>, <ph id="ph3">&lt;xref:System.Configuration.ConfigurationProperty&gt;</ph>, and <ph id="ph4">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of how to extend a built-in configuration type programmatically, see <ph id="ph1">&lt;xref:System.Configuration.ConfigurationSection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of how to extend a built-in configuration type that uses the attribute-based model, see <ph id="ph1">&lt;xref:System.Configuration.ConfigurationElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Configuration.AppSettingsSection"&gt;&lt;/xref&gt;</ph> data for the current application's default configuration.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Configuration.AppSettingsSection&gt;</ph> object contains the contents of the configuration file's <ph id="ph2">`appSettings`</ph> section.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> object that contains the contents of the <ph id="ph2">&lt;xref href="System.Configuration.AppSettingsSection"&gt;&lt;/xref&gt;</ph> object for the current application's default configuration.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Could not retrieve a <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> object with the application settings data.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Configuration.ConnectionStringsSection"&gt;&lt;/xref&gt;</ph> data for the current application's default configuration.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Configuration.ConnectionStringsSection&gt;</ph> object contains the contents of the configuration file's <ph id="ph2">`connectionStrings`</ph> section.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Configuration.ConnectionStringSettingsCollection"&gt;&lt;/xref&gt;</ph> object that contains the contents of the <ph id="ph2">&lt;xref href="System.Configuration.ConnectionStringsSection"&gt;&lt;/xref&gt;</ph> object for the current application's default configuration.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Could not retrieve a <ph id="ph1">&lt;xref href="System.Configuration.ConnectionStringSettingsCollection"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Retrieves a specified configuration section for the current application's default configuration.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For client applications, this method retrieves a configuration file obtained by merging the application configuration file, the local user configuration file, and the roaming configuration file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager.GetSection%2A&gt;</ph> method accesses run-time configuration information that it cannot change.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the configuration, you use the <ph id="ph1">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> method on the configuration file that you obtain by using one of the following Open methods:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The configuration section path and name.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The specified <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationSection"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph2">`null`</ph> if the section does not exist.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Opens the configuration file for the current application as a <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userLevel`</ph> parameter determines the location of the configuration file being opened by indicating whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level).</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify which configuration to get by passing one of the following values for <ph id="ph1">`userLevel`</ph>:</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object that applies to all users, set <ph id="ph2">`userLevel`</ph> to <ph id="ph3">&lt;xref:System.Configuration.ConfigurationUserLevel.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the local <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object that applies to the current user, set <ph id="ph2">`userLevel`</ph> to <ph id="ph3">&lt;xref:System.Configuration.ConfigurationUserLevel.PerUserRoamingAndLocal&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the roaming <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object that applies to the current user, set <ph id="ph2">`userLevel`</ph> to <ph id="ph3">&lt;xref:System.Configuration.ConfigurationUserLevel.PerUserRoaming&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationUserLevel"&gt;&lt;/xref&gt;</ph> for which you are opening the configuration.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Opens the specified client configuration file as a <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Client applications use a global configuration that applies to all users, separate configurations that apply to individual users, and configurations that apply to roaming users.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userLevel`</ph> value determines the location of the configuration file being opened.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It indicates whether it has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by the user level type.).</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method overload is equivalent to calling the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%28System.Configuration.ExeConfigurationFileMap%2CSystem.Configuration.ConfigurationUserLevel%2CSystem.Boolean%29&gt;</ph> overload with the <ph id="ph2">`preLoad`</ph> parameter set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The path of the executable (exe) file.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Opens the machine configuration file on the current computer as a <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Machine.config file is located in the following subdirectory:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>%windir%<ept id="p1">*</ept>\Microsoft.NET\Framework<ph id="ph1">\\</ph><bpt id="p2">*</bpt>version<ept id="p2">*</ept>\config</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Opens the specified client configuration file as a <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object that uses the specified file mapping and user level.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationUserLevel&gt;</ph> object determines the location of the configuration file being opened.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path determined by <ph id="ph1">`userLevel`</ph>).</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Configuration.ExeConfigurationFileMap"&gt;&lt;/xref&gt;</ph> object that references configuration file to use instead of the application default configuration file.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationUserLevel"&gt;&lt;/xref&gt;</ph> object for which you are opening the configuration.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The configuration object.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Opens the specified client configuration file as a <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object that uses the specified file mapping, user level, and preload option.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Configuration.ConfigurationUserLevel&gt;</ph> object determines the location of the configuration file that is being opened.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>It indicates whether the file has no user level (the configuration file is in the same directory as the application) or has a per-user level (the configuration file is in an application settings path that is determined by <ph id="ph1">`userLevel`</ph>).</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a code example, see the <ph id="ph1">&lt;xref:System.Configuration.ConfigurationManager.OpenMappedExeConfiguration%2A&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Configuration.ExeConfigurationFileMap"&gt;&lt;/xref&gt;</ph> object that references the configuration file to use instead of the default application configuration file.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Configuration.ConfigurationUserLevel"&gt;&lt;/xref&gt;</ph> object for which you are opening the configuration.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to preload all section groups and sections; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The configuration object.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Opens the machine configuration file as a <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object that uses the specified file mapping.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine configuration settings apply to the whole computer and all applications that reside on it, unless overridden for the local application.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Machine configuration settings are read from the Machine.config file of the currently running version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Machine.config file is located in the following subdirectory:</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>%windir%<ept id="p1">*</ept>\Microsoft.NET\Framework<ph id="ph1">\\</ph><bpt id="p2">*</bpt>version<ept id="p2">*</ept>\config</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the <ph id="ph1">&lt;xref:System.Configuration.Configuration&gt;</ph> object for a resource, your code must have read permissions on all the configuration files from which it inherits settings.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>To update a configuration file, your code must additionally have write permissions for both the configuration file and the directory in which it exists.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not possible to access the Machine.config file for other versions of the .NET Framework that might be installed on the computer.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Configuration.ExeConfigurationFileMap"&gt;&lt;/xref&gt;</ph> object that references configuration file to use instead of the application default configuration file.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Configuration.Configuration"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A configuration file could not be loaded.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Refreshes the named section so the next time that it is retrieved it will be re-read from disk.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invalidates the cache for the specified configuration section without affecting other sections.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The configuration section name or the configuration path and section name of the section to refresh.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>