<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3892e9f538f43a43cd1188e8c8949f38ddfc3b18</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.Http.Headers.RangeHeaderValue.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c90613946474dc58a0ba6753a6cb1a5bbff7958</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0db01cf29cf739e3ff36c975ede76c1de118fa76</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Range header value.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.Headers.RangeHeaderValue&gt;</ph> class provides support for the Range header as defined in <bpt id="p1">[</bpt>RFC 2616<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=241642)</ept> by the IETF.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Since all HTTP entities are represented in HTTP messages as sequences of bytes, the concept of a byte range is meaningful for any HTTP entity.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, not all clients and servers need to support byte-range operations.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Range header on a request allows a client to request that it only wants to receive some part of the specified range of bytes in an HTTP entity.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Servers are not required to support Range header requests.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a Range header in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A HTTP server indicates support for Range headers with the Accept-Ranges header.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of the Accept-Ranges header from a server that supports byte-ranges would be as follows:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an Accept-Ranges header is not received in the header of the response from the server, then the server does not support Range headers.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of the Accept-Ranges header from a server that does not support ranges, but recognizes the Accept-Ranges header, would be as follows:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> class with a byte range.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This  constructor initializes a new instance of the <ph id="ph1">&lt;xref:System.Net.Http.Headers.RangeHeaderValue&gt;</ph> class with a Range header containing a specified byte range.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of a Range header with a byte range in an HTTP protocol request that requests the first 100 bytes would be would be the following:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this example, the <ph id="ph1">`from`</ph> parameter would be specified as 0 and the <ph id="ph2">`to`</ph> parameter would be specified as 99.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The position at which to start sending data.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The position at which to stop sending data.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;code&gt;to&lt;/code&gt;</ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;from&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;to&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id="ph2">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The object to compare with the current object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> is equal to the current object; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for an <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A hash code is a numeric value that is used to identify an object during equality testing.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also serve as an index for an object in a collection.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.Http.Headers.RangeHeaderValue.GetHashCode%2A&gt;</ph> method is suitable for use in hashing algorithms and data structures such as a hash table.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A hash code for the current object.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Converts a string to an <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A string that represents range header value information.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is a <ph id="ph2">`null`</ph> reference.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is not valid range header value information.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the ranges specified from the <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The ranges from the <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A string that represents the current object.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Determines whether a string is valid <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> information.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>he string to validate.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> version of the string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">input</ph><ept id="p1">&lt;/code&gt;</ept> is valid <ph id="ph3">&lt;xref href="System.Net.Http.Headers.AuthenticationHeaderValue"&gt;&lt;/xref&gt;</ph> information; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Gets the unit from the <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The unit from the <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a new object that is a copy of the current <ph id="ph1">&lt;xref href="System.Net.Http.Headers.RangeHeaderValue"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A copy of the current instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>