<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50166e77d20f0c2dff5fbe3f4e2b01d49a1ce006</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Text.EncoderExceptionFallbackBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f67e79a1e70eb384aff6609951cecae98cbbda8d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b797fb24ab685403cbfaf03f8bf3a31e237b0f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Throws <ph id="ph1">&lt;xref href="System.Text.EncoderFallbackException"&gt;&lt;/xref&gt;</ph> when an input character cannot be converted to an encoded output byte sequence.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common reason for an encoding or decoding operation to fail is if the underlying encoding class does not provide a mapping between a character and an equivalent byte sequence.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the input character cannot be converted to an output byte sequence, the encoding operation calls the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> method, which throws <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderFallbackBuffer?displayProperty=fullName&gt;</ph> class, which represents a data buffer used in an encoding operation, is the base class for the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, instead of a data buffer, the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class represents a standard behavior wherein an exception is thrown if an encoding operation fails.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>No actual data buffer exists, and the members designed to manipulate such a buffer do no significant work.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the character that cannot be converted.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter an unknown character in their input.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In response, <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> always throws <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>An input character.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The index position of the character in the input buffer.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>No value is returned because the <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Int32)"&gt;&lt;/xref&gt;</ph> method always throws an exception.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> cannot be encoded.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This method always throws an exception that reports the value of the <ph id="ph1">&lt;code&gt;charUnknown&lt;/code&gt;</ph> and <ph id="ph2">&lt;code&gt;index&lt;/code&gt;</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Throws an exception because the input character cannot be encoded.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Parameters specify the value and index position of the surrogate pair in the input, and the nominal return value is not used.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetBytes%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.Encoder.Convert%2A&gt;</ph> methods call <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> if they encounter a surrogate pair in their input.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In response, <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A&gt;</ph> always throws an exception.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The high surrogate of the input pair.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The low surrogate of the input pair.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The index position of the surrogate pair in the input buffer.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>No value is returned because the <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer.Fallback(System.Char,System.Char,System.Int32)"&gt;&lt;/xref&gt;</ph> method always throws an exception.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The character represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> cannot be encoded.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is invalid.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">charUnknownHigh</ph><ept id="p1">&lt;/code&gt;</ept> is not between U+D800 and U+DBFF, inclusive, or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">charUnknownLow</ph><ept id="p2">&lt;/code&gt;</ept> is not between U+DC00 and U+DFFF, inclusive.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Retrieves the next character in the exception fallback buffer.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.GetNextChar%2A&gt;</ph> method always returns the Unicode NULL character.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The return value is always the Unicode character, NULL (U+0000).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Causes the next call to the <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer.GetNextChar"&gt;&lt;/xref&gt;</ph> method to access the exception data buffer character position that is prior to the current position.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.MovePrevious%2A&gt;</ph> method always returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The return value is always <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the number of characters in the current <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallbackBuffer"&gt;&lt;/xref&gt;</ph> object that remain to be processed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> has no actual exception data buffer, the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Remaining%2A&gt;</ph> property always returns zero.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A return value is defined, although it is unchanging, because this method implements an abstract method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>