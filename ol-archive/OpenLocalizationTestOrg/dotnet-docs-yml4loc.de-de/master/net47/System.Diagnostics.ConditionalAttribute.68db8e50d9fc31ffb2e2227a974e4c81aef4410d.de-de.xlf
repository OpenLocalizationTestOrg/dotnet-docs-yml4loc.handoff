<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3b48512e8a244f56c299afd42c4fda79d8bad45c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.ConditionalAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">887311e5f12a34eca81c1152a94f35efcaf38ed5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e64cc26954a1be7a71f42153883a08908f7043b8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates to compilers that a method call or attribute should be ignored unless a specified conditional compilation symbol is defined.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> attribute to methods and classes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, its use on classes is valid only for types that are derived from <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> either will be ignored or will produce a compiler warning or error message if you apply it to any other type.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> to a method indicates to compilers that a call to the method should not be compiled into Microsoft intermediate language (MSIL) unless the conditional compilation symbol that is associated with <ph id="ph2">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is defined.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will get a compilation error in Visual Studio if you apply this attribute to a method that does not return void.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> to an attribute indicates that the attribute should not be emitted to metadata unless the conditional compilation symbol is defined.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any arguments passed to the method or attribute are still type-checked by the compiler.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the following techniques to define conditional compilation symbols:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use compiler command-line options; for example, <bpt id="p1">**</bpt>/define:DEBUG<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use environment variables in the operating system shell; for example, <bpt id="p1">**</bpt>set DEBUG=1<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use pragmas in the source code; for example, define the compilation variable as follows:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To undefine the variable, use the following:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compilers that comply with the Common Language Specification (CLS) are permitted to ignore <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The C#, Visual Basic, and C++ compilers support <ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph>; the JScript compiler does not support the attribute.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Visual Basic, the <ph id="ph1">`AddressOf`</ph> operator is not affected by this attribute.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`Call CType(AddressOf delegate, Action)`</ph> always invokes <ph id="ph2">`delegate`</ph>, although <ph id="ph3">`Call delegate()`</ph> might not.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.ConditionalAttribute&gt;</ph> is applied to the methods that are defined in the <ph id="ph2">&lt;xref:System.Diagnostics.Debug&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Trace&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to use attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.ConditionalAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A string that specifies the case-sensitive conditional compilation symbol that is associated with the attribute.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the conditional compilation symbol that is associated with the <ph id="ph1">&lt;xref href="System.Diagnostics.ConditionalAttribute"&gt;&lt;/xref&gt;</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is read-only.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A string that specifies the case-sensitive conditional compilation symbol that is associated with the <ph id="ph1">&lt;xref href="System.Diagnostics.ConditionalAttribute"&gt;&lt;/xref&gt;</ph> attribute.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>