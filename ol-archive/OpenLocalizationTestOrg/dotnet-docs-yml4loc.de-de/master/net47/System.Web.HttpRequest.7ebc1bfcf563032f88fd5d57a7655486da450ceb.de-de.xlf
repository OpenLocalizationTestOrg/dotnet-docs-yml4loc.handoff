<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0bfd3bebca804b1cb624c48e98e7e7f6a3abb38</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.HttpRequest.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f32ad1261a6846e88e1078c32fc1de2102fae071</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b87f99f6275f687e0a7cf62800dcf6e15cf9787</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables ASP.NET to read the HTTP values sent by a client during a Web request.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class are exposed through the <ph id="ph2">`Request`</ph> properties of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To access data from the <ph id="ph1">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> collections, you can write <ph id="ph5">`Request["key"]`</ph>, as shown in the example for the <ph id="ph6">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode support for <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class members requires IIS version 6.0 or later.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes an <ph id="ph1">&lt;xref href="System.Web.HttpRequest"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to create your own instance of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods and properties of the <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class are exposed through the <ph id="ph2">`Request`</ph> property of the <ph id="ph3">&lt;xref:System.Web.HttpApplication&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpContext&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph>, and <ph id="ph6">&lt;xref:System.Web.UI.UserControl&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The name of the file associated with the request.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The information regarding the URL of the current request.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The entire query string sent with the request (everything after the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">'?'</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Forcibly terminates the underlying TCP connection, causing any outstanding I/O to fail.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>You might use this method in response to an attack by a malicious HTTP client.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is thread-safe.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any thread may call it at any time.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can only be used in integrated mode.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you invoke it in classic mode, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the pipeline mode, use <ph id="ph1">&lt;xref:System.Web.HttpRuntime.UsingIntegratedPipeline%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets a string array of client-supported MIME accept types.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A string array of client-supported MIME accept types.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the anonymous identifier for the user, if present.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property assigns a long-lived unique identifier to a non-authenticated user, which can be used to track the user or assign profile properties to that user without storing data in a <ph id="ph2">`Session`</ph> object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.AnonymousID%2A&gt;</ph> property is tracked using a cookie, but it can be set to use the URI when the <ph id="ph2">&lt;xref:System.Web.Configuration.SessionStateSection.Cookieless%2A&gt;</ph> attribute in the anonymous identification configuration section is set to either the <ph id="ph3">&lt;xref:System.Web.HttpCookieMode.UseUri&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.HttpCookieMode.UseDeviceProfile&gt;</ph>, or <ph id="ph5">&lt;xref:System.Web.HttpCookieMode.AutoDetect&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must explicitly clear the cookie if you no longer want it available, for example when an anonymous user is authenticated.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Anonymous identification is used when there is a need to identify entities that are not authenticated and when authorization is required.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>anonymousIdentification Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/2bd927ef-9057-4703-9c55-4cfb6d7d0929)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A string representing the current anonymous user identifier.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the ASP.NET application's virtual application root path on the server.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to construct a URL relative to the application root from a page or Web user control that is not in the root directory.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows pages and shared controls that exist at different levels of a directory structure to use the same code to link to resources at fixed locations in the application.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The virtual path of the current application.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets the virtual path of the application root and makes it relative by using the tilde (~) notation for the application root (as in "~/page.aspx").</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to provide URL information that will stay the same even if the application changes location.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows the same URL-mapping code to be used in a test environment and in the final deployment environment, or to be used by copies of Web applications in different domains.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The virtual path of the application root for the current request.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Performs a binary read of a specified number of bytes from the current input stream.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.BinaryRead%2A&gt;</ph> method is provided for compatibility with ASP.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The number of bytes to read.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A byte array.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is 0.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;count&lt;/code&gt;</ph> is greater than the number of bytes available.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Gets or sets information about the requesting client's browser capabilities.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpBrowserCapabilities"&gt;&lt;/xref&gt;</ph> object listing the capabilities of the client's browser.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the current request's client security certificate.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpClientCertificate"&gt;&lt;/xref&gt;</ph> object containing information about the client's security certificate settings.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets or sets the character set of the entity-body.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default content encoding can be specified in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> of a configuration file.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If content encoding is also specified by the client, the default configuration settings are overridden.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Text.Encoding"&gt;&lt;/xref&gt;</ph> object representing the client's character set.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Specifies the length, in bytes, of content sent by the client.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The length, in bytes, of content sent by the client.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets the MIME content type of the incoming request.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A string representing the MIME content type of the incoming request, for example, "text/html".</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Additional common MIME types include "audio.wav", "image/gif", and "application/pdf".</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets a collection of cookies sent by the client.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET includes two intrinsic cookie collections.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpRequest&gt;</ph> contains cookies transmitted by the client to the server in the <ph id="ph3">`Cookie`</ph> header.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection accessed through the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A&gt;</ph> collection of <ph id="ph2">&lt;xref:System.Web.HttpResponse&gt;</ph> contains new cookies created on the server and transmitted to the client in the <ph id="ph3">`Set-Cookie`</ph> header.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you add a cookie by using the <ph id="ph1">&lt;xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName&gt;</ph> collection, the cookie is immediately available in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A?displayProperty=fullName&gt;</ph> collection, even if the response has not been sent to the client.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpCookieCollection"&gt;&lt;/xref&gt;</ph> object representing the client's cookie variables.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the virtual path of the current request.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> returns the file path to the currently executing page handler.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For redirect scenarios using <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph> methods this means that the <ph id="ph3">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> property returns the path to the page redirected to (child page).</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the client is redirected to another page, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> property returns the path to the original page.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The virtual path of the current request.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets the extension of the file name that is specified in the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.CurrentExecutionFilePath"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The extension of the file name that is specified in the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.CurrentExecutionFilePath"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the virtual path of the current request.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> property does not include the <ph id="ph2">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> trailer.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> value is /virdir/page.html.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The virtual path of the current request.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets the collection of files uploaded by the client, in multipart MIME format.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file collection is populated only when the HTTP request <ph id="ph1">`Content-Type`</ph> value is "multipart/form-data".</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpFileCollection"&gt;&lt;/xref&gt;</ph> object representing a collection of files uploaded by the client.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The items of the <ph id="ph1">&lt;xref href="System.Web.HttpFileCollection"&gt;&lt;/xref&gt;</ph> object are of type <ph id="ph2">&lt;xref href="System.Web.HttpPostedFile"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets the filter to use when reading the current input stream.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object to be used as the filter.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The specified <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets a collection of form variables.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> property is populated when the HTTP request <ph id="ph2">`Content-Type`</ph> value is either "application/x-www-form-urlencoded" or "multipart/form-data".</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> representing a collection of form variables.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is identical to <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> except that it also copies the bytes that are read to the internal storage that is used by ASP.NET to populate the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this information is preserved, downstream code such as ASP.NET Web Forms pages (.aspx files) will run successfully.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not the case with the <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The request's entity body has already been loaded and parsed.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Examples of properties that cause the entity body to be loaded and parsed include the following:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.Files"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.InputStream"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.GetBufferlessInputStream"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>To avoid this exception, call the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.ReadEntityBodyMode"&gt;&lt;/xref&gt;</ph> method first.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>This exception is also thrown if the client disconnects while the entity body is being read.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides an alternative to using the <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> property waits until the whole request has been received before it returns a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object immediately.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the method to begin processing the entity body before the complete contents of the body have been received.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The entity body (or as much of it as you request and has been received) is returned only when you use the object that is returned by this method to read the stream, by calling methods such as the <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use parameters of the <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method to specify how much of the entity body to read.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object returned by ASP.NET from this method supports both synchronous and asynchronous read methods.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> object implements both the <ph id="ph2">&lt;xref:System.IO.Stream.BeginRead%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.IO.Stream.EndRead%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The asynchronous methods let you asynchronously read the request entity in chunks, while ASP.NET releases the current thread in between each iteration of an asynchronous read loop.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be useful if the request is uploading a large file and you want to begin accessing the file contents before the upload is finished.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you should only use this method for scenarios where you want to take over all processing of the entity body.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that you cannot use this method from an .aspx page, because by the time an .aspx page runs, the entity body has already been read.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The request's entity body has already been loaded and parsed.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Examples of properties that cause the entity body to be loaded and parsed include the following:</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>To avoid this exception, call the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.ReadEntityBodyMode"&gt;&lt;/xref&gt;</ph> method first.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>This exception is also thrown if the client disconnects while the entity body is being read.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that can be used to read the incoming HTTP entity body, optionally disabling the request-length limit that is set in the <ph id="ph2">&lt;xref href="System.Web.Configuration.HttpRuntimeSection.MaxRequestLength"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about this method, see the <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to disable the request-length limit; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object that can be used to read the incoming HTTP entity body.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The request's entity body has already been loaded and parsed.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Examples of properties that cause the entity body to be loaded and parsed include the following:</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.Files"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.InputStream"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.GetBufferedInputStream"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>To avoid this exception, call the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.ReadEntityBodyMode"&gt;&lt;/xref&gt;</ph> method first.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>This exception is also thrown if the client disconnects while the entity body is being read.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets a collection of HTTP headers.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a listing of all possible headers, see <bpt id="p1">[</bpt>Request Header Fields<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=73147)</ept> on the W3C Web site.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> of headers.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Security.Authentication.ExtendedProtection.ChannelBinding"&gt;&lt;/xref&gt;</ph> object of the current <ph id="ph2">&lt;xref href="System.Web.HttpWorkerRequest"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Authentication.ExtendedProtection.ChannelBinding"&gt;&lt;/xref&gt;</ph> object of the current <ph id="ph2">&lt;xref href="System.Web.HttpWorkerRequest"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Web.HttpWorkerRequest"&gt;&lt;/xref&gt;</ph> object is not a <ph id="ph2">`System.Web.Hosting.IIS7WorkerRequest`</ph> object or a <ph id="ph3">`System.Web.Hosting.ISAPIWorkerRequestInProc`</ph> object.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the HTTP data transfer method (such as <ph id="ph1">`GET`</ph>, <ph id="ph2">`POST`</ph>, or <ph id="ph3">`HEAD`</ph>) used by the client.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The HTTP data transfer method used by the client.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets the contents of the incoming HTTP entity body.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> object representing the contents of the incoming HTTP content body.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Provides IIS with a copy of the HTTP request entity body.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>IIS does not maintain a copy of the request after it has been read.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=fullName&gt;</ph> method overload provides IIS with a copy of the request entity if it was previously read by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overload is useful for cases where ASP.NET has read the entity request and you want to reuse the existing request data.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The method was invoked on a version of IIS earlier than IIS 7.0.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Provides IIS with a copy of the HTTP request entity body and with information about the request entity object.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>IIS does not maintain a copy of the request after it has been read.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is recommended that only the handler for an HTTP request should read the request entity.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InsertEntityBody%2A?displayProperty=fullName&gt;</ph> method overload is useful when you want to perform custom processing, such as inserting a different entity body into memory.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An array that contains the request entity data.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The zero-based position in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> at which to begin storing the request entity data.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The number of bytes to read into the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">buffer</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The method was invoked on a version of IIS earlier than IIS 7.0.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The number of items in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">count</ph><ept id="p1">&lt;/code&gt;</ept> is larger than the available space in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">buffer</ph><ept id="p2">&lt;/code&gt;</ept>, given the <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">offset</ph><ept id="p3">&lt;/code&gt;</ept> value.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the request has been authenticated.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the request is authenticated; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the request is from the local computer.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.IsLocal%2A&gt;</ph> property returns <ph id="ph2">`true`</ph> if the IP address of the request originator is 127.0.0.1 or if the IP address of the request is the same as the server's IP address.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the request is from the local computer; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the HTTP connection uses secure sockets (that is, HTTPS).</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the connection is an SSL connection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Gets the specified object from the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Cookies"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Web.HttpRequest.ServerVariables"&gt;&lt;/xref&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The name of the collection member to get.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Cookies"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Web.HttpRequest.ServerVariables"&gt;&lt;/xref&gt;</ph> collection member specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph5">key</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>If the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">key</ph><ept id="p1">&lt;/code&gt;</ept> is not found, then <ph id="ph2">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;&lt;/xref&gt;</ph> type for the current user.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> property exposes the properties and methods of the <ph id="ph2">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> object for the currently connected user to Microsoft Internet Information Services (IIS).</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class that is exposed by <ph id="ph2">&lt;xref:System.Web.HttpRequest.LogonUserIdentity%2A&gt;</ph> tracks the IIS request token and provides easy access to this token for the current HTTP request being processed inside of ASP.NET.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of the <ph id="ph1">&lt;xref:System.Security.Principal.WindowsIdentity&gt;</ph> class is automatically created so it does not need to be constructed to in order to gain access to its methods and properties.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.Principal.WindowsIdentity"&gt;&lt;/xref&gt;</ph> object for the current Microsoft Internet Information Services (IIS) authentication settings.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The Web application is running in IIS 7 integrated mode and the <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthenticateRequest"&gt;&lt;/xref&gt;</ph> event has not yet been raised.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>Maps an incoming image-field form parameter to appropriate x-coordinate and y-coordinate values.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The name of the form image map.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A two-dimensional array of integers.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Maps the specified virtual path to a physical path.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> property potentially contains sensitive information about the hosting environment.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value should not be displayed to users.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The virtual path (absolute or relative) for the current request.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The physical path on the server specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>No <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> object is defined for the request.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Maps the specified virtual path to a physical path.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> property potentially contains sensitive information about the hosting environment.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value should not be displayed to users.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The virtual path (absolute or relative) for the current request.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The virtual base directory path used for relative resolution.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept> may belong to another application; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The physical path on the server.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>No <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> object is defined for the request.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Maps an incoming image field form parameter into appropriate x and y coordinate values.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The name of the image field.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The x and y coordinate values.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>Gets a combined collection of <ph id="ph1">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Web.HttpRequest.Cookies"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Web.HttpRequest.ServerVariables"&gt;&lt;/xref&gt;</ph> items.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name-value pairs are added to the collection in the following order:</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Query-string parameters.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Form fields.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cookies.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Server variables.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Gets the virtual path of the current request.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> is the concatenation of the <ph id="ph2">&lt;xref:System.Web.HttpRequest.FilePath%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> trailer.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for the URL http://www.contoso.com/virdir/page.html/tail, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> is /virdir/page.html/tail.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The virtual path of the current request.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Gets the additional path information for a resource with a URL extension.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the URL Http://www.contoso.com/virdir/page.html/tail, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.PathInfo%2A&gt;</ph> value is /tail.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The additional path information for a resource.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Gets the physical file system path of the currently executing server application's root directory.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The file system path of the current application's root directory.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Gets the physical file system path corresponding to the requested URL.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>In redirect scenarios using <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.Execute%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.Transfer%2A&gt;</ph>, the <ph id="ph3">&lt;xref:System.Web.HttpRequest.PhysicalPath%2A&gt;</ph> property returns the path to the original page.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>To find the physical path of the currently executing page use the <ph id="ph1">&lt;xref:System.Web.HttpRequest.MapPath%2A&gt;</ph> method with the input argument set as the <ph id="ph2">&lt;xref:System.Web.HttpRequest.CurrentExecutionFilePath%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The file system path of the current request.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>Gets the collection of HTTP query string variables.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The query string variables sent by the client.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Keys and values are URL-decoded.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Gets the raw URL of the current request.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The raw URL is defined as the part of the URL following the domain information.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the URL string http://www.contoso.com/articles/recent.aspx, the raw URL is /articles/recent.aspx.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The raw URL includes the query string, if present.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The raw URL of the current request.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the request entity body has been read, and if so, how it was read.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used to avoid the exception that is thrown if the entity body has already been read and an attempt is made to read it by using an incompatible method.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods and properties that read the entity body include the following:</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.Files%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.InputStream%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferedInputStream%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.GetBufferlessInputStream%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The value that indicates how the request entity body was read, or that it has not been read.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Web.Routing.RequestContext"&gt;&lt;/xref&gt;</ph> instance of the current request.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property provides access to the <ph id="ph1">&lt;xref:System.Web.Routing.RouteData&gt;</ph> object for the current request.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ASP.NET routing, see.<bpt id="p1">[</bpt>ASP.NET Routing<ept id="p1">](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)</ept>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.Routing.RequestContext"&gt;&lt;/xref&gt;</ph> instance of the current request.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>For non-routed requests, the <ph id="ph1">&lt;xref href="System.Web.Routing.RequestContext"&gt;&lt;/xref&gt;</ph> object that is returned is empty.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Gets or sets the HTTP data transfer method (<ph id="ph1">`GET`</ph> or <ph id="ph2">`POST`</ph>) used by the client.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A string representing the HTTP invocation type sent by the client.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>Saves an HTTP request to disk.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Saving the request context to disk can be useful in debugging.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The physical drive path.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A Boolean value specifying whether an HTTP header should be saved to disk.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.Configuration.HttpRuntimeSection.RequireRootedSaveAsPath"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Web.Configuration.HttpRuntimeSection"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph3">`true`</ph> but <bpt id="p1">&lt;code&gt;</bpt><ph id="ph4">filename</ph><ept id="p1">&lt;/code&gt;</ept> is not an absolute path.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Gets a collection of Web server variables.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of server variables supported by IIS, see <bpt id="p1">[</bpt>IIS Server Variables<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=52471)</ept>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Specialized.NameValueCollection"&gt;&lt;/xref&gt;</ph> of server variables.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Threading.CancellationToken"&gt;&lt;/xref&gt;</ph> object that is tripped when a request times out.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timeout period can be specified in the Web.config file (see <ph id="ph1">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A?displayProperty=fullName&gt;</ph>) or programmatically (see <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timeout period is measured from the time the request comes in.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the default timeout of 110 seconds is in effect, the cancellation token will be tripped no earlier than 110 seconds after request processing begins.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ScriptTimeout%2A?displayProperty=fullName&gt;</ph> property value, and as long this token hasn't tripped yet, the new timeout value will be respected.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Currently the token only provides 15 second granularity, which means that if the timeout value is 110 seconds, the token will be tripped sometime between 110 and 125 seconds after request processing begins.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The granularity may change in the future.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even though this property is thread-safe, there are restrictions on its use.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.HttpResponse.ClientDisconnectedToken%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is meaningless if WebSockets request processing has started.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The cancellation token.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Gets the TLS token binding information.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The property enables applications to retrieve token information from incoming HTTP requests for enhanced authentication.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns <ph id="ph1">`null`</ph> on non-windows10 platforms.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The binding token for the current connection.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Gets the number of bytes in the current input stream.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The number of bytes in the input stream.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Gets the HTTP request values without triggering request validation.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Request validation checks for HTML markup and script that might indicate a potential cross-site scripting attack.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, all values are checked using request validation and if any values contain markup or script, ASP.NET throws an <ph id="ph1">&lt;xref:System.Web.HttpRequestValidationException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method if you anticipate that the request will contain markup (for example, you are allowing users to post content that contains markup) and you want to get the raw value of a request.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this property, you must manually check the data for potential cross-site scripting attacks.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The HTTP request values that have not been checked using request validation.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Gets information about the URL of the current request.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object that contains the URL of the current request.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Gets information about the URL of the client's previous request that linked to the current URL.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The HTTP <ph id="ph1">`Referer`</ph> request header is malformed and cannot be converted to a <ph id="ph2">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Gets the raw user agent string of the client browser.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The raw user agent string of the client browser.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets the IP host address of the remote client.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The IP address of the remote client.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Gets the DNS name of the remote client.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The DNS name of the remote client.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets a sorted string array of client language preferences.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>A sorted string array of client language preferences, or <ph id="ph1">`null`</ph> if empty.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Causes validation to occur for the collections accessed through the <ph id="ph1">&lt;xref href="System.Web.HttpRequest.Cookies"&gt;&lt;/xref&gt;</ph>, <ph id="ph2">&lt;xref href="System.Web.HttpRequest.Form"&gt;&lt;/xref&gt;</ph>, and <ph id="ph3">&lt;xref href="System.Web.HttpRequest.QueryString"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest&gt;</ph> class uses input validation flags to track whether to perform validation on the request collections accessed through the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.ValidateInput%2A&gt;</ph> method sets these flags so that when the get accessors for the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Cookies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpRequest.Form%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.HttpRequest.QueryString%2A&gt;</ph> property are invoked, input validation is performed.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Validation works by checking all input data against a hard-coded list of potentially dangerous data.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the validation feature is enabled by page directive or configuration, this method is called during the page's <ph id="ph1">`ProcessRequest`</ph> processing phase.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpRequest.ValidateInput%2A&gt;</ph> method can be called by your code if the validation feature is not enabled.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>Potentially dangerous data was received from the client.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>