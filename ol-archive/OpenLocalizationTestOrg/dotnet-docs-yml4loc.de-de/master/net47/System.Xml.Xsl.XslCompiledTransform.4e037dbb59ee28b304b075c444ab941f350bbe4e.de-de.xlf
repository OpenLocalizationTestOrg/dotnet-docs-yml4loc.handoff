<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4324a20c3921518c0e91d0697b94abba4d047ccf</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Xsl.XslCompiledTransform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d6f21eea8cd1a9a8d3db76f9920061542cadab03</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae0bfb88c9bb915d6e3d44bce0e29d067e47d5ec</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Transforms XML data using an XSLT style sheet.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class is an XSLT processor that supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is a new implementation and includes performance gains when compared to the obsolete <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The structure of the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class is very similar to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslTransform&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method loads and compiles the style sheet, while the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method executes the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Support for the XSLT <ph id="ph1">`document()`</ph> function and embedded script blocks are disabled by default.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>These features can be enabled by creating an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltSettings&gt;</ph> object and passing it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using the XslCompiledTransform Class<ept id="p1">](~/docs/standard/data/xml/using-the-xslcompiledtransform-class.md)</ept> and <bpt id="p2">[</bpt>Migrating From the XslTransform Class<ept id="p2">](~/docs/standard/data/xml/migrating-from-the-xsltransform-class.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security Considerations</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>When creating an application that uses the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class, you should be aware of the following items and their implications:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT scripting is disabled by default.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT scripting should be enabled only if you require script support and you are working in a fully trusted environment.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT <ph id="ph1">`document()`</ph> function is disabled by default.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you enable the <ph id="ph1">`document()`</ph> function, restrict the resources that can be accessed by passing an <ph id="ph2">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> object to the <ph id="ph3">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extension objects are enabled by default.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.Xml.Xsl.XsltArgumentList&gt;</ph> object containing extension objects is passed to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method, they are utilized.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT style sheets can include references to other files and embedded script blocks.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A malicious user can exploit this by supplying you with data or style sheets that when executed can cause your system to process until the computer runs low on resources.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSLT applications that run in a mixed trust environment can result in style sheet spoofing.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a malicious user can load an object with a harmful style sheet and hand it off to another user who subsequently calls the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method and executes the transformation.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>These security issues can be mitigated by not enabling scripting or the <ph id="ph1">`document()`</ph> function unless the style sheet comes from a trusted source, and by not accepting <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> objects, XSLT style sheets, or XML source data from an untrusted source.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Xsl.XslCompiledTransform"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Xsl.XslCompiledTransform"&gt;&lt;/xref&gt;</ph> class with the specified debug setting.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following conditions must be met in order to step into the code and debug the style sheet:</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`enableDebug`</ph> parameter is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The style sheet is passed to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method either as a URI, or an implementation of the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> class that implements the <ph id="ph3">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface is implemented on all text-parsing <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if the style sheet is loaded using an <ph id="ph1">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> object, such as an <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> or <ph id="ph3">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph>, or an <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> implementation that does not implement the <ph id="ph5">&lt;xref:System.Xml.IXmlLineInfo&gt;</ph> interface, you cannot debug the style sheet.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> used to load the style sheet is a file-based <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph>, such as the <ph id="ph3">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> (this is the default <ph id="ph4">&lt;xref:System.Xml.XmlResolver&gt;</ph> used by the <ph id="ph5">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The style sheet is located on the local machine or on the intranet.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to generate debug information; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Setting this to <ph id="ph1">`true`</ph> enables you to debug the style sheet with the Microsoft Visual Studio Debugger.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Compiles an XSLT style sheet to a specified type.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`xsltc.exe`</ph> tool is a wrapper around the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Compiling style sheets with the <ph id="ph1">`xsltc.exe`</ph> will meet the demands of most applications that leverage the use of compiled style sheets.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.CompileToType%2A&gt;</ph> method should be used when building custom compilation tools.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> positioned at the beginning of the style sheet to be compiled.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltSettings"&gt;&lt;/xref&gt;</ph> to be applied to the style sheet.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XsltSettings.Default"&gt;&lt;/xref&gt;</ph> will be applied.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> use to resolve style sheet modules referenced in <ph id="ph2">`xsl:import`</ph> and <ph id="ph3">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, external resources will not be resolved.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Setting this to <ph id="ph1">`true`</ph> enables debugging the style sheet with a debugger.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Reflection.Emit.TypeBuilder"&gt;&lt;/xref&gt;</ph> used for the style sheet compilation.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The provided TypeBuilder is used to generate the resulting type.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The base path for the assemblies generated for <ph id="ph1">`msxsl:script`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>If only one script assembly is generated, this parameter specifies the path for that assembly.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>In case of multiple script assemblies, a distinctive suffix will be appended to the file name to ensure uniqueness of assembly names.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CompilerErrorCollection"&gt;&lt;/xref&gt;</ph> object containing compiler errors and warnings that indicate the results of the compilation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Compiles the XSLT style sheet contained in the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> resolves any XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">import</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">include</ph><ept id="p2">&lt;/code&gt;</ept> elements and the XSLT settings determine the permissions for the style sheet.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT style sheet must use the <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An object implementing the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>In the Microsoft .NET Framework, this can be either an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> (typically an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>), or an <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;&lt;/xref&gt;</ph> containing the style sheet.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltSettings"&gt;&lt;/xref&gt;</ph> to apply to the style sheet.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XsltSettings.Default"&gt;&lt;/xref&gt;</ph> setting is applied.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve any style sheets referenced in XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">import</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">include</ph><ept id="p2">&lt;/code&gt;</ept> elements.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheet</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The style sheet contains an error.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Loads and compiles the XSLT style sheet specified by the URI.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> resolves any XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">import</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">include</ph><ept id="p2">&lt;/code&gt;</ept> elements and the XSLT settings determine the permissions for the style sheet.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT style sheet must use the <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the style sheet.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The URI of the style sheet.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltSettings"&gt;&lt;/xref&gt;</ph> to apply to the style sheet.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XsltSettings.Default"&gt;&lt;/xref&gt;</ph> setting is applied.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve the style sheet URI and any style sheets referenced in XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">import</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">include</ph><ept id="p2">&lt;/code&gt;</ept> elements.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheetUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">stylesheetResolver</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The style sheet contains an error.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The style sheet cannot be found.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheetUri</ph><ept id="p1">&lt;/code&gt;</ept> value includes a filename or directory that cannot be found.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheetUri</ph><ept id="p1">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stylesheetUri&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the style sheet.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Loads a method from a style sheet compiled using the <ph id="ph1">`XSLTC.exe`</ph> utility.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method accepts a compiled style sheet in the form of a <ph id="ph1">&lt;xref:System.Reflection.MethodInfo&gt;</ph> object, a byte array, and a type array.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Reflection.Emit.DynamicMethod&gt;</ph> objects may be used to allow compiled style sheet methods to be discarded when the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> object is reclaimed.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Reflection.MethodInfo"&gt;&lt;/xref&gt;</ph> object representing the compiler-generated <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">execute</ph><ept id="p1">&lt;/code&gt;</ept> method of the compiled style sheet.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A byte array of serialized data structures in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">staticData</ph><ept id="p1">&lt;/code&gt;</ept> field of the compiled style sheet as generated by the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.CompileToType(System.Xml.XmlReader,System.Xml.Xsl.XsltSettings,System.Xml.XmlResolver,System.Boolean,System.Reflection.Emit.TypeBuilder,System.String)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An array of types stored in the compiler-generated <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ebTypes</ph><ept id="p1">&lt;/code&gt;</ept> field of the compiled style sheet.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Compiles the XSLT style sheet contained in the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> resolves any XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">import</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">include</ph><ept id="p2">&lt;/code&gt;</ept> elements and the XSLT settings determine the permissions for the style sheet.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT style sheet must use the <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The style sheet loads from the current node of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> through all its children.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables you to use a portion of a document as the style sheet.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method completes, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on the next node after the end of the style sheet.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the end of the document is reached, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned at the end of file (EOF).</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the style sheet.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltSettings"&gt;&lt;/xref&gt;</ph> to apply to the style sheet.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XsltSettings.Default"&gt;&lt;/xref&gt;</ph> setting is applied.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve any style sheets referenced in XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">import</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">include</ph><ept id="p2">&lt;/code&gt;</ept> elements.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, external resources are not resolved.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheet</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The style sheet contains an error.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Compiles the style sheet contained in the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT style sheet must use the <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The style sheet loads from the current node of the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> through all its children.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This enables you to use a portion of a document as the style sheet.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method completes, the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned on the next node after the end of the style sheet.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the end of the document is reached, the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned at the end of file (EOF).</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has the following behavior:</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials is used to process any <ph id="ph2">`xsl:import`</ph> or <ph id="ph3">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`document()`</ph> function is disabled.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded scripts are not supported.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.Xml.XmlReader%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29&gt;</ph> overload to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary authentication credentials, or to specify different XSLT settings.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the style sheet.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheet</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The style sheet contains an error.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Loads the compiled style sheet that was created using the <bpt id="p1">[</bpt>XSLT Compiler (xsltc.exe)<ept id="p1">](~/docs/standard/data/xml/xslt-compiler-xsltc-exe.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The xsltc.exe tool is used to compile style sheets and generate assemblies from the style sheets.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method loads the compiled style sheet from the assembly.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must also include the XSLT assembly as a reference in your application.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The name of the class that contains the compiled style sheet.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>This is usually the name of the style sheet.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Unless otherwise specified, the xsltc.exe tool uses the name of the style sheet for the class and assembly names.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Loads and compiles the style sheet located at the specified URI.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT style sheet must use the <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has the following behavior:</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials is used to resolve the style sheet URI, and process any <ph id="ph2">`xsl:import`</ph> or <ph id="ph3">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the style sheet.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`document()`</ph> function is disabled.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded scripts are not supported.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%28System.String%2CSystem.Xml.Xsl.XsltSettings%2CSystem.Xml.XmlResolver%29&gt;</ph> overload to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary authentication credentials, or to specify different XSLT settings.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The URI of the style sheet.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheetUri</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The style sheet contains an error.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The style sheet cannot be found.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheetUri</ph><ept id="p1">&lt;/code&gt;</ept> value includes a filename or directory that cannot be found.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheetUri</ph><ept id="p1">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;stylesheetUri&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the style sheet.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Compiles the style sheet contained in the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform&gt;</ph> class supports the XSLT 1.0 syntax.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The XSLT style sheet must use the <ph id="ph1">`http://www.w3.org/1999/XSL/Transform`</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method has the following behavior:</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials is used to process any <ph id="ph2">`xsl:import`</ph> or <ph id="ph3">`xsl:include`</ph> elements.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`document()`</ph> function is disabled.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Embedded scripts are not supported.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> overload to specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary authentication credentials, or to specify different XSLT settings.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An object implementing the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>In the Microsoft .NET Framework, this can be either an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> (typically an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>), or an <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;&lt;/xref&gt;</ph> containing the style sheet.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">stylesheet</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The style sheet contains an error.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object that contains the output information derived from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element of the style sheet.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is populated after a successful call to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Load%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>It contains information derived from the <ph id="ph1">`xsl:output`</ph> element of a compiled style sheet.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">&lt;xref:System.Xml.XmlWriterSettings&gt;</ph> object can be passed to the <ph id="ph2">&lt;xref:System.Xml.XmlWriter.Create%2A?displayProperty=fullName&gt;</ph> method to create the <ph id="ph3">&lt;xref:System.Xml.XmlWriter&gt;</ph> object to which you want to output.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object that contains the output information derived from the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element of the style sheet.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.TempFileCollection"&gt;&lt;/xref&gt;</ph> that contains the temporary files generated on disk after a successful call to the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.Load*"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property identifies the files that were generated during XSLT processing.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The files are placed in your Temp directory (specified by the %TEMP% environment variable) You can delete these files after the XSLT processing has completed.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.TempFileCollection"&gt;&lt;/xref&gt;</ph> that contains the temporary files generated on disk.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This value is <ph id="ph1">`null`</ph> if the <ph id="ph2">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.Load*"&gt;&lt;/xref&gt;</ph> method has not been successfully called, or if debugging has not been enabled.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object and outputs the results to a <ph id="ph2">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the style sheet includes an XSLT <ph id="ph1">`document()`</ph> function, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the input document.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XSLT <ph id="ph1">`document()`</ph> function is enabled, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not support the <ph id="ph1">`xsl:strip-space`</ph> element.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your compiled style sheet included the <ph id="ph1">`xsl:strip-space`</ph> element, you must use the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> overload which takes an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> as the input argument.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface is implemented in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes represent an in-memory cache of XML data.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class is a read-only data store based on the XPath data model.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> is the recommended class for XSLT processing.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides faster performance when compared to the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Transform a Node Fragment<ept id="p1">](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>An object implementing the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>In the Microsoft .NET Framework, this can be either an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> (typically an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>), or an <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;&lt;/xref&gt;</ph> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XSLT <ph id="ph1">`document()`</ph> function is enabled, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not support the <ph id="ph1">`xsl:strip-space`</ph> element.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your compiled style sheet included the <ph id="ph1">`xsl:strip-space`</ph> element, you must use the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> overload which takes an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> as the input argument.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface is implemented in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes represent an in-memory cache of XML data.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class is a read-only data store based on the XPath data model.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> is the recommended class for XSLT processing.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides faster performance when compared to the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Transform a Node Fragment<ept id="p1">](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>An object implementing the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>In the Microsoft .NET Framework, this can be either an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> (typically an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>), or an <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;&lt;/xref&gt;</ph> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object and outputs the results to a stream.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional runtime arguments.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XSLT <ph id="ph1">`document()`</ph> function is enabled, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not support the <ph id="ph1">`xsl:strip-space`</ph> element.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your compiled style sheet included the <ph id="ph1">`xsl:strip-space`</ph> element, you must use the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> overload which takes an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> as the input argument.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface is implemented in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes represent an in-memory cache of XML data.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class is a read-only data store based on the XPath data model.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> is the recommended class for XSLT processing.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides faster performance when compared to the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Transform a Node Fragment<ept id="p1">](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>An object implementing the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>In the Microsoft .NET Framework, this can be either an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> (typically an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>), or an <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;&lt;/xref&gt;</ph> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the style sheet includes an XSLT <ph id="ph1">`document()`</ph> function, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the input document.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object and outputs the results to a stream.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the style sheet includes an XSLT <ph id="ph1">`document()`</ph> function, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the input document.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the URI and outputs the results to a file.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials to resolve the input and output documents.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these resources are located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the input document.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The URI of the input document.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The URI of the output file.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">resultsFile</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The input document cannot be found.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">resultsFile</ph><ept id="p2">&lt;/code&gt;</ept> value includes a filename or directory cannot be found.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">resultsFile</ph><ept id="p2">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputUri&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;resultsFile&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the input document.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the URI and outputs the results to a <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials to resolve the input document and any instances of the XSLT <ph id="ph2">`document()`</ph> function found in the style sheet.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these resources are located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the input document.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The URI of the input document.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value includes a filename or directory cannot be found.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputUri&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the input document.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the URI and outputs the results to stream.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials to resolve the input document and any instances of the XSLT <ph id="ph2">`document()`</ph> function found in the style sheet.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these resources are located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the input document.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The URI of the input document.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The stream to which you want to output.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value includes a filename or directory cannot be found.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputUri&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the input document.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XSLT <ph id="ph1">`document()`</ph> function is enabled, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not support the <ph id="ph1">`xsl:strip-space`</ph> element.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your compiled style sheet included the <ph id="ph1">`xsl:strip-space`</ph> element, you must use the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> overload which takes an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> as the input argument.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.IXPathNavigable&gt;</ph> interface is implemented in the <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> and <ph id="ph3">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>These classes represent an in-memory cache of XML data.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class is based on the W3C Document Object Model (DOM) and includes editing capabilities.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> class is a read-only data store based on the XPath data model.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xml.XPath.XPathDocument&gt;</ph> is the recommended class for XSLT processing.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides faster performance when compared to the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transformations apply to the document as a whole.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if you pass in a node other than the document root node, this does not prevent the transformation process from accessing all nodes in the loaded document.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>To transform a node fragment, you must create an object containing just the node fragment, and pass that object to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Transform a Node Fragment<ept id="p1">](~/docs/standard/data/xml/how-to-transform-a-node-fragment.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>An object implementing the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>In the Microsoft .NET Framework, this can be either an <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph> (typically an <ph id="ph2">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph>), or an <ph id="ph3">&lt;xref href="System.Xml.XPath.XPathDocument"&gt;&lt;/xref&gt;</ph> containing the data to be transformed.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XSLT <ph id="ph1">`document()`</ph> function is enabled, it is resolved using an <ph id="ph2">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the external resource is located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the input document.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the URI and outputs the results to an <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials to resolve the input document and any instances of the XSLT <ph id="ph2">`document()`</ph> function found in the style sheet.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these resources are located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the input document.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not support the <ph id="ph1">`xsl:strip-space`</ph> element.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your compiled style sheet included the <ph id="ph1">`xsl:strip-space`</ph> element, you must use the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> overload which takes an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> as the input argument.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The URI of the input document.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value includes a filename or directory cannot be found.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputUri&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the input document.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments and the XmlResolver resolves the XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">document()</ph><ept id="p1">&lt;/code&gt;</ept> function.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> containing the input document.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve the XSLT <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">document()</ph><ept id="p1">&lt;/code&gt;</ept> function.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">document()</ph><ept id="p1">&lt;/code&gt;</ept> function is not resolved.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Executes the transform using the input document specified by the URI and outputs the results to an <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses a default <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials to resolve the input document and any instances of the XSLT <ph id="ph2">`document()`</ph> function found in the style sheet.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any of these resources are located on a network resource that requires authentication, use the overload that takes an <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> as one of its arguments and specify an <ph id="ph2">&lt;xref:System.Xml.XmlResolver&gt;</ph> with the necessary credentials.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with default settings is used to load the input document.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>DTD processing is disabled on the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you require DTD processing, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> with this feature enabled, and pass it to the <ph id="ph2">&lt;xref:System.Xml.Xsl.XslCompiledTransform.Transform%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The URI of the input document.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> containing the namespace-qualified arguments used as input to the transform.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>This value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">xsl:output</ph><ept id="p1">&lt;/code&gt;</ept> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">results</ph><ept id="p2">&lt;/code&gt;</ept> value is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>There was an error executing the XSLT transform.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputtUri</ph><ept id="p1">&lt;/code&gt;</ept> value includes a filename or directory cannot be found.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inputUri</ph><ept id="p1">&lt;/code&gt;</ept> value cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>An error occurred while processing the request.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inputUri&lt;/code&gt;</ph> is not a valid URI.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>There was a parsing error loading the input document.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Executes the transform by using the input document that is specified by the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object and outputs the results to an <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph> provides additional run-time arguments and the <ph id="ph2">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> resolves the XSLT <ph id="ph3">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The document to transform that is specified by the <ph id="ph1">&lt;xref href="System.Xml.XPath.IXPathNavigable"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Argument list as <ph id="ph1">&lt;xref href="System.Xml.Xsl.XsltArgumentList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> to which you want to output.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>If the style sheet contains an <ph id="ph1">`xsl:output`</ph> element, you should create the <ph id="ph2">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> by using the <ph id="ph3">&lt;xref href="System.Xml.XmlWriterSettings"&gt;&lt;/xref&gt;</ph> object that is returned from the <ph id="ph4">&lt;xref href="System.Xml.Xsl.XslCompiledTransform.OutputSettings"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>This ensures that the <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> has the correct output settings.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlResolver"&gt;&lt;/xref&gt;</ph> used to resolve the XSLT <ph id="ph2">`document()`</ph> function.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>If this is <ph id="ph1">`null`</ph>, the <ph id="ph2">`document()`</ph> function is not resolved.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>