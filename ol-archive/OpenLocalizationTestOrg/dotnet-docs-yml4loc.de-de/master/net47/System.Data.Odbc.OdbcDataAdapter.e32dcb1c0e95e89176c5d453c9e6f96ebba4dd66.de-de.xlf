<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3115bec2f622101e494414635937bf46e1cd5fc6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Odbc.OdbcDataAdapter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2d5feb91fc9390da09051f4b4e095db600f0ef33</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">148936c333e2f42067b8d37e8ce9d63db8fe4379</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of data commands and a connection to a data source that are used to fill the <ph id="ph1">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph> and update the data source.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> serves as a bridge between a <ph id="ph2">`DataSet`</ph> and data source for retrieving and saving data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> provides this bridge by using <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.Fill%2A&gt;</ph> to load data from the data source into the <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph>, and using <ph id="ph4">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph> to send changes made in the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> back to the data source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> fills a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, it creates the required tables and columns for the returned data if they do not already exist.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, primary key information is not included in the implicitly created schema unless the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Data.MissingSchemaAction.AddWithKey&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may also have the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> create the schema of the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, including primary key information, before filling it with data using <ph id="ph3">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Adding Existing Constraints to a DataSet<ept id="p1">](~/docs/framework/data/adonet/adding-existing-constraints-to-a-dataset.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">`Fill`</ph> method on a data source that does not have a primary key column, the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> tries to promote the unique constraint column to the primary key.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the process, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> marks the unique constraint as not nullable.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior works unless there is a null value in the unique constraint column.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a null value, the <ph id="ph1">`Fill`</ph> method fails with a constraint violation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this situation, do not allow null values in the unique constraint column.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Due to the limitations of native ODBC drivers, only one <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> is ever returned when you call <ph id="ph2">&lt;xref:System.Data.Common.DbDataAdapter.FillSchema%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true even when executing SQL batch statements from which multiple <ph id="ph1">&lt;xref:System.Data.DataTable&gt;</ph> objects would be expected.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> also includes the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph>, and <ph id="ph6">`TableMappings`</ph> properties to facilitate loading and updating of data.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>, the following write-only and read-only properties are set to their default values, as shown in the table.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph> class with the specified SQL SELECT statement.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> constructor sets the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property to the value specified in the <ph id="ph3">`selectCommand`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>, the following write-only and read-only properties are set to their default values, as shown in the table.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the value of any of these properties through a separate call to the property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> that is an SQL SELECT statement or stored procedure, and is set as the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph3">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph> class with an SQL SELECT statement and an <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> can be useful in an application that must call the <ph id="ph2">`Fill`</ph> method for two or more <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A string that is a SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcConnection"&gt;&lt;/xref&gt;</ph> that represents the connection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph> class with an SQL SELECT statement and a connection string.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> constructor uses the <ph id="ph2">`selectConnectionString`</ph> parameter to set the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it does not open the connection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>You still must explicitly open the connection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A string that is a SQL SELECT statement or stored procedure to be used by the <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Data.Odbc.OdbcDataAdapter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The connection string.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to delete records in the data source.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph> property is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an update operation, if <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph> is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, you can use the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> class to automatically generate the <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcDataAdapter.DeleteCommand%2A&gt;</ph>, and additional commands needed to reconcile the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> to the data source.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generation logic also requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> used during an update operation to delete records in the data source that correspond to deleted rows in the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to insert new records into the data source.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph> property is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an update operation, if <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph> is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, you can use the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> class to automatically generate <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcDataAdapter.InsertCommand%2A&gt;</ph>, and additional commands needed to reconcile the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> to the data source.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generation logic also requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If execution of this command returns rows, these rows may be added to the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending upon how you set the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> used during an update operation to insert records in the data source that correspond to new rows in the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Occurs during an update operation after a command is executed against the data source.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Occurs during <ph id="ph1">&lt;xref href="System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)"&gt;&lt;/xref&gt;</ph> before a command is executed against the data source.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.Update%2A&gt;</ph>, there are two events that occur per data row updated.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of execution is as follows:</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> are moved to the parameter values.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The command executes.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command is set to <ph id="ph1">`FirstReturnedRecord`</ph>, the first returned result is placed in the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there are output parameters, they are placed in the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.DataRow.AcceptChanges%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to select records in the data source.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> returns no rows, no tables are added to the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, and no exception is raised.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> that is used during a fill operation to select records from data source for placement in the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets an SQL statement or stored procedure used to update records in the data source.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph> is assigned to a previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph>, the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> is not cloned.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph> maintains a reference to the previously created <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>During an update operation, if <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph> is not set and primary key information is present in the <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph>, you can use the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommandBuilder&gt;</ph> class to automatically generate <ph id="ph4">&lt;xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A&gt;</ph>, and additional commands needed to reconcile the <ph id="ph5">&lt;xref:System.Data.DataSet&gt;</ph> to the data source.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, set the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter.SelectCommand%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The generation logic also requires key column information to be present in the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Generating Commands with CommandBuilders<ept id="p1">](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If execution of this command returns rows, these rows may be merged with the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> depending upon how you set the <ph id="ph2">&lt;xref:System.Data.Odbc.OdbcCommand.UpdatedRowSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Data.Odbc.OdbcCommand&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.Odbc.OdbcCommand"&gt;&lt;/xref&gt;</ph> used during an update operation to update records in the data source that correspond to modified rows in the <ph id="ph2">&lt;xref href="System.Data.DataSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.DeleteCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> used during an update to delete records in the data source for deleted rows in the data set.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.InsertCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> that is used during an update to insert records from a data source for placement in the data set.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.SelectCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> that is used during an update to select records from a data source for placement in the data set.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Data.IDbDataAdapter.UpdateCommand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Data.IDbDataAdapter&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Data.IDbCommand"&gt;&lt;/xref&gt;</ph> used during an update to update records in the data source for modified rows in the data set.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.ICloneable.Clone"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Odbc.OdbcDataAdapter&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that is a copy of this instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>