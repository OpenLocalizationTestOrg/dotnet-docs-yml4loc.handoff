<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff72cf34a725e6e06d9f2724e7eccef7c99fd01b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Description.IServiceBehavior.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b9f479666270d1ae45ff48a8449226587af3498c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81f229c7054e9f50fa1082961fc269b7b482549b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a mechanism to modify or insert custom extensions across an entire service, including the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceHostBase"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> to modify, examine, or extend some aspect of service-wide execution at the application level:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to examine the description before <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> constructs the executing service to confirm that it can execute properly.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to pass to a binding element the custom information for the service so that it can support the service correctly.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> objects can make use of any of these methods, but often only one is important; in such cases the unused methods can return without a value.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName&gt;</ph> objects as a parameters.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination only; if you modify these objects the execution behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform the customization task for which it is intended, the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> object must be added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the construction of the service runtime.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are three ways to do this:</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Programmatically add the custom service behavior to the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A&gt;</ph> property prior to the point where the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject.Open%2A?displayProperty=fullName&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHost?displayProperty=fullName&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a custom attribute that implements <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> and use it to mark service classes that are to be modified.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object is constructed, <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> uses reflection to discover the attributes on the service type.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any attributes implement <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>, they are added to the behaviors collection on <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Extend the <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement?displayProperty=fullName&gt;</ph> class to support the specification of the behavior in an application or machine configuration file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the Example section for more information.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of service behaviors in <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> include the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute&gt;</ph> attribute, the <ph id="ph3">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior?displayProperty=fullName&gt;</ph>, the <ph id="ph4">&lt;xref:System.ServiceModel.Description.ServiceDebugBehavior?displayProperty=fullName&gt;</ph> and the <ph id="ph5">&lt;xref:System.ServiceModel.Description.ServiceMetadataBehavior?displayProperty=fullName&gt;</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Provides the ability to pass custom data to binding elements to support the contract implementation.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters%2A&gt;</ph> method to add custom data objects to the <ph id="ph2">`parameters`</ph> collection that binding elements can use to acquire extra information to enable them to support the contract.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called once for each listen URI.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a service has four endpoints, and two of them have the same listen URI, then this method gets called three times.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason is that the <ph id="ph1">`bindingParameters`</ph> target each channel stack and there is one channel stack for each listen URI.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because each call receives those endpoints at that listen URI, two calls each get a single <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt;</ph>, and one call gets a collection of two <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint?displayProperty=fullName&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName&gt;</ph> objects as a parameters.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The service description of the service.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The host of the service.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The service endpoints.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Custom objects to which binding elements have access.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Provides the ability to change run-time property values or insert custom extension objects such as error handlers, message or parameter interceptors, security extensions, and other custom extension objects.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior%2A&gt;</ph> method to inspect or modify the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> object that is being constructed in order to support some custom execution scenario.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName&gt;</ph> objects as a parameters.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The service description.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The host that is currently being built.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Provides the ability to inspect the service host and the service description to confirm that the service can run successfully.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior.Validate%2A&gt;</ph> method to confirm whether the current service can execute properly according to your scenario.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>All of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph> methods pass <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase?displayProperty=fullName&gt;</ph> objects as a parameters.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> parameter is for examination and insertion of customizations only; if you otherwise modify these objects the execution behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The service description.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The service host that is currently being constructed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>