<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">342de3c5978e7a0977fd5d485a6b2d363dd701f5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Media.SoundPlayer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93e4734e0b1f944ef9dbf0c81a16c2db8c6eb7c7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b4cf9e4ba015c938bd16496cd29ce60a662d9b97</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Controls playback of a sound from a .wav file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> class provides a simple interface for loading and playing a .wav file.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> class supports loading a .wav file from a file path, a URL, a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> that contains a .wav file, or an embedded resource that contains a .wav file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To play a sound using the <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> class, configure a <ph id="ph2">&lt;xref:System.Media.SoundPlayer&gt;</ph> with a path to the .wav file and call one of the play methods.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can identify the .wav file to play by using one of the constructors or by setting either the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.SoundLocation%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Media.SoundPlayer.Stream%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file can be loaded prior to playing by using one of the load methods, or loading can be deferred until one of the play methods is called.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> configured to load a .wav file from a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> or URL must load the .wav file into memory before playback begins.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can load or play a .wav file synchronously or asynchronously.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call a synchronous load or play method, the calling thread will wait until the method returns, which may cause painting and other events to be interrupted.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling an asynchronous load or play method will allow the calling thread to continue without interruption.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on asynchronous method calls, see <bpt id="p1">[</bpt>How to: Run an Operation in the Background<ept id="p1">](~/docs/framework/winforms/controls/how-to-run-an-operation-in-the-background.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> has finished loading a .wav file, it raises the <ph id="ph2">&lt;xref:System.Media.SoundPlayer.LoadCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can examine the <ph id="ph1">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs&gt;</ph> in your event handler to determine if the load succeeded or failed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.SoundLocationChanged&gt;</ph> event is raised when the audio source is set to a new file path or URL.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.StreamChanged&gt;</ph> event is raised when the audio source is set to a new <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph>, see <bpt id="p1">[</bpt>SoundPlayer Class Overview<ept id="p1">](~/docs/framework/winforms/controls/soundplayer-class-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> class cannot play other file types, such as .wma or .mp3.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to play other file types, you can use the Windows Media Player control.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Using the Windows Media Player Control in a .NET Framework Solution<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=131267)</ept> and <bpt id="p2">[</bpt>Windows Media Player Object Model Reference for Visual Basic .NET and C#<ept id="p2">](http://go.microsoft.com/fwlink/?LinkId=131269)</ept> in the Windows Media Player SDK.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes a <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> with no audio source.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Until it is configured with an audio source path, the <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> will play a beep sound when one of its playback methods is called.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph> class, and attaches the .wav file within the specified <ph id="ph2">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> passed to the <ph id="ph2">`stream`</ph> parameter should be a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> containing a .wav file.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data returned by the <ph id="ph1">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> should be the data within a .wav file.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> to a .wav file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph> class, and attaches the specified .wav file.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string passed to the <ph id="ph1">`soundLocation`</ph> parameter can be either a file path or a URL to a .wav file.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the path or URL is not valid, the <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> will still be constructed, but subsequent calls to a load or play method will fail.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The location of a .wav file to load.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The URL value specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">soundLocation</ph><ept id="p1">&lt;/code&gt;</ept> cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> to be used for deserialization.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The destination to be used for deserialization.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">serializationInfo</ph><ept id="p1">&lt;/code&gt;</ept> cannot be resolved.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether loading of a .wav file has successfully completed.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a .wav file is loaded; <ph id="ph2">`false`</ph> if a .wav file has not yet been loaded.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Loads a sound synchronously.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method uses the current thread to load a .wav file, preventing the thread from handling other messages until the load is complete.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method may produce a delay while loading a large .wav file.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, painting and other events will be blocked until the load is completed.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> method to load a sound asynchronously, which allows the calling thread to continue without interruption.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.LoadCompleted&gt;</ph> event when loading completes, even if the load was not successful.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.LoadTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> cannot be found.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Loads a .wav file from a stream or a Web resource using a new thread.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> is configured to load a .wav file from a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> or Web resource, this method begins loading a .wav file from the location using a new thread.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.LoadCompleted&gt;</ph> event when loading completes, even if the load was not successful.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> is configured to load a .wav file from a local file path, this method does nothing, because loading is deferred until playing begins.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about asynchronous loading, see <bpt id="p1">[</bpt>How to: Load a Sound Asynchronously within a Windows Form<ept id="p1">](~/docs/framework/winforms/controls/how-to-load-a-sound-asynchronously-within-a-windows-form.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.LoadTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> cannot be found.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Occurs when a .wav file has been successfully or unsuccessfully loaded.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when loading of a .wav file is complete.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event arguments indicate whether the load of the sound was completed successfully or failed.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets or sets the time, in milliseconds, in which the .wav file must load.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>After this time has expired, the loading is canceled and a <ph id="ph1">&lt;xref:System.ServiceProcess.TimeoutException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The number of milliseconds to wait.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The default is 10000 (10 seconds).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.LoadCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called when loading of a .wav file is complete.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.OnLoadCompleted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.AsyncCompletedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocationChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called when a new audio source path for this <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see How to: Provide Event functionality and <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.StreamChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called when a new <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> audio source for this <ph id="ph2">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.OnStreamChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Plays the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.Play%2A&gt;</ph> method plays the sound using a new thread.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call <ph id="ph1">&lt;xref:System.Media.SoundPlayer.Play%2A&gt;</ph> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method to load the .wav file to memory in advance.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a .wav file is successfully loaded from a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> or URL, future calls to playback methods for the <ph id="ph2">&lt;xref:System.Media.SoundPlayer&gt;</ph> will not need to reload the .wav file until the path for the sound changes.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the .wav file has not been specified or it fails to load, the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.Play%2A&gt;</ph> method will play the default beep sound.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.LoadTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> cannot be found.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The .wav header is corrupted; the file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> is not a PCM .wav file.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Plays and loops the .wav file using a new thread, and loads the .wav file first if it has not been loaded.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph> method plays and loops the sound using a new thread.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call <ph id="ph1">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph> before the .wav file has been loaded into memory, the .wav file will be loaded before playback starts.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method to load the .wav file to memory in advance.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a .wav file is successfully loaded from a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> or URL, future calls to playback methods for the <ph id="ph2">&lt;xref:System.Media.SoundPlayer&gt;</ph> will not need to reload the .wav file until the path for the sound changes.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the .wav file has not been specified or it fails to load, the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph> method will play the default beep sound.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">&lt;xref:System.Media.SoundPlayer.PlayLooping%2A&gt;</ph>, see <bpt id="p1">[</bpt>How to: Loop a Sound Playing on a Windows Form<ept id="p1">](~/docs/framework/winforms/controls/how-to-loop-a-sound-playing-on-a-windows-form.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.LoadTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> cannot be found.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The .wav header is corrupted; the file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> is not a PCM .wav file.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Plays the .wav file and loads the .wav file first if it has not been loaded.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Media.SoundPlayer.PlaySync%2A&gt;</ph> method uses the current thread to play a .wav file, preventing the thread from handling other messages until the load is complete.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.LoadAsync%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Media.SoundPlayer.Load%2A&gt;</ph> method to load the .wav file to memory in advance.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>After a .wav file is successfully loaded from a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> or URL, future calls to playback methods for the <ph id="ph2">&lt;xref:System.Media.SoundPlayer&gt;</ph> will not need to reload the .wav file until the path for the sound changes.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the .wav file has not been specified or it fails to load, the <ph id="ph1">&lt;xref:System.Media.SoundPlayer.PlaySync%2A&gt;</ph> method will play the default beep sound.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The elapsed time during loading exceeds the time, in milliseconds, specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.LoadTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> cannot be found.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The .wav header is corrupted; the file specified by <ph id="ph1">&lt;xref href="System.Media.SoundPlayer.SoundLocation"&gt;&lt;/xref&gt;</ph> is not a PCM .wav file.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the file path or URL of the .wav file to load.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is set to <ph id="ph1">&lt;xref:System.String?displayProperty=fullName&gt;</ph> when the <ph id="ph2">&lt;xref:System.Media.SoundPlayer.Stream%2A&gt;</ph> property is set to a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The file path or URL from which to load a .wav file, or <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> if no file path is present.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Occurs when a new audio source path for this <ph id="ph1">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph> has been set.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when a new audio source path for this <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Stops playback of the sound if playback is occurring.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> from which to load the .wav file.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is set to <ph id="ph1">`null`</ph> when the <ph id="ph2">&lt;xref:System.Media.SoundPlayer.SoundLocation%2A&gt;</ph> property is set to a new and valid sound location.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> from which to load the .wav file, or <ph id="ph2">`null`</ph> if no stream is available.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Occurs when a new <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> audio source for this <ph id="ph2">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph> has been set.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when a new <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> audio source for this <ph id="ph2">&lt;xref:System.Media.SoundPlayer&gt;</ph> has been set.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains data about the <ph id="ph2">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains data about the <ph id="ph2">&lt;xref href="System.Media.SoundPlayer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>For a description of this member, see the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Media.SoundPlayer&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> to populate with data.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The destination (see <ph id="ph1">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph>) for this serialization.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>