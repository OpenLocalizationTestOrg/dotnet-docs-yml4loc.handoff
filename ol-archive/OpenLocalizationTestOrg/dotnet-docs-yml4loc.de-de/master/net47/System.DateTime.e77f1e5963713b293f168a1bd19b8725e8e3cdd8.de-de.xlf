<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f40520ae03c06bda0015d7ee6547c8bb628cb01e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.DateTime.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a901565dc17adb27156757a72b0aa8a1d2f470e0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">51c4a96993082665833f8d13496ffe281e57c4d2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an instant in time, typically expressed as a date and time of day.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource-beta.microsoft.com/#mscorlib/system/datetime.cs#df6b1eba7461813b)</ept>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value type represents dates and times with values ranging from 00:00:00 (midnight), January 1, 0001 Anno Domini (Common Era) through 11:59:59 P.M., December 31, 9999 A.D.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>(C.E.) in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Time values are measured in 100-nanosecond units called ticks, and a particular date is the number of ticks since 12:00 midnight, January 1, 0001 A.D.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>(C.E.) in the <ph id="ph1">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> calendar (excluding ticks that would be added by leap seconds).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a ticks value of 31241376000000000L represents the date, Friday, January 01, 0100 12:00:00 midnight.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value is always expressed in the context of an explicit or default calendar.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are working with a ticks value that you want to convert to some other time interval, such as minutes or seconds, you should use the <ph id="ph1">&lt;xref:System.TimeSpan.TicksPerDay?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.TimeSpan.TicksPerHour?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.TimeSpan.TicksPerMinute?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.TimeSpan.TicksPerSecond?displayProperty=fullName&gt;</ph>, or <ph id="ph5">&lt;xref:System.TimeSpan.TicksPerMillisecond?displayProperty=fullName&gt;</ph> constant to perform the conversion.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to add the number of seconds represented by a specified number of ticks to the <ph id="ph1">&lt;xref:System.DateTime.Second%2A&gt;</ph> component of a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value, you can use the expression <ph id="ph3">`dateValue.Second + nTicks/Timespan.TicksPerSecond`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this section:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Instantiating a DateTime object<ept id="p1">](#instantiating_datetime)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>DateTime values and their string representations<ept id="p1">](#datetime_values_strings)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Converting strings to DateTime values<ept id="p1">](#parsing)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Version considerations<ept id="p1">](#datetime_versions)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>DateTime values<ept id="p1">](#datetime_values)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>DateTime operations<ept id="p1">](#datetime_ops)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>DateTime resolution<ept id="p1">](#Resolution)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>DateTime vs. TimeSpan<ept id="p1">](#datetime_timespan)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>DateTime values and calendars<ept id="p1">](#Calendars)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Persisting DateTime values<ept id="p1">](#Persisting)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>COM interop considerations<ept id="p1">](#com_interop)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiating a DateTime object</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value in any of the following ways:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling any of the overloads of the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> constructor that allow you to specify specific elements of the date and time value (such as the year, month, and day, or the number of ticks).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following statement illustrates a call to one of the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> constructors to create a date with a specific year, month, day, hour, minute, and second.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Instantiation#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Instantiation#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using any compiler-specific syntax for declaring date and time values.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following Visual Basic statement initializes a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-vb</bpt><bpt id="p2">[</bpt>System.DateTime.Instantiation#2<ept id="p2">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#2)</ept><ept id="p1">]</ept></source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>By assigning the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object a date and time value returned by a property or method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example assigns the current date and time, the current Coordinated Universal Time (UTC) date and time, and the current date to three new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> variables.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Instantiation#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Instantiation#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>By parsing the string representation of a date and time value.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.DateTime.TryParse%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods all convert a string to its equivalent date and time value.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> method to parse a string and convert it to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Instantiation#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Instantiation#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods indicate whether a particular string contains a valid representation of a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value in addition to performing the conversion.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure's implicit default constructor.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For details on the implicit default constructor of a value type, see <bpt id="p1">[</bpt>Value Types<ept id="p1">](~/docs/csharp/language-reference/keywords/value-types.md)</ept>.) An approximate equivalent, for compilers that support it, is declaring a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value without explicitly assigning a date and time to it.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates a call to the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> implicit default constructor in C# and Visual Basic, as well as a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> variable declaration with no assignment in Visual Basic.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Instantiation#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Instantiation/cs/Instantiation1.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Instantiation#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Instantiation/vb/Instantiation1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTime values and their string representations</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, all <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values are represented as the number of ticks (the number of 100-nanosecond intervals) that have elapsed since 12:00:00 midnight, January 1, 0001.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The actual <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value is independent of the way in which that value appears when displayed in a user interface element or when written to a file.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The appearance of a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value is the result of a formatting operation.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Formatting is the process of converting a value to its string representation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the appearance of date and time values is dependent on such factors as culture, international standards, application requirements, and personal preference, the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure offers a great deal of flexibility in formatting date and time values through the overloads of its <ph id="ph2">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph> method returns the string representation of a date and time value using the current culture's short date and long time pattern.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the default <ph id="ph1">&lt;xref:System.DateTime.ToString?displayProperty=fullName&gt;</ph> method to display the date and time using the short date and long time pattern for the en-US culture, the current culture on the computer on which the example was run.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Formatting#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Formatting#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method returns the string representation of a date and time value using the short date and long time pattern of a specific culture.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method to display the date and time using the short date and long time pattern for the fr-FR culture.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Formatting#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Formatting#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method returns the string representation of the date and time in a format defined by a standard or custom format specifier and using the formatting conventions of the current culture.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method to display the full date and time pattern for the en-US culture, the current culture on the computer on which the example was run.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Formatting#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Formatting#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method returns the string representation of the date and time in a format defined by a specific format specifier and using the formatting conventions of a specific culture.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method to display the full date and time pattern for the fr-FR culture.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Formatting#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Formatting/cs/Formatting1.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Formatting#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Formatting/vb/Formatting1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about formatting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values, see  <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Converting strings to DateTime values</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing involves converting the string representation of a date and time to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, date and time strings have two different usages in applications:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>They represent a date and time that can take a variety of forms and that reflect the conventions of either the current culture or a specific culture.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an application may allow a user whose current culture is en-US to input a date value as "12/15/2013" or "December 15, 2013", and allow a user whose current culture is en-GB to input a date value as "15/12/2013" or "15 December 2013".</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>They represent a date and time in a predefined format.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an application may serialize a date as "20130103" independently of the culture on which the app is running, or it may require that a date be input in the current culture's short date format.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method to convert a string that might reflect one of the common date and time formats used by a culture to a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows how you can use <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> to convert date strings in a number of different culture-specific formats to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>It changes the current culture to English (Great Britain) and calls the <ph id="ph1">&lt;xref:System.DateTime.GetDateTimeFormats&gt;</ph> method to generate an array of date and time strings.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then passes each element in the array to the <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output from the example shows that the parsing method was able to successfully convert each of the culture-specific date and time strings.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Parsing#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Parsing#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods to convert a date and time string that must match a particular format or formats to a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the required format or formats as a parameter to the parsing methodby using one or more  or  date and time format strings.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method to convert strings that must be either in a "yyyyMMdd" format or a "HHmmss" format to <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Parsing#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.parsing/cs/parsingex2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Parsing#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.parsing/vb/parsingex2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> methods throw an exception if the string to be converted to a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value cannot be parsed.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods return a <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded or failed.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the parsing operation for date and time strings, particularly if strings are input by users, tends to have a high failure rate, and because exception handling is expensive, you should use the <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> methods in scenarios where performance is important or conversions are subject to a high rate of failure.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parsing date and time values, see <bpt id="p1">[</bpt>Parsing Date and Time Strings<ept id="p1">](~/docs/standard/base-types/parsing-datetime.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version considerations</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prior to the .NET Framework version 2.0, the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure contains a 64-bit field composed of an unused 2-bit field concatenated with a private <ph id="ph2">`Ticks`</ph> field, which is a 62-bit unsigned field that contains the number of ticks that represent the date and time.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`Ticks`</ph> field can be obtained with the <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure contains a 64-bit field composed of a private Kind field concatenated with the Ticks field.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Kind field is a 2-bit field that indicates whether the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure represents a local time, a Coordinated Universal Time (UTC), or the time in an unspecified time zone.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Kind field is used when performing time conversions between time zones, but not for time comparisons or arithmetic.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the Kind field can be obtained with the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>An alternative to the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure for working with date and time values in particular time zones is the <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure stores date and time information in a private <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> field and the number of minutes by which that date and time differs from UTC in a private <ph id="ph3">&lt;xref:System.Int16&gt;</ph> field.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes it possible for a <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> value to reflect the time in a particular time zone, whereas a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value can unambiguously reflect only UTC and the local time zone's time.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a discussion about when to use the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure or the <ph id="ph2">&lt;xref:System.DateTimeOffset&gt;</ph> structure when working with date and time values, see <bpt id="p1">[</bpt>Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo<ept id="p1">](~/docs/standard/datetime/choosing-between-datetime.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTime values</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Descriptions of time values in the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> type are often expressed using the Coordinated Universal Time (UTC) standard, which is the internationally recognized name for Greenwich Mean Time (GMT).</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Coordinated Universal Time is the time as measured at zero degrees longitude, the UTC origin point.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Daylight saving time is not applicable to UTC.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local time is relative to a particular time zone.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>A time zone is associated with a time zone offset, which is the displacement of the time zone measured in hours from the UTC origin point.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, local time is optionally affected by daylight saving time, which adds or subtracts an hour from the length of a day.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, local time is calculated by adding the time zone offset to UTC and adjusting for daylight saving time if necessary.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time zone offset at the UTC origin point is zero.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTC time is suitable for calculations, comparisons, and storing dates and time in files.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local time is appropriate for display in user interfaces of desktop applications.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Time zone-aware applications (such as many Web applications) also need to work with a number of other time zones.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object is <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, it is unspecified whether the time represented is local time, UTC time, or a time in some other time zone.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTime operations</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>A calculation using a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure, such as <ph id="ph2">&lt;xref:System.DateTime.Add%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.DateTime.Subtract%2A&gt;</ph>, does not modify the value of the structure.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the calculation returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure whose value is the result of the calculation.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversion operations between time zones (such as between UTC and local time, or between one time zone and another) take daylight saving time into account, but arithmetic and comparison operations do not.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure itself offers limited support for converting from one time zone to another.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method to convert UTC to local time, or you can use the <ph id="ph2">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method to convert from local time to UTC.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a full set of time zone conversion methods is available in the <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using these methods, you can convert the time in any one of the world's time zones to the time in any other time zone.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calculations and comparisons of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects are meaningful only if the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a <ph id="ph1">&lt;xref:System.TimeZoneInfo&gt;</ph> object to represent a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value's time zone, although the two are loosely coupled.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>(That is, a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object does not have a property that returns an object that represents that date and time value's time zone other than the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.) For this reason, in a time zone-aware application, you must rely on some external mechanism to determine the time zone in which a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object was created.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could use a structure that wraps both the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value and the <ph id="ph2">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value's time zone.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on using UTC in calculations and comparisons with <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values, see <bpt id="p1">[</bpt>Performing Arithmetic Operations with Dates and Times<ept id="p1">](~/docs/standard/datetime/performing-arithmetic-operations.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> member implicitly uses the Gregorian calendar to perform its operation, with the exception of constructors that specify a calendar, and methods with a parameter derived from <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>, such as <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo?displayProperty=fullName&gt;</ph>, that implicitly specifies a calendar.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operations by members of the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> type take into account details such as leap years and the number of days in a month.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two other common operations with <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values involve converting a date and time value to or from its string representation.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process of converting a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to its string representation is a formatting operation; for more information about formatting, see <bpt id="p1">[</bpt>DateTime values and their string representations<ept id="p1">](#datetime_values_strings)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>The process of converting the string representation of a date and time to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value is a parsing operation; for more information about parsing, see <bpt id="p1">[</bpt>Converting strings to DateTime values<ept id="p1">](#parsing)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTime resolution</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an alternative to performing date and time arithmetic on <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values to measure elapsed time, you can use the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property expresses date and time values in units of one ten-millionth of a second, and the <ph id="ph2">&lt;xref:System.DateTime.Millisecond%2A&gt;</ph> property returns the thousandths of a second in a date and time value.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are using repeated calls to the <ph id="ph1">&lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;</ph> property to measure elapsed time, and you are concerned with small time intervals less than 100 milliseconds, you should note that values returned by the <ph id="ph2">&lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;</ph> property are dependent on the system clock, which on Windows 7 and Windows 8 systems has a resolution of approximately 15 milliseconds.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates the dependence of current date and time values on the resolution of the system clock.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the example, an outer loop repeats 20 times, and an inner loop serves to delay the outer loop.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value of the outer loop counter is 10, a call to the <ph id="ph1">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;</ph> method introduces a five millisecond delay.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, the number of milliseconds in returned by the <ph id="ph1">`DateTime.Now.Milliseconds`</ph> property changed only after the call to <ph id="ph2">&lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.DateTime.Now#1<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/resolution2.cpp#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>System.DateTime.Now#1<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/resolution2.cs#1)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.DateTime.Now#1<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/resolution2.vb#1)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTime vs. TimeSpan</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> value types differ in that a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> represents an instant in time whereas a <ph id="ph4">&lt;xref:System.TimeSpan&gt;</ph> represents a time interval.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means, for example, that you can subtract one instance of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> from another to obtain a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object that represents the time interval between them.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or you could add a positive <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> to the current <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> to obtain a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value that represents a future date.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add or subtract a time interval from a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Time intervals can be negative or positive, can be expressed in units such as ticks or seconds, or can be expressed as a <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTime values and calendars</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Class Library includes a number of calendar classes, all of which are derived from the <ph id="ph1">&lt;xref:System.Globalization.Calendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are:</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.ChineseLunisolarCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.EastAsianLunisolarCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.HebrewCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.HijriCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.JapaneseCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.JapaneseLunisolarCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.JulianCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.KoreanLunisolarCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.PersianCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.TaiwanLunisolarCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each culture uses a default calendar defined by its read-only <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property and supports one or more calendars defined by its read-only <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The calendar currently used by a specific <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is defined by its <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property; it must be one of the calendars found in the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A?displayProperty=fullName&gt;</ph> array.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>A culture's current calendar is used in all formatting operations for that culture.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the default calendar of the Persian (Iran) culture is the Umm al-Qura calendar, which is represented by the <ph id="ph1">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the Persian (Iran) culture is used in a date and time formatting operation, the Umm al-Qura calendar is used by default, and the Gregorian calendar is used only if the culture's <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName&gt;</ph> property is changed, as the following example shows.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Calendar#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraCalendar1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Calendar#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraCalendar1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>A culture's current calendar is also used in all parsing operations for that culture, as the following example shows.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Calendar#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/UmAlQuraParse1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Calendar#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/UmAlQuraParse1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value by using the date and time elements (such as the number of the year, month, and day) of a specific calendar by calling a <bpt id="p1">[</bpt>DateTime constructor<ept id="p1">](../Topic/DateTime%20Constructor.md)</ept> that includes a <ph id="ph2">`calendar`</ph> parameter and passing it a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> object that represents that calendar.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example does this by using the date and time elements from the <ph id="ph1">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> calendar.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Calendar#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Ctor1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Calendar#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Ctor1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> constructors that do not include a <ph id="ph2">`calendar`</ph> parameter assume that the date and time elements are expressed as units in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> properties and methods use the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.DateTime.Year%2A?displayProperty=fullName&gt;</ph> property returns the year in the Gregorian calendar, and the <ph id="ph2">&lt;xref:System.DateTime.IsLeapYear%28System.Int32%29?displayProperty=fullName&gt;</ph> method assumes that the <ph id="ph3">`year`</ph> parameter is a year in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> member that uses the Gregorian calendar has a corresponding member of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> class that  uses a specific calendar.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Globalization.Calendar.GetYear%2A?displayProperty=fullName&gt;</ph> method returns the year in a specific calendar, and the <ph id="ph2">&lt;xref:System.Globalization.Calendar.IsLeapYear%2A?displayProperty=fullName&gt;</ph> method interprets the <ph id="ph3">`year`</ph> parameter as a year number in a specific calendar.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example use both the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> and the corresponding members of the  <ph id="ph2">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Calendar#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/DateTimesAndCalendars1.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Calendar#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/DateTimesAndCalendars1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure includes <ph id="ph2">&lt;xref:System.DateTime.DayOfWeek%2A&gt;</ph> property that returns the day of the week in the Gregorian calendar, it does not include a member that allows you to retrieve the week number of the year.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the week of the year, call the individual calendar's <ph id="ph1">&lt;xref:System.Globalization.Calendar.GetWeekOfYear%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example provides an illustration.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Calendar#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.DateTime.Calendar/cs/Weeks1.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Calendar#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.DateTime.Calendar/vb/Weeks1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on dates and calendars, see <bpt id="p1">[</bpt>Working with Calendars<ept id="p1">](~/docs/standard/datetime/working-with-calendars.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persisting DateTime values</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can persist <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values in four ways:</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can <bpt id="p1">[</bpt>convert them to strings<ept id="p1">](#Strings)</ept> and persist the strings.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can <bpt id="p1">[</bpt>convert them to 64-bit integer values<ept id="p1">](#Integers)</ept> (the value of the <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property) and persist the integers.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can<bpt id="p1">[</bpt>serialize the DateTime values<ept id="p1">](#Serialized)</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can <bpt id="p1">[</bpt>serialize the DateTime values along with time zone information<ept id="p1">](#TimeZone)</ept>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of which technique you choose, you must ensure that the routine that restores the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values doesn't lose data or throw an exception.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values should round-trip.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the original value and the restored value should be the same.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>And if the original <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents a single instant of time, it should identify the same moment of time when it's restored.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persisting values as strings</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>To successfully restore <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values that are persisted as strings, follow these rules:</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Make the same assumptions about culture-specific formatting when you restore the string as when you persisted it.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>To ensure that a string can be restored on a system whose current culture is different from the culture of the system it was saved on, call the <ph id="ph1">&lt;xref:System.DateTime.ToString%2A&gt;</ph>overload to save the string by using the conventions of the invariant culture, and call the <ph id="ph2">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> or <ph id="ph3">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> overload to restore the string by using the conventions of the invariant culture.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Never use the <ph id="ph1">&lt;xref:System.DateTime.ToString&gt;</ph>, <ph id="ph2">&lt;xref:System.DateTime.Parse%28System.String%29&gt;</ph>, or <ph id="ph3">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29&gt;</ph> overloads, which use the conventions of the current thread culture.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data represents a single moment of time, ensure that it represents the same moment in time when it's restored, even if it's restored on a system that uses a different time zone.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you convert the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value to Coordinated Universal Time (UTC) before saving it.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also serialize the value along with time zone information; for more information about this approach, see <bpt id="p1">[</bpt>Serializing DateTime and time zone data<ept id="p1">](#TimeZone)</ept>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common error made when persisting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values as strings is to rely on the formatting conventions of the default or current culture.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Problems arise if the current culture is different when saving and restoring the strings.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates these problems.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>It saves five dates using the formatting conventions of the current culture, which in this case is English (United States).</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>It restores the dates using the formatting conventions of the current culture, which in this case is English (Great Britain).</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the formatting conventions of the two cultures are different, two of the dates can't be restored, and the remaining three dates are interpreted incorrectly.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, if the original date and time values represent single moments in time, the restored times are incorrect because time zone information is lost.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>To round-trip <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values successfully, follow these steps:</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the values represent single moments of time, convert them from the local time to UTC by calling the <ph id="ph1">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Convert the dates to their string representations by calling the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> or <ph id="ph2">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the formatting conventions of the invariant culture by specifying <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> as the <ph id="ph2">`provider`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify that the value should round-trip by using the "O" or "R" .</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call the <ph id="ph1">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restore the persisted <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values without data loss, do the following:</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parse the data by calling the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> as the <ph id="ph2">`provider`</ph> argument, and use the same standard format string you used for the <ph id="ph3">`format`</ph> argument during conversion.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Include the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> value in the <ph id="ph2">`styles`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values represent single moments in time, call the <ph id="ph2">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method to convert the parsed date from UTC to local time.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the invariant culture and the "O" standard format string to ensure that <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values that are saved and restored represent the same moment in time regardless of the system, culture, or time zone of the source and target systems.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persisting values as integers</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of persisting a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value as a string, you can persist it as an <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value that represents a number of ticks.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you don't have to consider the culture of the systems the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values are persisted and restored on.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>To persist a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value as an integer:</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values represent single moments in time, convert them to UTC by calling the <ph id="ph2">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieve the number of ticks represented by the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value from its <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restore a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value that has been persisted as an integer:</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiate a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object by passing the <ph id="ph2">&lt;xref:System.Int64&gt;</ph> value to the <ph id="ph3">&lt;xref:System.DateTime.%23ctor%28System.Int64%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents a single moment in time, convert it from UTC to the local time by calling the <ph id="ph2">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example persists an array of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values as integers on a system in the U.S. Pacific Time zone.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>It restores it on a system in the UTC zone.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file that contains the integers includes an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> value that indicates the total number of <ph id="ph2">&lt;xref:System.Int64&gt;</ph> values that immediately follow it.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist4.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist4.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializing DateTime values</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of saving <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values as strings or integers, which you then have to convert back to <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values, you can persist <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> values through serialization to a stream or file, and then restore them through deserialization.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>data is serialized in some specified object format, and the objects are restored when they are deserialized.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>A formatter or serializer, such as <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph>, handles the process of serialization and deserialization.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about serialization and the types of serialization supported by the .NET Framework, see <bpt id="p1">[</bpt>Serialization<ept id="p1">](http://msdn.microsoft.com/library/4d1111c0-9447-4231-a997-96a2b74b3453)</ept>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to serialize and deserialize <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values that represent all leap year days in the twenty-first century.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output represents the result if the example is run on a system whose current culture is English (Great Britain).</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because we've deserialized the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object itself, the code doesn't have to handle cultural differences in date and time formats.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist5.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist5.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The previous example doesn't include time information.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents a moment in time and is expressed as a local time, you should convert it from local time to UTC before serializing it by calling the <ph id="ph2">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you deserialize it, you should convert it from UTC to local time by calling the <ph id="ph1">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> class to serialize<ph id="ph2">&lt;xref:System.DateTime&gt;</ph> data on a system in the U.S. Pacific Standard Time zone and to deserialize it on a system in the UTC zone.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist3.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist3.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializing DateTime and time zone data</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The previous examples have all assumed that <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values are expressed as local times, and converted the values between UTC and local time so they reflect the same moment in time on the source and target systems.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime&gt;</ph> values may also reflect moments in time in a time zone other than local and UTC.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, because the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure is not time zone-aware, you have to serialize both the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>value and the <ph id="ph3">&lt;xref:System.TimeZoneInfo&gt;</ph> object that represents its time zone.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, create a type whose fields include both the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value and its time zone.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example defines a <ph id="ph1">`DateWithTimeZone`</ph> structure that illustrates how this might be done.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#6<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist6.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#6<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist6.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`DateWithTimeZone`</ph> structure is used in the next two examples, which serialize and deserialize an array of <ph id="ph2">`DateWithTimeZone`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>To run the examples, first create a class library that contains the <ph id="ph1">`DateWithTimeZone`</ph> structure, and then add a reference to it when you compile each example.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using the <ph id="ph1">`DateWithTimeZone`</ph> structure , you can then persist date and time along with time zone information.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> class to serialize an array of <ph id="ph2">`DateWithTimeZone`</ph> objects.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#7<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist7.cs#7)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#7<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist7.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example then calls the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize%2A?displayProperty=fullName&gt;</ph> method to deserialize it.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Persist#8<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.persist/cs/persist8.cs#8)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Persist#8<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.persist/vb/persist8.vb#8)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>COM interop considerations</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value that is transferred to a COM application, then is transferred back to a managed application, is said to round-trip.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value that specifies only a time does not round-trip as you might expect.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you round-trip only a time, such as 3 P.M., the final date and time is December 30, 1899 C.E.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>at 3:00 P.M., instead of January, 1, 0001 C.E.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>at 3:00 P.M.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This happens because the .NET Framework and COM assume a default date when only a time is specified.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the COM system assumes a base date of December 30, 1899 C.E.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>while the .NET Framework assumes a base date of January, 1, 0001 C.E.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>When only a time is passed from the .NET Framework to COM, special processing is performed that converts the time to the format used by COM.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>When only a time is passed from COM to the .NET Framework, no special processing is performed because that would corrupt legitimate dates and times on or before December 30, 1899.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>This also means if a date starts its round-trip from COM, the .NET Framework and COM preserve the date.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of the .NET Framework and COM means that if your application round-trips a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> that only specifies a time, your application must remember to modify or ignore the erroneous date from the final <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to a specified number of ticks.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ticks&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to a specified number of ticks and to Coordinated Universal Time (UTC) or local time.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>A date and time expressed in the number of 100-nanosecond intervals that have elapsed since January 1, 0001 at 00:00:00.000 in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ticks</ph><ept id="p1">&lt;/code&gt;</ept> specifies a local time, Coordinated Universal Time (UTC), or neither.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ticks&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id="ph2">&lt;xref href="System.DateTimeKind"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, and day.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor interprets <ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> as a year, month, and day in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id="ph2">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time of day for the resulting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> is midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The year (1 through 9999).</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The month (1 through 12).</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, and day for the specified calendar.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time of day for the resulting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> is midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The allowable values for <ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> depend on <ph id="ph4">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if the specified date and time cannot be expressed using <ph id="ph1">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id="ph2">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The year (1 through the number of years in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The month (1 through the number of months in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The calendar that is used to interpret <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, and second.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor interprets<ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> as a year, month, and day in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id="ph2">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The year (1 through 9999).</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>The month (1 through 12).</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, and Coordinated Universal Time (UTC) or local time.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor interprets<ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> as a year, month, and day in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id="ph2">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The year (1 through 9999).</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The month (1 through 12).</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">hour</ph><ept id="p4">&lt;/code&gt;</ept>, <bpt id="p5">&lt;code&gt;</bpt><ph id="ph5">minute</ph><ept id="p5">&lt;/code&gt;</ept> and <bpt id="p6">&lt;code&gt;</bpt><ph id="ph6">second</ph><ept id="p6">&lt;/code&gt;</ept> specify a local time, Coordinated Universal Time (UTC), or neither.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id="ph2">&lt;xref href="System.DateTimeKind"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, and second for the specified calendar.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>The allowable values for <ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> depend on <ph id="ph4">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if the specified date and time cannot be expressed using <ph id="ph1">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id="ph2">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The year (1 through the number of years in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The month (1 through the number of months in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The calendar that is used to interpret <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, and millisecond.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor interprets<ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> as a year, month, and day in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id="ph2">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The year (1 through 9999).</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The month (1 through 12).</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The milliseconds (0 through 999).</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor interprets<ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> as a year, month, and day in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value by using the year, month, and day in another calendar, call the <ph id="ph2">&lt;xref:System.DateTime.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.Calendar%2CSystem.DateTimeKind%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The year (1 through 9999).</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The month (1 through 12).</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The milliseconds (0 through 999).</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">hour</ph><ept id="p4">&lt;/code&gt;</ept>, <bpt id="p5">&lt;code&gt;</bpt><ph id="ph5">minute</ph><ept id="p5">&lt;/code&gt;</ept>, <bpt id="p6">&lt;code&gt;</bpt><ph id="ph6">second</ph><ept id="p6">&lt;/code&gt;</ept>, and <bpt id="p7">&lt;code&gt;</bpt><ph id="ph7">millisecond</ph><ept id="p7">&lt;/code&gt;</ept> specify a local time, Coordinated Universal Time (UTC), or neither.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id="ph2">&lt;xref href="System.DateTimeKind"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, and millisecond for the specified calendar.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is initialized to <ph id="ph2">&lt;xref:System.DateTimeKind.Unspecified&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>The allowable values for <ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> depend on <ph id="ph4">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if the specified date and time cannot be expressed using <ph id="ph1">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id="ph2">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The year (1 through the number of years in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The month (1 through the number of months in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The milliseconds (0 through 999).</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The calendar that is used to interpret <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> structure to the specified year, month, day, hour, minute, second, millisecond, and Coordinated Universal Time (UTC) or local time for the specified calendar.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>The allowable values for <ph id="ph1">`year`</ph>, <ph id="ph2">`month`</ph>, and <ph id="ph3">`day`</ph> parameters depend on the <ph id="ph4">`calendar`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if the specified date and time cannot be expressed using <ph id="ph1">`calendar`</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications in which portability of date and time data or a limited degree of time zone awareness is important, you can use the corresponding <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace provides several calendars including <ph id="ph2">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.JulianCalendar&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The year (1 through the number of years in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>The month (1 through the number of months in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">calendar</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The day (1 through the number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept>).</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The hours (0 through 23).</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The minutes (0 through 59).</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The seconds (0 through 59).</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The milliseconds (0 through 999).</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The calendar that is used to interpret <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">year</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">month</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">day</ph><ept id="p3">&lt;/code&gt;</ept>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">hour</ph><ept id="p4">&lt;/code&gt;</ept>, <bpt id="p5">&lt;code&gt;</bpt><ph id="ph5">minute</ph><ept id="p5">&lt;/code&gt;</ept>, <bpt id="p6">&lt;code&gt;</bpt><ph id="ph6">second</ph><ept id="p6">&lt;/code&gt;</ept>, and <bpt id="p7">&lt;code&gt;</bpt><ph id="ph7">millisecond</ph><ept id="p7">&lt;/code&gt;</ept> specify a local time, Coordinated Universal Time (UTC), or neither.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;calendar&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is not in the range supported by <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than the number of months in <ph id="ph2">&lt;code&gt;calendar&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;day&lt;/code&gt;</ph> is less than 1 or greater than the number of days in <ph id="ph2">&lt;code&gt;month&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;hour&lt;/code&gt;</ph> is less than 0 or greater than 23.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;minute&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;second&lt;/code&gt;</ph> is less than 0 or greater than 59.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than 0 or greater than 999.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;kind&lt;/code&gt;</ph> is not one of the <ph id="ph2">&lt;xref href="System.DateTimeKind"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the value of the specified <ph id="ph2">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.DateTime.Add%2A&gt;</ph> method to add more than one kind of time interval (days, hours, minutes, seconds, or milliseconds) in a single operation.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method's behavior is identical to that of the addition operator.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure also supports specialized addition methods (such as <ph id="ph2">&lt;xref:System.DateTime.AddDays%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.DateTime.AddHours%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.DateTime.AddMinutes%2A&gt;</ph>) for each time interval.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Add%2A&gt;</ph> method takes into account leap years and the number of days in a month when performing date arithmetic.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> instance is the same as that of the current instance.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>A positive or negative time interval.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the time interval represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of days to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fractional part of <ph id="ph1">`value`</ph> is the fractional part of a day.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, 4.5 is equivalent to 4 days, 12 hours, 0 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter is rounded to the nearest millisecond.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.DateTime.AddDays%2A&gt;</ph> method takes into account leap years and the number of days in a month when performing date arithmetic.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>A number of whole and fractional days.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the number of days represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of hours to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object is the same as that of <ph id="ph3">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fractional part of <ph id="ph1">`value`</ph> is the fractional part of an hour.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, 4.5 is equivalent to 4 hours, 30 minutes, 0 seconds, 0 milliseconds, and 0 ticks.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter is rounded to the nearest millisecond.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>Converting time intervals of less than an hour to a fraction can involve a loss of precision if the result is a non-terminating repeating decimal.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>(For example, one minute is 0.016667 of an hour.) If this is problematic, you can use the <ph id="ph1">&lt;xref:System.DateTime.Add%2A&gt;</ph> method, which enables you to specify more than one kind of time interval in a single method call and eliminates the need to convert time intervals to fractional parts of an hour.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>A number of whole and fractional hours.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the number of hours represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of milliseconds to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fractional part of <ph id="ph1">`value`</ph> is the fractional part of a millisecond.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, 4.5 is equivalent to 4 milliseconds and 5000 ticks, where one millisecond = 10000 ticks.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter is rounded to the nearest integer.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>A number of whole and fractional milliseconds.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>Note that this value is rounded to the nearest integer.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the number of milliseconds represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of minutes to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fractional part of <ph id="ph1">`value`</ph> is the fractional part of a minute.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, 4.5 is equivalent to 4 minutes, 30 seconds, 0 milliseconds, and 0 ticks.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter is rounded to the nearest millisecond.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>A number of whole and fractional minutes.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the number of minutes represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of months to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.AddMonths%2A&gt;</ph> method calculates the resulting month and year, taking into account leap years and the number of days in a month, then adjusts the day part of the resulting <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resulting day is not a valid day in the resulting month, the last valid day of the resulting month is used.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, March 31st + 1 month = April 30th, and March 31st - 1 month = February 28 for a non-leap year and February 29 for a leap year.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time-of-day part of the resulting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object remains the same as this instance.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>A number of months.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">months</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">months</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;months&lt;/code&gt;</ph> is less than -120,000 or greater than 120,000.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of seconds to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>The fractional part of <ph id="ph1">`value`</ph> is the fractional part of a second.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, 4.5 is equivalent to 4 seconds, 500 milliseconds, and 0 ticks.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`value`</ph> parameter is rounded to the nearest millisecond.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>A number of whole and fractional seconds.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the number of seconds represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of ticks to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source>A number of 100-nanosecond ticks.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be positive or negative.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the time represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that adds the specified number of years to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.AddYears%2A&gt;</ph> method calculates the resulting year taking into account leap years.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>The month and time-of-day part of the resulting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object remains the same as this instance.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current instance represents the leap day in a leap year, the return value depends on the target date:</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.DateTime.Year%2A?displayProperty=fullName&gt;</ph> is also a leap year, the return value represents the leap day in that year.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if four years is added to February 29, 2012, the date returned is February 29, 2016.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph><ph id="ph2"> + </ph><ph id="ph3">&lt;xref:System.DateTime.Year%2A?displayProperty=fullName&gt;</ph> is not a leap year, the return value represents the day before the leap day in that year.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if one year is added to February 29, 2012, the date returned is February 28, 2013.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates using the <ph id="ph1">&lt;xref:System.DateTime.AddYears%2A&gt;</ph> method with a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value that represents a leap year day.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>It displays the date for the fifteen years prior to and the fifteen years that follow February 29, 2000.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.AddYears#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.addyears/cs/addyears1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.AddYears#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.addyears/vb/addyears1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>A number of years.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter can be negative or positive.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>An object whose value is the sum of the date and time represented by this instance and the number of years represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> or the resulting <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph3">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph4">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Compares two instances of <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> and returns an integer that indicates whether the first instance is earlier than, the same as, or later than the second instance.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the relationship of <ph id="ph1">`t1`</ph> to <ph id="ph2">`t2`</ph>, the <ph id="ph3">&lt;xref:System.DateTime.Compare%2A&gt;</ph> method compares the <ph id="ph4">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of <ph id="ph5">`t1`</ph> and <ph id="ph6">`t2`</ph> but ignores their <ph id="ph7">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, ensure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>A signed number indicating the relative values of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">t1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">t2</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Value Type</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Condition</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;t1&lt;/code&gt;</ph> is earlier than <ph id="ph2">&lt;code&gt;t2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;t1&lt;/code&gt;</ph> is the same as <ph id="ph2">&lt;code&gt;t2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;t1&lt;/code&gt;</ph> is later than <ph id="ph2">&lt;code&gt;t2&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>Compares the value of this instance to a specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the relationship of the current instance to <ph id="ph1">`value`</ph>, the <ph id="ph2">&lt;xref:System.DateTime.CompareTo%2A&gt;</ph> method compares the <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of the current instance and <ph id="ph4">`value`</ph> but ignores their <ph id="ph5">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.DateTime.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph> method overload because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>The object to compare to the current instance.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>A signed number indicating the relative values of this instance and the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>This instance is earlier than <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>This instance is the same as <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>This instance is later than <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Compares the value of this instance to a specified object that contains a specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value, and returns an integer that indicates whether this instance is earlier than, the same as, or later than the specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the relationship of the current instance to <ph id="ph1">`value`</ph>, the<ph id="ph2">&lt;xref:System.DateTime.CompareTo%2A&gt;</ph> method compares the <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property of the current instance and <ph id="ph4">`value`</ph> but ignores their <ph id="ph5">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any instance of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>A boxed object to compare, or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>A signed number indicating the relative values of this instance and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>This instance is earlier than <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve">
          <source>This instance is the same as <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>This instance is later than <ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph>, or <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>Gets the date component of this instance.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value is the same as that of the current instance.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> type represents both dates and times in a single type, it is important to avoid misinterpreting a date returned by the <ph id="ph2">&lt;xref:System.DateTime.Date%2A&gt;</ph> property as a date and time.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>A new object with the same date as this instance, and the time value set to 12:00:00 midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>Gets the day of the month represented by this instance.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Day%2A&gt;</ph> property always returns the day of the month in the Gregorian calendar, even if the current <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value was instantiated using some other calendar or if the current thread culture's default calendar is not the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the day of the month of a particular date using some other calendar, call that calendar's <ph id="ph1">&lt;xref:System.Globalization.Calendar.GetDayOfMonth%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses both the <ph id="ph1">&lt;xref:System.DateTime.Day%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName&gt;</ph> method to retrieve the day of the month for a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value that is instantiated using the Hijri calendar.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Day#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Day#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, the following example uses both the <ph id="ph1">&lt;xref:System.DateTime.Day%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Globalization.HijriCalendar.GetDayOfMonth%2A?displayProperty=fullName&gt;</ph> method to retrieve the day of the month when the current thread culture is ar-SA, which uses Hijri as its default calendar.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Day#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Day/cs/Day2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Day#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Day/vb/Day2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The day component, expressed as a value between 1 and 31.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Gets the day of the week represented by this instance.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the constants in the <ph id="ph1">&lt;xref:System.DayOfWeek&gt;</ph> enumeration ranges from <ph id="ph2">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph> to <ph id="ph3">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>If cast to an integer, its value ranges from zero (which indicates <ph id="ph1">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>) to six (which indicates <ph id="ph2">&lt;xref:System.DayOfWeek?displayProperty=fullName&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.DayOfWeek%2A&gt;</ph> property returns an enumerated constant; it does not reflect a system's regional and language settings.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve a string representing a localized weekday name for a particular date, call one of the overloads of the <ph id="ph1">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method that includes a <ph id="ph2">`format`</ph> parameter and pass it either the <ph id="ph3">`ddd`</ph> or <ph id="ph4">`dddd`</ph> custom format strings.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>How to: Extract the Day of the Week from a Specific Date<ept id="p1">](~/docs/standard/base-types/how-to-extract-the-day-of-the-week-from-a-specific-date.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve">
          <source>An enumerated constant that indicates the day of the week of this <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve">
          <source>Gets the day of the year represented by this instance.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.DateTime.DayOfYear%2A&gt;</ph> property takes leap years into account when it calculates the day of the year.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property value always reflects the day of the year in the Gregorian calendar, regardless of the current thread culture's current calendar.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the day of the year in a different calendar, call the <ph id="ph1">&lt;xref:System.Globalization.Calendar.GetDayOfYear%2A?displayProperty=fullName&gt;</ph> method of that calendar.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The day of the year, expressed as a value between 1 and 366.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>Returns the number of days in the specified month and year.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.DateTime.DaysInMonth%2A&gt;</ph> method always interprets <ph id="ph2">`month`</ph> and <ph id="ph3">`year`</ph> as the month and year of the Gregorian calendar even if the Gregorian calendar is not the current culture's current calendar.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the number of days in a specified month of a particular calendar, call that calendar's <ph id="ph1">&lt;xref:System.Globalization.Calendar.GetDaysInMonth%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve">
          <source>The year.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve">
          <source>The month (a number ranging from 1 to 12).</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>The number of days in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept> for the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">year</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source>For example, if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">month</ph><ept id="p1">&lt;/code&gt;</ept> equals 2 for February, the return value is 28 or 29 depending upon whether <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">year</ph><ept id="p2">&lt;/code&gt;</ept> is a leap year.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;month&lt;/code&gt;</ph> is less than 1 or greater than 12.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether the value of this instance is equal to the value of the specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance and <ph id="ph1">`value`</ph> are equal if their <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values are not considered in the test for equality.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.DateTime.Equals%2A&gt;</ph> method because the <ph id="ph3">`value`</ph> parameter does not have to be converted to an object.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>The object to compare to this instance.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter equals the value of this instance; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current instance and <ph id="ph1">`value`</ph> are equal if their <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>Their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values are not considered in the test for equality.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>The object to compare to this instance.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is an instance of <ph id="ph3">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> instances  have the same date and time value.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`t1`</ph> and <ph id="ph2">`t2`</ph> are equal if their <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property values are equal.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Their<ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values are not considered in the test for equality.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the two values are equal; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>Deserializes a 64-bit binary value and recreates an original serialized <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert the value of the current <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object to a binary value.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequently, use the binary value and the <ph id="ph1">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to recreate the original <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method is not identical to the original <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value supplied to the <ph id="ph4">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the next section, "Local Time Adjustment".</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local Time Adjustment</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property has the value <ph id="ph3">&lt;xref:System.DateTimeKind.Local&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>When restoring a local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value from the binary representation that is produced by the <ph id="ph2">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method may adjust the recreated value so that it is not equal to the original value.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can occur under the following conditions:</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is serialized in one time zone by the <ph id="ph2">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, and then deserialized in a different time zone by the <ph id="ph3">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the local time represented by the resulting <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object is automatically adjusted to the second time zone.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object that represents a local time of 3 P.M.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that is executing in the U.S. Pacific Time zone uses the <ph id="ph1">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert that <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object to a binary value.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another application that is executing in the U.S. Eastern Time zone then uses the <ph id="ph1">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to convert the binary value to a new <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is 6 P.M., which represents the same point in time as the original 3 P.M.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>value, but is adjusted to local time in the Eastern Time zone.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the binary representation of a local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents an invalid time in the local time zone of the system on which <ph id="ph2">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> is called, the time is adjusted so that it is valid.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the transition from standard time to daylight saving time occurs in the Pacific Time zone of the United States on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows that when a time that falls within this range is converted to a binary value by the <ph id="ph1">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method and is then restored by the <ph id="ph2">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the original value is adjusted to become a valid time.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can determine whether a particular date and time value may be subject to modification by passing it to the <ph id="ph1">&lt;xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName&gt;</ph> method, as the example illustrates.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.FromBinary#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.FromBinary#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version Considerations</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure consists of a private Kind field, which indicates whether the specified time is local time, Coordinated Universal Time (UTC), or neither, concatenated to a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of ticks can be accessed with the <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property and theKind field can be accessed with the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prior to the .NET Framework 2.0, if you serialized a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object manually instead of using a serialization interface such as <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName&gt;</ph>, you needed to serialize only the Ticks data in the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, you must also serialize the Kind data.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source>A 64-bit signed integer that encodes the <ph id="ph1">&lt;xref href="System.DateTime.Kind"&gt;&lt;/xref&gt;</ph> property in a 2-bit field and the <ph id="ph2">&lt;xref href="System.DateTime.Ticks"&gt;&lt;/xref&gt;</ph> property in a 62-bit field.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object that was serialized by the <ph id="ph2">&lt;xref href="System.DateTime.ToBinary"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dateData&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Converts the specified Windows file time to an equivalent local time.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows uses a file time to record when an application creates, accesses, or writes to a file.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fileTime`</ph> parameter specifies a file time expressed in 100-nanosecond ticks.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the return value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve">
          <source>A Windows file time expressed in ticks.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve">
          <source>An object that represents the local time equivalent of the date and time represented by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileTime</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileTime&lt;/code&gt;</ph> is less than 0 or represents a time greater than <ph id="ph2">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve">
          <source>Converts the specified Windows file time to an equivalent UTC time.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows uses a file time to record when an application creates, accesses, or writes to a file.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`fileTime`</ph> parameter specifies a file time expressed in 100-nanosecond ticks.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the return value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.DateTimeKind.Utc&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>A Windows file time expressed in ticks.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>An object that represents the UTC time equivalent of the date and time represented by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileTime</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileTime&lt;/code&gt;</ph> is less than 0 or represents a time greater than <ph id="ph2">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent to the specified OLE Automation Date.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`d`</ph> parameter is a double-precision floating-point number that represents a date as the number of days before or after the base date, midnight, 30 December 1899.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sign and integral part of <ph id="ph1">`d`</ph> encode the date as a positive or negative day displacement from 30 December 1899, and the absolute value of the fractional part of <ph id="ph2">`d`</ph> encodes the time of day as a fraction of a day displacement from midnight.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`d`</ph> must be a value between negative 657435.0 through positive 2958465.99999999.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that because of the way dates are encoded, there are two ways of representing any time of day on 30 December 1899.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, -0.5 and 0.5 both mean noon on 30 December 1899 because a day displacement of plus or minus zero days from the base date is still the base date, and a half day displacement from midnight is noon.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <ph id="ph1">&lt;xref:System.DateTime.ToOADate%2A&gt;</ph> for more information on OLE Automation.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve">
          <source>An OLE Automation Date value.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve">
          <source>An object that represents the same date and time as <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve">
          <source>The date is not a valid OLE Automation Date value.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string array returned by the <ph id="ph1">&lt;xref:System.DateTime.GetDateTimeFormats?displayProperty=fullName&gt;</ph> method is equivalent to combining the string arrays returned by separate calls to the <ph id="ph2">&lt;xref:System.DateTime.GetDateTimeFormats%28System.Char%29?displayProperty=fullName&gt;</ph> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about standard format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element of the return value is formatted using information from the current culture.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about culture-specific formatting information for the current culture, see <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve">
          <source>Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`format`</ph> parameter can be any of the standard date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element of the return value is formatted using information from the current culture.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about culture-specific formatting information for the current culture, see <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data returned by this method can change if the current culture changes, the user overrides individual cultural settings, or an update occurs to the system's cultural data.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve">
          <source>A standard date and time format string.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>A string array where each element is the representation of the value of this instance formatted with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> standard date and time format specifier.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid standard date and time format specifier character.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Converts the value of this instance to all the string representations supported by the standard date and time format specifiers and the specified culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string array returned by the <ph id="ph1">&lt;xref:System.DateTime.GetDateTimeFormats%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method is equivalent to combining the string arrays returned by separate calls to the <ph id="ph2">&lt;xref:System.DateTime.GetDateTimeFormats%28System.Char%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method with the "d", "D", "f", "F", "g", "G", "m", "o", "r", "s", "t", "T", "u", "U", and "y" standard format strings.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about standard format specifiers, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element of the return value is formatted using culture-specific information supplied by <ph id="ph1">`provider`</ph>.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the invariant culture.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data returned by this method can change if the user overrides the individual cultural settings of <ph id="ph1">`provider`</ph> or if an update occurs to the system's cultural data for <ph id="ph2">`provider`</ph>.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information about this instance.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve">
          <source>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve">
          <source>Converts the value of this instance to all the string representations supported by the specified standard date and time format specifier and culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format parameter can be any of the standard date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include d, D, f, F, g, G, M (or m), O (or o), R (or r), s, t, T, u, U, and Y (or y).</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each element of the return value is formatted using culture-specific information supplied by <ph id="ph1">`provider`</ph>.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method uses culture-sensitive data, you should not assume that multiple calls to the method will return identical data unless <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the invariant culture.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data returned by this method can change if the user overrides the individual cultural settings of <ph id="ph1">`provider`</ph> or if an update occurs to the system's cultural data for <ph id="ph2">`provider`</ph>.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source>A date and time format string.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information about this instance.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve">
          <source>A string array where each element is the representation of the value of this instance formatted with one of the standard date and time format specifiers.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid standard date and time format specifier character.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this instance.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.TypeCode"&gt;&lt;/xref&gt;</ph> for value type <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve">
          <source>The enumerated constant, <ph id="ph1">&lt;xref href="System.TypeCode.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>Gets the hour component of the date represented by this instance.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.DateTime.Hour%2A&gt;</ph> property is always expressed using a 24-hour clock.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve a string that represents the hour of a date and time using a 12-hour clock, call the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method with the "h" custom format specifier.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Hour#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Hour/cs/Hour1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Hour#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Hour/vb/Hour1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>The hour component, expressed as a value between 0 and 23.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve">
          <source>Indicates whether this instance of <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is within the daylight saving time range for the current time zone.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines whether the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value falls within the daylight saving time range of the local time zone, which is returned by the <ph id="ph2">&lt;xref:System.TimeZoneInfo.Local%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can determine whether a time zone supports daylight saving time by retrieving the value of its <ph id="ph1">&lt;xref:System.TimeZoneInfo.SupportsDaylightSavingTime%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>For time zones that observe daylight saving time, you can determine when the transition to and from daylight saving time occurs by retrieving the <ph id="ph1">&lt;xref:System.TimeZoneInfo.AdjustmentRule?displayProperty=fullName&gt;</ph> array returned by the time zone's <ph id="ph2">&lt;xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents either an ambiguous or an invalid time in the local time zone, the method returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>On <ph id="ph1">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> systems, the <ph id="ph2">&lt;xref:System.DateTime.IsDaylightSavingTime%2A&gt;</ph> method recognizes only the current adjustment rule when determining whether the current instance is a daylight saving time.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, the method may not accurately report whether the current instance is a daylight saving time for periods before the current adjustment rule came into effect.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the value of the <ph id="ph2">&lt;xref href="System.DateTime.Kind"&gt;&lt;/xref&gt;</ph> property is <ph id="ph3">&lt;xref href="System.DateTimeKind.Local"&gt;&lt;/xref&gt;</ph> or <ph id="ph4">&lt;xref href="System.DateTimeKind.Unspecified"&gt;&lt;/xref&gt;</ph> and the value of this instance of <ph id="ph5">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is within the daylight saving time range for the local time zone; <ph id="ph6">`false`</ph> if <ph id="ph7">&lt;xref href="System.DateTime.Kind"&gt;&lt;/xref&gt;</ph> is <ph id="ph8">&lt;xref href="System.DateTimeKind.Utc"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve">
          <source>Returns an indication whether the specified year is a leap year.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`year`</ph> is specified as a 4-digit base 10 number; for example, 1996.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`year`</ph> is always interpreted as a year in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether a particular year was a leap year in some other calendar, call that calendar object's <ph id="ph1">`IsLeapYear`</ph> method.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve">
          <source>A 4-digit year.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">year</ph><ept id="p1">&lt;/code&gt;</ept> is a leap year; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;year&lt;/code&gt;</ph> is less than 1 or greater than 9999.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the time represented by this instance is based on local time, Coordinated Universal Time (UTC), or neither.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can explicitly set the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of a new <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value to a particular <ph id="ph3">&lt;xref:System.DateTimeKind&gt;</ph> value by calling the <ph id="ph4">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property allows a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value to clearly reflect either Coordinated Universal Time (UTC) or the local time.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.DateTimeOffset&gt;</ph> structure can unambiguously reflect any time in any time zone as a single point in time.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates what the current time represents.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.DateTimeKind.Unspecified"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve">
          <source>Represents the largest possible value of <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this constant is equivalent to 23:59:59.9999999 UTC, December 31, 9999 in the Gregorian calendar, exactly one 100-nanosecond tick before 00:00:00 UTC, January 1, 10000.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some calendars, such as the <ph id="ph1">&lt;xref:System.Globalization.UmAlQuraCalendar&gt;</ph>, support an upper date range that is earlier than <ph id="ph2">&lt;xref:System.DateTime.MaxValue&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, trying to access <ph id="ph1">&lt;xref:System.DateTime.MaxValue&gt;</ph> in variable assignments or formatting and parsing operations can throw an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than retrieving the value of <ph id="ph1">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, you can retrieve the value of the specified culture's latest valid date value from the <ph id="ph2">`System.Globalization.CultureInfo.DateTimeFormat.Calendar.MaxSupportedDateTime`</ph> property.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>Gets the milliseconds component of the date represented by this instance.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can display the string representation of the <ph id="ph1">&lt;xref:System.DateTime.Millisecond%2A&gt;</ph> property by using the "fff" format specifier.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following code displays a string that contains the number of milliseconds in a date and time to the console.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Millisecond#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Millisecond#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also display the millisecond component together with the other components of a date and time value by using the "o" standard format specifier.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Millisecond#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Millisecond#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the "o" format specifier is intended less for displaying than for round-tripping or storing a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also display milliseconds together with other date and time components by using a custom format string, as the following example shows.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Millisecond#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Millisecond/cs/Millisecond.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Millisecond#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Millisecond/vb/Millisecond.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>The milliseconds component, expressed as a value between 0 and 999.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source>Gets the minute component of the date represented by this instance.</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>The minute component, expressed as a value between 0 and 59.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Represents the smallest possible value of <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this constant is equivalent to 00:00:00.0000000 UTC, January 1, 0001, in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.MinValue&gt;</ph> defines the date and time that is assigned to an uninitialized <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> variable.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates this.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.MinValue#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.MinValue/cs/MinValue.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.MinValue#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.MinValue/vb/MinValue.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.MinValue&gt;</ph> and <ph id="ph2">&lt;xref:System.DateTime.MaxValue&gt;</ph> properties can be used to ensure that a value lies within the supported range before passing it to a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code in the Example section illustrates this usage.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>Gets the month component of the date represented by this instance.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>The month component, expressed as a value between 1 and 12.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object that is set to the current date and time on this computer, expressed as the local time.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value that represents the current date and time on the local computer.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that there is a difference between a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value, which represents the number of ticks that have elapsed since midnight of January 1, 0001, and the string representation of that <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value, which expresses a date and time value in a culture-specific-specific format.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on formatting date and time values, see the <ph id="ph1">&lt;xref:System.DateTime.ToString%2A&gt;</ph>method.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example displays the short date and time string in a number of culture-specific formats.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-cpp</bpt><bpt id="p2">[</bpt>System.DateTime.Now#2<ept id="p2">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.datetime.now/cpp/now1.cpp#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-csharp</bpt><bpt id="p4">[</bpt>System.DateTime.Now#2<ept id="p4">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.now/cs/now1.cs#2)</ept><ept id="p3">]</ept> <bpt id="p5">[!code-vb</bpt><bpt id="p6">[</bpt>System.DateTime.Now#2<ept id="p6">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.now/vb/now1.vb#2)</ept><ept id="p5">]</ept></source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resolution of this property depends on the system timer, which is approximately 15 milliseconds on Windows systems.As a result, repeated calls to the <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property in a short time interval, such as in a loop, may return the same value.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property is frequently used to measure performance.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because of its low resolution, it is not suitable for use as a benchmarking tool.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>A better alternative is to use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the return value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property returns <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.DateTimeOffset.Now%2A?displayProperty=fullName&gt;</ph> property to retrieve the current local date and time.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>It allows a local time to be expressed unambiguously as a single point in time, which in turn makes that time value portable across computers.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>An object whose value is the current local date and time.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve">
          <source>Adds a specified time interval to a specified date and time, yielding a new date and time.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Add%28System.TimeSpan%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve">
          <source>The date and time value to add.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve">
          <source>The time interval to add.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve">
          <source>An object that is the sum of the values of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">t</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> are equal.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_Equality%2A&gt;</ph> operator determines whether two <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values are equal by comparing their number of ticks.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">d1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">d2</ph><ept id="p2">&lt;/code&gt;</ept> represent the same date and time; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>Determines whether one specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is later than another specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_GreaterThan%2A&gt;</ph> operator determines the relationship between two <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">t1</ph><ept id="p1">&lt;/code&gt;</ept> is later than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">t2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>Determines whether one specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> represents a date and time that is the same as or later than another specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_GreaterThanOrEqual%2A&gt;</ph> operator determines the relationship between two <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">t1</ph><ept id="p1">&lt;/code&gt;</ept> is the same as or later than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">t2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>Determines whether two specified instances of <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> are not equal.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_Inequality%2A&gt;</ph> operator determines whether two <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values are not equal by comparing their number of ticks.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Equals%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">d1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">d2</ph><ept id="p2">&lt;/code&gt;</ept> do not represent the same date and time; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve">
          <source>Determines whether one specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is earlier than another specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_LessThan%2A&gt;</ph> operator determines the relationship between two <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">t1</ph><ept id="p1">&lt;/code&gt;</ept> is earlier than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">t2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>Determines whether one specified <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> represents a date and time that is the same as or earlier than another specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_LessThanOrEqual%2A&gt;</ph> operator determines the relationship between two <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> values by comparing their number of ticks.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before comparing <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, make sure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by comparing the values of their <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Compare%28System.DateTime%2CSystem.DateTime%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>The first object to compare.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>The second object to compare.</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">t1</ph><ept id="p1">&lt;/code&gt;</ept> is the same as or earlier than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">t2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>Subtracts a specified date and time from another specified date and time and returns a time interval.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.op_Subtraction%28System.DateTime%2CSystem.DateTime%29&gt;</ph> method does not consider the value of the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the two <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> values when performing the subtraction.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before subtracting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, ensure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the result will include the difference between time zones.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset.op_Subtraction%28System.DateTimeOffset%2CSystem.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method does consider the difference between time zones when performing the subtraction.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>The date and time value to subtract from (the minuend).</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>The date and time value to subtract (the subtrahend).</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>The time interval between <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d1</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">d2</ph><ept id="p2">&lt;/code&gt;</ept>; that is, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">d1</ph><ept id="p3">&lt;/code&gt;</ept> minus <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">d2</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>Subtracts a specified time interval from a specified date and time and returns a new date and time.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method subtracts the ticks value of <ph id="ph1">`t`</ph> from the ticks value of <ph id="ph2">`d`</ph>.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.DateTime%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>The date and time value to subtract from.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>The time interval to subtract.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>An object whose value is the value of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> minus the value of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">t</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>The resulting <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> is less than <ph id="ph2">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph3">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>Converts the string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Parse`</ph> method, see the <ph id="ph2">&lt;xref:System.DateTime.Parse%2A&gt;</ph> overload summary.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>A string that contains a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>Converts the string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent by using culture-specific format information.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Parse`</ph> method, see the <ph id="ph2">&lt;xref:System.DateTime.Parse%2A&gt;</ph> overload summary.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>A string that contains a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific format information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> as specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">provider</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>Converts the string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent by using culture-specific format information and formatting style.</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Parse`</ph> method, see the <ph id="ph2">&lt;xref:System.DateTime.Parse%2A&gt;</ph> overload summary.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>A string that contains a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> for the parse operation to succeed, and that defines how to interpret the parsed date in relation to the current time zone or the current date.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>A typical value to specify is <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>, as specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">provider</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">styles</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a valid string representation of a date and time.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>For example, both <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.AssumeLocal"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles.AssumeUniversal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent using the specified array of formats, culture-specific format information, and style.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>The format of the string representation must match at least one of the specified formats exactly or an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date that matches any one of the patterns assigned to the <ph id="ph2">`formats`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the string <ph id="ph1">`s`</ph> does not match any one of these patterns with any of the variations defined by the <ph id="ph2">`styles`</ph> parameter, the method throws a <ph id="ph3">&lt;xref:System.FormatException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>Aside from comparing <ph id="ph1">`s`</ph> to multiple formatting patterns, rather than to a single formatting pattern, this overload behaves identically to the <ph id="ph2">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter contains the date and time to parse.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`s`</ph> parameter contains only a time and no date, the current date is used unless the <ph id="ph2">`style`</ph> parameter includes the <ph id="ph3">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, in which case the default date (<ph id="ph4">`DateTime.Date.MinValue`</ph>) is used.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`s`</ph> parameter contains only a date and no time, midnight (00:00:00) is used.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`style`</ph> parameter also determines whether the <ph id="ph2">`s`</ph> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <ph id="ph3">`formats`</ph>.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id="ph5">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id="ph6">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id="ph7">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph8">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph9">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains time zone information, the time is converted to local time, if necessary, and the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`formats`</ph> parameter contains an array of patterns, one of which <ph id="ph2">`s`</ph> must match exactly if the parse operation is to succeed.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>The patterns in the <ph id="ph1">`formats`</ph> parameter consists of one or more custom format specifiers from the <bpt id="p1">[</bpt>Custom Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id="p2">[</bpt>Standard Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id="ph1">`provider`</ph> parameter and the widest form of each custom format specifier.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`styles`</ph> parameter includes one or more members of the <ph id="ph2">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id="ph3">`format`</ph> can appear in <ph id="ph4">`s`</ph> and that control the precise behavior of the parse operation.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes how each member of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id="ph2">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTimeStyles member</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parses <ph id="ph1">`s`</ph> and, if necessary, converts it to UTC.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes a time zone offset, or if <ph id="ph2">`s`</ph> contains no time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id="ph5">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id="ph6">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id="ph7">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph8">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> indicates that it represents UTC, or if <ph id="ph2">`s`</ph> does not contain time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id="ph6">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph7">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, the flag has no effect.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear between any individual date or time element.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the beginning of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the end of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that <ph id="ph1">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id="ph2">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent a local time.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent UTC.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains time without date information, the date of the return value is set to <ph id="ph2">`DateTime.MinValue.Date`</ph>.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using default values.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>No white space other than that present in <ph id="ph1">`format`</ph> is allowed.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> lacks a date component, the date of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>If time zone information is present in <ph id="ph1">`s`</ph>, the time is converted to local time and the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>For strings that contain time zone information, tries to prevent the conversion to a date and time with its <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag primarily prevents the conversion of UTC times to local times.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id="ph1">`s`</ph> are defined by the <ph id="ph2">`provider`</ph> parameter, as is the precise format of <ph id="ph3">`s`</ph> if <ph id="ph4">`format`</ph> is a standard format specifier string.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>A string that contains a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>An array of allowable formats of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific format information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that indicates the permitted format of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>A typical value to specify is <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>, as specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">formats</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">provider</ph><ept id="p3">&lt;/code&gt;</ept>, and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">style</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;formats&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>an element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">formats</ph><ept id="p1">&lt;/code&gt;</ept> is an empty string.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a date and time that corresponds to any element of <ph id="ph2">&lt;code&gt;formats&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>The hour component and the AM/PM designator in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> do not agree.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;style&lt;/code&gt;</ph> contains an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source>For example, both <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.AssumeLocal"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles.AssumeUniversal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent using the specified format, culture-specific format information, and style.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>The format of the string representation must match the specified format exactly or an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in a format defined by the <ph id="ph2">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also requires that the date and time elements in <ph id="ph1">`s`</ph> appear in the order specified by <ph id="ph2">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> does not match the pattern of the <ph id="ph2">`format`</ph> parameter, with any variations defined by the <ph id="ph3">`style`</ph> parameter, the method throws a <ph id="ph4">&lt;xref:System.FormatException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date in any one of the formats recognized by the format provider's <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method also allows the date and time elements in <ph id="ph2">`s`</ph> to appear in any order.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`s`</ph> parameter contains only a time and no date, the current date is used unless the <ph id="ph2">`style`</ph> parameter includes the <ph id="ph3">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, in which case the default date (<ph id="ph4">`DateTime.Date.MinValue`</ph>) is used.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`s`</ph> parameter contains only a date and no time, midnight (00:00:00) is used.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`style`</ph> parameter also determines whether the <ph id="ph2">`s`</ph> parameter can contain leading, inner, or trailing white space characters.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id="ph5">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id="ph6">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id="ph7">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph8">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph9">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains time zone information, the time is converted to local time, if necessary, and the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and to set the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`format`</ph> parameter defines the required pattern of the <ph id="ph2">`s`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can consist of either one or more custom format specifiers from the <bpt id="p1">[</bpt>Custom Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id="p2">[</bpt>Standard Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id="ph1">`provider`</ph> parameter and the widest form of each custom format specifier.</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than requiring that <ph id="ph1">`s`</ph> conform to a single format for the parse operation to succeed, you can call the <ph id="ph2">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method and specify multiple permitted formats.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes the parse operation more likely to succeed.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`styles`</ph> parameter includes one or more members of the <ph id="ph2">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id="ph3">`format`</ph> can appear in <ph id="ph4">`s`</ph> and that control the precise behavior of the parse operation.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes how each member of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id="ph2">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTimeStyles member</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parses <ph id="ph1">`s`</ph> and, if necessary, converts it to UTC.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes a time zone offset, or if <ph id="ph2">`s`</ph> contains no time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id="ph5">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id="ph6">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id="ph7">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph8">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> indicates that it represents UTC, or if <ph id="ph2">`s`</ph> does not contain time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id="ph6">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph7">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, the flag has no effect.</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear between any individual date or time element.</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the beginning of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the end of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that <ph id="ph1">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id="ph2">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent a local time.</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent UTC.</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains time without date information, the date of the return value is set to <ph id="ph2">`DateTime.MinValue.Date`</ph>.</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using default values.</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT">
          <source>No white space other than that present in <ph id="ph1">`format`</ph> is allowed.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> lacks a date component, the date of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If time zone information is present in <ph id="ph1">`s`</ph>, the time is converted to local time and the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For strings that contain time zone information, tries to prevent the conversion to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value date and time with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag primarily prevents the conversion of UTC times to local times.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id="ph1">`s`</ph> are defined by the <ph id="ph2">`provider`</ph> parameter, as is the precise format of <ph id="ph3">`s`</ph> if <ph id="ph4">`format`</ph> is a standard format specifier string.</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>A string containing a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>A format specifier that defines the required format of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that provides additional information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>, about style elements that may be present in <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p2">&lt;/code&gt;</ept>, or about the conversion from <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">s</ph><ept id="p3">&lt;/code&gt;</ept> to a <ph id="ph4">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>A typical value to specify is <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>, as specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">format</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">provider</ph><ept id="p3">&lt;/code&gt;</ept>, and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">style</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a date and time that corresponds to the pattern specified in <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>The hour component and the AM/PM designator in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> do not agree.</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;style&lt;/code&gt;</ph> contains an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>For example, both <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.AssumeLocal"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles.AssumeUniversal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent using the specified format and culture-specific format information.</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>The format of the string representation must match the specified format exactly.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in the format defined by the <ph id="ph2">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also requires that the <ph id="ph1">\&lt;</ph>Date&gt; and <ph id="ph2">\&lt;</ph>Time&gt; elements of the string representation of a date and time appear in the order specified by <ph id="ph3">`format`</ph>, and that <ph id="ph4">`s`</ph> have no white space other than that permitted by <ph id="ph5">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> defines a date with no time element and the parse operation succeeds, the resulting <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value has a time of midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> defines a time with no date element and the parse operation succeeds, the resulting <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value has a date of <ph id="ph3">`DateTime.Now.Date`</ph>.</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> does not represent a time in a particular time zone and the parse operation succeeds, the<ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> does represent the time in a particular time zone and <ph id="ph2">`format`</ph> allows time zone information to be present (for example, if <ph id="ph3">`format`</ph> is equal to the "o", "r", or "u" standard format specifiers, or if it contains the "z", "zz", or "zzz" custom format specifiers), the <ph id="ph4">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> value is <ph id="ph6">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`format`</ph> parameter is a string that contains either a single standard format specifier, or one or more custom format specifiers that define the required format of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about valid formatting codes, see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> or <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> is a custom format pattern that does not include date or time separators (such as "yyyyMMddHHmm"), use the invariant culture for the <ph id="ph2">`provider`</ph> parameter and the widest form of each custom format specifier.</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to specify hours in the format pattern, specify the wider form, "HH", instead of the narrower form, "H".</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The particular date and time symbols and strings (such as names of the days of the week in a particular language) used in <ph id="ph1">`s`</ph> are defined by the <ph id="ph2">`provider`</ph> parameter, as is the precise format of <ph id="ph3">`s`</ph> if <ph id="ph4">`format`</ph> is a standard format specifier string.</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>A string that contains a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>A format specifier that defines the required format of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>For more information, see the Remarks section.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific format information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>, as specified by <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">format</ph><ept id="p2">&lt;/code&gt;</ept> and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">provider</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;s&lt;/code&gt;</ph> does not contain a date and time that corresponds to the pattern specified in <ph id="ph2">&lt;code&gt;format&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve">
          <source>The hour component and the AM/PM designator in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> do not agree.</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve">
          <source>Gets the seconds component of the date represented by this instance.</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>The seconds component, expressed as a value between 0 and 59.</source>
        </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object that has the same number of ticks as the specified <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph>, but is designated as either local time, Coordinated Universal Time (UTC), or neither, as indicated by the specified <ph id="ph3">&lt;xref href="System.DateTimeKind"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object consists of a Kind field that indicates whether the time value is based on local time, Coordinated Universal Time (UTC), or neither, and a Ticks field that contains a time value measured in 100-nanosecond ticks.</source>
        </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method creates a new <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object using the specified <ph id="ph3">`kind`</ph> parameter and the original time value.</source>
        </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value does not represent the same instant in time as the <ph id="ph2">`value`</ph> parameter, and <ph id="ph3">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> is not a time zone conversion method.</source>
        </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it leaves the time specified by the <ph id="ph1">`value`</ph> parameter unchanged, and sets the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph3">`kind`</ph>.</source>
        </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about time zone conversions, see <bpt id="p1">[</bpt>Converting Times Between Time Zones<ept id="p1">](~/docs/standard/datetime/converting-between-time-zones.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.SpecifyKind%2A&gt;</ph> method is useful in interoperability scenarios where you receive a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object with an unspecified Kind field, but you can determine by independent means that the Ticks field represents local time or UTC.</source>
        </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>A date and time.</source>
        </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that indicates whether the new object represents local time, UTC, or neither.</source>
        </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>A new object that has the same number of ticks as the object represented by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter and the <ph id="ph2">&lt;xref href="System.DateTimeKind"&gt;&lt;/xref&gt;</ph> value specified by the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">kind</ph><ept id="p2">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>Subtracts the specified date and time from this instance.</source>
        </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.DateTime%29&gt;</ph> method determines the difference between two dates.</source>
        </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT">
          <source>To subtract a time interval from the current instance, call the <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT">
          <source>To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</source>
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to subtract two months from the current date, call the <ph id="ph1">&lt;xref:System.DateTime.AddMonths%28System.Int32%29&gt;</ph> method with a value of -2.</source>
        </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the date and time of the current instance is earlier than <ph id="ph1">`value`</ph>, the method returns a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object that represents a negative time span.</source>
        </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, the value of all of its non-zero properties (such as <ph id="ph1">&lt;xref:System.TimeSpan.Days%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.TimeSpan.Ticks%2A&gt;</ph>) is negative.</source>
        </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.DateTime%29&gt;</ph> method does not consider the value of the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the two <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> values when performing the subtraction.</source>
        </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before subtracting <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> objects, ensure that the objects represent times in the same time zone.</source>
        </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the result will include the difference between time zones.</source>
        </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTimeOffset.Subtract%28System.DateTimeOffset%29?displayProperty=fullName&gt;</ph> method does consider the difference between time zones when performing the subtraction.</source>
        </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve">
          <source>The date and time value to subtract.</source>
        </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve">
          <source>A time interval that is equal to the date and time represented by this instance minus the date and time represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve">
          <source>The result is less than <ph id="ph1">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph2">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>Subtracts the specified duration from this instance.</source>
        </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29&gt;</ph> method returns the date that is a specified time interval difference from the current instance.</source>
        </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the time interval between two dates, call the <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.DateTime%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT">
          <source>To subtract a particular time interval from the current instance, call the method that adds that time interval to the current date, and supply a negative value as the method argument.</source>
        </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to subtract two months from the current date, call the <ph id="ph1">&lt;xref:System.DateTime.AddMonths%28System.Int32%29&gt;</ph> method with a value of -2.</source>
        </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does not change the value of this <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns a new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose value is the result of this operation.</source>
        </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method subtracts a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> object that represents a positive time span and returns a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value that is earlier than the date and time of the current instance.</source>
        </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> object represents a negative time span, the <ph id="ph2">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value that is later than the date and time of the current instance.</source>
        </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.Subtract%28System.TimeSpan%29?displayProperty=fullName&gt;</ph> method allows you to subtract a time interval that consists of more than one unit of time (such as a given number of hours and a given number of minutes).</source>
        </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT">
          <source>To subtract a single unit of time (such as years, months, or days) from the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> instance, you can pass a negative numeric value as a parameter to any of the following methods:</source>
        </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddYears%2A&gt;</ph>, to subtract a specific number of years from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddMonths%2A&gt;</ph>, to subtract a specific number of months from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddDays%2A&gt;</ph>, to subtract a specific number of days from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddHours%2A&gt;</ph>, to subtract a specific number of hours from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddMinutes%2A&gt;</ph>, to subtract a specific number of minutes from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddSeconds%2A&gt;</ph>, to subtract a specific number of seconds from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddMilliseconds%2A&gt;</ph>, to subtract a specific number of milliseconds from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.DateTime.AddTicks%2A&gt;</ph>, to subtract a specific number of ticks from the current date and time instance.</source>
        </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve">
          <source>The time interval to subtract.</source>
        </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve">
          <source>An object that is equal to the date and time represented by this instance minus the time interval represented by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve">
          <source>The result is less than <ph id="ph1">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> or greater than <ph id="ph2">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve">
          <source>Gets the number of ticks that represent the date and time of this instance.</source>
        </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single tick represents one hundred nanoseconds or one ten-millionth of a second.</source>
        </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are 10,000 ticks in a millisecond, or 10 million ticks in a second.</source>
        </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property represents the number of 100-nanosecond intervals that have elapsed since 12:00:00 midnight, January 1, 0001 (0:00:00 UTC on January 1, 0001, in the Gregorian calendar), which represents <ph id="ph1">&lt;xref:System.DateTime.MinValue?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not include the number of ticks that are attributable to leap seconds.</source>
        </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve">
          <source>The number of ticks that represent the date and time of this instance.</source>
        </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve">
          <source>The value is between <ph id="ph1">`DateTime.MinValue.Ticks`</ph> and <ph id="ph2">`DateTime.MaxValue.Ticks`</ph>.</source>
        </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve">
          <source>Gets the time of day for this instance.</source>
        </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.DateTime.Date%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve" extradata="MT">
          <source>which returns a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value that represents a date without its time component, the <ph id="ph2">&lt;xref:System.DateTime.TimeOfDay%2A&gt;</ph> property returns a <ph id="ph3">&lt;xref:System.TimeSpan&gt;</ph> value that represents a  <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> value's time component.</source>
        </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to display the time of day or retrieve the string representation of the time of day of a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value, you can instead call an overload of the <ph id="ph2">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method that has a <ph id="ph3">`format`</ph> parameter or use the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature with the "t" or "T" standard format string.</source>
        </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>A time interval that represents the fraction of the day that has elapsed since midnight.</source>
        </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve">
          <source>Serializes the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to a 64-bit binary value that subsequently can be used to recreate the <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert the value of the current <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object to a binary value.</source>
        </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequently, use the binary value and the <ph id="ph1">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to recreate the original <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, the <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value returned by the <ph id="ph2">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method is not identical to the original <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value supplied to the <ph id="ph4">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the next section, "Local Time Adjustment".</source>
        </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Local Time Adjustment</source>
        </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT">
          <source>A local time, which is a Coordinated Universal Time adjusted to the local time zone, is represented by a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property has the value <ph id="ph3">&lt;xref:System.DateTimeKind.Local&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT">
          <source>When restoring a local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value from the binary representation that is produced by the <ph id="ph2">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method may adjust the recreated value so that it is not equal to the original value.</source>
        </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can occur under the following conditions:</source>
        </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is serialized in one time zone by the <ph id="ph2">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method, and then deserialized in a different time zone by the <ph id="ph3">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the local time represented by the resulting <ph id="ph4">&lt;xref:System.DateTime&gt;</ph> object is automatically adjusted to the second time zone.</source>
        </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object that represents a local time of 3 P.M.</source>
        </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application that is executing in the U.S. Pacific Time zone uses the <ph id="ph1">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method to convert that <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object to a binary value.</source>
        </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another application that is executing in the U.S. Eastern Time zone uses the <ph id="ph1">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method to convert the binary value to a new <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the new <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is 6 P.M., which represents the same point in time as the original 3 P.M.</source>
        </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>value, but is adjusted to local time in the Eastern Time zone.</source>
        </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the binary representation of a local <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value represents an invalid time in the local time zone of the system on which <ph id="ph2">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> is called, the time is adjusted so that it is valid.</source>
        </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the transition from standard time to daylight saving time occurs in the U.S. Pacific Time zone on March 14, 2010, at 2:00 A.M., when the time advances by one hour, to 3:00 A.M.</source>
        </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>This hour interval is an invalid time, that is, a time interval that does not exist in this time zone.</source>
        </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows that when a time that falls within this range is converted to a binary value by the <ph id="ph1">&lt;xref:System.DateTime.ToBinary%2A&gt;</ph> method and is then restored by the <ph id="ph2">&lt;xref:System.DateTime.FromBinary%2A&gt;</ph> method, the original value is adjusted to become a valid time.</source>
        </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can determine whether a particular date and time value may be subject to modification by passing it to the <ph id="ph1">&lt;xref:System.TimeZoneInfo.IsInvalidTime%2A?displayProperty=fullName&gt;</ph> method, as the example illustrates.</source>
        </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.FromBinary#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.datetime.frombinary/cs/frombinary1.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.FromBinary#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.datetime.frombinary/vb/frombinary1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version Considerations</source>
        </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> structure consists of a private Kind field, which indicates whether the specified time value is based on local time, Coordinated Universal Time (UTC), or neither, and a private Ticks field, which contains the number of 100-nanosecond ticks that specify a date and time.</source>
        </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Ticks field can be accessed with the <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> property and the Kind field can be accessed with the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prior to the .NET Framework 2.0, if you serialized a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object manually instead of using a serialization interface such as <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable?displayProperty=fullName&gt;</ph>, you only needed to serialize the Ticks data in the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with version 2.0, you must also serialize the Kind data.</source>
        </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve">
          <source>A 64-bit signed integer that encodes the <ph id="ph1">&lt;xref href="System.DateTime.Kind"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.DateTime.Ticks"&gt;&lt;/xref&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve">
          <source>Gets the current date.</source>
        </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the return value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property returns <ph id="ph3">&lt;xref:System.DateTimeKind.Local&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it returns the current date without the current time, the <ph id="ph1">&lt;xref:System.DateTime.Today%2A&gt;</ph> property is suitable for use in applications that work with dates only.</source>
        </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Choosing Between DateTime, DateTimeOffset, TimeSpan, and TimeZoneInfo<ept id="p1">](~/docs/standard/datetime/choosing-between-datetime.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.DateTime.TimeOfDay%2A&gt;</ph> property returns the current time without the current date, and the <ph id="ph2">&lt;xref:System.DateTime.Now%2A&gt;</ph> property returns both the current date and the current time.</source>
        </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>An object that is set to today's date, with the time component set to 00:00:00.</source>
        </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to a Windows file time.</source>
        </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</source>
        </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows uses a file time to record when an application creates, accesses, or writes to a file.</source>
        </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToFileTime%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to determine whether the current <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is a local time, a UTC time, or an unspecified kind of time which is treated as a local time.</source>
        </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve">
          <source>The value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object expressed as a Windows file time.</source>
        </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve">
          <source>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</source>
        </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve">
          <source>UTC.</source>
        </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to a Windows file time.</source>
        </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Windows file time is a 64-bit value that represents the number of 100-nanosecond intervals that have elapsed since 12:00 midnight, January 1, 1601 A.D.</source>
        </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT">
          <source>(C.E.) Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows uses a file time to record when an application creates, accesses, or writes to a file.</source>
        </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToFileTimeUtc%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to determine whether the current <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is a local time, a UTC time, or an unspecified kind of time which is treated as a UTC time.</source>
        </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is a local time, it converts the time to UTC before performing the conversion to a Windows file time.</source>
        </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve">
          <source>The value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object expressed as a Windows file time.</source>
        </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve">
          <source>The resulting file time would represent a date and time before 12:00 midnight January 1, 1601 C.E.</source>
        </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve">
          <source>UTC.</source>
        </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to local time.</source>
        </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local time is equal to the Coordinated Universal Time (UTC) time plus the UTC offset.</source>
        </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the UTC offset, see <ph id="ph1">&lt;xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT">
          <source>On <ph id="ph1">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> systems, the <ph id="ph2">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method recognizes only the current adjustment rule when converting from UTC to local time.</source>
        </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between UTC and local time.</source>
        </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the value returned by the <ph id="ph1">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method is determined by the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the current <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the possible results.</source>
        </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Kind</source>
        </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Results</source>
        </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This instance of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> is converted to local time.</source>
        </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve" extradata="MT">
          <source>No conversion is performed.</source>
        </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve" extradata="MT">
          <source>This instance of <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> is assumed to be a UTC time, and the conversion is performed as if <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> were <ph id="ph3">&lt;xref:System.DateTimeKind.Utc&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> method converts a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time.</source>
        </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT">
          <source>To convert the time in any designated time zone to local time, use the <ph id="ph1">&lt;xref:System.TimeZoneInfo.ConvertTime%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by the conversion is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property always returns <ph id="ph3">&lt;xref:System.DateTimeKind.Local&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, a valid result is returned even if <ph id="ph1">&lt;xref:System.DateTime.ToLocalTime%2A&gt;</ph> is applied repeatedly to the same <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>An object whose <ph id="ph1">&lt;xref href="System.DateTime.Kind"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">&lt;xref href="System.DateTimeKind.Local"&gt;&lt;/xref&gt;</ph>, and whose value is the local time equivalent to the value of the current <ph id="ph3">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph4">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph> if the converted value is too large to be represented by a <ph id="ph5">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph6">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the converted value is too small to be represented as a <ph id="ph7">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent long date string representation.</source>
        </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.LongDatePattern%2A&gt;</ph> property associated with the current thread culture.</source>
        </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is identical to the value returned by specifying the "D" <bpt id="p1">[</bpt>standard DateTime format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.DateTime.ToLongDateString%2A&gt;</ph> method is culture-sensitive.</source>
        </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT">
          <source>It reflects the pattern defined by the current culture's <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for the en-US culture, the standard long date pattern is "dddd, MMMMdd, yyyy"; for the de-DE culture, it is "dddd, d.</source>
        </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT">
          <source>MMMMyyyy"; for the ja-JP culture, it is "yyyy'?'M'?'d'?'".</source>
        </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific format string on a particular computer can also be customized so that it differs from the standard long date format string.</source>
        </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the current thread culture, see the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about format characters, format patterns, and the output they produce, see the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about changing the format pattern associated with a format character, see the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve">
          <source>A string that contains the long date string representation of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent long time string representation.</source>
        </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A?displayProperty=fullName&gt;</ph> property associated with the current thread culture.</source>
        </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is identical to the value returned by specifying the "T" <bpt id="p1">[</bpt>standard date and time format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.DateTime.ToLongTimeString%2A&gt;</ph> method is culture-sensitive.</source>
        </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>It reflects the pattern defined by the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A&gt;</ph> property of the current culture's <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for the en-US culture, the standard long time pattern is "h:mm:ss tt"; for the de-DE culture, it is "HH:mm:ss"; for the ja-JP culture, it is "H:mm:ss".</source>
        </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific format string on a particular computer can also be customized so that it differs from the standard long time format string.</source>
        </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the current thread culture, see the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about format characters, format patterns, and the output they produce, see the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about changing the format pattern associated with a format character, see the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve">
          <source>A string that contains the long time string representation of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve">
          <source>Converts the value of this instance to the equivalent OLE Automation date.</source>
        </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve" extradata="MT">
          <source>An OLE Automation date is implemented as a floating-point number whose integral component is the number of days before or after midnight, 30 December 1899, and whose fractional component represents the time on that day divided by 24.</source>
        </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, midnight, 31 December 1899 is represented by 1.0; 6 A.M., 1 January 1900 is represented by 2.25; midnight, 29 December 1899 is represented by -1.0; and 6 A.M., 29 December 1899 is represented by -1.25.</source>
        </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base OLE Automation Date is midnight, 30 December 1899.</source>
        </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The minimum OLE Automation date is midnight, 1 January 0100.</source>
        </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum OLE Automation Date is the same as <ph id="ph1">&lt;xref:System.DateTime.MaxValue?displayProperty=fullName&gt;</ph>, the last moment of 31 December 9999.</source>
        </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToOADate%2A&gt;</ph> method throws an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> if the current instance represents a date that is later than <ph id="ph3">&lt;xref:System.DateTime.MinValue&gt;</ph> and earlier than midnight on January1, 0100.</source>
        </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if the value of the current instance is <ph id="ph1">&lt;xref:System.DateTime.MinValue&gt;</ph>, the method returns 0.</source>
        </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about OLE Automation, see the <bpt id="p1">[</bpt>MSDN Library<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37118)</ept>.</source>
        </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number that contains an OLE Automation date equivalent to the value of this instance.</source>
        </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve">
          <source>The value of this instance cannot be represented as an OLE Automation Date.</source>
        </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent short date string representation.</source>
        </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A?displayProperty=fullName&gt;</ph> property associated with the current thread culture.</source>
        </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is identical to the value returned by specifying the "d" <bpt id="p1">[</bpt>standard DateTime format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.DateTime.ToShortDateString%2A&gt;</ph> method is culture-sensitive.</source>
        </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve" extradata="MT">
          <source>It reflects the pattern defined by the current culture's <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for the en-US culture, the standard short date pattern is "M/d/yyyy"; for the de-DE culture, it is "dd.MM.yyyy"; for the ja-JP culture, it is "yyyy/M/d".</source>
        </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific format string on a particular computer can also be customized so that it differs from the standard short date format string.</source>
        </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the current thread culture, see the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about format characters, format patterns, and the output they produce, see the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about changing the format pattern associated with a format character, see the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve">
          <source>A string that contains the short date string representation of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent short time string representation.</source>
        </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is formatted using the pattern defined by the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortTimePattern%2A?displayProperty=fullName&gt;</ph> property associated with the current thread culture.</source>
        </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is identical to the value returned by specifying the "t" <bpt id="p1">[</bpt>standard DateTime format string<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> with the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.DateTime.ToShortTimeString%2A&gt;</ph> method is culture-sensitive.</source>
        </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>It reflects the pattern defined by the current culture's <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, for the en-US culture, the standard short time pattern is "h:mm tt"; for the de-DE culture, it is "HH:mm"; for the ja-JP culture, it is "H:mm".</source>
        </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific format string on a particular computer can also be customized so that it differs from the standard short time format string.</source>
        </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the current thread culture, see the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about format characters, format patterns, and the output they produce, see the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about changing the format pattern associated with a format character, see the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve">
          <source>A string that contains the short time string representation of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified format and culture-specific format information.</source>
        </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`format`</ph> parameter can contain either a single format specifier character (see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>) or a custom format pattern (see <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>).</source>
        </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the standard format specifier, "G", is used.</source>
        </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter defines the pattern that corresponds to the standard format specifiers, as well as the symbols and names of date and time components.</source>
        </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting conventions are to be reflected in the returned string.</source>
        </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting of the returned string.</source>
        </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> associated with the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve">
          <source>A standard or custom date and time format string.</source>
        </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve">
          <source>A string representation of value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object as specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">format</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">provider</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>The length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is 1, and it is not one of the format specifier characters defined for <ph id="ph2">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid custom format pattern.</source>
        </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve">
          <source>The date and time is outside the range of dates supported by the calendar used by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">provider</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified format and the formatting conventions of the current culture.</source>
        </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method returns the string representation of a date and time value in a specific format that uses the formatting conventions of the current culture; for more information, see <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`format`</ph> parameter should contain either a single format specifier character (see <bpt id="p1">[</bpt>Standard Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept>) or a custom format pattern (see <bpt id="p2">[</bpt>Custom Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept>) that defines the format of the returned string.</source>
        </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the general format specifier, 'G', is used.</source>
        </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some uses of this method include:</source>
        </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting a string that displays the date and time in the current culture’s short date and time format.</source>
        </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you use the "G" format specifier.</source>
        </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting a string that contains only the month and year.</source>
        </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you use the "MM/yyyy" format string.</source>
        </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format string uses the current culture’s date separator.</source>
        </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting a string that contains the date and time in a specific format.</source>
        </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the "MM/dd/yyyyHH:mm" format string displays the date and time string in a fixed format such as "19//03//2013 18:06".</source>
        </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format string uses "/" as a fixed date separator regardless of culture-specific settings.</source>
        </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting a date in a condensed format that could be used for serializing a date string.</source>
        </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the "yyyyMMdd" format string displays a four-digit year followed by a two-digit month and a two-digit day with no date separator.</source>
        </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses these three format strings to display a date and time value by using the conventions of the en-US and fr-FR cultures.</source>
        </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.ToString#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.ToString/cs/tostring5.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.ToString#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.ToString/vb/tostring5.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve">
          <source>A standard or custom date and time format string.</source>
        </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve">
          <source>A string representation of value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object as specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">format</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve">
          <source>The length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">format</ph><ept id="p1">&lt;/code&gt;</ept> is 1, and it is not one of the format specifier characters defined for <ph id="ph2">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;format&lt;/code&gt;</ph> does not contain a valid custom format pattern.</source>
        </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve">
          <source>The date and time is outside the range of dates supported by the calendar used by the current culture.</source>
        </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the specified culture-specific format information.</source>
        </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is formatted using the general date and time format specifier ('G'), which formats output using the short date pattern and the long time pattern.</source>
        </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of the short date and long time pattern is defined by the <ph id="ph1">`provider`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting conventions are to be reflected in the returned string.</source>
        </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting of the returned string.</source>
        </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom object that implements the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object associated with the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve">
          <source>A string representation of value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object as specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">provider</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve">
          <source>The date and time is outside the range of dates supported by the calendar used by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">provider</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to its equivalent string representation using the formatting conventions of the current culture.</source>
        </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is formatted using the general date and time format specifier ('G').</source>
        </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT">
          <source>To format it using a specific date and time format specifier, call the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT">
          <source>To format it using the general date and time format specifier ('G') for a specific culture, call the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.IFormatProvider%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT">
          <source>To format it using a specific date and time format specifier and the conventions of a specific culture, call the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses formatting information derived from the current culture.</source>
        </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT">
          <source>In particular, it combines the custom format strings returned by the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.ShortDatePattern%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.LongTimePattern%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id="ph4">`Thread.CurrentThread.CurrentCulture.DateTimeFormat`</ph> property.</source>
        </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other overloads of the <ph id="ph1">&lt;xref:System.DateTime.ToString%2A&gt;</ph> method enable you to specify the culture whose formatting to use and to define the output pattern of the <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve">
          <source>A string representation of the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>The date and time is outside the range of dates supported by the calendar used by the current culture.</source>
        </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Coordinated Universal Time (UTC) is equal to the local time minus the UTC offset.</source>
        </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the UTC offset, see <ph id="ph1">&lt;xref:System.TimeZone.GetUtcOffset%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve" extradata="MT">
          <source>The conversion also takes into account the daylight saving time rule that applies to the time represented by the current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT">
          <source>On <ph id="ph1">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> systems, the <ph id="ph2">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method recognizes only the current adjustment rule when converting from local time to UTC.</source>
        </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, conversions for periods before the current adjustment rule came into effect may not accurately reflect the difference between local time and UTC.</source>
        </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the value returned by the <ph id="ph1">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method is determined by the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the current <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the possible results.</source>
        </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Kind</source>
        </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Results</source>
        </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve" extradata="MT">
          <source>No conversion is performed.</source>
        </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is converted to UTC.</source>
        </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> object is assumed to be a local time, and the conversion is performed as if <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> were <ph id="ph3">&lt;xref:System.DateTimeKind.Local&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> method converts a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from local time to UTC.</source>
        </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT">
          <source>To convert the time in a non-local time zone to UTC, use the <ph id="ph1">&lt;xref:System.TimeZoneInfo.ConvertTimeToUtc%28System.DateTime%2CSystem.TimeZoneInfo%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT">
          <source>To convert a time whose offset from UTC is known, use the <ph id="ph1">&lt;xref:System.DateTimeOffset.ToUniversalTime%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the date and time instance value is an ambiguous time, this method assumes that it is a standard time.</source>
        </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT">
          <source>(An ambiguous time is one that can map either to a standard time or to a daylight saving time in the local time zone) If the date and time instance value is an invalid time, this method simply subtracts the local time from the local time zone's UTC offset to return UTC.</source>
        </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT">
          <source>(An invalid time is one that does not exist because of the application of daylight saving time adjustment rules.)</source>
        </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve">
          <source>An object whose <ph id="ph1">&lt;xref href="System.DateTime.Kind"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">&lt;xref href="System.DateTimeKind.Utc"&gt;&lt;/xref&gt;</ph>, and whose value is the UTC equivalent to the value of the current <ph id="ph3">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph4">&lt;xref href="System.DateTime.MaxValue"&gt;&lt;/xref&gt;</ph> if the converted value is too large to be represented by a <ph id="ph5">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph6">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the converted value is too small to be represented by a <ph id="ph7">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent using the specified culture-specific format information and formatting style, and returns a value that indicates whether the conversion succeeded.</source>
        </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method parses a string that can contain date, time, and time zone information.</source>
        </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is similar to the <ph id="ph1">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except that the <ph id="ph2">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method does not throw an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method attempts to ignore unrecognized data and parse <ph id="ph1">`s`</ph> completely.</source>
        </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains a time but no date, the method by default substitutes the current date or, if <ph id="ph2">`styles`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.DateTimeStyles.NoCurrentDateDefault&gt;</ph> flag, it substitutes <ph id="ph4">`DateTime.Date.MinValue`</ph>.</source>
        </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains a date but no time, 12:00 midnight is used as the default time.</source>
        </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a date is present but its year component consists of only two digits, it is converted to a year in the <ph id="ph1">`provider`</ph> parameter's current calendar based on the value of the <ph id="ph2">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any leading, inner, or trailing white space characters in <ph id="ph1">`s`</ph> are ignored.</source>
        </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT">
          <source>The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</source>
        </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specific valid formats for date and time elements, as well as the names and symbols used in dates and times, are defined by the <ph id="ph1">`provider`</ph> parameter, which can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting is used in the <ph id="ph2">`s`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> property defines the formatting used in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the formatting used in <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the formatting used in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> is the string representation of a leap day in a leap year in the current calendar, the method parses <ph id="ph2">`s`</ph> successfully.</source>
        </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> is the string representation of a leap day in a non-leap year in the current calendar of <ph id="ph2">`provider`</ph>, the parse operation fails and the method returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`styles`</ph> parameter defines the precise interpretation of the parsed string and how the parse operation should handle it.</source>
        </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be one or more members of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration, as described in the following table.</source>
        </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTimeStyles member</source>
        </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parses <ph id="ph1">`s`</ph> and, if necessary, converts it to UTC.</source>
        </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes a time zone offset, or if <ph id="ph2">`s`</ph> contains no time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id="ph5">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id="ph6">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id="ph7">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph8">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> indicates that it represents UTC, or if <ph id="ph2">`s`</ph> does not contain time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id="ph6">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph7">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, the flag has no effect.</source>
        </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although valid, this value is ignored.</source>
        </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inner white space is permitted in the date and time elements of <ph id="ph1">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although valid, this value is ignored.</source>
        </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Leading white space is permitted in the date and time elements of <ph id="ph1">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although valid, this value is ignored.</source>
        </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trailing white space is permitted in the date and time elements of <ph id="ph1">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that <ph id="ph1">`s`</ph> may contain leading, inner, and trailing white spaces.</source>
        </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the default behavior.</source>
        </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve" extradata="MT">
          <source>It cannot be overridden by supplying a more restrictive <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration value such as <ph id="ph2">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent a local time.</source>
        </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent UTC.</source>
        </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although valid, this value is ignored.</source>
        </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT">
          <source>For strings that contain time zone information, tries to prevent the conversion of a date and time string to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, such a string is created by calling the <ph id="ph1">&lt;xref:System.DateTime.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method using either the "o", "r", or "u" standard format specifiers.</source>
        </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method returns a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph4">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph5">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> unless a <ph id="ph6">`styles`</ph> flag indicates otherwise.</source>
        </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes time zone or time zone offset information, the <ph id="ph2">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method performs any necessary time conversion and returns one of the following:</source>
        </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value whose date and time reflect the local time and whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Or, if <ph id="ph1">`styles`</ph> includes the <ph id="ph2">&lt;xref:System.Globalization.DateTimeStyles.AdjustToUniversal&gt;</ph> flag, a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value whose date and time reflect UTC and whose <ph id="ph4">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph5">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be overridden by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag.</source>
        </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing Custom Cultures</source>
        </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you parse a date and time string generated for a custom culture, use the <ph id="ph1">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method instead of the <ph id="ph2">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method to improve the probability that the parse operation will succeed.</source>
        </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom culture date and time string can be complicated and difficult to parse.</source>
        </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.TryParse%2A&gt;</ph> method attempts to parse a string with several implicit parse patterns, all of which might fail.</source>
        </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method  requires you to explicitly designate one or more exact parse patterns that are likely to succeed.</source>
        </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about custom cultures, see the <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder?displayProperty=fullName&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve">
          <source>A string containing a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that defines how to interpret the parsed date in relation to the current time zone or the current date.</source>
        </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve">
          <source>A typical value to specify is <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id="ph3">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the conversion failed.</source>
        </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve">
          <source>The conversion fails if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>, is an empty string (""), or does not contain a valid string representation of a date and time.</source>
        </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> values (for example, both <ph id="ph3">&lt;xref href="System.Globalization.DateTimeStyles.AssumeLocal"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Globalization.DateTimeStyles.AssumeUniversal"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;provider&lt;/code&gt;</ph> is a neutral culture and cannot be used in a parsing operation.</source>
        </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent and returns a value that indicates whether the conversion succeeded.</source>
        </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.DateTime.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method, except that the <ph id="ph3">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29&gt;</ph> method does not throw an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string <ph id="ph1">`s`</ph> is parsed using formatting information in the current <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object, which is supplied implicitly by the current thread culture.</source>
        </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method tries to ignore unrecognized data, if possible, and fills in missing month, day, and year information with the current date.</source>
        </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains only a date and no time, this method assumes the time is 12:00 midnight.</source>
        </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes a date component with a two-digit year, it is converted to a year in the current culture's current calendar based on the value of the <ph id="ph2">&lt;xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any leading, inner, or trailing white space character in <ph id="ph1">`s`</ph> is ignored.</source>
        </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve" extradata="MT">
          <source>The date and time can be bracketed with a pair of leading and trailing NUMBER SIGN characters ('#', U+0023), and can be trailed with one or more NULL characters (U+0000).</source>
        </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method tries to parse the string representation of a date and time using the formatting rules of the current culture, trying to parse a particular string across different cultures can either fail or return different results.</source>
        </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a specific date and time format will be parsed across different locales, use the <ph id="ph1">&lt;xref:System.DateTime.TryParse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method or one of the overloads of the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method and provide a format specifier.</source>
        </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> is the string representation of a leap day in a leap year in the current calendar, the method parses <ph id="ph2">`s`</ph> successfully.</source>
        </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> is the string representation of a leap day in a non-leap year in the current culture's current calendar, the parse operation fails and the method returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, <ph id="ph2">`result`</ph> contains a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph4">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph5">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> when the method returns.</source>
        </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the string to be parsed contains time zone information, <ph id="ph1">`result`</ph> contains a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> when the method returns.</source>
        </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve">
          <source>A string containing a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id="ph3">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the conversion failed.</source>
        </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve">
          <source>The conversion fails if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>, is an empty string (""), or does not contain a valid string representation of a date and time.</source>
        </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent using the specified format, culture-specific format information, and style.</source>
        </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve">
          <source>The format of the string representation must match the specified format exactly.</source>
        </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve">
          <source>The method returns a value that indicates whether the conversion succeeded.</source>
        </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date, which must be in the format defined by the <ph id="ph2">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is similar to the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except that the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method does not throw an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter contains the date and time to parse and must be in a format defined by the <ph id="ph2">`format`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve" extradata="MT">
          <source>If date, time, and time zone elements are present in <ph id="ph1">`s`</ph>, they must also appear in the order specified by <ph id="ph2">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> defines a date with no time element and the parse operation succeeds, the resulting <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value has a time of midnight (00:00:00).</source>
        </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`format`</ph> defines a time with no date element and the parse operation succeeds, the resulting <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value by default has a date of <ph id="ph3">`DateTime.Now.Date`</ph>, or it has a date of <ph id="ph4">`DateTime.MinValue.Date`</ph> if <ph id="ph5">`styles`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag.</source>
        </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`style`</ph> parameter determines whether the <ph id="ph2">`s`</ph> parameter can contain leading, inner, or trailing white space characters.</source>
        </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id="ph5">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id="ph6">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id="ph7">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph8">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph9">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT">
          <source>If s contains time zone information, the time is converted to local time, if necessary, and the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`format`</ph> parameter contains a pattern that corresponds to the expected format of the <ph id="ph2">`s`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The pattern in the <ph id="ph1">`format`</ph> parameter consists of one or more custom format specifiers from the <bpt id="p1">[</bpt>Custom Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id="p2">[</bpt>Standard Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.</source>
        </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id="ph1">`provider`</ph> parameter and the widest form of each custom format specifier.</source>
        </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</source>
        </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than requiring that <ph id="ph1">`s`</ph> conform to a single format for the parse operation to succeed, you can call the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method and specify multiple permitted formats.</source>
        </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes the parse operation more likely to succeed.</source>
        </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT">
          <source>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id="ph1">`s`</ph> are defined by the <ph id="ph2">`provider`</ph> parameter, as is the precise format of <ph id="ph3">`s`</ph> if <ph id="ph4">`format`</ph> is a standard format specifier string.</source>
        </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`styles`</ph> parameter includes one or more members of the <ph id="ph2">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id="ph3">`format`</ph> can appear in <ph id="ph4">`s`</ph> and that control the precise behavior of the parse operation.</source>
        </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes how each member of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTimeStyles member</source>
        </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parses <ph id="ph1">`s`</ph> and, if necessary, converts it to UTC.</source>
        </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes a time zone offset, or if <ph id="ph2">`s`</ph> contains no time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id="ph5">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id="ph6">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id="ph7">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph8">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> indicates that it represents UTC, or if <ph id="ph2">`s`</ph> does not contain time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id="ph6">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph7">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, the flag has no effect.</source>
        </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear between any individual date or time element.</source>
        </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the beginning of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the end of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that <ph id="ph1">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id="ph2">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent a local time.</source>
        </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph>value is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent UTC.</source>
        </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains time without date information, the date of the return value is set to <ph id="ph2">`DateTime.MinValue.Date`</ph>.</source>
        </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using default values.</source>
        </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT">
          <source>No white space other than that present in <ph id="ph1">`format`</ph> is allowed.</source>
        </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> lacks a date component, the date of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.</source>
        </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve" extradata="MT">
          <source>If time zone information is present in <ph id="ph1">`s`</ph>, the time is converted to local time and the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve" extradata="MT">
          <source>For strings that contain time zone information, tries to prevent the conversion to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag primarily prevents the conversion of UTC times to local times.</source>
        </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve">
          <source>A string containing a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve">
          <source>The required format of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve">
          <source>A bitwise combination of one or more enumeration values that indicate the permitted format of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id="ph3">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the conversion failed.</source>
        </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve">
          <source>The conversion fails if either the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">format</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <ph id="ph3">`null`</ph>, is an empty string, or does not contain a date and time that correspond to the pattern specified in <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">format</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> values (for example, both <ph id="ph3">&lt;xref href="System.Globalization.DateTimeStyles.AssumeLocal"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Globalization.DateTimeStyles.AssumeUniversal"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve">
          <source>Converts the specified string representation of a date and time to its <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> equivalent using the specified array of formats, culture-specific format information, and style.</source>
        </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve">
          <source>The format of the string representation must match at least one of the specified formats exactly.</source>
        </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve">
          <source>The method returns a value that indicates whether the conversion succeeded.</source>
        </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29?displayProperty=fullName&gt;</ph> method parses the string representation of a date that matches any one of the patterns assigned to the <ph id="ph2">`formats`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is like the <ph id="ph1">&lt;xref:System.DateTime.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method, except the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%2A&gt;</ph> method does not throw an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter contains the date and time to parse.</source>
        </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`s`</ph> parameter contains only a time and no date, the current date is used unless the <ph id="ph2">`style`</ph> parameter includes the <ph id="ph3">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, in which case the default date (<ph id="ph4">`DateTime.Date.MinValue`</ph>) is used.</source>
        </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`s`</ph> parameter contains only a date and no time, midnight (00:00:00) is used.</source>
        </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`style`</ph> parameter also determines whether the <ph id="ph2">`s`</ph> parameter can contain leading, inner, or trailing white space characters other than those permitted by one of the format strings in <ph id="ph3">`formats`</ph>.</source>
        </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, which returns a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>, or by using the <ph id="ph5">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> and <ph id="ph6">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flags, which returns a <ph id="ph7">&lt;xref:System.DateTime&gt;</ph> value whose <ph id="ph8">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property is <ph id="ph9">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve" extradata="MT">
          <source>If s contains time zone information, the time is converted to local time, if necessary, and the <ph id="ph1">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve" extradata="MT">
          <source>This behavior can be changed by using the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag to not convert Coordinated Universal Time (UTC) to a local time and set the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`formats`</ph> parameter contains an array of patterns, one of which <ph id="ph2">`s`</ph> must match exactly if the parse operation is to succeed.</source>
        </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT">
          <source>The patterns in the <ph id="ph1">`formats`</ph> parameter consist of one or more custom format specifiers from the <bpt id="p1">[</bpt>Custom Date and Time Format Strings<ept id="p1">](~/docs/standard/base-types/custom-date-and-time-format-strings.md)</ept> table, or a single standard format specifier, which identifies a predefined pattern, from the <bpt id="p2">[</bpt>Standard Date and Time Format Strings<ept id="p2">](~/docs/standard/base-types/standard-date-and-time-format-strings.md)</ept> table.</source>
        </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not use date or time separators in a custom format pattern, use the invariant culture for the <ph id="ph1">`provider`</ph> parameter and the widest form of each custom format specifier.</source>
        </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you want to specify hours in the pattern, specify the wider form, "HH", instead of the narrower form, "H".</source>
        </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT">
          <source>The particular date and time symbols and strings (such as the names of the days of the week in a particular language) used in <ph id="ph1">`s`</ph> are defined by the <ph id="ph2">`provider`</ph> parameter, as is the precise format of <ph id="ph3">`s`</ph> if <ph id="ph4">`format`</ph> is a standard format specifier string.</source>
        </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`provider`</ph> parameter can be any of the following:</source>
        </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture used to interpret <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by its <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property defines the symbols and formatting in <ph id="ph3">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that defines the format of date and time data.</source>
        </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns either the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph>object or the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object that provides formatting information.</source>
        </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to the current culture is used.</source>
        </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`styles`</ph> parameter includes one or more members of the <ph id="ph2">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration that determine whether and where white space not defined by <ph id="ph3">`format`</ph> can appear in <ph id="ph4">`s`</ph> and that control the precise behavior of the parse operation.</source>
        </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes how each member of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles&gt;</ph> enumeration affects the operation of the <ph id="ph2">&lt;xref:System.DateTime.TryParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%2CSystem.DateTime%40%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT">
          <source>DateTimeStyles member</source>
        </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parses <ph id="ph1">`s`</ph> and, if necessary, converts it to UTC.</source>
        </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> includes a time zone offset, or if <ph id="ph2">`s`</ph> contains no time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, calls <ph id="ph5">&lt;xref:System.DateTime.ToUniversalTime%2A&gt;</ph> to convert the returned <ph id="ph6">&lt;xref:System.DateTime&gt;</ph> value to UTC, and sets the <ph id="ph7">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph8">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> indicates that it represents UTC, or if <ph id="ph2">`s`</ph> does not contain time zone information but <ph id="ph3">`styles`</ph> includes the <ph id="ph4">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag, the method parses the string, performs no time zone conversion on the returned <ph id="ph5">&lt;xref:System.DateTime&gt;</ph> value, and sets the <ph id="ph6">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph7">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve" extradata="MT">
          <source>In all other cases, the flag has no effect.</source>
        </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear between any individual date or time element.</source>
        </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the beginning of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that white space not defined by <ph id="ph1">`format`</ph> can appear at the end of <ph id="ph2">`s`</ph>.</source>
        </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that <ph id="ph1">`s`</ph> may contain leading, inner, and trailing white spaces not defined by <ph id="ph2">`format`</ph>.</source>
        </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent a local time.</source>
        </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies that if <ph id="ph1">`s`</ph> lacks any time zone information, it is assumed to represent UTC.</source>
        </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless the <ph id="ph1">&lt;xref:System.Globalization.DateTimeStyles?displayProperty=fullName&gt;</ph> flag is present, the method converts the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value from UTC to local time and sets its <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains time without date information, the date of the return value is set to <ph id="ph2">`DateTime.MinValue.Date`</ph>.</source>
        </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using default values.</source>
        </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT">
          <source>No white space other than that present in <ph id="ph1">`format`</ph> is allowed.</source>
        </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> lacks a date component, the date of the returned <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value is set to 1/1/0001.</source>
        </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`s`</ph> contains no time zone information, the <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve" extradata="MT">
          <source>If time zone information is present in <ph id="ph1">`s`</ph>, the time is converted to local time and the<ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> object is set to <ph id="ph4">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve" extradata="MT">
          <source>For strings that contain time zone information, tries to prevent the conversion to a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value with its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve" extradata="MT">
          <source>This flag primarily prevents the conversion of UTC times to local times.</source>
        </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve">
          <source>A string that contains a date and time to convert.</source>
        </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve">
          <source>An array of allowable formats of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve">
          <source>An object that supplies culture-specific format information about <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that indicates the permitted format of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve">
          <source>A typical value to specify is <ph id="ph1">&lt;xref href="System.Globalization.DateTimeStyles.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value equivalent to the date and time contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept>, if the conversion succeeded, or <ph id="ph3">&lt;xref href="System.DateTime.MinValue"&gt;&lt;/xref&gt;</ph> if the conversion failed.</source>
        </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve">
          <source>The conversion fails if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">s</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">formats</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">s</ph><ept id="p3">&lt;/code&gt;</ept> or an element of <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">formats</ph><ept id="p4">&lt;/code&gt;</ept> is an empty string, or the format of <bpt id="p5">&lt;code&gt;</bpt><ph id="ph6">s</ph><ept id="p5">&lt;/code&gt;</ept> is not exactly as specified by at least one of the format patterns in <bpt id="p6">&lt;code&gt;</bpt><ph id="ph7">formats</ph><ept id="p6">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.</source>
        </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">s</ph><ept id="p1">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;styles&lt;/code&gt;</ph> contains an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.DateTimeStyles"&gt;&lt;/xref&gt;</ph> values (for example, both <ph id="ph3">&lt;xref href="System.Globalization.DateTimeStyles.AssumeLocal"&gt;&lt;/xref&gt;</ph> and <ph id="ph4">&lt;xref href="System.Globalization.DateTimeStyles.AssumeUniversal"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object that is set to the current date and time on this computer, expressed as the Coordinated Universal Time (UTC).</source>
        </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resolution of this property depends on the system timer.</source>
        </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT">
          <source>System</source>
        </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve" extradata="MT">
          <source>Approximate Resolution</source>
        </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows NT 3.5 and later</source>
        </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve" extradata="MT">
          <source>10 milliseconds</source>
        </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows 98</source>
        </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT">
          <source>55 milliseconds</source>
        </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework version 2.0, the return value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> whose <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property returns <ph id="ph3">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT">
          <source>An alternative to using <ph id="ph1">&lt;xref:System.DateTime.UtcNow%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.DateTimeOffset.UtcNow%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve" extradata="MT">
          <source>While the former indicates that a date and time value is Coordinated Universal Time (UTC) by assigning <ph id="ph1">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph> to its <ph id="ph2">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property, the latter assigns the date and time value the UTC time's offset (equal to <ph id="ph3">&lt;xref:System.TimeSpan.Zero?displayProperty=fullName&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve">
          <source>An object whose value is the current UTC date and time.</source>
        </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve">
          <source>Gets the year component of the date represented by this instance.</source>
        </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.DateTime.Year%2A&gt;</ph> property returns the year of the current instance in the Gregorian calendar.</source>
        </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not return the year using the default calendar of the current culture.</source>
        </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the year using a particular calendar, you can call that calendar's <ph id="ph1">`GetYear`</ph> method, as the following code shows.</source>
        </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.DateTime.Year#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.DateTime.Year/cs/Year.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.DateTime.Year#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.DateTime.Year/vb/Year.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve">
          <source>The year, between 1 and 9999.</source>
        </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve">
          <source>Returns the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve">
          <source>The current object.</source>
        </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve">
          <source>Converts the current <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object to an object of a specified type.</source>
        </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve">
          <source>The desired type.</source>
        </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve">
          <source>An object of the type specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter, with a value equivalent to the current <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve">
          <source>This conversion is not supported for the <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve">
          <source>This conversion is not supported.</source>
        </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>An object that implements the <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve">
          <source>The return value for this member is not used.</source>
        </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> object with the data needed to serialize the current <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method populates the <ph id="ph1">`info`</ph> parameter with the <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property values.</source>
        </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>The object to populate with data.</source>
        </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve">
          <source>The destination for this serialization.</source>
        </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve">
          <source>(This parameter is not used; specify <ph id="ph1">`null`</ph>.)</source>
        </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;info&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>