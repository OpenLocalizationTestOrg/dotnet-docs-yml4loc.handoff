<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">704dd7cad45b27b0d50486cfe7dd4a8809ceff8a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Claims.ClaimsAuthenticationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">967222da23869a1cb80c28affc853f8c572280bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0739ab3436e3d30ae01f273f457857499ba8b754</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the base implementation for a claims authentication manager.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The claims authentication manager provides a place in the claims processing pipeline for applying processing logic (filtering, validation, extension) to the claims collection in the incoming principal before execution reaches your application code.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The claims authentication manager provides an extensibility point in the applicationâ€™s claims processing pipeline that you can use to validate, filter, modify, incoming claims or inject new claims into the set of claims presented by a <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> before the RP application code is executed.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can even return a custom implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> if your RP application requires it.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation provided by the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> class returns the claims in the <ph id="ph2">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> unmodified; however, you can derive from this class and override the <ph id="ph3">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method to modify the claims in the <ph id="ph4">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph> (or to return a custom <ph id="ph5">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A typical reason for creating a custom claims authentication manager is to add, remove, or transform claims based on information that is only known by or is, perhaps, better maintained by the RP application.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a history of customer purchases in a shopping cart application might be kept in a data base maintained by the RP application and then added to the claims principal returned by the claims authentication manager based on the value of a name claim found in the incoming principal.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure your application to use a <ph id="ph1">`ClaimsAuthenticationManager`</ph> either programmatically by using the <ph id="ph2">&lt;xref:System.IdentityModel.Configuration.IdentityConfiguration&gt;</ph> class or in configuration through the <bpt id="p1">[</bpt><ph id="ph3">\&amp;</ph>lt;claimsAuthenticationManager<ph id="ph4">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> element (which is a child element of the <bpt id="p2">[</bpt><ph id="ph5">\&amp;</ph>lt;identityConfiguration<ph id="ph6">\&amp;</ph>gt;<ept id="p2">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md)</ept> element).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method to provide processing for custom child elements of the <ph id="ph2">`&lt;claimsAuthenticationManager&gt;`</ph> element through which your custom manager can be configured.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager&gt;</ph> does not handle any child elements.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configuring your application to use a claims authentication manager ensures that it will be invoked by Windows Identity Foundation (WIF) from the request pipeline.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Claims.ClaimsAuthenticationManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a <ph id="ph1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;&lt;/xref&gt;</ph> object consistent with the requirements of the RP application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The default implementation does not modify the incoming <ph id="ph1">&lt;xref href="System.Security.Claims.ClaimsPrincipal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.Authenticate%2A&gt;</ph> method is called from the request processing pipeline You can override this method in a derived class to filter, modify, or inject claims into the claims principal according to the policy of your RP application.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the requirements of the RP application, you can even return a custom implementation of <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsPrincipal&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The address of the resource that is being requested.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The claims principal that represents the authenticated user that is attempting to access the resource.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A claims principal that contains any modifications necessary for the RP application.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The default implementation returns the incoming claims principal unmodified.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, loads custom configuration from XML.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Claims.ClaimsAuthenticationManager.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is called, the <ph id="ph1">`nodelist`</ph> will contain the top-level child elements of the <bpt id="p1">[</bpt><ph id="ph2">\&amp;</ph>lt;claimsAuthenticationManager<ph id="ph3">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/claimsauthenticationmanager.md)</ept> element from the configuration file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of these elements may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no child elements appear under the <ph id="ph1">`&lt;claimsAuthenticationManager&gt;`</ph> element in the configuration file, this method is not called.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation throws a <ph id="ph1">&lt;xref:System.NotImplementedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method in your derived class to enable initialization of your claims authentication manager from a configuration file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the configuration elements might describe a policy to be followed when authenticating a claims principal; or they might be used to point to an attribute store from which additional claims are to be added to the principal.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The custom configuration elements.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Each node in the list is of type <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>