<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">59bb55f5a4872771b2b4ecc07c2c89e4018f5773</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Globalization.CultureInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bfac9bd5374e66c8f5211c3de23d31ce6d09fb29</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c03cc1f99349d300c9e2d87a3750ee206fab919a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides information about a specific culture (called a <bpt id="p1">*</bpt>locale<ept id="p1">*</ept> for unmanaged code development).</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The information includes the names for the culture, the writing system, the calendar used, the sort order of strings, and formatting for dates and numbers.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/globalization/cultureinfo.cs#e319c6636909012f)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class provides culture-specific information, such as the language, sublanguage, country/region, calendar, and conventions associated with a particular culture.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class also provides access to culture-specific instances of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.CompareInfo&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.TextInfo&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>These objects contain the information required for culture-specific operations, such as casing, formatting dates and numbers, and comparing strings.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class is used either directly or indirectly by classes that format, parse, or manipulate culture-specific data, such as <ph id="ph2">&lt;xref:System.String&gt;</ph>, <ph id="ph3">&lt;xref:System.DateTime&gt;</ph>, <ph id="ph4">&lt;xref:System.DateTimeOffset&gt;</ph>, and the numeric types.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this section:</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Culture names and identifiers<ept id="p1">](#CultureNames)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Invariant, neutral, and specific cultures<ept id="p1">](#Invariant)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Custom cultures<ept id="p1">](#Custom)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Dynamic culture data<ept id="p1">](#Dynamic)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>The current culture and current UI culture<ept id="p1">](#Current)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Getting all cultures<ept id="p1">](#GetAll)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Culture and threads<ept id="p1">](#Threads)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Culture and application domains<ept id="p1">](#AppDomain)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Culture and task-based asynchronous operations<ept id="p1">](#Async)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>CultureInfo object serialization<ept id="p1">](#Serialization)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Control Panel overrides<ept id="p1">](#CPanel)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Alternate sort orders<ept id="p1">](#AlternateSort)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Culture and Windows apps<ept id="p1">](#Windows)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture names and identifiers</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class specifies a unique name for each culture, based on RFC 4646.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name is a combination of an ISO 639 two-letter lowercase culture code associated with a language and an ISO 3166 two-letter uppercase subculture code associated with a country or region.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, for apps that target <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph> or later and are running under Windows 10 or later, culture names that correspond to valid BCP-47 language tags are supported.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a culture name is passed to a class constructor or a method such as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, its case is not significant.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format for the culture name based on RFC 4646 is <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept><ph id="ph1">&gt;-</ph><bpt id="p2">*</bpt>country/regioncode2<ept id="p2">*</ept>, where <bpt id="p3">*</bpt>languagecode2<ept id="p3">*</ept> is the two-letter language code and <bpt id="p4">*</bpt>country/regioncode2<ept id="p4">*</ept> is the two-letter subculture code.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples include ja-JP for Japanese (Japan) and en-US for English (United States).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where a two-letter language code is not available, a three-letter code derived from ISO 639-2 is used.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that some culture names also specify an ISO 15924 script.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Cyrl specifies the Cyrillic script and Latn specifies the Latin script.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A culture name that includes a script uses the pattern <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept><ph id="ph1">-</ph><bpt id="p2">*</bpt>scripttag<ept id="p2">*</ept><ph id="ph2">-</ph><bpt id="p3">*</bpt>country/regioncode2<ept id="p3">*</ept>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example of this type of culture name is uz-Cyrl-UZ for Uzbek (Cyrillic, Uzbekistan).</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>On Windows operating systems before Windows Vista, a culture name that includes a script uses the pattern <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept><ph id="ph1">-</ph><bpt id="p2">*</bpt>country/regioncode2<ept id="p2">*</ept><ph id="ph2">-</ph><bpt id="p3">*</bpt>scripttag<ept id="p3">*</ept>, for example, uz-UZ-Cyrl for Uzbek (Cyrillic, Uzbekistan).</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>A neutral culture is specified by only the two-letter lowercase language code.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, fr specifies the neutral culture for French, and de specifies the neutral culture for German.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two culture names that contradict this rule.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cultures Chinese (Simplified), named zh-Hans, and Chinese (Traditional), named zh-Hant, are neutral cultures.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The culture names represent the current standard and should be used unless you have a reason for using the older names zh-CHS and zh-CHT.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>A culture identifier is a standard international numeric abbreviation and has the components necessary to uniquely identify one of the installed cultures.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can use predefined culture identifiers or define custom identifiers.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Certain predefined culture names and identifiers are used by this and other classes in the <ph id="ph1">&lt;xref:System.Globalization?displayProperty=fullName&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Detailed culture information appears in the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remember that the culture names and identifiers represent only a subset of cultures that can be found on a particular computer.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows versions or service packs can change the available cultures.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications add custom cultures using the <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users add their own custom cultures using the Microsoft Locale Builder tool.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Microsoft Locale Builder is written in managed code using the <ph id="ph1">`CultureAndRegionInfoBuilder`</ph> class.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Several distinct names are closely associated with a culture, notably the names associated with the following class members:</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invariant, neutral, and specific cultures</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cultures are generally grouped into three sets: invariant cultures, neutral cultures, and specific cultures.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>An invariant culture is culture-insensitive.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application specifies the invariant culture by name using an empty string ("") or by its identifier.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> defines an instance of the invariant culture.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is associated with the English language but not with any country/region.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used in almost any method in the <ph id="ph1">`Globalization`</ph> namespace that requires a culture.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A neutral culture is a culture that is associated with a language but not with a country/region.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>A specific culture is a culture that is associated with a language and a country/region.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, fr is the neutral name for the French culture, and fr-FR is the name of the specific French (France) culture.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that Chinese (Simplified) and Chinese (Traditional) are also considered neutral cultures.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating an instance of a <ph id="ph1">&lt;xref:System.Globalization.CompareInfo&gt;</ph> class for a neutral culture is not recommended because the data it contains is arbitrary.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display and sort data, specify both the language and region.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, the <ph id="ph1">&lt;xref:System.Globalization.CompareInfo.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object created for a neutral culture returns only the country and does not include the region.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The defined cultures have a hierarchy in which the parent of a specific culture is a neutral culture and the parent of a neutral culture is the invariant culture.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Parent%2A&gt;</ph> property contains the neutral culture associated with a specific culture.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom cultures should define the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Parent%2A&gt;</ph> property in conformance with this pattern.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resources for a specific culture are not available in the operating system, the resources for the associated neutral culture are used.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resources for the neutral culture are not available, the resources embedded in the main assembly are used.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the resource fallback process, see <bpt id="p1">[</bpt>Packaging and Deploying Resources<ept id="p1">](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The list of locales in the Windows API is slightly different from the list of cultures supported by the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If interoperability with Windows is required, for example, through the p/invoke mechanism, the application should use a specific culture that is defined for the operating system.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of the specific culture ensures consistency with the equivalent Windows locale, which is identified with a locale identifier that is the same as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> or a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> can be created only for the invariant culture or for specific cultures, not for neutral cultures.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName&gt;</ph> is the <ph id="ph2">&lt;xref:System.Globalization.TaiwanCalendar&gt;</ph> but the <ph id="ph3">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> is not set to zh-TW, then <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo.NativeCalendarName%2A?displayProperty=fullName&gt;</ph>, <ph id="ph5">&lt;xref:System.Globalization.DateTimeFormatInfo.GetEraName%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph6">&lt;xref:System.Globalization.DateTimeFormatInfo.GetAbbreviatedEraName%2A?displayProperty=fullName&gt;</ph> return an empty string ("").</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom cultures</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the predefined cultures supported by the Windows operating system and the .NET Framework, the .NET Framework supports three types of custom cultures:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>New cultures that supplement the cultures available in Windows or the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an application could install a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the fj-FJ (or Fijan (Fiji)) culture on a system.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Replacement cultures whose properties are different from the properties of the standard cultures supported by Windows and the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Standard cultures with user overrides.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can use the <bpt id="p1">**</bpt>Region and Language<ept id="p1">**</ept> application in <bpt id="p2">**</bpt>Control Panel<ept id="p2">**</ept> to customize an existing culture's property values.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class to define, save, and register custom cultures that either supplement or replace existing cultures.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder.Save%2A?displayProperty=fullName&gt;</ph> method creates a Locale Data Markup Language (LDML) file that can be used to install a custom culture on target systems.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>For step-by step information on using the <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class to create a new or replacement culture, see the <ph id="ph2">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class topic.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the .NET Framework supports custom cultures, you should consider the following when working with culture-specific data:</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom cultures can have values that exceed the ranges of the predefined cultures.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, some cultures have unusually long month names, unexpected date or time formats, or other unusual data.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you display culture-specific data in the user interface, you should respect the user's customizations; for example, the user might want a 24-hour clock or a yyyyMMdd date format.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Remember that custom cultures override default values.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot consider culture data to be stable.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Country names, number and date formats, and spellings may change in the future.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to serialize culture-sensitive data such as date and time strings to be passed to the date and time parsing functions, you should use the invariant culture or a specific .</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CultureTypes%2A&gt;</ph> property value of custom cultures installed on a system includes the <ph id="ph2">&lt;xref:System.Globalization.CultureTypes?displayProperty=fullName&gt;</ph> flag, and custom cultures are assigned an <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> property value of <ph id="ph4">`LOCALE_CUSTOM_UNSPECIFIED`</ph> (0x1000, or 4096).</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that, starting with Windows 10, this value is also assigned to system-defined cultures that lack complete cultural data.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dynamic culture data</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Except for the invariant culture, culture data is dynamic.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true even for the predefined cultures.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, countries or regions adopt new currencies, change their spellings of words, or change their preferred calendar, and culture definitions change to track this.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom cultures are subject to change without notice, and any specific culture might be overridden by a custom replacement culture.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, as discussed below, an individual user can override cultural preferences.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications should always obtain culture data at run time.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>When saving data, your application should use the invariant culture, a binary format, or a specific culture-independent format.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data saved according to the current values associated with a particular culture, other than the invariant culture, might become unreadable or might change in meaning if that culture changes.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current culture and current UI culture</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every thread in a .NET Framework application has a current culture and a current UI culture.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current culture determines the formatting conventions for dates, times, numbers, and currency values, the sort order of text, casing conventions, and the ways in which strings are compared.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current UI culture is used to retrieve culture-specific resources at runtime.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how the current and current UI culture is determined on a per-thread basis, see the  <bpt id="p1">[</bpt>Culture and threads<ept id="p1">](#Threads)</ept> section.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how the current and current UI culture is determined on threads executing in a new application domain, and on threads that cross application domain boundaries, see the <bpt id="p1">[</bpt>Culture and application domains<ept id="p1">](#AppDomain)</ept> section.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how the current  and current is determined on  threads performing task-based asynchronous operations, see the <bpt id="p1">[</bpt>Culture and task-based asynchronous operations<ept id="p1">](#Async)</ept> section.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more detailed information on the current culture, see the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property topic.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more detailed information on the current UI culture, see the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property topic.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the current and current UI cultures</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current culture in either of two ways:</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <bpt id="p1">[</bpt>Thread.CurrentThread.CurrentCulture<ept id="p1">](../Topic/CurrentCulture%20Property.md)</ept> property.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example retrieves both property values, compares them to show that they are equal, and displays the name of the current culture.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Current1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Current1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current UI culture in either of two ways:</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <bpt id="p1">[</bpt>Thread.CurrentThread.CurrentUICulture<ept id="p1">](../Topic/CurrentUICulture%20Property.md)</ept> property.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example retrieves both property values, compares them to show that they are equal, and displays the name of the current UI culture.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/CurrentUI1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/CurrentUI1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the current and current UI cultures</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the culture and UI culture of a thread, do the following:</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents that culture by calling a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class constructor and passing it the name of the culture.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29&gt;</ph> constructor instantiates a  <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that reflects user overrides if the new culture is the same as the current Windows culture.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor allows you to specify whether the newly instantiated <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object reflects user overrides if the new culture is the same as the current Windows culture.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assign the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> or<ph id="ph3">&lt;xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, for apps running on the version 4.6 or later of the desktop .NET Framework, you can also assign the  <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example retrieves the current culture.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is anything other than the French (France) culture, it changes the current culture to French (France).</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it changes the current culture to French (Luxembourg).</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/Change1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/Change1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example retrieves the current culture.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is anything other the Slovenian (Slovenia) culture, it changes the current culture to Slovenian (Slovenia).</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it changes the current culture to Croatian (Croatia).</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/ChangeUI1.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/ChangeUI1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting all cultures</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve an array specific categories of cultures or of all the cultures available on the local computer by calling the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultures%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can retrieve custom cultures, specific cultures, or neutral cultures either alone or in combination.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultures%2A&gt;</ph> method twice, first with the <ph id="ph2">&lt;xref:System.Globalization.CultureTypes?displayProperty=fullName&gt;</ph> enumeration member to retrieve all custom cultures, and then with the <ph id="ph3">&lt;xref:System.Globalization.CultureTypes?displayProperty=fullName&gt;</ph> enumeration member to retrieve all replacement cultures.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Globalization.CultureInfo/cs/GetCultures1.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Globalization.CultureInfo/vb/GetCultures1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture and threads</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a new application thread is started, its current culture and current UI culture are defined by the current system culture, and not by the current thread culture.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates the difference.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>It sets the current culture and current UI culture of an application thread to the French (France) culture (fr-FR).</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current culture is already fr-FR, the example sets it to the English (United States) culture (en-US).</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>It displays three random numbers as currency values and then creates a new thread, which, in turn, displays three more random numbers as currency values.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>But as the output from the example shows, the currency values displayed by the new thread do not reflect the formatting conventions of the French (France) culture, unlike the output from the main application thread.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Thread#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/defaultthread1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Thread#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/defaultthread1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions of the .NET Framework before the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the most common way to ensure that the main application thread shares the same culture with all other worker threads is to pass either the name of the application-wide culture or a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the application-wide culture to a <ph id="ph3">&lt;xref:System.Threading.ParameterizedThreadStart?displayProperty=fullName&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses this approach to ensure that the currency values displayed by two threads reflect the formatting conventions of the same culture.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Thread#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/perthread1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Thread#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/perthread1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the culture and UI culture of thread pool threads in a similar manner by calling the <ph id="ph1">&lt;xref:System.Threading.ThreadPool.QueueUserWorkItem%28System.Threading.WaitCallback%2CSystem.Object%29?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, you can set the culture and UI culture of all threads in an application domain more directly by assigning a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents that culture to the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses these properties to ensure that all threads in the default application domain share the same culture.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Thread#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/cs/setthreads1.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Thread#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.thread/vb/setthreads1.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> properties are static members, they define the default culture and default UI culture only for the application domain that is current at the time these property values are set.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the next section, <bpt id="p1">[</bpt>Culture and application domains<ept id="p1">](#AppDomain)</ept>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you assign values to the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> properties, the culture and UI culture of the threads in the application domain also change if they have not explicitly been assigned a culture.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, these threads reflect the new culture settings only while they execute in the current application domain.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>If these threads execute in another application domain, their culture becomes the default culture defined for that application domain.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, we recommend that you always set the culture of the main application thread, and not rely on the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> properties to change it.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture and application domains</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> are static properties that explicitly define a default culture only for the application domain that is current when the property value is set or retrieved.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the default culture and default UI culture in the default application domain to French (France), and then uses the <ph id="ph1">&lt;xref:System.AppDomainSetup&gt;</ph> class and the <ph id="ph2">&lt;xref:System.AppDomainInitializer&gt;</ph> delegate to set the default culture and UI culture in a new application domain to Russian (Russia).</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>A single thread then executes two methods in each application domain.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the thread's culture and UI culture are not explicitly set; they are derived from the default culture and UI culture of the application domain in which the thread is executing.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> properties return the default <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> values of the application domain that is current when the method call is made.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.AppDomain#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/cs/appdomainex1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.AppDomain#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.appdomain/vb/appdomainex1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cultures and application domains, see the "Application Domains and Threads" section in the  topic.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture and task-based asynchronous operations</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">[</bpt>task-based asynchronous programming pattern<ept id="p1">](~/docs/standard/parallel-programming/task-based-asynchronous-programming.md)</ept> uses <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> and <ph id="ph2">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> objects to asynchronously execute delegates on thread pool threads.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specific thread on which a particular task runs is not known in advance, but is determined only at runtime.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For apps that target the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> or later versions, culture is part of an asynchronous operation's context.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, starting with apps that target the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, asynchronous operations by default inherit the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> properties of the thread from which they are launched.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current culture or current UI culture differs from the system culture, the current culture crosses thread boundaries and becomes the current culture of the thread pool thread that is executing an asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example provides a simple illustration.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>It uses the <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</ph> attribute to target the <ph id="ph2">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example defines a <ph id="ph1">&lt;xref:System.Func%601&gt;</ph> delegate, <ph id="ph2">`formatDelegate`</ph>, that returns some numbers formatted as currency values.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The example changes the current system culture to either French (France) or, if French (France) is already the current culture, English (United States).</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then:</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invokes the delegate directly so that it runs synchronously on the main app thread.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a task that executes the delegate asynchronously on a thread pool thread.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creates a task that executes the delegate synchronously on the main app thread by calling the <ph id="ph1">&lt;xref:System.Threading.Tasks.Task.RunSynchronously%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, when the current culture is changed to French (France), the current culture of the thread from which tasks are invoked asynchronously becomes the current culture for that asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Async#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Async#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For apps that target versions of the .NET Framework prior to the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, or for apps that do not target a particular version of the .NET Framework, the culture of the calling thread is not part of a task's context.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, unless one is explicitly defined, the culture of new threads by default is the system culture.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example, which is identical to the previous example except that it lacks the <ph id="ph1">&lt;xref:System.Runtime.Versioning.TargetFrameworkAttribute&gt;</ph> attribute, illustrates this.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the system culture of the system on which the example executed was English (United States), the culture of the task that executes asynchronously on a thread pool thread is en-US rather than fr-FR.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Async#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Async#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>For apps that target versions of the .NET Framework from the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph> and later but prior to the <ph id="ph2">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, you can use the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> properties to ensure that the culture of the calling thread is used in asynchronous tasks that execute on thread pool threads.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example is identical to the previous example, except that it uses the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property to ensure that thread pool threads have the same culture as the main app thread.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Async#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture3.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Async#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture3.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> are per-app domain properties; that is, they establish a default culture for all threads not explicitly assigned a culture in a specific application domain.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, for apps that target the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> or later, the culture of the calling thread remains part of an asynchronous task's context even if the task crosses app domain boundaries.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows that the calling thread's culture remains the current culture of a task-based asynchronous operation even if the method that the task is executing crosses application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>It defines a class, <ph id="ph1">`DataRetriever`</ph>, with a single method, <ph id="ph2">`GetFormattedNumber`</ph>, that returns a random double-precision floating-point number between 1 and 1,000 formatted as a currency value.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>A first task is run that simply instantiates a <ph id="ph1">`DataRetriever`</ph> instance and calls its <ph id="ph2">`GetFormattedNumber`</ph> method.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>A second task reports its current application domain, creates a new application domain, instantiates a <ph id="ph1">`DataRetriever`</ph> instance in the new application domain, and calls its <ph id="ph2">`GetFormattedNumber`</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, the current culture has remained the same in the calling thread, the first task, and the second task both when it was executing in the main application domain and the second application domain.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.Class.Async#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/cs/asyncculture4.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.Class.Async#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.class.async/vb/asyncculture4.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>CultureInfo object serialization</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is serialized, all that is actually stored is <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is successfully de-serialized only in an environment where that <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> has the same meaning.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following three examples show why this is not always the case:</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CultureTypes%2A&gt;</ph> property value is <ph id="ph2">&lt;xref:System.Globalization.CultureTypes?displayProperty=fullName&gt;</ph>, and if that culture was first introduced in Windows Vista or a later version of the Windows operating system, it is not possible to de-serialize it on Windows XP.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, if the culture was first introduced in Windows XP Service Pack 2, it is not possible to de-serialize it for a Windows XP system on which the culture has not been installed.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CultureTypes%2A&gt;</ph> value is <ph id="ph2">&lt;xref:System.Globalization.CultureTypes?displayProperty=fullName&gt;</ph>, and the computer on which it is de-serialized does not have this user custom culture installed, it is not possible to de-serialize it.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CultureTypes%2A&gt;</ph> value is <ph id="ph2">&lt;xref:System.Globalization.CultureTypes?displayProperty=fullName&gt;</ph>, and the computer on which it is de-serialized does not have this replacement culture, it de-serializes to the same name, but not all of the same characteristics.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if en-US is a replacement culture on computer A, but not on computer B, and if a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object referring to this culture is serialized on computer A and de-serialized on computer B, then none of the custom characteristics of the culture are transmitted.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The culture de-serializes successfully, but with a different meaning.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control Panel overrides</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, your applications should honor these user overrides.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the specified culture matches the current culture of Windows, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternate sort orders</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some cultures support more than one sort order.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Spanish (Spain) culture has two sort orders: the default international sort order, and the traditional sort order.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object with the es-ES culture name, the international sort order is used.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object with the es-ES-tradnl culture name, the traditional sort order is used.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The zh-CN (Chinese (Simplified, PRC)) culture supports two sort orders:  by pronunciation (the default) and by stroke count.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object with the zh-CN culture name, the default sort order is used.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object with a local identifier of 0x00020804, strings are sorted by stroke count.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the cultures that support alternate sort orders and the identifiers for the default and alternate sort orders.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture name</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default sort name and identifier</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternate sort name and identifier</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>es-ES</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Spanish (Spain)</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>International: 0x00000C0A</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Traditional: 0x0000040A</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>zh-TW</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Chinese (Taiwan)</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stroke Count: 0x00000404</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bopomofo: 0x00030404</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>zh-CN</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>Chinese (PRC)</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pronunciation: 0x00000804</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stroke Count: 0x00020804</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>zh-HK</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>Chinese (Hong Kong SAR)</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stroke Count: 0x00000c04</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stroke Count: 0x00020c04</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>zh-SG</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Chinese (Singapore)</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pronunciation: 0x00001004</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stroke Count: 0x00021004</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>zh-MO</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Chinese (Macao SAR)</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pronunciation: 0x00001404</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stroke Count: 0x00021404</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>ja-JP</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>Japanese (Japan)</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default: 0x00000411</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unicode: 0x00010411</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>ko-KR</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Korean (Korea)</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default: 0x00000412</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Korean Xwansung - Unicode: 0x00010412</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>de-DE</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>German (Germany)</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dictionary: 0x00000407</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Phone Book Sort DIN: 0x00010407</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>hu-HU</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hungarian (Hungary)</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default: 0x0000040e</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>Technical Sort: 0x0001040e</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>ka-GE</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>Georgian (Georgia)</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>Traditional: 0x00000437</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modern Sort: 0x00010437</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture and Windows apps</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows apps, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> properties are read-only.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the current culture and current UI culture by using the Windows <bpt id="p1">[</bpt>ResourceContext.Languages<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.resources.core.resourcecontext.languages.aspx)</ept> property.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses it to change the application's current culture and current UI culture either to English (United States) or, if the current culture is already English (United States), to French (France).</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> properties are then displayed to a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> control named <ph id="ph4">`block`</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, both property values reflect the new value of the <bpt id="p1">[</bpt>ResourceContext.Languages<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.resources.core.resourcecontext.languages.aspx)</ept> property.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> class based on the culture specified by the culture identifier.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>Predefined culture identifiers are listed in the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, the <ph id="ph1">`culture`</ph> parameter is mapped to the corresponding National Language Support (NLS) locale identifier.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`culture`</ph> parameter becomes the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you call the locale name constructor <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=fullName&gt;</ph>, because locale names are preferable to LCIDs.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom locales, a locale name is required.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified culture identifier matches the culture identifier of the current Windows culture, this constructor creates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> that uses those overrides, including user settings for the properties of the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> (for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>) the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the specified culture identifier does not match the identifier of the current Windows culture, this constructor creates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> that uses the default values for the specified culture.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> property is always set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that Arabic (Saudi Arabia) is the current Windows culture and the user has changed the calendar from Hijri to Gregorian.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("0x0401")`</ph> (culture name ar-SA), <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> (which is the user setting) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("0x041E")`</ph> (culture name th-TH), <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> (which is the default calendar for th-TH) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, older versions of Windows do not.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the .NET Framework default setting for the currency, the application should use a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> constructor overload that accepts a <ph id="ph2">`useUserOverride`</ph> parameter and set it to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>For backwards compatibility, a culture constructed using a <ph id="ph1">`culture`</ph> parameter of 0x0004 or 0x7c04 will have a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property of zh-CHS or zh-CHT, respectively.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should instead prefer to construct the culture using the current standard culture names of zh-Hans or zh-Hant, unless you have a reason for using the older names.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>A predefined <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> identifier, <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo.LCID"&gt;&lt;/xref&gt;</ph> property of an existing <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object, or Windows-only culture identifier.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;culture&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;culture&lt;/code&gt;</ph> is not a valid culture identifier.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>See the Notes to Callers section for more information.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> class based on the culture specified by name.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of predefined culture names, see the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, starting with Windows 10, <ph id="ph1">`name`</ph> can be any valid BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`name`</ph> is <ph id="ph2">&lt;xref:System.String?displayProperty=fullName&gt;</ph>, the constructor creates an instance of the invariant culture; this is equivalent to retrieving the value of the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the culture identifier associated with <ph id="ph1">`name`</ph> matches the culture identifier of the current Windows culture, this constructor creates a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that uses those overrides, including user settings for the properties of the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph6">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the culture identifier associated with <ph id="ph1">`name`</ph> does not match the culture identifier of the current Windows culture, this constructor creates a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that uses the default values for the specified culture.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> property is always set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user changed the calendar from Hijri to Gregorian.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("ar-SA")`</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> (which is the user setting) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("th-TH")`</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> (which is the default calendar for th-TH) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> is set to the culture identifier associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, older versions of Windows do not do this.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the .NET Framework default setting for the currency, the application should use a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> constructor overload that accepts a <ph id="ph2">`useUserOverride`</ph> parameter and set it to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>A predefined <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> name, <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo.Name"&gt;&lt;/xref&gt;</ph> of an existing <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>, or Windows-only culture name.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid culture name.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>For more information, see the Notes to Callers section.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> class based on the culture specified by the culture identifier and on the Boolean that specifies whether to use the user-selected culture settings from the system.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>Predefined culture identifiers are listed in the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, the <ph id="ph1">`culture`</ph> parameter is mapped to the corresponding National Language Support (NLS) locale identifier.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`culture`</ph> parameter becomes the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> property of the new <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you call the locale name constructor <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=fullName&gt;</ph>, because locale names are preferable to LCIDs.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom locales, a locale name is required.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications should typically not disallow user overrides.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that disallowing overrides does not itself guarantee data stability; see the blog entry <bpt id="p1">[</bpt>Culture data shouldn't be considered stable (except for Invariant)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=156850)</ept>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the specified culture identifier matches the identifier of the current Windows culture, this constructor creates a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> that uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this constructor creates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> that uses the default values for the specified culture.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`useUserOverride`</ph> parameter becomes the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user has changed the calendar from Hijri to Gregorian.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("0x0401", true)`</ph> (culture name ar-SA), <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> (which is the user setting) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("0x0401", false)`</ph> (culture name ar-SA), <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.HijriCalendar&gt;</ph> (which is the default calendar for ar-SA) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("0x041E", true)`</ph> (culture name th-TH), <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> (which is the default calendar for th-TH) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("0x041E", false)`</ph> (culture name th-TH), <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> (which is the default calendar for th-TH) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, older versions of Windows do not.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the .NET Framework default setting for the currency, the application should set the <ph id="ph1">`useUserOverride`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>For backwards compatibility, a culture constructed using a <ph id="ph1">`culture`</ph> parameter of 0x0004 or 0x7c04 will have a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property of zh-CHS or zh-CHT, respectively.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should instead prefer to construct the culture using the current standard culture names of zh-Hans or zh-Hant, unless you have a reason for using the older names.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>A predefined <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> identifier, <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo.LCID"&gt;&lt;/xref&gt;</ph> property of an existing <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object, or Windows-only culture identifier.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A Boolean that denotes whether to use the user-selected culture settings (<ph id="ph1">`true`</ph>) or the default culture settings (<ph id="ph2">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;culture&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;culture&lt;/code&gt;</ph> is not a valid culture identifier.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>See the Notes to Callers section for more information.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> class based on the culture specified by name and on the Boolean that specifies whether to use the user-selected culture settings from the system.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of predefined culture names, see the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, starting with Windows 10, <ph id="ph1">`name`</ph> can be any valid BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`name`</ph> is <ph id="ph2">&lt;xref:System.String?displayProperty=fullName&gt;</ph>, the constructor creates an instance of the invariant culture; this is equivalent to retrieving the value of the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current Windows culture through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications should typically not disallow user overrides.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that disallowing overrides does not itself guarantee data stability; see the blog entry <bpt id="p1">[</bpt>Culture data shouldn't be considered stable (except for Invariant)<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=156850)</ept>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the culture identifier associated with the specified culture name matches the culture identifier of the current Windows culture, this constructor creates a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> that uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, this constructor creates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> that uses the default values for the specified culture.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">`useUserOverride`</ph> parameter becomes the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose that Arabic (Saudi Arabia) is the current culture of Windows and the user changed the calendar from Hijri to Gregorian.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("ar-SA", true)`</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph> (which is the user setting) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("ar-SA", false)`</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.HijriCalendar&gt;</ph> (which is the default calendar for ar-SA) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("th-TH", true)`</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> (which is the default calendar for th-TH) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>With <ph id="ph1">`CultureInfo("th-TH", false)`</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Globalization.ThaiBuddhistCalendar&gt;</ph> (which is the default calendar for th-TH) and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> is set to the culture identifier associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cultures that use the euro, the .NET Framework and Windows XP set the default currency as euro.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, older versions of Windows do not do this.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if the user of an older version of Windows has not changed the currency setting through the regional and language options portion of Control Panel, the currency might be incorrect.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>To use the .NET Framework default setting for the currency, the application should set the <ph id="ph1">`useUserOverride`</ph> parameter to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A predefined <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> name, <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo.Name"&gt;&lt;/xref&gt;</ph> of an existing <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>, or Windows-only culture name.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>A Boolean that denotes whether to use the user-selected culture settings (<ph id="ph1">`true`</ph>) or the default culture settings (<ph id="ph2">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid culture name.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>See the Notes to Callers section for more information.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>Gets the default calendar used by the culture.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the specified culture matches the current culture of Windows, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the value of this property might be different from the default calendar used by the culture.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application changes the calendar used by the current <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph> property of <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph>, which is an instance of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new calendar must be one of the calendars listed in <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> also includes other properties that customize the date and time formatting associated with that <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.Calendar"&gt;&lt;/xref&gt;</ph> that represents the default calendar used by the culture.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Refreshes cached culture-related information.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Information, such as the default culture and format patterns, is cached the first time it is requested.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>That information can change during the life of the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, for example, when the user modifies the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class does not automatically detect changes in the system settings.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.ClearCachedData%2A&gt;</ph> method clears the cache of <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects created by <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%2A&gt;</ph> and refreshes the information in the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.Globalization.RegionInfo.CurrentRegion%2A&gt;</ph> properties, based on the current system settings.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.ClearCachedData%2A&gt;</ph> method does not refresh the information in the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property for existing threads.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, future threads will have any new <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> property values.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>The clone is writable even if the original <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the properties of the clone can be modified.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shallow copy of an object is a copy of the object only.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>It refers to the original objects instead.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Clone%2A&gt;</ph> method creates an enhanced shallow copy.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The objects returned by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.TextInfo%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> properties are also copied.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consequently, the cloned <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object can modify its copied properties without affecting the original <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>A copy of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> that defines how to compare strings for the culture.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A&gt;</ph> property returns a <ph id="ph2">&lt;xref:System.Globalization.CompareInfo&gt;</ph> object that provides culture-specific information used in culture-sensitive sorting and string comparison operations.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the specified culture matches the current culture of Windows, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> that defines how to compare strings for the culture.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that represents the specific culture that is associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A&gt;</ph> method wraps a call to the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of predefined culture names, see the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, starting with Windows 10, <ph id="ph1">`name`</ph> can be any valid BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cultures are grouped into three sets: the invariant culture, the neutral cultures, and the specific cultures.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the description of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the culture identifier of the specific culture returned by this method matches the culture identifier of the current Windows culture, this method creates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that uses the Windows culture overrides.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overrides include user settings for the properties of the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>To instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that with default culture settings rather than user overrides, call the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor with a value of <ph id="ph3">`false`</ph> for the <ph id="ph4">`useUserOverride`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A&gt;</ph> method name includes the term "Specific", remember that culture data can change between versions, or due to custom cultures, or because of user overrides.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the invariant culture or binary or fixed forms for saving data.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A predefined <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> name or the name of an existing <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object that represents:</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>The invariant culture, if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The specific culture associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p2">&lt;/code&gt;</ept> is a neutral culture.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The culture specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>, if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p2">&lt;/code&gt;</ept> is already a specific culture.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is not a valid culture name.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>The culture specified by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> does not have a specific culture associated with it.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Gets the culture types that pertain to the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>A bitwise combination of one or more <ph id="ph1">&lt;xref href="System.Globalization.CultureTypes"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>There is no default value.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object that represents the culture used by the current thread.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that is returned by this property and its associated objects determine the default format for dates, times, numbers, currency values, the sorting order of text, casing conventions, and string comparisons.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current culture is a property of the executing thread, which is returned by the static <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentThread%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property corresponds to the value of the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property is equivalent to retrieving the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object returned by the <ph id="ph3">`Thread.CurrentThread.CurrentCulture`</ph> property.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, setting the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property also changes the current thread culture.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4.5.2 and earlier versions, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property is read-only;  that is, you can retrieve the property value, but you cannot set it.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the current culture, you assign the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the new culture to the <ph id="ph2">`Thread.CurrentThread.CurrentCulture`</ph> property.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property is read-write; you can both set and retrieve the property's value.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do set the property value to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents a new culture, the value of the <ph id="ph2">`Thread.CurrentThread.CurrentCulture`</ph> property also changes.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this section:</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How a Thread's Culture Is Determined<ept id="p1">](#ThreadCulture)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Getting the Current Culture<ept id="p1">](#Getting)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Explicitly Setting the CurrentCulture Property<ept id="p1">](#ExplicitSetting)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>The Current Culture and User Overrides<ept id="p1">](#Overrides)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Culture and Windows Apps<ept id="p1">](#WindowsAndCurr)</ept></source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>How a Thread's Culture Is Determined</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a thread is started, its culture is initially determined as follows:</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the culture that is specified by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property in the application domain in which the thread is executing, if the property value is not <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the thread is a thread pool thread that is executing a task-based asynchronous operation and the app targets the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> or a later version of the .NET Framework, its culture is determined by the culture of the calling thread.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example changes the current culture to Portuguese (Brazil) and launches six tasks, each of which displays its thread ID, its task ID, and its current culture.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of the tasks (and the threads) has inherited the culture of the calling thread.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentCulture#14<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Async1.cs#14)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentCulture#14<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Async1.vb#14)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Culture and task-based asynchronous operations" section in the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> topic.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the Windows <ph id="ph1">`GetUserDefaultLocaleName`</ph> function.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if you set a specific culture that is different from the system-installed culture or the user's preferred culture, and your application starts multiple threads, the current culture of those threads will be the culture that is returned by the <ph id="ph1">`GetUserDefaultLocaleName`</ph> function, unless you assign a culture to the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property in the application domain in which the thread is executing.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how the culture of a thread is determined, see the "Culture and threads" section in the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting the Current Culture</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property is a per-thread setting; that is, each thread can have its own culture.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>You get the culture of the current thread by retrieving the value of the   <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property, as the following example illustrates.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentCulture#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/Get1.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentCulture#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/Get1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also retrieve the value of the current thread's culture from the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentThread%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>Explicitly Setting the CurrentCulture Property</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>Staring with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, to change the culture that is used by an existing thread, you set the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property to the new culture.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you explicitly change a thread's culture in this way, that change persists if the thread crosses application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example changes the current thread culture to Dutch (Netherlands).</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also shows that, when the current thread crosses application domain boundaries, its current culture remains changed.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentCulture#11<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/changeculture11.cs#11)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentCulture#11<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/changeculture11.vb#11)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the culture by using the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property requires a <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> permission with the <ph id="ph3">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread&gt;</ph> value set.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>Manipulating threads is dangerous because of the security state associated with threads.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, this permission should be given only to trustworthy code, and then only as necessary.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change thread culture in semi-trusted code.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, you can explicitly change the current thread culture to either a specific culture (such as French (Canada)) or a neutral culture (such as French).</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object represents a neutral culture, the values of <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> properties such as <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.TextInfo%2A&gt;</ph> reflect the specific culture that is associated with the neutral culture.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the dominant culture for the English neutral culture is English (United States); the dominant culture for the German culture is German (Germany).</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates the difference in formatting when the current culture is set to a specific culture, French (Canada), and a neutral culture, French.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentCulture#12<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/specific12.cs#12)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentCulture#12<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/specific12.vb#12)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property along with the <ph id="ph2">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=fullName&gt;</ph> property to set the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property of an ASP.NET application to the user's preferred culture, as the following example illustrates.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentCulture#13<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/cs/aspculture13.cs#13)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentCulture#13<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentculture/vb/aspculture13.vb#13)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Current Culture and User Overrides</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows allows users to override the standard property values of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object and its associated objects by using <bpt id="p1">**</bpt>Regional and Language Options<ept id="p1">**</ept> in Control Panel.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property reflects these user overrides in the following cases:</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current thread culture is set implicitly by the Windows <ph id="ph1">`GetUserDefaultLocaleName`</ph> function.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current thread culture defined by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property corresponds to the current Windows system culture.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current thread culture is set explicitly to a culture returned by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A&gt;</ph> method, and that culture corresponds to the current Windows system culture.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current thread culture is set explicitly to a culture instantiated by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29&gt;</ph> constructor, and that culture corresponds to the current Windows system culture.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, particularly for server applications, setting the current culture to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that reflects user overrides may be undesirable.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can set the current thread culture to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that does not reflect user overrides in the following ways:</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor with a value of <ph id="ph2">`false`</ph> for the <ph id="ph3">`useUserOverride`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%2A&gt;</ph> method, which returns a cached, read-only <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Current Culture and Windows apps</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows apps, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property is read-only.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the current culture by using the Windows <bpt id="p1">[</bpt>ResourceContext.Languages<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.resources.core.resourcecontext.languages.aspx)</ept> property.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses it to change the application's current culture either to English (United States) or, if the current culture is already English (United States), to French (France).</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> properties are then displayed to a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> control named <ph id="ph4">`block`</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, the current culture changes when the <bpt id="p1">[</bpt>ResourceContext.Languages<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.resources.core.resourcecontext.languages.aspx)</ept> property changes.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>An object that represents the culture used by the current thread.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>The property is set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object that represents the current user interface culture used by the Resource Manager to look up culture-specific resources at run time.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current UI culture is a per-thread property.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, each thread has its own current UI culture.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is equivalent to retrieving or, starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, setting the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object assigned to the  <ph id="ph3">`System.Threading.Thread.CurrentThread.CurrentUICulture`</ph> property.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a thread is started, its UI culture is initially determined as follows:</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the culture that is specified by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property in the application domain in which the thread is executing, if the property value is not <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the thread is a thread pool thread that is executing a task-based asynchronous operation and the app targets the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph> or a later version of the .NET Framework, its UI culture is determined by the UI culture of the calling thread.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example changes the current UI culture to Portuguese (Brazil) and launches six tasks, each of which displays its thread ID, its task ID, and its current UI culture.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of the tasks (and the threads) has inherited the UI culture of the calling thread.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentUICulture#14<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Async1.cs#14)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentUICulture#14<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Async1.vb#14)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Culture and task-based asynchronous operations" section in the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> topic.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the Windows <ph id="ph1">`GetUserDefaultUILanguage`</ph> function.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[Compact](~/includes/compact-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> property is read-only.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current UI culture is determined by the system's regional settings and cannot be changed programmatically.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, to change the user interface culture used by a thread, set the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property to the new culture.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you explicitly change a thread's UI culture in this way, that change persists if the thread crosses application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the .NET Framework 4.5.2 and earlier versions, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> property is read-only;  that is, you can retrieve the property value, but you cannot set it.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the current UI culture, you assign the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the new UI culture to the <ph id="ph2">`Thread.CurrentThread.CurrentUICulture`</ph> property.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property is read-write; you can both set and retrieve the property's value.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do set the property value to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents a new culture, the value of the <ph id="ph2">`Thread.CurrentThread.CurrentCulture`</ph> property also changes.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this section:</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Getting the Current UI Culture<ept id="p1">](#Getting)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Explicitly Setting the Current UI Culture<ept id="p1">](#Explicit)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Implicitly Setting the Current UI Culture<ept id="p1">](#Implicit)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>Security Considerations<ept id="p1">](#Security)</ept><ph id="ph1"> </ph></source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1"> [</bpt>The Current UI Culture and Windows apps<ept id="p1">](#WindowsAndCurrUI)</ept></source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting the Current UI Culture</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property is a per-thread setting; that is, each thread can have its own UI culture.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>You get the UI culture of the current thread by retrieving the value of the   <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property, as the following example illustrates.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentUICulture#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/Get1.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentUICulture#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/Get1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also retrieve the value of the current thread's UI culture from the <ph id="ph1">&lt;xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Explicitly Setting the Current UI Culture</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, you can change the current UI culture by assigning a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the new culture to the i<ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current UI culture can be set to either a specific culture (such as en-US or de-DE) or to a neutral culture (such as en or de).</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example sets the current UI culture to fr-FR or French (France).</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.CurrentUICulture#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/cs/currentuiculture1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.CurrentUICulture#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.currentuiculture/vb/currentuiculture1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a multithreaded application, you can explicitly set the UI culture of any thread by assigning a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents that culture to the thread's <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the thread whose culture you want to set is the current thread, you can assign the new culture to the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the UI culture of a thread is set explicitly, that thread retains the same culture even if it crosses application domain boundaries and executes code in another application domain.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implicitly Setting the Current UI Culture</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a thread, including the main application thread, is first created, by default its current UI culture is set as follows:</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using the culture defined by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property for the current application domain if the  property value is not <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using the system's default culture.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>On systems that use the Windows operating system, the common language runtime calls the Windows <ph id="ph1">`GetUserDefaultUILanguage`</ph> function to set the current  UI culture.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`GetUserDefaultUILanguage`</ph> returns the default UI culture set by the user.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user has not set a default UI language, it returns the culture originally installed on the system.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the thread crosses application boundaries and executes code in another application domain, its culture is determined in the same way as that of a newly created thread.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if you set a specific UI culture that is different from the system-installed UI culture or the user's preferred UI culture, and your application starts multiple threads, the current UI culture of those threads will be the culture returned by the <ph id="ph1">`GetUserDefaultUILanguage`</ph> function, unless you assign a culture to the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property in the application domain in which the thread is executing.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security Considerations</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the culture of the current thread requires a <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> permission with the <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.ControlThread&gt;</ph> value set.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>Manipulating threads is dangerous because of the security state associated with threads.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, this permission should be given only to trustworthy code, and then only as necessary.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot change thread culture in semi-trusted code.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Current UI Culture and Windows apps</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows apps, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> property is read-only.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the current UI culture by using the Windows <bpt id="p1">[</bpt>ResourceContext.Languages<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.resources.core.resourcecontext.languages.aspx)</ept> property.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses it to change the application's current UI culture either to English (United States) or, if the current culture is already English (United States), to French (France).</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> properties are then displayed to a <ph id="ph3">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> control named <ph id="ph4">`block`</ph>.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, the current UI culture changes when the <bpt id="p1">[</bpt>ResourceContext.Languages<ept id="p1">](https://msdn.microsoft.com/library/windows/apps/windows.applicationmodel.resources.core.resourcecontext.languages.aspx)</ept> property changes.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source>The culture used by the Resource Manager to look up culture-specific resources at run time.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>The property is set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>The property is set to a culture name that cannot be used to locate a resource file.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source>Resource filenames can include only letters, numbers, hyphens, or underscores.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph> that defines the culturally appropriate format of displaying dates and times.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overrides</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the specified culture matches the current culture of Windows, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property is not calculated until your application accesses the property.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user can change the current culture to a new culture while the application is running and then the application accesses the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property, the application retrieves the defaults for the new culture instead of the overrides for the original culture.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>To preserve the overrides for the original current culture, the application should access the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> properties before changing the current culture.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph> that defines the culturally appropriate format of displaying dates and times.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>The property is set to null.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo.DateTimeFormat"&gt;&lt;/xref&gt;</ph> property or any of the <ph id="ph2">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph> properties is set, and the <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Gets or sets the default culture for threads in the current application domain.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and previous versions, by default, the culture of all threads is set to the Windows system culture.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications whose current culture differs from the default system culture, this behavior is often undesirable.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property enables an application to define the default culture of all threads in an application domain.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have not explicitly set the culture of any existing threads executing in an application domain, setting the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property also changes the culture of these threads.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if these threads execute in another application domain, their culture is defined by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property in that application domain or, if no default value is defined, by the default system culture.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, we recommend that you always explicitly set the culture of your main application thread, and not rely on the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property to define the culture of the main application thread.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless it is set explicitly, the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentCulture%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, and the culture of threads in an application domain that have not been assigned an explicit culture is defined by the default Windows system culture.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cultures, threads, and application domains, see the "Culture and threads" and "Culture and application domains" sections in the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The default culture for threads in the current application domain, or <ph id="ph1">`null`</ph> if the current system culture is the default thread culture in the application domain.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Gets or sets the default UI culture for threads in the current application domain.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph> and previous versions, by default, the UI culture of all threads is set to the Windows system culture.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>For applications whose current UI culture differs from the default system culture, this behavior is often undesirable.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property lets you define the default UI culture of all threads in an application domain.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have not explicitly set the UI culture of any existing threads executing in an application domain, setting the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property also changes the culture of these threads.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if these threads execute in another application domain, their culture is defined by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property in that application domain or, if no default value is defined, by the default system culture.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of this, we recommend that you always explicitly set the culture of your main application thread and do not rely on the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property to define the culture of the main application thread.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless it is set explicitly, the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DefaultThreadCurrentUICulture%2A&gt;</ph> property is <ph id="ph2">`null`</ph>, and the current culture of all threads in an application domain that have not been assigned an explicit culture is defined by the default Windows system culture.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cultures, threads, and application domains, see the "Culture and threads" and "Culture and application domains" sections in the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>The default UI culture for threads in the current application domain, or <ph id="ph1">`null`</ph> if the current system UI culture is the default thread UI culture in the application domain.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>In a set operation, the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo.Name"&gt;&lt;/xref&gt;</ph> property value is invalid.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Gets the full localized culture name.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property represents the localized name of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture names may vary due to scripting or formatting conventions.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should use the returned name for display, and not attempt to parse it.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a custom culture is created by means of the <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DisplayName%2A&gt;</ph> property is initialized to the value of the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NativeName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The full localized culture name in the format <bpt id="p1">*</bpt>languagefull<ept id="p1">*</ept> [<bpt id="p2">*</bpt>country/regionfull<ept id="p2">*</ept>], where <bpt id="p3">*</bpt>languagefull<ept id="p3">*</ept> is the full name of the language and <bpt id="p4">*</bpt>country/regionfull<ept id="p4">*</ept> is the full name of the country/region.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Gets the culture name in the format <bpt id="p1">*</bpt>languagefull<ept id="p1">*</ept> [<bpt id="p2">*</bpt>country/regionfull<ept id="p2">*</ept>] in English.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.EnglishName%2A&gt;</ph> for the specific culture name en-US is "English (United States)".</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is the same, regardless of the language version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The culture name in the format <bpt id="p1">*</bpt>languagefull<ept id="p1">*</ept> [<bpt id="p2">*</bpt>country/regionfull<ept id="p2">*</ept>] in English, where <bpt id="p3">*</bpt>languagefull<ept id="p3">*</ept> is the full name of the language and <bpt id="p4">*</bpt>country/regionfull<ept id="p4">*</ept> is the full name of the country/region.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>Determines whether the specified object is the same culture as the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects are considered equal if their <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A&gt;</ph> properties are equal.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The object to compare with the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is the same culture as the current <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Gets an alternate user interface culture suitable for console applications when the default graphic user interface culture is unsuitable.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>Languages such as Arabic, Hebrew, Urdu, and Syriac are based on bidirectional text.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows applications, which have a graphical user interface, support bidirectional languages.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, console applications, which employ the text user interface of the operating system console, do not provide bidirectional support.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if you localize a console application to Arabic or Hebrew, your application displays unreadable text on the console screen.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user interface culture specifies the resources an application needs to support user input and output, and by default is the same as the operating system culture.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A?displayProperty=fullName&gt;</ph> property returns an Arabic culture for an Arabic operating system.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetConsoleFallbackUICulture%2A&gt;</ph> method to retrieve a culture suitable for a console application user interface.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>After your application retrieves the fallback user interface culture, it should assign the culture to the current user interface culture of the current thread.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Explicitly Setting the Current UI Culture" section of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentUICulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are predefined cultures that have a different fallback user interface culture name from the predefined culture name.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>Predefined culture</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>Culture name</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fallback user interface culture name</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>Amharic</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>am</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>Amharic (Ethiopia)</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>am-ET</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>(neutral Arabic)</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (U.A.E.)</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-AE</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Bahrain)</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-BH</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Algeria)</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-DZ</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>fr-FR</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Egypt)</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-EG</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Iraq)</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-IQ</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Jordan)</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-JO</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Kuwait)</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-KW</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Lebanon)</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-LB</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Libya)</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-LY</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Morocco)</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-MA</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>fr-FR</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Oman)</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-OM</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Qatar)</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-QA</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Saudi Arabia)</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-SA</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Syria)</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-SY</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Tunisia)</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-TN</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>fr-FR</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>Arabic (Yemen)</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>ar-YE</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assamese</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>as</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assamese (India)</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>as-IN</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bengali</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>bn</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bengali (Bangladesh)</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>bn-BD</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>Bengali (India)</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>bn-IN</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tibetan</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>bo</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tibetan (PRC)</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>bo-CN</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>Divehi</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>dv</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>Divehi (India)</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>dv-MV</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persian</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>fa</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persian (Iran)</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>fa-IR</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gujarati</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>gu</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gujarati (India)</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" extradata="MT">
          <source>gu-IN</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hebrew</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>he</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hebrew (Israel)</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>he-IL</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hindi</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>hi</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>Hindi (India)</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>hi-IN</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yi</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>ii</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yi (PRC)</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>ii-CN</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inukitut Syllabics</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>iu-Cans</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inukitut Syllabics (Canada)</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>iu-Cans-CA</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Khmer</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>km</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Khmer (Cambodia)</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>km-KH</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>Kannada</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>kn</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Kannada (India)</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source>kn-IN</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT">
          <source>Konkani</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT">
          <source>kok</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Konkani (India)</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>kok-IN</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lao</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>lo</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Lao (Lao P.D.R.)</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>lo-LA</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>Malayalam</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>ml</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>Malayalam (India)</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>ml-IN</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mohawk</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>moh</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mohawk (Canada)</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>moh-CA</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marathi</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>mr</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marathi (India)</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>mr-IN</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nepali</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>ne</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nepali (Nepal)</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>ne-NP</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>Norwegian</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>no</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>nb-NO</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>Oriya</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>or</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>Oriya (India)</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>or-IN</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>Punjabi</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>pa</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>Punjabi (India)</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT">
          <source>pa-IN</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dari</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT">
          <source>prs</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dari (Afghanistan)</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT">
          <source>prs-AF</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pashto</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT">
          <source>ps</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pashto (Afghanistan)</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>ps-AF</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sanskrit</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>sa</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sanskrit (India)</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>sa-IN</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sinhala</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>si</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sinhala (Sri Lanka)</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>si-LK</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syriac</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>syr</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>Syriac (Syria)</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>syr-SY</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tamil</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>ta</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tamil (India)</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source>ta-IN</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>Telugu</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT">
          <source>te</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>Telugu (India)</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>te-IN</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thai</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>th</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thai (Thailand)</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>th-Th</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>Uighur</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source>ug</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT">
          <source>Uighur (PRC)</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT">
          <source>ug-CN</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>Urdu</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>ur</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>Urdu (Pakistan)</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT">
          <source>ur-PK</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>Vietnamese</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>vi</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT">
          <source>Vietnamese (Vietnam)</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT">
          <source>vi-VN</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT">
          <source>en-US</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can use<ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> to create a replacement for a culture, and that culture can have a console fallback culture of your choosing.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>An alternate culture that is used to read and display text on the console.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>Retrieves a cached, read-only instance of a culture by using the specified culture identifier.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you use the string overload of this method (<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29&gt;</ph>), because locale names should be used instead of LCIDs.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>For custom locales, the locale name is required.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`culture`</ph> is the locale identifier of the current culture, the returned <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object does not reflect any user overrides.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>A locale identifier (LCID).</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;culture&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;culture&lt;/code&gt;</ph> specifies a culture that is not supported.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>See the Notes to Caller section for more information.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>Retrieves a cached, read-only instance of a culture using the specified culture name.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of predefined culture names, see the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, starting with Windows 10, <ph id="ph1">`name`</ph> can be any valid BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%2A&gt;</ph> method retrieves a cached, read-only <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>It offers better performance than a corresponding call to the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`name`</ph> is the name of the current culture, the returned <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object does not reflect any user overrides.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes the method suitable for server applications or tools that do not have a real user account on the system and that need to load multiple cultures efficiently.</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`name`</ph> is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, the method returns the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is equivalent to retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>The name of a culture.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> specifies a culture that is not supported.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>See the Notes to Callers section for more information.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>Retrieves a cached, read-only instance of a culture.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>Parameters specify a culture that is initialized with the <ph id="ph1">&lt;xref href="System.Globalization.TextInfo"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> objects specified by another culture.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of predefined culture names, see the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, starting with Windows 10, <ph id="ph1">`name`</ph> can be any valid BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%2A&gt;</ph> method obtains a cached, read-only <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source>It offers better performance than a corresponding call to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is used to create a culture similar to that specified by the <ph id="ph1">`name`</ph> parameter, but with different sorting and casing rules.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`name`</ph> or <ph id="ph2">`altName`</ph> is the name of the current culture, the returned objects do not reflect any user overrides.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`name`</ph> is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, the method returns the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is equivalent to retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`altName`</ph> is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, the method uses the writing system and comparison rules specified by the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>The name of a culture.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>The name of a culture that supplies the <ph id="ph1">&lt;xref href="System.Globalization.TextInfo"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Globalization.CompareInfo"&gt;&lt;/xref&gt;</ph> objects used to initialize <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">altName</ph><ept id="p1">&lt;/code&gt;</ept> is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;altName&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;altName&lt;/code&gt;</ph> specifies a culture that is not supported.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>See the Notes to Callers section for more information.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>Deprecated.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>Retrieves a read-only <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object having linguistic characteristics that are identified by the specified RFC 4646 language tag.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method and the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.IetfLanguageTag%2A&gt;</ph> property are deprecated.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of using these elements, the application should use a new <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object and calls to the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" extradata="MT">
          <source>IETF tags and names are identical.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RFC 4646 standard that is maintained by the Internet Engineering Task Force (IETF) defines an IETF language tag, which provides a uniform means of identifying a language.</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of an IETF language tag is the same as the culture name returned by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property, but does not identify a culture uniquely.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source>Different cultures share the same IETF language tag if those cultures have identical linguistic characteristics.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT">
          <source>The linguistic characteristics of a culture are contained in the <ph id="ph1">&lt;xref:System.Globalization.TextInfo&gt;</ph> object associated with a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT">
          <source>An IETF language tag consists of a mandatory language identifier, an optional script identifier, and an optional region identifier.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your applications should use the retrieved culture to control language-specific tasks, such as managing a spelling or grammar checker.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications should not use the retrieved culture to control culture-specific tasks, such as sorting text or formatting times and dates.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see RFC 4646, "Tags for Identifying Languages," and the most recent draft standard, Draft-phillips-langtags-05.txt, at <bpt id="p1">[</bpt>http://go.microsoft.com/fwlink/?LinkId=100231<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=100231)</ept>.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>The name of a language as specified by the RFC 4646 standard.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> does not correspond to a supported culture.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Gets the list of supported cultures filtered by the specified <ph id="ph1">&lt;xref href="System.Globalization.CultureTypes"&gt;&lt;/xref&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultures%2A&gt;</ph> method is most commonly called with the <ph id="ph2">`types`</ph> parameter set to the following values:</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureTypes.SpecificCultures&gt;</ph>, which returns all specific cultures.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureTypes.NeutralCultures&gt;</ph>, which returns all neutral cultures and the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureTypes.AllCultures&gt;</ph>, which returns all neutral and specific cultures, cultures installed in the Windows system, and custom cultures created by the user.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureTypes.UserCustomCulture&gt;</ph>, which returns all custom cultures, such as those registered by the <ph id="ph2">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions of Windows before Windows 10, the <ph id="ph1">&lt;xref:System.Globalization.CultureTypes.UserCustomCulture&gt;</ph> value applies to all user-defined custom cultures.</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows 10, it applies to system cultures that lack complete cultural data and that do not have a unique local identifier, as indicated by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, code such as the following will return different results when run on Windows 10 and on an earlier version of Windows.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.GetCultures#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/CS/getcultures3.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.GetCultures#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.CultureInfo.GetCultures/VB/getcultures3.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the enumeration values that filter the cultures to retrieve.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>An array that contains the cultures specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">types</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>The array of cultures is unsorted.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;types&lt;/code&gt;</ph> specifies an invalid combination of <ph id="ph2">&lt;xref href="System.Globalization.CultureTypes"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>Gets an object that defines how to format the specified type.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> implements <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`NumberFormatInfo`</ph> provides the culture-specific numeric format used in conjunction with the Format methods in the base data types.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DateTimeFormatInfo`</ph> controls how the date and time values are formatted for a specific culture.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> for which to get a formatting object.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>This method only supports the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph> types.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo.NumberFormat"&gt;&lt;/xref&gt;</ph> property, which is a <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> containing the default number format information for the current <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>, if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph4">formatType</ph><ept id="p1">&lt;/code&gt;</ept> is the <ph id="ph5">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object for the <ph id="ph6">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo.DateTimeFormat"&gt;&lt;/xref&gt;</ph> property, which is a <ph id="ph2">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph> containing the default date and time format information for the current <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>, if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph4">formatType</ph><ept id="p1">&lt;/code&gt;</ept> is the <ph id="ph5">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object for the <ph id="ph6">&lt;xref href="System.Globalization.DateTimeFormatInfo"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>null, if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">formatType</ph><ept id="p1">&lt;/code&gt;</ept> is any other object.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Serves as a hash function for the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>, suitable for hashing algorithms and data structures, such as a hash table.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method generates the same hash code for two objects that are equal according to the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Equals%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>A hash code for the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>Deprecated.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>Gets the RFC 4646 standard identification for a language.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property and the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A&gt;</ph> method are deprecated.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should use a the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>IETF tags and names are identical.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" extradata="MT">
          <source>The RFC 4646 standard that is maintained by the Internet Engineering Task Force (IETF) defines an IETF language tag, which provides a uniform means of identifying a language.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of an IETF language tag is similar to the culture name returned by the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property, but does not identify a culture uniquely.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, different cultures share the same IETF language tag if those cultures have identical linguistic characteristics.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" extradata="MT">
          <source>The linguistic characteristics of a culture are contained in the <ph id="ph1">&lt;xref:System.Globalization.TextInfo&gt;</ph> object associated with a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" extradata="MT">
          <source>An IETF language tag consists of a mandatory language identifier, an optional script identifier, and an optional region identifier.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>RFC 5646, "Tags for Identifying Languages<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=230876)</ept>.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of subtags, see <bpt id="p1">[</bpt>The IANA Language Subtag Registry<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=230877)</ept>.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>A string that is the RFC 4646 standard identification for a language.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that represents the culture installed with the operating system.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a localized operating system, such as Japanese Windows 2000 Professional, this property returns the culture of the operating system.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is the equivalent of <ph id="ph1">`GetSystemDefaultUILanguage`</ph> in the Windows API.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that represents the culture installed with the operating system.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object that is culture-independent (invariant).</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The invariant culture is culture-insensitive; it is associated with the English language but not with any country/region.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the invariant culture by name by using an empty string ("") in the call to a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> instantiation method.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> also retrieves an instance of the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used in almost any method in the <ph id="ph1">&lt;xref:System.Globalization&gt;</ph> namespace that requires a culture.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The objects returned by properties such as <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CompareInfo%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> also reflect the string comparison and formatting conventions of the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike culture-sensitive data, which is subject to change by user customization or by updates to the .NET Framework or the operating system, invariant culture data is stable over time and across installed cultures and cannot be customized by users.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes the invariant culture particularly useful for operations that require culture-independent results, such as formatting and parsing operations that persist formatted data, or sorting and ordering operations that require that data be displayed in a fixed order regardless of culture.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT">
          <source>String Operations</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the invariant culture for culture-sensitive string operations that are not affected by the conventions of the current thread culture and that are consistent across cultures.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you may want sorted data to appear in a fixed order or apply a standard set of casing conventions to strings regardless of the current thread culture.</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, you pass the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> object to a method that has a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> parameter, such as <ph id="ph3">&lt;xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%2CSystem.Globalization.CultureInfo%29&gt;</ph> and <ph id="ph4">&lt;xref:System.String.ToUpper%28System.Globalization.CultureInfo%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persisting Data</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> property can be used to persist data in a culture-independent format.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This provides a known format that does not change and that can be used to serialize and deserialize data across cultures.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the data is deserialized, it can be formatted appropriately based on the cultural conventions of the current user.</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you choose to persist date and time data in string form, you can pass the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> object to the <ph id="ph2">&lt;xref:System.DateTime.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.DateTimeOffset.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method to create the string, and you can pass the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> object to the <ph id="ph5">&lt;xref:System.DateTime.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> or <ph id="ph6">&lt;xref:System.DateTimeOffset.Parse%28System.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=fullName&gt;</ph> method to convert the string back to a date and time value.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This technique ensures that the underlying date and time values do not change when the data is read or written by users from different cultures.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the invariant culture to persist a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph> value as a string.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then parses the string and displays its value by using the formatting conventions of the French (France) and German (Germany) cultures.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.CultureInfo.InvariantCulture#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/cs/persist1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.CultureInfo.InvariantCulture#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.cultureinfo.invariantculture/vb/persist1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security Decisions</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are making a security decision (such as whether to allow access to a system resource) based on the result of a string comparison or a case change, you should not use the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you should perform a case-sensitive or case-insensitive ordinal comparison by calling a method that includes a <ph id="ph1">&lt;xref:System.StringComparison&gt;</ph> parameter and supplying either <ph id="ph2">&lt;xref:System.StringComparison?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.StringComparison?displayProperty=fullName&gt;</ph> as an argument.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Code that performs culture-sensitive string operations can cause security vulnerabilities if the current culture is changed or if the culture on the computer that is running the code differs from the culture that is used to test the code.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, an ordinal comparison depends solely on the binary value of the compared characters.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>The object that is culture-independent (invariant).</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> represents a neutral culture.</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>A neutral culture is a culture that is associated with a language but not with a country or region.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>It differs from a specific culture, which is a culture that is associated with both a language and a country or region.</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, fr is the name for the neutral French culture, while fr-FR is the name for the French culture in France.</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property returns <ph id="ph1">`false`</ph>, the culture is either a specific culture or the invariant culture.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> represents a neutral culture; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> is read-only, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> instances are also read-only.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>Gets the active input locale identifier.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input locale identifier was formerly called the keyboard layout.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>An input locale identifier is a broader concept than a keyboard layout since it can also indicate a speech-to-text converter, an Input Method Editor (IME), or any other form of input.</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>A 32-bit signed number that specifies an input locale identifier.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>Gets the culture identifier for the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, the culture identifier is mapped to the corresponding NLS locale identifier.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions of Windows prior to Windows 10, the locale identifier <ph id="ph1">`LOCALE_CUSTOM_UNSPECIFIED`</ph> (0x1000, or 4096) is assigned to custom cultures created by the user.</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows 10, it is assigned to any culture that does not have a unique locale identifier and does not have complete system-provided data.</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a result, code that iterates cultures and retrieves those with an <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.LCID%2A&gt;</ph> value of <ph id="ph2">`LOCALE_CUSTOM_UNSPECIFIED`</ph> returns a larger subset of <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects if run under Windows 10.</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>The culture identifier for the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>Gets the culture name in the format <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept><ph id="ph1">-</ph><bpt id="p2">*</bpt>country/regioncode2<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of predefined culture names and identifiers that the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property can return, see the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, starting with Windows 10, <ph id="ph1">`name`</ph> can be any valid BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that culture names are subject to change, and that they also can reflect the names of custom cultures.</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A?displayProperty=fullName&gt;</ph> property follows the naming standards provided in the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class topic.</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns the short form of the culture name that excludes any indication of an alternate sort order.</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you instantiate a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object by using the string "de-DE_phoneb" to reflect an alternate sort order, the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.Name%2A&gt;</ph> property returns "de-DE".</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the full name of the culture, you should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DisplayName%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.EnglishName%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NativeName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>The culture name in the format <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept><ph id="ph1">-</ph><bpt id="p2">*</bpt>country/regioncode2<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept> is a lowercase two-letter code derived from ISO 639-1.</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source><bpt id="p1">*</bpt>country/regioncode2<ept id="p1">*</ept> is derived from ISO 3166 and usually consists of two uppercase letters, or a BCP-47 language tag.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>Gets the culture name, consisting of the language, the country/region, and the optional script, that the culture is set to display.</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is the same, regardless of the language version of the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>The culture name.</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>consisting of the full name of the language, the full name of the country/region, and the optional script.</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>The format is discussed in the description of the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve">
          <source>Gets or sets a <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overrides</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the specified culture matches the current culture of Windows, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property are not calculated until the user accesses the property.</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user uses the Control Panel to change the current culture to a new culture while the application is running and then accesses the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property, the application retrieves the defaults for the new culture.</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT">
          <source>not the overrides for the original culture.</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT">
          <source>To preserve the overrides for the original current culture, the application should access the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> properties before changing the current culture.</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> that defines the culturally appropriate format of displaying numbers, currency, and percentage.</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>The property is set to null.</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo.NumberFormat"&gt;&lt;/xref&gt;</ph> property or any of the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> properties is set, and the <ph id="ph3">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> is read-only.</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>Gets the list of calendars that can be used by the culture.</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application changes the calendar used by the current <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> by setting the <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph> property of <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph>, which is an instance of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The new calendar must be one of the calendars listed in <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> also includes other properties that customize the date and time formatting associated with that <ph id="ph2">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Globalization.Calendar"&gt;&lt;/xref&gt;</ph> that represents the calendars that can be used by the culture represented by the current <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that represents the parent culture of the current <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cultures have a hierarchy in which the parent of a specific culture is a neutral culture, the parent of a neutral culture is the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph>, and the parent of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph> is the invariant culture itself.</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parent culture encompasses only the set of information that is common among its children.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resources for the specific culture are not available in the system, the resources for the neutral culture are used.</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the resources for the neutral culture are not available, the resources embedded in the main assembly are used.</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the resource fallback process, see <bpt id="p1">[</bpt>Packaging and Deploying Resources<ept id="p1">](~/docs/framework/resources/packaging-and-deploying-resources-in-desktop-apps.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that represents the parent culture of the current <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source>Returns a read-only wrapper around the specified <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve" extradata="MT">
          <source>This wrapper prevents any modifications to <ph id="ph1">`ci`</ph>, or the objects returned by the <ph id="ph2">`ci`</ph>.<ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> and <ph id="ph4">`ci`</ph>.<ph id="ph5">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object to wrap.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> wrapper around <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">ci</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;ci&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Globalization.TextInfo"&gt;&lt;/xref&gt;</ph> that defines the writing system associated with the culture.</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.TextInfo%2A&gt;</ph> property provides culture-specific casing information for strings.</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform culture-insensitive casing, the application should use the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.TextInfo%2A&gt;</ph> property of <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.TextInfo"&gt;&lt;/xref&gt;</ph> that defines the writing system associated with the culture.</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>Gets the ISO 639-2 three-letter code for the language of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the three-letter abbreviation for English is "eng".</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT">
          <source>When communicating between processes or persisting data it is usually better to use the full <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using just the language can lose context and data.</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>The ISO 639-2 three-letter code for the language of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>Gets the three-letter code for the language as defined in the Windows API.</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns the same value as the Windows API method <ph id="ph1">`GetLocaleInfo`</ph> with the LOCALE_SABBREVLANGNAME value.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the three-letter code for English (United States) as defined in the Windows API is "enu".</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When communicating between processes or persisting data it is usually better to use the full <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using just the language can lose context and data.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>The three-letter code for the language as defined in the Windows API.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>Returns a string containing the name of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> in the format <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept><ph id="ph2">-</ph><bpt id="p2">*</bpt>country/regioncode2<ept id="p2">*</ept>.</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.ToString%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>It returns a normalized version of the culture name that is passed to the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29&gt;</ph> constructor or to the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>It normalizes the result string by converting characters in <bpt id="p1">*</bpt>languagecode2<ept id="p1">*</ept> to lowercase and converting characters in <bpt id="p2">*</bpt>country/regioncode2<ept id="p2">*</ept> to uppercase if necessary.</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Predefined culture names are listed in the <bpt id="p1">[</bpt>National Language Support (NLS) API Reference<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=200048)</ept> page at the Go Global Developer Center.</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>A string containing the name of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>Gets the ISO 639-1 two-letter code for the language of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the two-letter abbreviation for English is "en".</source>
        </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A&gt;</ph> property value for the invariant culture is "iv".</source>
        </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When communicating between processes or persisting data it is usually better to use the full <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.Name%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using just the language can lose context and data.</source>
        </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If ISO 639-1 does not define a two-letter language code for a particular culture, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.TwoLetterISOLanguageName%2A&gt;</ph> property returns a string that consists of three or more letters.</source>
        </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the example.</source>
        </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>The ISO 639-1 two-letter code for the language of the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object uses the user-selected culture settings.</source>
        </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user might choose to override some of the values associated with the current culture of Windows through the regional and language options portion of Control Panel.</source>
        </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user might choose to display the date in a different format or to use a currency other than the default for the culture.</source>
        </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the specified culture matches the current culture of Windows, the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> uses those overrides, including user settings for the properties of the <ph id="ph4">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> instance returned by the <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A&gt;</ph> property, and the properties of the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> instance returned by the <ph id="ph7">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, for example, if the selected calendar is not one of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph>, the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is set when the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> is created.</source>
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current <ph id="ph2">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> uses the user-selected culture settings; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>