<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9d23baa9db8b1aa2aa4ae70a5d3eeebc654e2e3d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Messaging.Message.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ca9e7dbaed8e7f4affd9c001c4a82a66bab92b2a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8d7a7c25648c58567a91431ea88071e2a0a16cfb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides access to the properties needed to define a Message Queuing message.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class to peek or receive messages from a queue, or to have fine control over message properties when sending a message to a queue.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> uses the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> class when it peeks or receives messages from queues, because both the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Peek%2A?displayProperty=fullName&gt;</ph> and <ph id="ph4">&lt;xref:System.Messaging.MessageQueue.Receive%2A?displayProperty=fullName&gt;</ph> methods create a new instance of the <ph id="ph5">&lt;xref:System.Messaging.Message&gt;</ph> class and set the instance's properties.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class's read-only properties apply to retrieving messages from a queue, while the read/write properties apply to sending and retrieving messages.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> peeks or receives a message from a queue, its <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.MessageReadPropertyFilter%2A&gt;</ph> property determines which of the message's properties are retrieved.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method allows you to specify any object type for a message being sent to that queue.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance's <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property to specify settings for generic messages sent to the queue.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The types of settings include formatter, label, encryption, and authentication.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify values for the appropriate <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> members when you coordinate your messaging application to respond to acknowledgment and report messages.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using a <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> instance to send a message to the queue gives you the flexibility to access and modify many of these propertiesâ€”either for a single message or on a message-by-message basis.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> properties take precedence over <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message data is stored in the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property and to a lesser extent, the <ph id="ph2">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When message data is encrypted, serialized, or deserialized, only the contents of the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property are affected.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The contents of the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property are serialized when the message is sent, using the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property you specify.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The serialized contents are found in the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property directly, for example, to send a file as the data content of a message.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> properties at any time before sending the message, and the data will be serialized appropriately when you call <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties defined by the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A?displayProperty=fullName&gt;</ph> property apply only to messages that are not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you specify the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.DefaultPropertiesToSend%2A&gt;</ph> property for a <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, the identically named properties in a <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph> instance sent to that queue cause these default properties to be ignored.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Messaging.Message.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> class with an empty body.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class that has an empty body.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify either the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property before sending the <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you write the contents of the message directly to the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body is serialized using the <ph id="ph1">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property's value at the time the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Microsoft Base Cryptographic Provider version 1.0</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("")</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("")</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> class, using the <ph id="ph2">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;&lt;/xref&gt;</ph> to serialize the specified object into the body of the message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class that contains the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> specified by the <ph id="ph3">`body`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`body`</ph> parameter can be any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body is serialized using the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> unless you change the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before the <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph> is sent.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property at any time before calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>, the message will be serialized according to the new property value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Microsoft Base Cryptographic Provider version 1.0</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`body`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("")</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("")</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The object to be serialized into the body of the message.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Messaging.Message"&gt;&lt;/xref&gt;</ph> class using the specified formatter to serialize the specified object into the body of the message.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a new instance of the <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> class that contains the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> specified by the <ph id="ph3">`body`</ph> parameter and that uses any valid formatter to serialize the body.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`body`</ph> parameter is any object that can be serialized, such as a text string, a structure object, a class instance, or an embedded object.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property at any time before calling <ph id="ph3">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph>, the message will be serialized according to the new property value.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial value</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Microsoft Base Cryptographic Provider version 1.0</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`body`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("")</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`formatter`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("")</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>A zero-length array of bytes</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The object to be serialized into the body of the message.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.IMessageFormatter"&gt;&lt;/xref&gt;</ph> that specifies the formatter with which to serialize the message body.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of acknowledgment message to be returned to the sending application.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property specifies the type of acknowledgment messages requested by the sending application.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property before sending the message to request notification of certain occurrencesâ€”for example, a message reaching its destination queue, a message being retrieved, or a time-out preventing a message from reaching or being retrieved from the destination queue.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing returns notification by sending acknowledgment messages to the <ph id="ph1">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property specified by the original message.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>An acknowledgment message's <ph id="ph1">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property indicates the type of acknowledgment that it represents.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if an acknowledgment message was sent because a message did not reach the destination before the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> interval expired, the <ph id="ph2">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property of the acknowledgment message would contain the value <ph id="ph3">`ReachQueueTimeout`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.AcknowledgeTypes"&gt;&lt;/xref&gt;</ph> values, which represent both the types of acknowledgment messages the system posts in the administration queue and the conditions under which acknowledgments are returned to the sending application.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`None`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The message is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.AcknowledgeType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Gets the classification of acknowledgment that this message represents.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you receive a message from an administration queue, read the <ph id="ph1">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property to verify the status of the original message.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message is sent to its destination queue, Message Queuing can be requested to post an acknowledgment message.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Such a message can indicate, for example, whether the message arrived and was retrieved within specified time-outs, or it can indicate what went wrong in the case of delivery failure.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The destination queue returns acknowledgment messages and posts them to the administration queue specified in the original message's <ph id="ph1">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of an acknowledgment message identifies the acknowledgment message, not the original message.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find the identifier of the original message in the acknowledgment <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> instance's <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this <ph id="ph1">&lt;xref:System.Messaging.Message&gt;</ph> instance represents an acknowledgment message, the <ph id="ph2">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property specifies the type of acknowledgment.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Messaging.Message.Acknowledgment%2A&gt;</ph> property contains the value <ph id="ph2">`Normal`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property of the original message to specify the circumstances under which acknowledgments will be returned.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.Acknowledgment"&gt;&lt;/xref&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.MessagePropertyFilter.Acknowledgment"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets the queue that receives the acknowledgement messages that Message Queuing generates.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The queue specified in the <ph id="ph1">&lt;xref:System.Messaging.Message.AdministrationQueue%2A&gt;</ph> property can be any non-transactional queue.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The acknowledgment messages sent to the administration queue can indicate whether the original message reached its destination queue and whether it was removed from the queue.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property has any value other than <ph id="ph2">`None`</ph>, the sending application must specify the queue to use as the administration queue.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> that specifies the administration queue used for system-generated acknowledgment messages.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.AdministrationQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets additional, application-specific information.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property contains application-specific information that you can use to organize different types of messages.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use application-specific indexes.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the application to interpret <ph id="ph1">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property information.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever possible, you should include message data in the body of the message rather than the <ph id="ph1">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with foreign queues, use the <ph id="ph1">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property to specify message properties that do not exist in Message Queuing.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>As with the <ph id="ph1">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> property, it is the responsibility of the application to understand the content of the <ph id="ph2">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Information that is specific to the application.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The default is zero.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.AppSpecific"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the time that the message arrived in the destination queue.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message's <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property indicates how quickly the message must be received from the destination queue.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property timer starts when the message is sent, not when the message arrives in the queue.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that represents the message's arrival time in the destination queue.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The time is adjusted from GMT to the local time of the computer on which the destination queue resides.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.ArrivedTime"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the sender ID should be attached to the message.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property is an array of bytes that represents the identifier of the sending user.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sender ID is set by Message Queuing and is used by the receiving Queue Manager to verify whether the sender has access rights to a queue.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absence of the sender ID is an indication by the sending application that Message Queuing should not validate the message's sender nor verify the sender's access rights to the receiving queue.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> is trustworthy only if the message was authenticated when it reached the destination queue.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message is rejected when it reaches the destination queue if the queue accepts only authenticated messages and either the <ph id="ph1">&lt;xref:System.Messaging.DefaultPropertiesToSend.UseAuthentication%2A&gt;</ph> or the <ph id="ph2">&lt;xref:System.Messaging.DefaultPropertiesToSend.AttachSenderId%2A&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is rejected, it is either sent to the dead-letter queue (if <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id="ph2">`true`</ph>), or it is ignored.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can request acknowledgments when a message fails to reach a queue.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, when <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id="ph2">`false`</ph> the message might be lost without warning.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Messaging.Message.SenderId"&gt;&lt;/xref&gt;</ph> should be attached to the message; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.AttachSenderId"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the message was authenticated.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Authenticated%2A&gt;</ph> property is used only by the application while it is interacting with the message and trying to determine if authentication was requested.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message is in the queue, the message was authenticated.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, if the <ph id="ph1">&lt;xref:System.Messaging.Message.Authenticated%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the receiving Queue Manager authenticated the message when it received that message.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot determine if a message failed authentication by looking at its properties.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing discards messages that fail authentication before they are delivered to the queue.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can request that an acknowledgment message be sent if a delivery failure prevents the message from arriving in the queue.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if authentication was requested for the message when it entered the queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Authenticated"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the cryptographic provider used to generate the digital signature of the message.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use the <ph id="ph1">&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A&gt;</ph> when working with foreign queues.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a message, always set the <ph id="ph1">&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> properties together.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the message is sent, Message Queuing ignores the authentication provider name if the connector type is not also set.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.AuthenticationProviderName%2A&gt;</ph> property cannot be <ph id="ph2">`null`</ph>, but it can be an empty string ("").</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The name of the cryptographic provider used to generate the digital signature of the message.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The default is Microsoft Base Cryptographic Provider version 1.0.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.AuthenticationProviderName"&gt;&lt;/xref&gt;</ph> property could not be set.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.AuthenticationProviderName"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.AuthenticationProviderName"&gt;&lt;/xref&gt;</ph> was set to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of cryptographic provider used to generate the digital signature of the message.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>You typically use the <ph id="ph1">&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A&gt;</ph> property when working with foreign queues to specify which cryptographic service provider is associated with a message.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing requires the authentication provider name and authentication provider type of the cryptographic provider (authentication provider) to validate the digital signatures of both messages sent to a foreign queue and messages passed to Message Queuing from a foreign queue.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only <ph id="ph1">`RsaFull`</ph> is intended to be used with messaging.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending a message, always set the <ph id="ph1">&lt;xref:System.Messaging.Message.AuthenticationProviderType%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> properties together.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the message is sent, Message Queuing ignores the authentication provider type if the connector type is not also set.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.CryptographicProviderType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`RSA_FULL`</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.AuthenticationProviderType"&gt;&lt;/xref&gt;</ph> property could not be set.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.AuthenticationProviderType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets or sets the content of the message.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message's <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property usually contains the data associated with the message.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can also send application-specific data in the <ph id="ph1">&lt;xref:System.Messaging.Message.AppSpecific%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> properties, you should include message data in the <ph id="ph3">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> of the message whenever possible.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property contents are serialized or encrypted.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property can contain any object whose size does not exceed 4 MB.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A?displayProperty=fullName&gt;</ph> to send any object that is not of type <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> to the <ph id="ph3">&lt;xref:System.Messaging.MessageQueue&gt;</ph>, that object will be located in the <ph id="ph4">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of the <ph id="ph5">&lt;xref:System.Messaging.Message&gt;</ph> instance returned by <ph id="ph6">&lt;xref:System.Messaging.MessageQueue.Peek%2A&gt;</ph> or <ph id="ph7">&lt;xref:System.Messaging.MessageQueue.Receive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string argument in <ph id="ph1">`MessageQueue.Send("hello.")`</ph> is an example of such a generic object.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property indicates the type of information that is stored in the message body.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing uses this information to identify the type of the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property contents.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify either the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property before sending the <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property can be any serializable object, such as a text string, structure object, class instance, or embedded object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you write the contents of the message directly to the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the body is serialized using the formatter contained in the <ph id="ph3">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send the message without specifying a value for the <ph id="ph1">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property, the formatter defaults to <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set the body of a message to <ph id="ph1">&lt;xref:System.Decimal.MaxValue&gt;</ph> will cause a <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph> when the <ph id="ph3">`Send`</ph> method of the <ph id="ph4">&lt;xref:System.Messaging.MessageQueue&gt;</ph> class is called and the <ph id="ph5">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An object that specifies the message contents.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The object can be a string, a date, a currency, a number, an array of bytes, or any managed object.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Formatter"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Body"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets or sets the information in the body of the message.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of a message can consist of any type of informationâ€”for example, a string, a date, a currency, a number, an array of bytes, or any managed object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information is serialized into a <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> to be passed to the queue.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify either the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property or the <ph id="ph2">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property before sending the <ph id="ph3">&lt;xref:System.Messaging.Message&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property, the contents are serialized into the <ph id="ph2">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can choose to write the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property directly.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful, for example, when you want to open a connection to a file and stream its contents as the body of your message.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you write the contents of the message directly to the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the body is serialized using the formatter contained in the <ph id="ph3">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send the message without specifying a value for the <ph id="ph1">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property, the formatter defaults to <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Messaging.Message.UseEncryption%2A&gt;</ph> property to <ph id="ph2">`true`</ph> for the body of this message, the message will be encrypted when it is sent, not when you set the <ph id="ph3">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property is never encrypted.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.Stream"&gt;&lt;/xref&gt;</ph> that contains the serialized information included in the <ph id="ph2">&lt;xref href="System.Messaging.Message.Body"&gt;&lt;/xref&gt;</ph> of the message.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Body"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of data that the message body contains.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing recognizes the body contents as an object or as a serialized stream.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property indicates the type of the object within the <ph id="ph2">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of the message.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> performs binding between native types and the object in a message body.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use the <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>, the formatter sets the <ph id="ph2">&lt;xref:System.Messaging.Message.BodyType%2A&gt;</ph> property for you.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other formatters can provide binding functionality also, as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The message body's true type, such as a string, a date, a currency, or a number.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Body"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates that some message properties typically set by Message Queuing were set by the sending application.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing requires the <ph id="ph1">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property be set whenever an application sets a message property that is usually set by Message Queuing.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application typically uses a <ph id="ph1">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> in the following two cases:</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever a connector application passes a message.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> tells the sending and receiving applications how to interpret the security and acknowledgment properties of the message.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever the sending application, rather than Message Queuing, encrypts a message.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> tells Message Queuing to use the <ph id="ph2">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property value to decrypt the message.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property if you set any of the following properties (otherwise, the queue ignores these properties when the message is sent):</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> defined by the application and used in conjunction with connector applications or message encryption.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> allows a receiving application to interpret message properties that were set by the sending application but that are usually set by Message Queuing.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.ConnectorType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Gets or sets the message identifier used by acknowledgment, report, and response messages to reference the original message.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>When Message Queuing generates an acknowledgment or report message, it uses the correlation identifier property to specify the message identifier of the original message.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this manner, the correlation identifier ties the report or acknowledgment message to the original message.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sending application can then match the acknowledgment or report with the original message by using the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property to identify the original message's <ph id="ph2">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Connector applications also must set the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of the acknowledgment and report messages to the message identifier of the original message.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>When your application sends a response message to the sending application, you can set the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of the response message to the message identifier of the original message.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sending application can then match your response message to the message that was sent.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>The message identifier specified by the <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property of the original message.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The correlation identifier is used by Message Queuing when it generates an acknowledgment or report message, and by an application when it generates a response message.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.CorrelationId"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>Gets the intended destination queue for a message.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.DestinationQueue%2A&gt;</ph> property is most commonly used to determine the original destination of a message that arrived in a journal or dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Usually, you do not need to examine this property, because you typically retrieve the message from its destination queue.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> that specifies the intended destination queue for the message.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.DestinationQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Gets or sets the symmetric key used to encrypt application-encrypted messages or messages sent to foreign queues.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two scenarios require you to use the <ph id="ph1">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first is when your application, rather than Message Queuing, encrypts a message.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second is when you send an encrypted message to a queuing system other than Message Queuing.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before you set this property, you must encrypt the symmetric key with the public key of the receiving queue manager.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you send an application-encrypted message, the receiving queue manager uses the symmetric key to decrypt the message before sending it to its destination queue.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send a message to a foreign queue, the message is first received by the appropriate connector application, which forwards the encrypted message with the attached symmetric key to the receiving application.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is then the responsibility of the receiving application to decrypt the message using the symmetric key.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property, you must also set the <ph id="ph2">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the message is sent, Message Queuing ignores the <ph id="ph1">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property if the <ph id="ph2">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property is not also set.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.DestinationSymmetricKey%2A&gt;</ph> property has a maximum array size of 256.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>An array of byte values that specifies the destination symmetric key used to encrypt the message.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The default is a zero-length array.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.DestinationSymmetricKey"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.DestinationSymmetricKey"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets or sets the digital signature that Message Queuing uses to authenticate the message.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing uses the digital signature when authenticating messages that were sent by Message Queuing version 1.0.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, Message Queuing generates and sets the <ph id="ph1">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property when the sending application requests authentication.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>The receiving application uses this property to retrieve the digital signature attached to the message.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only use the <ph id="ph1">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property when running Message Queuing version 2.0.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sending application must specify Message Queuing version 1.0 signatures when requesting authentication.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the sending application sends a Message Queuing version 2.0 signature, this property contains a buffer of four bytes, each containing zero.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property, together with the <ph id="ph2">&lt;xref:System.Messaging.Message.SenderCertificate%2A&gt;</ph> property, is also used by connector applications when a message is sent.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this scenario, the connector applicationâ€”rather than Message Queuingâ€”generates the digital signature, which it bases on the certificate of the user sending the message.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property has a maximum array size of 256.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property, you must also set the <ph id="ph2">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message is sent, Message Queuing ignores the <ph id="ph1">&lt;xref:System.Messaging.Message.DigitalSignature%2A&gt;</ph> property if the <ph id="ph2">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property is not also set.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>An array of byte values that specifies the Message Queuing 1.0 digital signature used to authenticate the message.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The default is a zero-length array.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.DigitalSignature"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.DigitalSignature"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>Gets or sets the encryption algorithm used to encrypt the body of a private message.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is private (encrypted), it is encrypted before it is sent and decrypted upon receipt.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.EncryptionAlgorithm%2A&gt;</ph> property specifies the algorithm used to encrypt the message body of a private message.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>A queue can require that incoming messages be encrypted.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application sends a non-encrypted (non-private) message to a queue that accepts only private messages, or if it sends a private message to a queue that accepts only non-private messages, the queue rejects the message.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sending application can request that a negative acknowledgment message be returned in such a case.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.EncryptionAlgorithm"&gt;&lt;/xref&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`RC2`</ph>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.EncryptionAlgorithm"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Gets or sets additional, application-defined information associated with the message.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property provides for application-defined information, like a large binary object, that is associated with the message.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the receiving application to interpret the contents of the <ph id="ph1">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Where possible, you should include message data in the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property of the message rather than the <ph id="ph2">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with foreign queues, use the <ph id="ph1">&lt;xref:System.Messaging.Message.Extension%2A&gt;</ph> property to specify message properties that do not exist in Message Queuing.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>A foreign queue exists in a queuing system other than Microsoft Message Queuing.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing communicates with such queues through a connector application.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>An array of byte values that provides application-defined information associated with the message.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The default is a zero-length array.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Extension"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Extension"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Gets or sets the formatter used to serialize an object into or deserialize an object from the message body.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property when reading and writing a message.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message is sent to the queue, the formatter serializes the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property into a stream that can be sent to the message queue.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>When reading from a queue, the formatter deserializes the message data into the <ph id="ph1">&lt;xref:System.Messaging.Message.Body%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless you write the contents of the message directly to the <ph id="ph1">&lt;xref:System.Messaging.Message.BodyStream%2A&gt;</ph> property, set the <ph id="ph2">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property before you send the message.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.Send%2A&gt;</ph> method is called on the <ph id="ph2">&lt;xref:System.Messaging.MessageQueue&gt;</ph> instance, the body is serialized using the formatter contained in the <ph id="ph3">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you send the message without specifying a value for the <ph id="ph1">&lt;xref:System.Messaging.Message.Formatter%2A&gt;</ph> property, the formatter defaults to <ph id="ph2">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.XmlMessageFormatter&gt;</ph> is loosely coupled, so it is not necessary to have the same object type on the sender and receiver when using this format.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.BinaryMessageFormatter&gt;</ph> serialize the data into binary representation.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.ActiveXMessageFormatter&gt;</ph> is used when sending or receiving COM components.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.IMessageFormatter"&gt;&lt;/xref&gt;</ph> that produces a stream to be written to or read from the message body.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Messaging.XmlMessageFormatter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.Message.Formatter"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Gets or sets the hashing algorithm that Message Queuing uses when authenticating a message or creating a digital signature for a message.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the source computer, Message Queuing uses the hashing algorithm when creating a digital signature for a message.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target Queue Manager then uses the same hashing algorithm to authenticate the message when it is received.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.HashAlgorithm"&gt;&lt;/xref&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>For Windows XP, the default is <ph id="ph1">`SHA`</ph>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Otherwise, the default is <ph id="ph1">`MD5`</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.HashAlgorithm"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Gets the message's identifier.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing generates a message identifier when the message is sent.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The identifier is composed of 20 bytes and includes two items: the machine <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the sending computer and a unique identifier for the message on the computer.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The combination of the two items produces a message identifier that is unique on the network.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing generates message identifiers for all messagesâ€”including acknowledgment and report messages.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>An acknowledgment message is generally sent by Message Queuing in reaction to the arrival or failure of an original, sent message.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can find the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property value of the original message in the <ph id="ph2">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of an acknowledgment message.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property when sending a response message to a response queue.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>To include the identifier of the original message in a response message, set the <ph id="ph1">&lt;xref:System.Messaging.Message.CorrelationId%2A&gt;</ph> property of the response message to the <ph id="ph2">&lt;xref:System.Messaging.Message.Id%2A&gt;</ph> property of the original message.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application reading the response message can then use the correlation identifier of the response message to identify the original message.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The message's unique identifier, which is generated by Message Queuing.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Id"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Specifies that no time-out exists.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> require a value that specifies a time-out.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the former, the time-out is the maximum time allowed for a message to be received from the queue.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the latter, the time-out is the time allowed for a message to reach the queue.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>In both cases, you can specify the time-out as a number of seconds or use <ph id="ph1">&lt;xref:System.Messaging.Message.InfiniteTimeout&gt;</ph> to indicate that no time-out exists.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the message was the first message sent in a transaction.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receiving applications use the <ph id="ph1">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> property to verify that a message was the first message sent in a single transaction to a single queue.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available only with Message Queuing version 2.0 and later.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>To verify transaction boundaries, you can use the <ph id="ph1">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> property along with two other properties: <ph id="ph2">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the former to check whether a message was the last message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>If only one message is sent in a transaction, the <ph id="ph1">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> properties are both set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message was the first message sent in a transaction; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.IsFirstInTransaction"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the message was the last message sent in a transaction.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receiving applications use the <ph id="ph1">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> property to verify that a message was the last message sent in a single transaction to a single queue.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available only with Message Queuing version 2.0 and later.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>To verify transaction boundaries, you can use the <ph id="ph1">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> property along with two other properties: <ph id="ph2">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the former to check whether a message was the first message sent in the transaction, and use the latter to retrieve the identifier of the transaction.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>If only one message is sent in a transaction, the <ph id="ph1">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> properties are both set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message was the last message sent in a single transaction; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.IsLastInTransaction"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Gets or sets an application-defined Unicode string that describes the message.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a message label for several purposes.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use it for display purposes or to selectively process messages based on the label value.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The label does not need to be unique across messages.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message queue and message labels represent an application-defined value that can help identify the queue or message in human-readable terms.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the responsibility of the application to interpret the label contents, which have no intrinsic meaning to the Message Queuing application.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The label of the message.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Label"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Introduced in MSMQ 3.0.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Gets the message's lookup identifier.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property provides read-only access to a message's lookup identifier.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lookup identifier, introduced in MSMQ 3.0, is a 64-bit identifier that is generated by Message Queuing and assigned to each message when the message is placed in the queue.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lookup identifier is not the same as the message identifier that is generated when the message is sent.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing generates a lookup identifier for all messages that are placed in any queue, including application-generated destination, administration, and report queues, as well as system-generated journal, dead-letter, connector, and outgoing queues.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, this includes both messages sent by sending applications and by Message Queuing.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>The lookup identifier is unique to the queue and has no meaning outside the queue.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is sent to several destination queues, or if a copy of a message is stored in a computer journal or queue journal, each copy of the message will have its own lookup identifier when it is placed in its respective queue.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.LookupId%2A&gt;</ph> property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>A lookup identifier is used to read a specific message in the queue.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the lookup identifier of a message is known, the receiving application can call the <ph id="ph1">&lt;xref:System.Messaging.MessageQueue.PeekByLookupId%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Messaging.MessageQueue.ReceiveByLookupId%2A&gt;</ph> function to go directly to that message and peek at or retrieve it from the queue, unlike cursors that must start at the front of the queue and navigate towards the end of the queue,</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Obtaining the lookup identifiers of the messages in the queue is the responsibility of the application.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>One possible way to obtain the lookup identifiers is to create a trigger for the destination queue that invokes a component that caches the identifiers of each message as they are placed in the queue.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The message's lookup identifier, which is generated by Message Queuing and is unique to the queue where the message resides.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>MSMQ 3.0 is not installed.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.LookupId"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Gets the message type: <ph id="ph1">`Normal`</ph>, <ph id="ph2">`Acknowledgment`</ph>, or <ph id="ph3">`Report`</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing typically sets this property when it sends the message.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Message Queuing message can be one of the following types:</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Normal`</ph>, which is either a typical message sent from an application to a queue, or a response message returned to the sending application.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Acknowledgement`</ph>, which Message Queuing generates whenever the sending application requests one.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Message Queuing can generate positive or negative messages to indicate that the original message arrived or was read.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing returns the appropriate acknowledgment message to the administration queue specified by the sending application.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Report`</ph>, which Message Queuing generates whenever a report queue is defined at the source Queue Manager.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>When tracing is enabled, Message Queuing sends a report message to the Message Queuing report queue each time the original message enters or leaves a Message Queuing server.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.Message.MessageType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.MessageType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Gets or sets the message priority, which determines where in the queue the message is placed.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Priority%2A&gt;</ph> property affects how Message Queuing handles the message both while it is en route and once it reaches its destination.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>Higher-priority messages are given preference during routing and inserted toward the front of the destination queue.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages with the same priority are placed in the queue according to their arrival time.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set a meaningful priority only for non-transactional messages.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing automatically sets the priority for transactional messages to <ph id="ph1">`Lowest`</ph>, which causes transactional message priority to be ignored.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Messaging.MessagePriority"&gt;&lt;/xref&gt;</ph> values, which represent the priority levels of non-transactional messages.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`Normal`</ph>.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Priority"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the message is guaranteed to be delivered in the event of a computer failure or network problem.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.Recoverable%2A&gt;</ph> property indicates whether the delivery of a message is guaranteedâ€”even if a computer crashes while the message is en route to the destination queue.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>If delivery of a message is guaranteed, the message is stored locally at every step along the route, until the message is successfully forwarded to the next computer.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Messaging.Message.Recoverable%2A&gt;</ph> property to <ph id="ph2">`true`</ph> could affect throughput.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message is transactional, Message Queuing automatically treats the message as recoverable, regardless of the value of the <ph id="ph1">&lt;xref:System.Messaging.Message.Recoverable%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if delivery of the message is guaranteed (through saving the message to disk while en route); <ph id="ph2">`false`</ph> if delivery is not assured.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.Recoverable"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Gets or sets the queue that receives application-generated response messages.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.ResponseQueue%2A&gt;</ph> property identifies the queue that receives application-generated response messages, which the receiving application returns to the sending application.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sending application specifies response queues when the application sends its messages.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any available queue can be specified as a response queue.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages returned to the response queue are application-specific.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application must define the contents of the messages as well as the action to take upon receipt of a message.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Messaging.MessageQueue"&gt;&lt;/xref&gt;</ph> to which application-generated response messages are returned.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.ResponseQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Gets or sets the security context for a message.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Messaging.SecurityContext"&gt;&lt;/xref&gt;</ph> object that contains the security context for a message, if the property has previously been set; otherwise NULL.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Gets or sets the security certificate used to authenticate messages.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The receiving application uses the <ph id="ph1">&lt;xref:System.Messaging.Message.SenderCertificate%2A&gt;</ph> property when the message includes an external security certificate.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing can authenticate a message using either an internal or external security certificate.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing provides internal certificates, which are used to verify message integrity.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>A certification authority provides an external certificate, which you can access through the <ph id="ph1">&lt;xref:System.Messaging.Message.SenderCertificate%2A&gt;</ph> property of the message.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to allowing Message Queuing to authenticate the message, an external certificate allows the receiving application to further verify the sender.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>An internal certificate has no usable value to a receiving application.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>An external certificate must be registered with the directory service of the Message Queuing system.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>An external certificate contains information about the certification authority, the certificate user, the validity period of the certificate, the public key of the certificate user, and the certification authority's signature.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>An array of byte values that represents a security certificate, which Message Queuing uses to verify the sender of the message.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The default is a zero-length array.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.SenderCertificate"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Gets the identifier of the sending user.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.Message.AttachSenderId%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the sender identifier specified in the <ph id="ph3">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property is not attached to the message when it is sent.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indicates to Message Queuing that the sender should not be validated when it sends the message to the destination queue.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.Message.AttachSenderId%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property value is trustworthy only if the message was authenticated.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Messaging.Message.Authenticated%2A&gt;</ph> property in conjunction with the <ph id="ph2">&lt;xref:System.Messaging.Message.SenderId%2A&gt;</ph> property to verify the sender's access rights.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>A connector application is an application that uses a connector server to provide communication between Message Queuing and other queuing systems.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing requires connector applications to provide sender identification.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Messaging.Message.ConnectorType%2A&gt;</ph> property when sending a message through a connector application.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>An array of byte values that identifies the sender.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The receiving Queue Manager uses the identifier when it authenticates the message to verify the sender of the message and the sender's access rights to the queue.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.SenderId"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets the version of Message Queuing used to send the message.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.SenderVersion%2A&gt;</ph> property is important for certain features.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, transaction processing is supported only by Message Queuing 2.0 and later, and digital signatures are used to authenticate messages sent by MSMQ 1.0.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sending Queue Manager sets the <ph id="ph1">&lt;xref:System.Messaging.Message.SenderVersion%2A&gt;</ph> property when the message is sent.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>The version of Message Queuing used to send the message.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.SenderVersion"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Gets the date and time on the sending computer that the message was sent by the source queue manager.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.SentTime%2A&gt;</ph> property is adjusted to the local time of the computer on which this instance of the <ph id="ph2">&lt;xref:System.Messaging.Message&gt;</ph> class was created.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>This time zone could be different from those of the source and destination queues.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> that represents the time the message was sent.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.SentTime"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>Gets the computer from which the message originated.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of the <ph id="ph1">&lt;xref:System.Messaging.Message.SourceMachine%2A&gt;</ph> property does not include preceding two forward slashes (<ph id="ph2">\\</ph><ph id="ph3">\\</ph>).</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`myServer`</ph> is a valid <ph id="ph2">&lt;xref:System.Messaging.Message.SourceMachine%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The name of the computer from which the message was sent.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.SourceMachine"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The computer information or directory service could not be accessed.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum amount of time for the message to be received from the destination queue.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property specifies the total time for a sent message to be received from the destination queue.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time limit includes the time spent getting to the destination queue and the time spent waiting in the queue before the message is received.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using dependent client computers, be sure the clock on the client computer is synchronized with the clock on the server that is running Message Queuing.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, unpredictable behavior might result when sending a message whose <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property is not <ph id="ph2">&lt;xref:System.Messaging.Message.InfiniteTimeout&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval specified by the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property expires before the message is removed from the queue, Message Queuing discards the message in one of two ways.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message's <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the message is sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the message is ignored.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the message's <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message is not retrieved before the timer expires.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value specified by the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property is less than the value specified by the <ph id="ph2">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> takes precedence.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>When several messages are sent in a single transaction, Message Queuing uses the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property of the first message.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The total time for a sent message to be received from the destination queue.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Messaging.Message.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.TimeToBeReceived"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The value specified for <ph id="ph1">&lt;xref href="System.Messaging.Message.TimeToBeReceived"&gt;&lt;/xref&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum amount of time for the message to reach the queue.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interval specified by the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property expires before the message reaches its destination, Message Queuing discards the message in one of two ways.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the message's <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the message is sent to the dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the message is ignored</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set he message's <ph id="ph1">&lt;xref:System.Messaging.Message.AcknowledgeType%2A&gt;</ph> property to request that Message Queuing send a negative acknowledgment message back to the sending application if the message does not arrive before the timer expires.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property is set to 0 seconds, Message Queuing tries once to send the message to its destinationâ€”if the queue is waiting for the message.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the queue is local, the message always reaches it.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value specified by the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property is greater than the value specified by the <ph id="ph2">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> property, <ph id="ph3">&lt;xref:System.Messaging.Message.TimeToBeReceived%2A&gt;</ph> takes precedence.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>When several messages are sent in a single transaction, Message Queuing uses the <ph id="ph1">&lt;xref:System.Messaging.Message.TimeToReachQueue%2A&gt;</ph> property of the first message.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The time limit for the message to reach the destination queue, beginning from the time the message is sent.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Messaging.Message.InfiniteTimeout"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.TimeToReachQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The value specified for <ph id="ph1">&lt;xref href="System.Messaging.Message.TimeToReachQueue"&gt;&lt;/xref&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>It might represent a negative number.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>Gets the identifier for the transaction of which the message was a part.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>Receiving applications use the <ph id="ph1">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph> property to verify that a message was sent as part of a specific transaction.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction identifier contains the identifier of the sending computer (first 16 bits) followed by a 4-byte transaction sequence number.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is available only for Message Queuing version 2.0 and later.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>Transaction identifiers are not guaranteed to be unique, because transaction sequence numbers are not persistent, and they start over again at 2 <bpt id="p1">&lt;sup&gt;</bpt>20<ept id="p1">&lt;/sup&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing guarantees only that subsequent transactions will have different transaction sequence numbers.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Messaging.Message.TransactionId%2A&gt;</ph> property along with the <ph id="ph2">&lt;xref:System.Messaging.Message.IsFirstInTransaction%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Messaging.Message.IsLastInTransaction%2A&gt;</ph> properties to verify transaction boundaries.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>The identifier for the transaction associated with the message.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.TransactionId"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Gets the transaction status queue on the source computer.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.TransactionStatusQueue%2A&gt;</ph> property identifies the transactional queue on the source computer that receives read-receipt acknowledgments from connector applications.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing sets the property, and connector applications use the property when retrieving transactional messages sent to foreign queues.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>A foreign queue exists in a queuing system other than Microsoft Message Queuing.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing communicates with such queues through a connector application.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connector application can use the transaction status queue to send acknowledgment messages back to the sending application.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transaction status queue should receive these acknowledgments even if the sending application does not request other acknowledgments.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The transaction status queue on the source computer, which is used for sending acknowledgement messages back to the sending application.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The message has not been sent.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>This property can only be read on messages retrieved from a queue.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.TransactionStatusQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the message was (or must be) authenticated before being sent.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.UseAuthentication%2A&gt;</ph> property specifies whether the message needs to be authenticated.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the sending application requests authentication, Message Queuing creates a digital signature and uses it to sign the message when it is sent and authenticate the message when it is received.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.Message.UseAuthentication%2A&gt;</ph> is <ph id="ph2">`false`</ph> and a message is sent to a queue that accepts only authenticated messages, the message will be rejected when it reaches the queue.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot determine if a message failed authentication by looking at its properties.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing discards such messages before they are delivered to the queue.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can request that an acknowledgment message be sent if a delivery failure prevents a message from arriving in the queue.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the sending application requested authentication for the message; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.UseAuthentication"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a copy of the message that could not be delivered should be sent to a dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.UseJournalQueue%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> properties specify how Message Queuing tracks a message.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> is <ph id="ph2">`true`</ph>, delivery failure (of a non-transactional message), causes the message to be sent to the non-transactional dead-letter queue on the computer that could not deliver the message.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>Delivery failure could be caused by a message timer expiring, for example.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of delivery failure for a transactional message, Message Queuing sends the message to the transactional dead-letter queue on the source machine in all negative and in-doubt cases.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you store messages in a dead-letter queue, you should clear the queue periodically to remove messages that are no longer needed.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages stored in dead-letter queues count against the size quota for the computer where the queue resides.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>The computer quota is set by the administrator and refers to the size allocated for storing messages on the whole computer, not just in a single queue.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not create a journal or dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are both system queues that Message Queuing generates.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if message-delivery failure should result in a copy of the message being sent to a dead-letter queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.UseDeadLetterQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to make the message private.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a message is private, its body is encrypted before it is sent and decrypted when it is received.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>To send a private message, the sending application must specify that encryption be used and, optionally, the encryption algorithm.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sending private messages, your application does not need to perform the message encryption.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message Queuing can encrypt the message body for you if your application is sending messages within a Microsoft Windows 2000 enterprise, which has access to the directory service.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>When receiving private messages, the receiving Queue Manager always decrypts the message body.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to require Message Queuing to encrypt the message; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.UseEncryption"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether a copy of the message should be kept in a machine journal on the originating computer.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.UseJournalQueue%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Messaging.Message.UseDeadLetterQueue%2A&gt;</ph> properties specify how Message Queuing tracks a message.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Messaging.Message.UseJournalQueue%2A&gt;</ph> is <ph id="ph2">`true`</ph>, then a copy is kept in the computer journal on the originating machine at each step that a message is transmitted.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>The sent message is only copied to the journal queue if the destination queue is on a remote computer.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the destination is on the local computer, the message is sent directly to the queue; there are no intermediate steps to require journaling.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you store messages in a journal queue, clear the queue periodically to remove messages that are no longer needed.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages stored in journal queues count against the quota for the computer where the queue resides.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The computer quota is set by the administrator.)</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not create a journal or dead-letter queue.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are both system queues that Message Queuing generates.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to require that a copy of a message be kept in the originating computer's machine journal after the message has been successfully transmitted (from the originating computer to the next server); otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.UseJournalQueue"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to trace a message as it moves toward its destination queue.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Messaging.Message.UseTracing%2A&gt;</ph> property specifies whether to track the route of a message as it moves toward its destination queue.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`true`</ph>, a report message (generated by Message Queuing) is sent to a report queue each time the message passes through a Message Queuing routing server.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The report queue is specified by the source Queue Manager.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>Report queues are not limited to report messages generated by Message Queuing; your application-generated messages can also be sent to report queues.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using tracing involves setting up Active Directory and specifying a report queue for the Message Queuing enterprise.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>The administrator configures these settings.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if each intermediate step made by the original message en route to the destination queue generates a report to be sent to the system's report queue; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The message queue is filtered to ignore the <ph id="ph1">&lt;xref href="System.Messaging.Message.UseTracing"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>