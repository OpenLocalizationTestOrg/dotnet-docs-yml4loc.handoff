<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">50b844226ce0a4261a394643211df04c0c8c70e6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Animation.MatrixAnimationUsingPath.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f2a990bc2c3c237e1888adc53d7a3d5fc6ccf57</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0f1ea4cf67ad9c6721bf731452562f3e0a041c40</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Animates the value of a <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> property by using a <ph id="ph2">&lt;xref href="System.Windows.Media.PathGeometry"&gt;&lt;/xref&gt;</ph> to generate the animated values.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This animation can be used to move a visual object along a path.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath&gt;</ph> enables you to animate the angle and position of an object with a single animation and <ph id="ph2">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.Animation.PointAnimationUsingPath&gt;</ph> animates its target by using linear interpolation over the specified <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is no default <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph>, so the user must specify one.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property will be <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property was <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The new instance.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the object rotates along the tangent of the path.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use property when you want the animated object to appear to "slide" along the animation path.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the object will rotate along the tangent of the path; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Calculates a value that represents the current value of the property being animated, as determined by the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`defaultOriginValue`</ph> is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> that is not <ph id="ph3">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`defaultDestinationValue`</ph> is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The suggested origin value, used if the animation does not have its own explicitly set start value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The suggested destination value, used if the animation does not have its own explicitly set end value.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.AnimationClock"&gt;&lt;/xref&gt;</ph> that generates the <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.Clock.CurrentTime"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Media.Animation.Clock.CurrentProgress"&gt;&lt;/xref&gt;</ph> used by the animation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The calculated value of the property, as determined by the current animation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This dependency property is unusual because the identifier field for it comes from <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph> and is shared by various derived classes.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the target property's current value should be added to this animation's starting value; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the rotation angle of the animated matrix will accumulate as the animation repeats.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When combined with an <ph id="ph1">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A&gt;</ph> of <ph id="ph2">`true`</ph>, your object might appear to tumble while it bounces (depending on the path you specify).</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For related information, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect if <ph id="ph1">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> setting; it does not cause the offset to accumulate when the animation is restarted.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how to make an animation build off a previous animation's values, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the animation's rotation angle should accumulate over repetitions; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the offset of the animated matrix will accumulate as the animation repeats.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> setting; it does not cause the offset to accumulate when the animation is restarted.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information on how to make an animation build off a previous animation's values, see <ph id="ph1">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the object will accumulate over repeats of the animation; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Called when this <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath"&gt;&lt;/xref&gt;</ph> is modified.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets or sets the geometry used to generate this animation's output values.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Geometry Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dependency Property Information</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Identifier field</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The geometry used to generate this animation's output values.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>