<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd5e2c6ca83f843b2ab2d4e30fdd28cfa6b26e98</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.Configuration.MachineKeyValidation.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0ecd79fe988c7337fbf60b5ca208fde0501b1237</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">63a0f3a64ad3d9eea525c1ba5f655093085f525a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the hashing algorithm that ASP.NET uses for forms authentication and for validating view state data, and for out-of-process session state identification.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET uses a hash-based message authentication code (HMAC) to help detect whether data that is used for forms authentication or view state has been tampered with.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC is generated when view state content is created, and the HMAC is checked on subsequent requests.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HMAC helps ASP.NET determine whether someone has changed data that is sent between the server and the client, but the data can be read by anyone as it travels through the Internet unless it is also encrypted.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, view state is validated but not encrypted.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Page.RegisterRequiresViewStateEncryption%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.MachineKeyValidation&gt;</ph> enumeration lets you specify the algorithm that ASP.NET uses to create the HMAC.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is HMACSHA256.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET uses the value of the <ph id="ph1">&lt;xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A&gt;</ph> property with the selected algorithm to generate the HMAC.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the <ph id="ph1">`AES`</ph> (Rijndael) encryption algorithm.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Choose this option if you want to encrypt view state in your Web application.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you choose this option, the <ph id="ph1">&lt;xref:System.Web.Configuration.MachineKeySection.DecryptionKey%2A&gt;</ph> property will be used for encryption and decryption, and the <ph id="ph2">`HMACSHA1`</ph> hash algorithm will be used with the <ph id="ph3">&lt;xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A&gt;</ph> property for validation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses a custom hashing algorithm.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The custom hashing algorithm can be implemented in any class that derives from <ph id="ph1">&lt;xref:System.Security.Cryptography.KeyedHashAlgorithm&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The custom algorithm is typically specified declaratively in the validation attribute of the  element, in the format <ph id="ph1">`alg:`</ph><bpt id="p1">*</bpt>algorithm_name<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to specify a custom algorithm in code, see the <ph id="ph1">&lt;xref:System.Web.Configuration.MachineKeySection.ValidationAlgorithm%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the <ph id="ph1">`HMACSHA256`</ph> hashing algorithm.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This is the default value.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`HMACSHA256`</ph> is an SHA2 hashing algorithm that generates a 256-bit hash code.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the <ph id="ph1">`HMACSHA384`</ph> hashing algorithm.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`HMACSHA384`</ph> is an SHA2 hashing algorithm that generates a 384-bit hash code.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is available for applications that require stronger security than is provided by the <ph id="ph1">`HMACSHA256`</ph> algorithm.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the <ph id="ph1">`HMACSHA512`</ph> hashing algorithm.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`HMACSHA512`</ph> is an SHA2 hashing algorithm that generates a 512-bit hash code.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is available for applications that require stronger security than is provided by the <ph id="ph1">`HMACSHA384`</ph> algorithm.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the Message Digest 5 (<ph id="ph1">`MD5`</ph>) hashing algorithm.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`MD5`</ph> is a hashing algorithm that generates a 128-bit hash value.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is included for legacy purposes and should be selected only if compatibility with earlier versions of ASP.NET is required.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the <ph id="ph1">`HMACSHA1`</ph> hash algorithm.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`HMACSHA1`</ph> is a hashing algorithm that generates a 160-bit hash value.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is included for legacy purposes and should be selected only if compatibility with earlier versions of ASP.NET is required.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Specifies that ASP.NET uses the TripleDES (<ph id="ph1">`3DES`</ph>) encryption algorithm.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>TripleDES is an encryption algorithm that is used only if you specify that view state is encrypted.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This option is included for legacy purposes and should be selected only if compatibility with earlier versions of ASP.NET is required.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>