<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1c0ce867ba131c30ee3f4d3fbd6f7cff658bcb00</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.OleDb.OleDbConnectionStringBuilder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e482dbc5df2cb3066e7744ef528abd41135a5451</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a650bc69e53f000e2e8c9eabc1f40a4e78fd4fb</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple way to create and manage the contents of connection strings used by the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, using properties and methods of the class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The connection string builder provides strongly typed properties corresponding to the known key/value pairs allowed by OLE DB connections, and developers can add arbitrary key/value pairs for any other connection string values.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the class works with Visual Studio .NET designers at design time.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When developers use the designer to build strongly typed DataSets and strongly typed connections within Visual Studio .NET, the strongly typed connection string builder class will display the properties associated with its type and will also have converters that can map common values for known keys.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers needing to create connection strings as part of applications can use the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class to build and modify connection strings.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class also makes it easy to manage connection strings stored in an application configuration file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> performs checks only for the limited set of known key/value pairs.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, this class can be used to create invalid connection strings.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the known keys and their corresponding properties within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> class, and their default values.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Besides these specific values, developers can add any key/value pairs to the collection that is contained within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>File Name</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>""</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Provider</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>""</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data Source</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>""</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Persist Security Info</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>False</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>OLE DB Services</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>-13</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> property handles attempts to insert malicious entries.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the following code, using the default <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Item%2A&gt;</ph> property (the indexer, in C#) correctly escapes the nested key/value pair:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result is the following connection string that handles the invalid value in a safe manner:</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The provided connection string provides the data for the instance's internal connection information.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property, either directly (by setting the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property) or by passing a connection string as a parameter to the constructor, may affect the set of key/value pairs that are contained within the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property to "sqloledb," for example, adds all the standard SQL connection string properties.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for a demonstration of this behavior.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For some providers, assigning a connection string within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> constructor causes the order of supplied key/value pairs to be rearranged.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The basis for the object's internal connection information.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Parsed into key/value pairs.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Clears the contents of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Clear%2A&gt;</ph> method removes all key/value pairs from the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph>, and resets all corresponding properties to their default values.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes setting the <ph id="ph1">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Count%2A&gt;</ph> property to 0, and setting the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property to an empty string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains a specific key.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property may implicitly fill in appropriate key/value pairs for the provider, the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.ContainsKey%2A&gt;</ph> method does not return <ph id="ph3">`true`</ph> for implicitly provided keys.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> only for explicitly provided keys.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The key to locate in the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>true if the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> contains an element that has the specified key; otherwise false.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is null (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the data source to connect to.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.DataSource%2A&gt;</ph> property is reset.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the "Data Source" key within the connection string.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder.DataSource"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph2">`String.Empty`</ph> if none has been supplied.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the Universal Data Link (UDL) file for connecting to the data source.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.FileName%2A&gt;</ph> property is reset.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the "FileName" key within the connection string.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property does not cause the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance to read the contents of the referenced file, even if the file exists and contains valid connection information.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect other than to indicate the file to read when connecting to the data source.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder.FileName"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph2">`String.Empty`</ph> if none has been supplied.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>In C#, this property is the indexer.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property may add corresponding items to the collection of key/value pairs (depending on the behavior of the specific provider), you may be able to retrieve a value for a key you have not set explicitly.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, as soon as you have set the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property to "sqloledb," you can retrieve the "Workstation ID" value even if you have not set it yourself.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for a demonstration.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The key of the item to get or set.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The value associated with the specified key.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The connection string is incorrectly formatted (perhaps missing the required "=" within a key/value pair).</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is a null reference (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The order of the values in the <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> is unspecified, but it is the same order as the associated values in the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph> returned by the <ph id="ph3">&lt;xref:System.Data.Common.DbConnectionStringBuilder.Values%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> that contains the keys in the <ph id="ph2">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets the value to be passed for the OLE DB Services key within the connection string.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The OLE DB Services key within the connection string defines a combination of values that let developers enable or disable OLE DB services.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property contains a bitwise combination of values, described in the OLE DB documentation.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about appropriate values for this property, see the OLE DB Programmer's Reference, in particular, "Overriding Provider Service Defaults."</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for this property is -13.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This corresponds to a request for resource pooling, automatic transaction enlistment, session-level aggregation, and no client cursor engine.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns the value corresponding to the OLE DB Services key within the connection string.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>By default, the value is -13.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that indicates whether security-sensitive information, such as the password, is returned as part of the connection if the connection is open or has ever been in an open state.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the "Persist Security Info" key within the connection string.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder.PersistSecurityInfo"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph2">`false`</ph> if none has been supplied.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that contains the name of the data provider associated with the internal connection string.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value passed in is null when you try to set the property, the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property is reset.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value has not been set and the developer tries to retrieve the property, the return value is <ph id="ph1">`String.Empty`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the "Provider" key within the connection string.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the value of the <ph id="ph1">`Provider`</ph> property, either directly (by setting the <ph id="ph2">&lt;xref:System.Data.Common.DbConnectionStringBuilder.ConnectionString%2A&gt;</ph> property) or by passing a connection string as a parameter to the constructor, may affect the set of key/value pairs that are contained within the <ph id="ph3">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Provider%2A&gt;</ph> property to "sqloledb," for example, adds all the standard SQL connection string properties.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the example in this topic for a demonstration of this behavior.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>For some providers, assigning a connection string within the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> constructor causes the order of supplied key/value pairs to be rearranged.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder.Provider"&gt;&lt;/xref&gt;</ph> property, or <ph id="ph2">`String.Empty`</ph> if none has been supplied.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Removes the entry with the specified key from the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.Remove%2A&gt;</ph> method returns a value that indicates its success, it is not required to look for the existence of a key before trying to remove the key/value pair from the <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The key of the key/value pair to be removed from the connection string in this <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key existed within the connection string and was removed, <ph id="ph2">`false`</ph> if the key did not exist.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> is null (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Retrieves a value corresponding to the supplied key from the <ph id="ph1">&lt;xref href="System.Data.OleDb.OleDbConnectionStringBuilder"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> method lets developers safely retrieve a value from a <ph id="ph2">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder&gt;</ph> without needing to verify that the supplied key name is a valid key name.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> does not raise an exception when you call it, passing in a nonexistent key, you do not have to look for a key before retrieving its value.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Data.OleDb.OleDbConnectionStringBuilder.TryGetValue%2A&gt;</ph> with a nonexistent key will place the value null (<ph id="ph2">`Nothing`</ph> in Visual Basic) in the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The key of the item to retrieve.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The value corresponding to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyword.</ph><ept id="p1">&lt;/code&gt;</ept></source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">keyword</ph><ept id="p1">&lt;/code&gt;</ept> was found within the connection string; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;keyword&lt;/code&gt;</ph> contains a null value (<ph id="ph2">`Nothing`</ph> in Visual Basic).</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>