<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88750f4a3ca40285f1644ffbf47e7bdca2d232ff</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.VirtualPathUtility.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7154aa29ae156291bb556ba8a75ad61d8c3ce7bb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43a480fd2161516cbcffcbc7fc0ef9fa252e2cb3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides utility methods for common virtual path operations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility&gt;</ph> class provides utility methods for common operations involving virtual paths.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For ASP.NET server controls and server code, virtual paths using the Web application root operator, the tilde (~), commonly are used instead of relative and absolute paths.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Web Project Paths<ept id="p1">](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility&gt;</ph> class when you need to convert application-relative paths to absolute virtual paths, as might be the case in developing a custom Web service handler.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>An absolute virtual path starts with the literal slash mark (/).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A relative virtual path is relative to the application root directory, if it is just a tilde (~) or starts with the tilde and a double backslash (~<ph id="ph1">\\</ph><ph id="ph2">\\</ph>) or the tilde and a slash mark (~/).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Making a virtual path relative makes the path independent of the application.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual directory for the application can be obtained from the <ph id="ph1">&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpRequest.ApplicationPath%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility&gt;</ph> class is not intended for security or canonicalization purposes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Web application security, see <bpt id="p1">[</bpt>Overview of Web Application Security Threats<ept id="p1">](http://msdn.microsoft.com/library/88d61678-f84e-4622-ae80-53128821855a)</ept>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For generic URL processing functionality, see <ph id="ph1">&lt;xref:System.Uri&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Appends the literal slash mark (/) to the end of the virtual path, if one does not already exist.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the literal slash mark (/) exists at the end of the virtual path, the virtual path is not modified.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The virtual path to append the slash mark to.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The modified virtual path.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Combines a base path and a relative path.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.Combine%2A&gt;</ph> method returns the value of the <ph id="ph2">&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;</ph> property if the relative path is exactly a tilde (~).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.Combine%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;</ph> property value rather than the base path, if the relative path starts with a tilde and a slash mark (~/); otherwise, the <ph id="ph3">&lt;xref:System.Web.VirtualPathUtility.Combine%2A&gt;</ph> method uses the base path.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The base path.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The relative path.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The combined <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">basePath</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">relativePath</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph> is a physical path.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph> includes one or more colons.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;relativePath&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or an empty string.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;basePath&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or an empty string.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the directory portion of a virtual path.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> is not rooted; that is, it does not equal the root operator (the tilde [~]), does not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or does not start with a slash mark (/), an <ph id="ph2">&lt;xref:System.ArgumentException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual path that is passed into the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.GetDirectory%2A&gt;</ph> method is <ph id="ph2">`"/images/image1.gif"`</ph>, the returned directory is <ph id="ph3">`"/images"`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The virtual path.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The directory referenced in the virtual path.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is not rooted.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or an empty string.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Retrieves the extension of the file that is referenced in the virtual path.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual path that is passed into the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.GetExtension%2A&gt;</ph> method is <ph id="ph2">`"/images/image1.gif"`</ph>, the returned extension is <ph id="ph3">`".gif"`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The virtual path.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The file name extension string literal, including the period (.), <ph id="ph1">`null`</ph>, or an empty string ("").</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> contains one or more characters that are not valid, as defined in <ph id="ph2">&lt;xref href="System.IO.Path.InvalidPathChars"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Retrieves the file name of the file that is referenced in the virtual path.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual path that is passed into the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.GetFileName%2A&gt;</ph> method is <ph id="ph2">`"/images/image1.gif"`</ph>, the returned file name is <ph id="ph3">`"image1.gif"`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The virtual path.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The file name literal after the last directory character in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, the last directory name if the last character of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">virtualPath</ph><ept id="p2">&lt;/code&gt;</ept> is a directory or volume separator character.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> contains one or more characters that are not valid, as defined in <ph id="ph2">&lt;xref href="System.IO.Path.InvalidPathChars"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value indicating whether the specified virtual path is absolute; that is, it starts with a literal slash mark (/).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>A virtual path is absolute if it begins with a literal slash mark (/).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Path%2A&gt;</ph> property returns an absolute virtual path.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The virtual path to check.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept> is an absolute path and is not <ph id="ph3">`null`</ph> or an empty string (""); otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a Boolean value indicating whether the specified virtual path is relative to the application.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The virtual path can be just the root operator (the tilde [~]), or it can begin with the root operator.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> is <ph id="ph2">`null`</ph>, an <ph id="ph3">&lt;xref:System.ArgumentNullException&gt;</ph> exception is raised.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> is an empty string (""), the <ph id="ph2">&lt;xref:System.Web.VirtualPathUtility.IsAppRelative%2A&gt;</ph> method returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `"~`</ph> <ph id="ph2">`filename`</ph> <ph id="ph3">`"`</ph> is not a valid virtual path and returns <ph id="ph4">`false`</ph> for the <ph id="ph5">&lt;xref:System.Web.VirtualPathUtility.IsAppRelative%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The virtual path to check.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept> is relative to the application; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns the relative virtual path from one virtual path containing the root operator (the tilde [~]) to another.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fromPath`</ph> and <ph id="ph2">`toPath`</ph> parameters are not rooted; that is, they do not equal the root operator (the tilde [~]), do not start with a tilde (~), such as a tilde and a slash mark (~/) or a tilde and a double backslash (~//), or do not start with a slash mark (/), an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph> exception is thrown.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Query string parameters and HTML anchors that are used in the URI are not used in determining the relative path.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`fromPath`</ph> is <ph id="ph2">`"/directory1/file1.aspx"`</ph> and <ph id="ph3">`toPath`</ph> is <ph id="ph4">`"/directory2/file2.aspx"`</ph>, the <ph id="ph5">&lt;xref:System.Web.VirtualPathUtility.MakeRelative%2A&gt;</ph> method returns <ph id="ph6">`"../directory2/file2.aspx"`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The starting virtual path to return the relative virtual path from.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The ending virtual path to return the relative virtual path to.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The relative virtual path from <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fromPath</ph><ept id="p1">&lt;/code&gt;</ept> to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">toPath</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fromPath&lt;/code&gt;</ph> is not rooted.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;toPath&lt;/code&gt;</ph> is not rooted.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Removes a trailing slash mark (/) from a virtual path.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A&gt;</ph> method removes a slash mark (/) from the end of the virtual path.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual path is already the root directory (<ph id="ph1">`"/"`</ph>), no action is taken.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual path is <ph id="ph1">`null`</ph> or an empty string (""), the <ph id="ph2">&lt;xref:System.Web.VirtualPathUtility.RemoveTrailingSlash%2A&gt;</ph> method returns <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The virtual path to remove any trailing slash mark from.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A virtual path without a trailing slash mark, if the virtual path is not already the root directory ("/"); otherwise, <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application absolute path.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application absolute path is one where the application path is used instead of the root operator (the tilde [~]).</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> is:</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Absolute, the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method returns the virtual path unchanged.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application relative, the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method appends the current application virtual directory path to the beginning of the <ph id="ph2">`virtualPath`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the current application virtual directory path can be accessed from the <ph id="ph1">&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not rooted, the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method raises an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The absolute path representation of the specified virtual path.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is not rooted.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A leading double period (..) is used to exit above the top directory.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application absolute path using the specified application path.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method uses the supplied application path rather than the current application path.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> is:</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Absolute, the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method returns the virtual path with no changes.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Application relative, the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method adds <ph id="ph2">`applicationPath`</ph> to the beginning of the virtual path.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not rooted, the <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAbsolute%2A&gt;</ph> method raises an <ph id="ph2">&lt;xref:System.ArgumentOutOfRangeException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The application path to use to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept> to a relative path.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The absolute virtual path representation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;applicationPath&lt;/code&gt;</ph> is not rooted.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A leading double period (..) is used in the application path to exit above the top directory.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application-relative path using the application virtual path that is in the <ph id="ph1">&lt;xref href="System.Web.HttpRuntime.AppDomainAppVirtualPath"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the virtual path for the application is <ph id="ph1">`"myapp"`</ph> and the virtual path <ph id="ph2">`"/myApp/sub/default.asp"`</ph> is passed into the <ph id="ph3">&lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;</ph> method, the resulting application-relative path is <ph id="ph4">`"~/sub/default.aspx"`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> does not start with the current application path, the <ph id="ph2">&lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;</ph> method returns the virtual path unchanged.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> is the same as the application path, the root operator (the tilde [~]), is returned.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the current application virtual directory path can be accessed from the <ph id="ph1">&lt;xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The application-relative path representation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;virtualPath&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Converts a virtual path to an application-relative path using a specified application path.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;</ph> method uses <ph id="ph3">`applicationPath`</ph> rather than the current application path.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`virtualPath`</ph> does not start with <ph id="ph2">`applicationPath`</ph>, the <ph id="ph3">&lt;xref:System.Web.VirtualPathUtility.ToAppRelative%2A&gt;</ph> method returns the virtual path unchanged.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The virtual path to convert to an application-relative path.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The application path to use to convert <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept> to a relative path.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The application-relative path representation of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">virtualPath</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>