<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">afcb288b5ee5dd28b5aedbdabfa337703ca8e4fb</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.ServiceAuthorizationManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">292128053bf1ba90972a0591e0f89412e849176e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c223a33631ed51e4ffab7d3e7f6bb394a98fa9f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides authorization access checking for service operations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is responsible for evaluating all policies (rules that define what a user is allowed to do), comparing the policies to claims made by a client, setting the resulting <ph id="ph1">&lt;xref:System.IdentityModel.Policy.AuthorizationContext&gt;</ph> to the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph>, and providing the authorization decision whether to allow or deny access for a given service operation for a caller.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method is called by the <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure each time an attempt to access a resource is made.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method returns <ph id="ph1">`true`</ph> or <ph id="ph2">`false`</ph> to allow or deny access, respectively.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager&gt;</ph> is part of the <ph id="ph2">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph><bpt id="p1">*</bpt>Identity Model<ept id="p1">*</ept> infrastructure.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Identity Model enables you to create custom authorization policies and custom authorization schemes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> how the Identity Model works, see <bpt id="p1">[</bpt>Managing Claims and Authorization with the Identity Model<ept id="p1">](~/docs/framework/wcf/feature-details/managing-claims-and-authorization-with-the-identity-model.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom Authorization</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class does not perform any authorization and allows users to access all service operations.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide more restrictive authorization, you must create a custom authorization manager that checks custom policies.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, inherit from this class and override the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify the instance of the derived class through the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>, the application can use the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> object to access the caller identity (<ph id="ph3">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object, the application can access the service (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>), and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>By getting the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, which returns a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>) and perform the authorization decision accordingly.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Manager for a Service<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-manager-for-a-service.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create custom authorization policies, implement the <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Authorization Policy<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-authorization-policy.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a custom claim, use the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.Claim&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>How to: Create a Custom Claim<ept id="p1">](~/docs/framework/wcf/extending/how-to-create-a-custom-claim.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To compare custom claims, you must compare claims, as shown in <bpt id="p1">[</bpt>How to: Compare Claims<ept id="p1">](~/docs/framework/wcf/extending/how-to-compare-claims.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[crdefault](~/includes/crdefault-md.md)]</ph> <bpt id="p1">[</bpt>Custom Authorization<ept id="p1">](~/docs/framework/wcf/extending/custom-authorization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the type of a custom authorization manager using the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;serviceAuthorization<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md)</ept> in a client application configuration file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceAuthorizationManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Checks authorization for the given operation context.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccess%2A&gt;</ph> if the application associates or introduces a different set of policies for the resulting <ph id="ph2">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.OperationContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access is granted; otherwise; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Checks authorization for the given operation context when access to a message is required.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>In general, applications should override <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph> instead of this method, which should only be used if the authorization decision depends on the message body.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because of performance issues, if possible you should redesign your application so that the authorization decision does not require access to the message body.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method if the application associates or introduces a different set of policies for the resulting <ph id="ph1">&lt;xref:System.ServiceModel.ServiceSecurityContext&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> or provide a different policy evaluation (chaining) model.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is responsible for calling <ph id="ph1">&lt;xref:System.ServiceModel.ServiceAuthorizationManager.CheckAccessCore%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.OperationContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> to be examined to determine authorization.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access is granted; otherwise; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Checks authorization for the given operation context based on default policy evaluation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> is generally the result from the default policy evaluation.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to provide custom authorization decisions.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to make authorization decisions based on claim sets that are inferred based on incoming tokens, or added through external authorization policies.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can also make authorization decisions based on properties of the incoming message: for example, the action header.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this method, the application can use the <ph id="ph1">`operationContext`</ph> parameter to access the caller identity (<ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.RequestContext%2A&gt;</ph> property, the application can access the entire request message (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.RequestContext.RequestMessage%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>By returning the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageHeaders&gt;</ph> object from the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A&gt;</ph> property, the application can access the service URL (<ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageHeaders.To%2A&gt;</ph>) and the operation (<ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Action%2A&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this information, the application can perform the authorization decision accordingly.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The claims made by a user are found in the <ph id="ph1">&lt;xref:System.IdentityModel.Claims.ClaimSet&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets%2A&gt;</ph> property of the <ph id="ph3">`AuthorizationContext`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current <ph id="ph1">`AuthorizationContext`</ph> is returned by the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContext.ServiceSecurityContext%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.OperationContext"&gt;&lt;/xref&gt;</ph> for the current authorization request.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access is granted; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets the set of policies that participate in policy evaluation.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> implementation provides a default set of authorization policies.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include the primary token that contains the credentials of the requester and all supporting tokens, transport tokens, and external policies if specified.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this implementation and provide a different set of policies.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.OperationContext"&gt;&lt;/xref&gt;</ph> of the current authorization request.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>