<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">64ba50f40c895d64136977115a8c6bd9eaeec0d6</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Dispatcher.IMessageFilterTable-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e83dcf053a7ca29d598cb98ed90a82dd4abbb784</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">94f86fd5b007f1f75f58322605418d1d587c995d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`interface`</ph> that defines the contract that a filter table must implement to inspect messages with query criteria derived from one or more filters.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The filter table is a core component of the filter engine.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The primary use of the filter engine in <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> is to match application logic to messages by finding all the filters that match a message.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A filter table allows multiple filters to be matched against a single message more efficiently than they can be matched separately.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A filter table associates filter data with filters.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The table is a collection of key-value pairs, where the key is the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph>, and the value is the associated filter data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filter data can be any data of the type specified in the generic parameter and can be used to specify what actions to take if a message is matched by a filter in the table.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filter table entries can be accessed using the <ph id="ph1">&lt;xref:System.Collections.Generic.IDictionary%602&gt;</ph> functionality that <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph> inherits.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that a filter instance can only be added to a given <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph> once.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add multiple instances of this filter to the same filter table, use a filter constructor to create additional instances.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A filter matches a message when the message satisfies the query criteria of the filter.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are four overloaded matching methods.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data returned is either the filter data or the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects themselves.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data is returned whether multiple matches are allowed or only a single match.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows this information for each overload.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Method Name</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Matches</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data Returned</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each method contains two overloads.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The difference between the two overloads is that one takes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> parameter and is not permitted to examine the contents of the body; the other takes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> parameter and can examine any part of the message.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call a method with the message parameter, and the filter table contains a filter that examines the content of the message body, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are unsure about the filters in a table, call the overload that takes a message buffer.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message headers are automatically buffered and can be inspected by a filter without being consumed.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>But if the body is to be inspected by a filter, then the entire message must be buffered because an unbuffered message body is consumed by a query and its contents destroyed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following classes implement <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601&gt;</ph>:</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The type of data associated with each filter in the table.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and returns that filter in an <ph id="ph1">`out`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when a single filter is expected to match the message and the matching filter is required.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the body of the message must be inspected by a filter in the filter table, use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingFilter%2A&gt;</ph> version of the method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> to test.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">message</ph><ept id="p1">&lt;/code&gt;</ept>; <ph id="ph3">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message or buffered message, and returns that filter in an <ph id="ph1">`out`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when a single filter is expected to match the buffered message, the matching filter must be returned, and the body of the message may have to be inspected.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">messageBuffer</ph><ept id="p1">&lt;/code&gt;</ept>; <ph id="ph3">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified message, and adds the matching filters to a collection.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when more than one filter is expected to match the message, the matching filters are required, and the body of the message does not have to be inspected.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> to test.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Reference parameter that stores the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.MessageFilter"&gt;&lt;/xref&gt;</ph> objects that match in <ph id="ph2">&lt;xref href="System.Collections.Generic.ICollection`1"&gt;&lt;/xref&gt;</ph><ph id="ph3">&lt;Filter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">message</ph><ept id="p1">&lt;/code&gt;</ept>; <ph id="ph3">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of a filter in the table is satisfied by the specified buffered message, and adds the matching filters to a collection.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when more than one filter is expected to match the buffered message, the matching filter is required, and the body of the message may have to be inspected.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Reference parameter that stores the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.MessageFilter"&gt;&lt;/xref&gt;</ph> objects that match in <ph id="ph2">&lt;xref href="System.Collections.Generic.ICollection`1"&gt;&lt;/xref&gt;</ph><ph id="ph3">&lt;Filter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">messageBuffer</ph><ept id="p1">&lt;/code&gt;</ept>; <ph id="ph3">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified message, and adds the matching filter data to a collection.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when a single filter is expected to match the message and only the filter data from the matching filter must be recovered.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method expects at most a single matching filter.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than one filter matches, a <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MultipleFilterMatchesException&gt;</ph> must be thrown.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the body of the message must be inspected by a filter in the filter table, buffer the message using <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> and pass it to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValue%2A&gt;</ph> version of the method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> to test.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of exactly one filter in the table is satisfied by the message; <ph id="ph2">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of exactly one filter in the table is satisfied by the specified buffered message, and adds the matching filter data to a collection.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when a single filter is expected to match the buffered message, only the filter data from the matching filter must be recovered, and the body of the message may have to be inspected.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of exactly one filter in the table is satisfied by the message; <ph id="ph2">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified message, and adds the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">FilterData</ph><ept id="p1">&lt;/code&gt;</ept> of the matching filters to a collection.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when one or more filters are expected to match the message, only the filter data is required, and the contents of the body of the message are not to be inspected.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The filter data of the matching <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects is stored in the <ph id="ph2">`results`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the body of the message is inspected by a filter in the filter table, buffer the message and pass it to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601.GetMatchingValues%2A&gt;</ph> version of the method.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> to test.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Reference parameter that stores the filter data of the matching filters in a generic collection.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">message</ph><ept id="p1">&lt;/code&gt;</ept>; <ph id="ph3">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the match criterion of at least one filter in the table is satisfied by the specified buffered message, and adds the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">FilterData</ph><ept id="p1">&lt;/code&gt;</ept> of the matching filters to a collection.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when one or more filters are expected to match the buffered message, only the filter data is required, and the body of the message may require inspection.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The filter data of the matching <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.MessageFilter&gt;</ph> objects is stored in the <ph id="ph2">`results`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Reference parameter that stores the filter data of the matching filters in a generic <ph id="ph1">&lt;xref href="System.Collections.Generic.ICollection`1"&gt;&lt;/xref&gt;</ph><ph id="ph2">&lt;</ph><bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">FilterData</ph><ept id="p1">&lt;/code&gt;</ept>&gt;.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the match criterion of at least one filter in the table is satisfied by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">messageBuffer</ph><ept id="p1">&lt;/code&gt;</ept>; <ph id="ph3">`false`</ph> if no filter is satisfied.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>