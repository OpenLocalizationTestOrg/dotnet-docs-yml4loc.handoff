<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7340e7e97627b7b5b84148a454575b14aa3d0c08</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceProcess.ServiceController.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02efecda08942aef351b4af469c169ff66d5dd6b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eac95a1ababb08bc70b3893a1ad718d60cffb00a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a Windows service and allows you to connect to a running or stopped service, manipulate it, or get information about it.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class to connect to and control the behavior of existing services.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an instance of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> class, you set its properties so it interacts with a specific Windows service.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use the class to start, stop, and otherwise manipulate the service.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You will most likely use the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> component in an administrative capacity.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could create a Windows or Web application that sends custom commands to a service through the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This would be useful, because the Service Control Manager (SCM) Microsoft Management Console snap-in does not support custom commands.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>After you create an instance of <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph>, you must set two properties on it to identify the service with which it interacts: the computer name and the name of the service you want to control.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.MachineName%2A&gt;</ph> is set to the local computer, so you do not need to change it unless you want to set the instance to point to another computer.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the service author writes code that customizes the action associated with a specific command.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a service can contain code to respond to an <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnPause%2A?displayProperty=fullName&gt;</ph> command.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the custom processing for the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Pause%2A&gt;</ph> task runs before the system pauses the service.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of commands a service can process depends on its properties; for example, you can set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.CanStop%2A&gt;</ph> property for a service to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting renders the <ph id="ph1">`Stop`</ph> command unavailable on that particular service; it prevents you from stopping the service from the SCM by disabling the necessary button.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you try to stop the service from your code, the system raises an error and displays the error message "Failed to stop <ph id="ph1">`servicename`</ph>."</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> class that is not associated with a specific service.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> class that is associated with an existing service on the local computer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The name that identifies the service to the system.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>This can also be the display name for the service.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> class that is associated with an existing service on the specified computer.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the <ph id="ph1">`machineName`</ph> parameter, you can use "." to represent the local computer.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The name that identifies the service to the system.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This can also be the display name for the service.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The computer on which the service resides.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is invalid.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the service can be paused and resumed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service can be paused; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the service should be notified when the system is shutting down.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service should be notified when the system is shutting down; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the service can be stopped after it has started.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service can be stopped and the <ph id="ph2">&lt;xref href="System.ServiceProcess.ServiceBase.OnStop"&gt;&lt;/xref&gt;</ph> method called; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Disconnects this <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> instance from the service and frees all the resources that the instance allocated.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Close%2A&gt;</ph> releases all the handles associated with the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Continues a service after it has been paused.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for a service, its status is first changed to <ph id="ph2">`ContinuePending`</ph> and then, when the <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> method returns, it is changed to <ph id="ph4">`Running`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Paused`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets the set of services that depends on the service associated with this <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> array represents the services that the system stops if your application calls <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for this service.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> instances, each of which is associated with a service that depends on this service.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets a friendly name for the service.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> to an empty string (""), but setting the property to <ph id="ph2">`null`</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The friendly name of the service, which can be used to identify the service.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController.DisplayName"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Executes a custom command on the service.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ExecuteCommand%2A&gt;</ph>, the status of the service does not change.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the service was started, the status remains <ph id="ph1">`Running`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the service was stopped, the status remains <ph id="ph1">`Stopped`</ph>, and so on.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>To process the custom command, the service must override the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceBase.OnCustomCommand%2A&gt;</ph> method and provide a handler for the command identified by the <ph id="ph2">`command`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An application-defined command flag that indicates which custom command to execute.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The value must be between 128 and 256, inclusive.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Retrieves the device driver services on the local computer.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> returns only the device driver services from the local computer.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the non-device driver services or services that are not drivers, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Together, the two methods provide access to all the services on a computer.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> in which each element is associated with a device driver service on the local computer.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Retrieves the device driver services on the specified computer.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> returns only the device driver services from the specified computer.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the non-device driver services or services that are not drivers, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Together, the two methods provide access to all the services on a computer.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The computer from which to retrieve the device driver services.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> in which each element is associated with a device driver service on the specified computer.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter has invalid syntax.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Retrieves all the services on the specified computer, except for the device driver services.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> returns only the non-device driver services and the services that are not drivers from the specified computer.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve device driver services, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Together, the two methods provide access to all the services on a computer.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The computer from which to retrieve the services.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> in which each element is associated with a service on the specified computer.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter has invalid syntax.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Retrieves all the services on the local computer, except for the device driver services.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetServices%2A&gt;</ph> returns only the non-device driver services and the services that are not drivers from the local computer.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve device driver services, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.GetDevices%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Together, the two methods provide access to all the services on a computer.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> in which each element is associated with a service on the local computer.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the computer on which this service resides.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The computer name is the name of the server that is running this service, without the preceding backslash characters (<ph id="ph1">\\</ph><ph id="ph2">\\</ph>).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The name of the computer that is running the service associated with this <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is the local computer (".").</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController.MachineName"&gt;&lt;/xref&gt;</ph> syntax is invalid.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Suspends a service's operation.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Continue%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Paused`</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Refreshes property values by resetting the properties to their current values.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Refresh%2A&gt;</ph> method causes the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceProcess.ServiceController.Status%2A&gt;</ph> properties to be reset to their current values when they are next referenced.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets the handle for the service.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.SafeHandle"&gt;&lt;/xref&gt;</ph> that contains the handle for the service.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets or sets the name that identifies the service that this instance references.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> identifies the service to the Service Control Manager.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing this property causes the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController&gt;</ph> instance to bind to another service, it does not change what the Service Control Manager's Microsoft Management Console snap-in displays.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are implementing a custom service, the value of this property must be identical to the name recorded for the service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller.ServiceName%2A&gt;</ph> property of the corresponding <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>In code, the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> is usually set in the <ph id="ph2">`main()`</ph> function of the executable.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you reset the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceName%2A&gt;</ph> property, the method that sets the property sets this instance's <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.DisplayName%2A&gt;</ph> to an empty string ("").</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The name that identifies the service that this <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> instance references.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController.ServiceName"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The syntax of the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController.ServiceName"&gt;&lt;/xref&gt;</ph> property is invalid.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The set of services that this service depends on.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any service in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> array is not running, you will not be able to start this service.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> instances, each of which is associated with a service that must be running for this service to run.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets the type of service that this object references.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The service type indicates how the service is used by the system.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServiceType%2A&gt;</ph> property represents a set of flags combined using the bitwise OR operator.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceType"&gt;&lt;/xref&gt;</ph> values, used to indicate the network service type.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Starts the service, passing no arguments.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Running`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Starts a service, passing the specified arguments.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot call <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> for the service until the service controller status is <ph id="ph2">`Running`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>An array of arguments to pass to the service when it starts.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The service cannot be started.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;args&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A member of the array is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates how the service represented by the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceController"&gt;&lt;/xref&gt;</ph> object starts.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A value that indicates how the service starts.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Gets the status of the service that is referenced by this instance.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>The status indicates the current state of the service.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The set of possible values includes several that indicate whether a state-changing command is pending.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceProcess.ServiceControllerStatus"&gt;&lt;/xref&gt;</ph> values that indicates whether the service is running, stopped, or paused, or whether a start, stop, pause, or continue command is pending.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Stops this service and any services that are dependent on this service.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any services depend on this service for their operation, they will be stopped before this service is stopped.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.DependentServices%2A&gt;</ph> property contains the set of services that depend on this one.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you stop a service that this service depends on, call the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> method on this service within the <ph id="ph2">&lt;xref:System.ServiceProcess.ServiceController.Stop%2A&gt;</ph> method of the parent service.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.ServicesDependedOn%2A&gt;</ph> property contains the services that this service depends on.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>An error occurred when accessing a system API.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The service was not found.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Infinitely waits for the service to reach the specified status.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> to suspend an application's processing until the service has reached the required status.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> method waits approximately 250 milliseconds between each status check.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> cannot detect the case of the observed service changing to the <ph id="ph2">`desiredStatus`</ph> and then immediately to another status in that interval.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The status to wait for.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">desiredStatus</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not any of the values defined in the <ph id="ph2">&lt;xref href="System.ServiceProcess.ServiceControllerStatus"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Waits for the service to reach the specified status or for the specified time-out to expire.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> to suspend an application's processing until the service has reached the required status.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> method waits approximately 250 milliseconds between each status check.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceProcess.ServiceController.WaitForStatus%2A&gt;</ph> cannot detect the case of the observed service changing to the <ph id="ph2">`desiredStatus`</ph> and then immediately to another status in that interval.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The status to wait for.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> object specifying the amount of time to wait for the service to reach the specified status.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">desiredStatus</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not any of the values defined in the <ph id="ph2">&lt;xref href="System.ServiceProcess.ServiceControllerStatus"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The value specified for the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">timeout</ph><ept id="p1">&lt;/code&gt;</ept> parameter expires.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>