<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8701534e6e4a3f6d82e4d60d6b283f367893796a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.EventLogTraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">56cea570958f09ad136f8eb02c6ceb69ef695b66</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2b57aa0bdf5a2ac53bcbfdf1b44587edd8307eab</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a simple listener that directs tracing or debugging output to an <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An instance of this <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> can be added to the <ph id="ph2">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph>, or <ph id="ph4">&lt;xref:System.Diagnostics.TraceSource.Listeners%2A?displayProperty=fullName&gt;</ph> collections to send output from tracing or debugging to an <ph id="ph5">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add the instance in your code or specify it in the application configuration file.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> using an application configuration file, edit the file that corresponds to the name of your application or the app.config file in a <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> project.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this file, insert an element for a <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener?displayProperty=fullName&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example adds a <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> object named <ph id="ph2">`myListener`</ph> to the <ph id="ph3">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`initializeData`</ph> parameter specifies the name of the event log source that is to be passed to the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.%23ctor%28System.String%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to add trace listeners in the application configuration file, see  or .</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> for the event log that is associated with the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> instance does not exist, a new event source is created.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an event source in Windows Vista, Windows XP Professional, or Windows Server 2003, you must have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class provides the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.EventLog%2A&gt;</ph> property to get or set the event log that receives the tracing or debugging output, and the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.Name%2A&gt;</ph> property to hold the name of the <ph id="ph3">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Close%2A&gt;</ph> method closes the event log so it no longer receives tracing or debugging output.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.Write%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.WriteLine%2A&gt;</ph> methods write a message to the event log.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid the possibility of writing large amounts of data to the event log, the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener&gt;</ph> does not output the optional trace data specified by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogTraceListener"&gt;&lt;/xref&gt;</ph> class without a trace listener.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogTraceListener"&gt;&lt;/xref&gt;</ph> class using the specified event log.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The event log to write to.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogTraceListener"&gt;&lt;/xref&gt;</ph> class using the specified source.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The name of an existing event log source.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Closes the event log so that it no longer receives tracing or debugging output.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the event log to write to.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The event log to write to.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of this <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogTraceListener"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property defaults to the source name of the event log.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name of this trace listener.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Writes trace information, a data object, and event information to the event log.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to output trace data.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`data`</ph> object, formatted as a string, using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The combination of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">id</ph><ept id="p2">&lt;/code&gt;</ept> uniquely identifies an event.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A data object to write to the output file or stream.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is not specified.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The log entry string exceeds 32,766 characters.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Writes trace information, an array of data objects, and event information to the event log.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> methods are not intended to be called by application code.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to output trace data.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceData%2A&gt;</ph> method, like the <ph id="ph2">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended for automated tools but also allows the attaching of additional objects, for example an exception instance, to the trace.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`severity`</ph> and <ph id="ph2">`id`</ph> parameter data is used to create an <ph id="ph3">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object, which is written to the event log with the data from the array of data objects.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`data`</ph> object array, formatted as a string array, using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The combination of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">id</ph><ept id="p2">&lt;/code&gt;</ept> uniquely identifies an event.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An array of data objects.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is not specified.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The log entry string exceeds 32,766 characters.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, and event information to the event log.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log with the <ph id="ph2">`message`</ph> data using the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The combination of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">id</ph><ept id="p2">&lt;/code&gt;</ept> uniquely identifies an event.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The trace message.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is not specified.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The log entry string exceeds 32,766 characters.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Writes trace information, a formatted array of objects, and event information to the event log.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> methods are not intended to be called by application code.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLogTraceListener.TraceEvent%2A&gt;</ph> method is intended to trace events that can be processed automatically by tools.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example a monitoring tool can notify an administrator if a specific event is traced by a specific source.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph> and <ph id="ph2">`source`</ph> parameters are used to determine if the event should be traced.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`id`</ph> is used to create an <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> object and the <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType&gt;</ph> is equated to an <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the <ph id="ph5">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance&gt;</ph> is written to the event log, using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method, with the message obtained from the <ph id="ph3">`format`</ph> and <ph id="ph4">`args`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`args`</ph> object array is converted to a string using the <ph id="ph2">&lt;xref:System.String.Format%2A&gt;</ph> method, passing the <ph id="ph3">`format`</ph> string and <ph id="ph4">`args`</ph> array to format the string as the message for the event log.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The maximum value of the <ph id="ph1">`id`</ph> parameter is 65,535.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`id`</ph> value specified is greater than 65,535, the maximum value is used.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>An object that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>A name used to identify the output; typically the name of the application that generated the trace event.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The combination of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">id</ph><ept id="p2">&lt;/code&gt;</ept> uniquely identifies an event.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items that correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`object`</ph> array containing zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is not specified.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The log entry string exceeds 32,766 characters.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Writes a message to the event log for this instance.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The message to write.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;message&lt;/code&gt;</ph> exceeds 32,766 characters.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Writes a message to the event log for this instance.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The message to write.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;message&lt;/code&gt;</ph> exceeds 32,766 characters.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>