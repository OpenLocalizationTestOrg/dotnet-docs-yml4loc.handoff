<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f540db7bb5c1f560ceba137961268a1422150d50</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.Design.ExpressionEditorSheet.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">442dd76129911e6246351bc18e892d669600479f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f242f6d8fa4b91d8c893ee63065ca0171f67fca9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a design-time editor sheet for a custom expression.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class must be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you browse the <ph id="ph1">&lt;xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A&gt;</ph> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can select the expression type based on a list of expression prefixes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you select an expression prefix from the list, the visual designer uses the associated <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> objects to evaluate and convert the expression string based on the syntax for that type of expression.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionBuilder&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> implementations.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optionally, you can provide a custom <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> implementation that defines properties that are used to form the expression.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate an expression prefix with an expression builder and an expression editor, apply the <ph id="ph1">&lt;xref:System.Web.Compilation.ExpressionEditorAttribute&gt;</ph> attribute and an <ph id="ph2">&lt;xref:System.Web.Compilation.ExpressionPrefixAttribute&gt;</ph> attribute to the custom <ph id="ph3">&lt;xref:System.Web.Configuration.ExpressionBuilder&gt;</ph> class, and then configure the expression prefix for an expression builder in the <ph id="ph4">`expressionBuilders`</ph> element in the Web configuration file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a basic editor sheet, which uses a single input string to form the expression.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom expression editors that are derived from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> can override the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns the resulting expression string based on the current expression properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> class derives from the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditor&gt;</ph> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Compilation.ResourceExpressionBuilder&gt;</ph> class is associated with the expression prefix <ph id="ph2">`Resources`</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Web.UI.Design.ResourceExpressionEditorSheet&gt;</ph>, which defines the individual properties that form a resource reference expression.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you inherit from the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class, you must override the following members:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A&gt;</ph> method to return a custom editor sheet implementation.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to implement custom initialization actions for your expression editor sheet implementation.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.Design.ExpressionEditorSheet"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> class is abstract, you cannot create an instance of an <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet&gt;</ph> directly using the <ph id="ph3">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A service provider implementation supplied by the designer host, used to obtain additional design-time services.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method returns an expression string that is built from the current expression properties.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The visual designer allows you to set the expression sheet properties, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A&gt;</ph> method to get the expression string and set the control property value.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The custom expression string for the current property values.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the expression string is valid.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This base implementation always returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph>, if the expression string is valid; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets the service provider implementation that is used by the expression editor sheet.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A&gt;</ph> constructor to set the <ph id="ph2">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> implementation for a custom expression editor sheet.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A&gt;</ph> property can be used to access services that are provided by the designer host.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, call the <ph id="ph1">&lt;xref:System.IServiceProvider.GetService%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.Design.IWebApplication&gt;</ph> interface to access project items, documents, or configuration file details that are provided through the visual designer.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IServiceProvider"&gt;&lt;/xref&gt;</ph>, typically provided by the design host, that can be used to obtain additional design-time services.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>