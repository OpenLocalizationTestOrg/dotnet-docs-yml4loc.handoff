<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81d43213ddf5bb6740ad7545702c52811bdc0850</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Globalization.NumberFormatInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ae00df75eb594424a00e5025e2983a9cbb24ac4</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d46eb6e5810fb0a42e18916915cbd5365c6bfb2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides culture-specific information for formatting and parsing numeric values.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class contains culture-specific information that is used when you format and parse numeric values.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This information includes the currency symbol, the decimal symbol, the group separator symbol, and the symbols for positive and negative signs.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Instantiating a NumberFormatInfo object<ept id="p1">](#Instantiating)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>For the current culture<ept id="p1">](#Instantiating_Current)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>For the invariant culture<ept id="p1">](#Instantiating_Invariant)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>For a specific culture<ept id="p1">](#Instantiating_Specific)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>For a neutral culture<ept id="p1">](#Instantiating_Neutral)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>NumberFormatInfo and dynamic data<ept id="p1">](#dynamic)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>IFormatProvider, NumberFormatInfo, and numeric formatting<ept id="p1">](#formatProvider)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Format strings and NumberFormatInfo properties<ept id="p1">](#properties)</ept></source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Modifying NumberFormatInfo properties<ept id="p1">](#modifying)</ept></source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Modifying the currency symbol and pattern<ept id="p1">](#currency)</ept></source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Formatting a national identification number<ept id="p1">](#id)</ept></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Parsing numeric strings<ept id="p1">](#parsing)</ept></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Parsing user strings<ept id="p1">](#ParseUser)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Serializing and deserializing numeric data<ept id="p1">](#ParseSerial)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiating a NumberFormatInfo object</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the formatting conventions of the current culture, the invariant culture, a specific culture, or a neutral culture.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiating a NumberFormatInfo object for the current culture</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current thread culture in any of the following ways.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>In each case, the returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current thread culture from the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property, and retrieving the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object from its <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic) <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetInstance%2A&gt;</ph> method with a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current culture.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses these three ways to create <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objects that represent the formatting conventions of the current culture.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also retrieves the value of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A&gt;</ph> property to illustrate that each object is read-only.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create a writable <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the conventions of the current thread culture in any of the following ways:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object in any of the ways illustrated in the previous code example, and calling the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.Clone%2A&gt;</ph> method on the returned <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This creates a copy of the original <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, except that its <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A&gt;</ph> property is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the current culture, and then using its <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName&gt;</ph> property to retrieve the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates these two ways of instantiating a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, and displays the value of its <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.IsReadOnly%2A&gt;</ph> property to illustrate that the object is not read-only.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the Windows operating system allows the user to override some of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> property values used in numeric formatting and parsing operations through the <bpt id="p1">**</bpt>Region and Language<ept id="p1">**</ept> item in Control Panel.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a user whose culture is English (United States) might choose to display currency values as 1.1 USD instead of the default of $1.1.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objects retrieved in the ways discussed previously all reflect these user overrides.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is undesirable, you can create a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that does not reflect user overrides (and that is also read/write rather than read-only) by calling the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor and supplying a value of <ph id="ph3">`false`</ph> for the <ph id="ph4">`useUserOverride`</ph> argument.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example provides an illustration for a system whose current culture is English (United States) and whose currency symbol has been changed from the default of $ to USD.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate3.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate3.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=fullName&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the properties <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph5">&lt;xref:System.Globalization.CultureInfo.TextInfo%2A?displayProperty=fullName&gt;</ph> are also retrieved from the user settings.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the user settings are incompatible with the culture associated with the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object (for example, if the selected calendar is not one of the calendars listed by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph> property), the results of the methods and the values of the properties are undefined.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiating a NumberFormatInfo object for the invariant culture</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The invariant culture represents a culture that is culture-insensitive.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is based on the English language but not on any specific English-speaking country/region.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the data of specific cultures can be dynamic and can change to reflect new cultural conventions or user preferences, the data of the invariant culture does not change.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the formatting conventions of the invariant culture can be used for formatting operations in which result strings should not vary by culture.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the formatting conventions of the invariant culture in the following ways:</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned  <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>By retrieving the value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName&gt;</ph> property from the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that is returned by the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the parameterless <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.%23ctor%2A&gt;</ph> class constructor.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read/write.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses each of these methods to instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the invariant culture.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then indicates whether the object is read-only,</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate4.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate4.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiating a NumberFormatInfo object for a specific culture</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>A specific culture represents a language that is spoken in a particular country/region.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, en-US is a specific culture that represents the English language spoken in the United States, and en-CA is a specific culture that represents the English language spoken in Canada.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the formatting conventions of a specific culture in the following ways:</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%28System.String%29?displayProperty=fullName&gt;</ph> method and retrieving the value of the returned <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object's <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>By passing a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object you want to retrieve to the static <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.GetInstance%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read/write.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName&gt;</ph> method and retrieving the value of the returned <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object's <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read/write.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>By calling one of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%2A?displayProperty=fullName&gt;</ph> class constructors and retrieving the value of the returned <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object's <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read/write.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses these four ways to create a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects the formatting conventions of the Indonesian (Indonesia) culture.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also indicates whether each object is read-only.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate5.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate5.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instantiating a NumberFormatInfo object for a neutral culture</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>A neutral culture represents a culture or language that is independent of a country/region.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is typically the parent of one or more specific cultures.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, fr is a neutral culture for the French language and the parent of the fr-FR culture.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>You create a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the formatting conventions of a neutral culture in the same way that you create a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the formatting conventions of a specific culture.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> and earlier versions, trying to retrieve a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects the formatting conventions of a neutral culture throws a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because it is independent of a specific country/region, a neutral culture lacks culture-specific formatting information.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rather than populating the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object with generic values, the .NET Framework returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects the formatting conventions of a specific culture that is a child of the neutral culture.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the neutral en culture reflects the formatting conventions of the en-US culture, and the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the fr culture reflects the formatting conventions of the fr-FR culture.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use code like the following to determine which specific culture's formatting conventions each neutral culture represents.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#6<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/cs/instantiate6c.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class.Instantiate#6<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class.instantiate/vb/instantiate6c.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>NumberFormatInfo and dynamic data</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The culture-specific data for formatting numeric values provided by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class is dynamic, just like the cultural data provided by the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should not make any assumptions about the stability of values for <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objects that are associated with particular <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the data provided by the invariant culture and its associated <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is stable.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other data can change between application sessions, or even within a single session, for the following reasons:</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>System updates.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cultural preferences such as the currency symbol or currency formats change over time.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this happens, Windows Update includes changes to the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> property value for a particular culture.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Replacement cultures.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class can be used to replace the data of an existing culture.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Cascading changes to property values.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>A number of culture-related properties can change at run time, which, in turn, causes <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> data to change.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the current culture can be changed either programmatically or through user action.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this happens, the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph> property changes to an object associated with the current culture.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>User preferences.<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users of your application might override some of the values associated with the current system culture through the region and language options in Control Panel.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, users might choose a different currency symbol or a different decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.UseUserOverride%2A?displayProperty=fullName&gt;</ph> property is set to <ph id="ph2">`true`</ph> (its default value), the properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object are also retrieved from the user settings.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with the .NET Framework 2.0, all user-overridable properties of a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object are initialized when the object is created.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is still a possibility of inconsistency, because neither object creation nor the user override process is atomic, and the relevant values may change during object creation.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, these inconsistencies should be extremely rare.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can control whether user overrides are reflected in <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> objects that represent the same culture as the current thread culture.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the ways in which a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object can be retrieved and indicates whether the resulting object reflects user overrides.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source of CultureInfo and NumberFormatInfo object</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Reflects user overrides</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`CultureInfo.CurrentCulture.NumberFormat`</ph> property</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=fullName&gt;</ph> property</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CreateSpecificCulture%2A?displayProperty=fullName&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetCultureInfo%2A?displayProperty=fullName&gt;</ph> method</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>No</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%29&gt;</ph> constructor</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Yes</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.CultureInfo.%23ctor%28System.String%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on value of <ph id="ph1">`useUserOverride`</ph> parameter</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless there is a compelling reason to do otherwise, you should respect user overrides when you use the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object in client applications to format and parse user input or to display numeric data.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>For server applications or unattended applications, you should not respect user overrides.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are using the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object either explicitly or implicitly to persist numeric data in string form, you should either use a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects the formatting conventions of the invariant culture, or you should specify a custom numeric format string that you use regardless of culture.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>IFormatProvider, NumberFormatInfo, and numeric formatting</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is used implicitly or explicitly in all numeric formatting operations.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>These include calls to the following methods:</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>All numeric formatting methods, such as <ph id="ph1">&lt;xref:System.Int32.ToString%2A?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Double.ToString%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Convert.ToString%28System.Int32%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The major composite formatting method, <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other composite formatting methods, such as <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.StringBuilder.AppendFormat%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>All numeric formatting operations make use of an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface includes a single method, <ph id="ph2">&lt;xref:System.IFormatProvider.GetFormat%28System.Type%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is a callback method that is passed a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the type needed to provide formatting information.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method is responsible for returning either an instance of that type or <ph id="ph1">`null`</ph>, if it cannot provide an instance of the type.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework provides two <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementations for formatting numbers:</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class, which represents a specific culture (or a specific language in a specific country/region).</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a numeric formatting operation, the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object associated with its <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class, which provides information about the formatting conventions of its associated culture.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns an instance of itself.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation is not provided to a formatting method explicitly, a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=fullName&gt;</ph> property that represents the current thread culture is used.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates the relationship between the <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> interface and the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class in formatting operations by defining a custom <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method displays the type name of the object requested by the formatting operation.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the interface is requesting a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, this method provides the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current thread culture.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>As the output from the example shows, the <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method requests a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object to provide formatting information, whereas the <ph id="ph3">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method requests <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> and <ph id="ph5">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> objects as well as an <ph id="ph6">&lt;xref:System.ICustomFormatter&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/formatprovider1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/formatprovider1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> implementation is not explicitly provided in a numeric formatting method call, the method calls the <ph id="ph2">`CultureInfo.CurrentCulture.GetFormat`</ph> method, which returns the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that corresponds to the current thread culture.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Format strings and NumberFormatInfo properties</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every formatting operation uses either a standard or a custom numeric format string to produce a result string from a number.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, the use of a format string to produce a result string is explicit, as in the following example.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This code calls the <ph id="ph1">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29?displayProperty=fullName&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> value to a number of different string representations by using the formatting conventions of the en-US culture.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other cases, the use of a format string is implicit.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, in the following method calls to the default or parameterless <ph id="ph1">&lt;xref:System.Decimal.ToString?displayProperty=fullName&gt;</ph> method, the value of the <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> instance is formatted by using the general ("G") format specifier and the conventions of the current culture, which in this case is the en-US culture.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/properties2.cs#3)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/properties2.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each standard numeric format string uses one or more <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties to determine the pattern or the symbols used in the result string.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, each custom numeric format specifier except "0" and "#" insert symbols in the result string that are defined by <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the standard and custom numeric format specifiers and their associated <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the appearance of the result string for a particular culture, see the <bpt id="p1">[</bpt>Modifying NumberFormatInfo properties<ept id="p1">](#modifying)</ept> section.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about the use of these format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Format specifier</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Associated properties</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>"C" or "c" (currency format specifier)</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A&gt;</ph>, to define the default number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, to define the group or thousands separator.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A&gt;</ph>, to define the sizes of integral groups.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph>, to define the pattern of negative currency values.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph>, to define the pattern of positive currency values.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A&gt;</ph>, to define the currency symbol.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>"D" or "d" (decimal format specifier)</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>"E" or "e" (exponential or scientific format specifier)</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol in the mantissa and exponent.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph>, to define the positive sign symbol in the exponent.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>"F" or "f" (fixed-point format specifier)</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A&gt;</ph>, to define the default number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>"G" or "g" (general format specifier)</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph>, to define the positive sign symbol for result strings in exponential format.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>"N" or "n" (number format specifier)</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A&gt;</ph>, to define the default number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>, to define the group separator (thousands) symbol.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A&gt;</ph>, to define the number of integral digits in a group.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A&gt;</ph>, to define the format of negative values.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>"P" or "p" (percent format specifier)</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A&gt;</ph>, to define the default number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A&gt;</ph>, to define the group separator symbol.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A&gt;</ph>, to define the number of integral digits in a group.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A&gt;</ph>, to define the placement of the percent symbol and the negative symbol for negative values.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A&gt;</ph>, to define the placement of the percent symbol for positive values.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A&gt;</ph>, to define the percent symbol.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>"R" or "r" (round-trip format specifier)</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph>, to define the positive sign symbol in an exponent.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>"X" or "x" (hexadecimal format specifier)</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>None.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>"." (decimal point custom format specifier)</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, to define the decimal separator symbol.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>"," (group separator custom format specifier)</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>, to define the group (thousands) separator symbol.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>"%" (percentage placeholder custom format specifier)</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A&gt;</ph>, to define the percent symbol.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>"‰" (per mille placeholder custom format specifier)</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A&gt;</ph>, to define the per mille symbol.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>"E" (exponential notation custom format specifier)</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, to define the negative sign symbol in the mantissa and exponent.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A&gt;</ph>, to define the positive sign symbol in the exponent.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> class includes a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NativeDigits%2A&gt;</ph> property that specifies the base 10 digits used by a specific culture.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the property is not used in formatting operations; only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used in the result string.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, for <ph id="ph1">&lt;xref:System.Single&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph> values of <ph id="ph3">`NaN`</ph>, <ph id="ph4">`PositiveInfinity`</ph>, and <ph id="ph5">`NegativeInfinity`</ph>, the result string consists exclusively of the symbols defined by the <ph id="ph6">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modifying NumberFormatInfo properties</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the properties of a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object to customize the result string produced in a numeric formatting operation.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this:</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a read/write copy of a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object whose formatting conventions you want to modify.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <bpt id="p1">[</bpt>Instantiating a NumberFormatInfo object<ept id="p1">](#Instantiating)</ept> section.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the property or properties that are used to produce the desired result string.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how formatting methods use <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> properties to define result strings, see the <bpt id="p1">[</bpt>Format strings and NumberFormatInfo properties<ept id="p1">](#properties)</ept> section.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the custom <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object as the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> argument in calls to formatting methods.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of dynamically modifying a culture's property values each time an application is started, you can use the <ph id="ph1">&lt;xref:System.Globalization.CultureAndRegionInfoBuilder&gt;</ph> class to define either a custom culture (a culture that has a unique name and that supplements existing cultures) or a replacement culture (one that is used instead of a specific culture).</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following sections provide some examples.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modifying the currency symbol and pattern</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example modifies a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that that represents the formatting conventions of the en-US culture.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>It assigns the ISO-4217 currency symbol to the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A&gt;</ph> property and defines a pattern for currency values that consists of the currency symbol followed by a space and a numeric value.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Customize#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_currency1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Customize#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_currency1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>Formatting a national identification number</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many national identification numbers consist exclusively of digits and so can easily be formatted by modifying the properties of a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a social security number in the United States consists of 9 digits arranged as follows: <ph id="ph1">`XXX-XX-XXXX`</ph>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example assumes that social security numbers are stored as integer values and formats them appropriately.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Customize#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/cs/customize_ssn1.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Customize#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.customize/vb/customize_ssn1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing numeric strings</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing involves converting the string representation of a number to a number.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each numeric type in the .NET Framework includes two overloaded parsing methods: <ph id="ph1">`Parse`</ph> and <ph id="ph2">`TryParse`</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Parse`</ph> method converts a string to a number and throws an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`TryParse`</ph> method converts a string to a number, assigns the number to an <ph id="ph2">`out`</ph> argument, and returns a <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the conversion succeeded.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parsing methods implicitly or explicitly use a <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration value to determine what style elements (such as group separators, a decimal separator, or a currency symbol) can be present in a string if the parsing operation is to succeed.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> value is not provided in the method call, the default is a <ph id="ph2">&lt;xref:System.Globalization.NumberStyles&gt;</ph> value that includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.Float&gt;</ph> and <ph id="ph4">&lt;xref:System.Globalization.NumberStyles.AllowThousands&gt;</ph> flags, which specifies that the parsed string can include group symbols, a decimal separator, a negative sign, and white-space characters, or it can be the string representation of a number in exponential notation.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parsing methods also implicitly or explicitly use a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that defines the specific symbols and patterns that can occur in the string to be parsed.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is not provided, the default is the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current thread culture.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about parsing, see the individual parsing methods, such as <ph id="ph1">&lt;xref:System.Int16.Parse%28System.String%29?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph>, <ph id="ph5">&lt;xref:System.Double.TryParse%28System.String%2CSystem.Double%40%29?displayProperty=fullName&gt;</ph>, and <ph id="ph6">&lt;xref:System.Numerics.BigInteger.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Numerics.BigInteger%40%29?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates the culture-sensitive nature of parsing strings.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>It tries to parse a string that include thousands separators by using the conventions of the en-US, fr-FR, and invariant cultures.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>A string that includes the comma as a group separator and the period as a decimal separator fails to parse in the fr-FR culture, and a string with white space as a group separator and a comma as a decimal separator fails to parse in the en-US and invariant cultures.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parse1.cs#4)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parse1.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing generally occurs in two contexts:</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an operation that is designed to convert user input into a numeric value.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an operation that is designed to round-trip a numeric value; that is, to deserialize a numeric value that was previously serialized as a string.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following sections discuss these two operations in greater detail.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parsing user strings</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are parsing numeric strings input by the user, you should always instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects the user's cultural settings.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to instantiate a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects user customizations, see the <bpt id="p1">[</bpt>NumberFormatInfo and dynamic data<ept id="p1">](#dynamic)</ept> section.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates the difference between a parsing operation that reflects user cultural settings and one that does not.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the default system culture is en-US, but the user has defined "," as the decimal symbol and "." as the group separator in Control Panel, <bpt id="p1">**</bpt>Region and Language<ept id="p1">**</ept>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinarily, these symbols are reversed in the default en-US culture.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user enters a string that reflects user settings, and the string is parsed by a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that also reflects user settings (overrides), the parsing operation returns a correct result.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when the string is parsed by a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that reflects standard en-US cultural settings, it mistakes the comma symbol for a group separator and returns an incorrect result.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parseuser1.cs#5)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parseuser1.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Serializing and deserializing numeric data</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>When numeric data is serialized in string format and later deserialized and parsed, the strings should be generated and parsed by using the conventions of the invariant culture.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatting and parsing operations should never reflect the conventions of a specific culture.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>If culture-specific settings are used, the portability of the data is strictly limited; it can be successfully deserialized only on a thread whose culture-specific settings are identical to those of the thread on which it was serialized.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>In some cases, this means that the data cannot even be successfully deserialized on the same system on which it was serialized.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates what can happen when this principle is violated.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>Floating-point values in an array are converted to strings when the current thread uses the culture-specific settings of the en-US culture.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data is then parsed by a thread that uses the culture-specific settings of the en-GB culture.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, although each parsing operation succeeds, the data does not round-trip successfully and data corruption occurs.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other cases, a parsing operation could fail and a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> exception could be thrown.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.Class#6<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/cs/parsepersisted.cs#6)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.Class#6<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.class/vb/parsepersisted.vb#6)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>Initializes a new writable instance of the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> class that is culture-independent (invariant).</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The properties of the new instance can be modified if your application needs user-defined formatting.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Creates a shallow copy of the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>The clone is writable even if the original <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the properties of the clone can be modified with user-defined patterns.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>A shallow copy of an object is a copy of the object only.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object contains references to other objects, the shallow copy will not create copies of the referred objects.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will refer to the original objects instead.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the other hand, a deep copy of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, a shallow copy is sufficient for copying all instance properties, because all properties that return object references are <ph id="ph2">`static`</ph> (<ph id="ph3">`Shared`</ph> in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A new object copied from the original <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of decimal places to use in currency values.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalDigits%2A&gt;</ph> property is used with the "C" standard format string without a precision specifier in numeric formatting operations.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>It defines the default number of fractional digits that appear after the decimal separator.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is overridden if a precision specifier is used.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The number of decimal places to use in currency values.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 2.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 99.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use as the decimal separator in currency values.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>The initial value of this property is derived from the settings in the <bpt id="p1">**</bpt>Region and Language<ept id="p1">**</ept> item in Control Panel.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph> property is used with the "C" standard format string to define the symbol that separates integral from fractional digits.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The string to use as the decimal separator in currency values.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is ".".</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>The property is being set to an empty string.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that separates groups of digits to the left of the decimal in currency values.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The initial value of this property is derived from the settings in the <bpt id="p1">**</bpt>Regional and Language<ept id="p1">**</ept> item in Control Panel.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph> property is used with the "C" standard format string to define the symbol that separates groups of integral digits.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The string that separates groups of digits to the left of the decimal in currency values.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is ",".</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of digits in each group to the left of the decimal in currency values.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSizes%2A&gt;</ph> property is used with the "C" standard format string to define the number of digits that appear in integral groups.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every element in the one-dimensional array must be an integer from 1 through 9.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last element can be 0.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each subsequent element refers to the next significant group of digits to the left of the previous group.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last element is 0, the remaining digits are not grouped.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to "$55,55555,55555,55555,4444,333.00".</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the array contains { 3, 4, 0 }, the digits are grouped similar to "$55555555555555555,4444,333.00".</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>The number of digits in each group to the left of the decimal in currency values.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is a one-dimensional array with only one element, which is set to 3.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The property is being set and the array contains an entry that is less than 0 or greater than 9.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The property is being set and the array contains an entry, other than the last entry, that is set to 0.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>Gets or sets the format pattern for negative currency values.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> property is used with the "C" standard format string to define the pattern of negative currency values.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has one of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>The symbol "$" is the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A&gt;</ph>, the symbol "-" is the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, and <ph id="ph3">`n`</ph> is a number.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Associated pattern</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>($n)</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>2</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>3</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>4</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>(n$)</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>5</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>6</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>7</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>8</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>-n $</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>9</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>-$ n</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>10</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source>n $-</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>11</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>$ n-</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>12</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>$ -n</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>13</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>n- $</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>14</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>($ n)</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>15</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>(n $)</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The format pattern for negative currency values.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 0, which represents "($n)", where "$" is the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo.CurrencySymbol"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">n</ph><ept id="p1">&lt;/code&gt;</ept> is a number.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 15.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Gets or sets the format pattern for positive currency values.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> property is used with the "C" standard format string to define pattern of positive currency values.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has one of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>The symbol "$" is the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A&gt;</ph> and <ph id="ph2">`n`</ph> is a number.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Associated pattern</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>2</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>$ n</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>3</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>n $</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the pattern does not support a positive sign.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>The format pattern for positive currency values.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 0, which represents "$n", where "$" is the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo.CurrencySymbol"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">n</ph><ept id="p1">&lt;/code&gt;</ept> is a number.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 3.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use as the currency symbol.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string assigned to the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencySymbol%2A&gt;</ph> property is included in the result string when a numeric value is formatted with the "C" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The string to use as the currency symbol.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "¤".</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>Gets a read-only <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> that formats values based on the current culture.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object from the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph> property is equivalent to retrieving a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object from the <ph id="ph4">`CultureInfo.CurrentCulture.NumberFormat`</ph> property.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> based on the culture of the current thread.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how the graphical user interface displays the shape of a digit.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.DigitSubstitution%2A&gt;</ph> property is reserved for future use.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>Currently, it is not used in either parsing or formatting operations for the current <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the culture-specific digit shape.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The value in a set operation is not a valid <ph id="ph1">&lt;xref href="System.Globalization.DigitShapes"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Gets an object of the specified type that provides a number formatting service.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Format(String, IFormatProvider)`</ph> methods supported by the base data types invoke this method when the current <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> is passed as the <ph id="ph3">&lt;xref:System.IFormatProvider&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the required formatting service.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph>, if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">formatType</ph><ept id="p1">&lt;/code&gt;</ept> is the same as the type of the current <ph id="ph3">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> associated with the specified <ph id="ph2">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method uses the <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> method of <ph id="ph2">`formatProvider`</ph> using <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> as the Type parameter.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`formatProvider`</ph> is <ph id="ph2">`null`</ph> or if <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> returns <ph id="ph4">`null`</ph>, this method returns <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application gets a <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for a specific culture using one of the following methods:</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>Through the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.NumberFormat%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>Through the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetInstance%2A&gt;</ph> method where <ph id="ph2">`provider`</ph> is a <ph id="ph3">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object is created only for the invariant culture or for specific cultures, not for neutral cultures.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the invariant culture, specific cultures, and neutral cultures, see the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph> used to get the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> to get <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo.CurrentInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> associated with the specified <ph id="ph2">&lt;xref href="System.IFormatProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>Gets a read-only <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object that is culture-independent (invariant).</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by this property does not change, regardless of the current culture.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>It represents the formatting conventions of the invariant culture, which is a culture associated with the English language but not with any country/region.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The invariant culture is used in formatting operations that are culture-independent or that produce result strings suitable for display across multiple cultures.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>A read-only  object that is culture-independent (invariant).</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to perform an assignment to a property of a read-only <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> causes an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.Clone%2A&gt;</ph> method to create a read/write <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object from a read-only object, as the following example illustrates.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Globalization.NumberFormatInfo.IsReadOnly#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/cs/isreadonly1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Globalization.NumberFormatInfo.IsReadOnly#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.numberformatinfo.isreadonly/vb/isreadonly1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> is read-only; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that represents the IEEE NaN (not a number) value.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on NaN values, see <ph id="ph1">&lt;xref:System.Double&gt;</ph> or <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>The string that represents the IEEE NaN (not a number) value.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "NaN".</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>Gets or sets a string array of native digits equivalent to the Western digits 0 through 9.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character set that is specified by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NativeDigits%2A&gt;</ph> property has no effect on parsing or formatting operations.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only the Basic Latin digits 0 (U+0030) through 9 (U+0039) are used when formatting or parsing numeric values or date and time values.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A string array that contains the native equivalent of the Western digits 0 through 9.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The default is an array having the elements "0", "1", "2", "3", "4", "5", "6", "7", "8", and "9".</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>In a set operation, the value is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>In a set operation, an element of the value array is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>In a set operation, the value array does not contain 10 elements.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>In a set operation, an element of the value array does not contain either a single <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> object or a pair of <ph id="ph2">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> objects that comprise a surrogate pair.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>In a set operation, an element of the value array is not a number digit as defined by the <bpt id="p1">[</bpt>Unicode Standard<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37123)</ept>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>That is, the digit in the array element does not have the Unicode <ph id="ph1">`Number, Decimal Digit`</ph> (Nd) General Category value.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>In a set operation, the numeric value of an element in the value array does not correspond to the element's position in the array.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>That is, the element at index 0, which is the first element of the array, does not have a numeric value of 0, or the element at index 1 does not have a numeric value of 1.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that represents negative infinity.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on negative infinity, see <ph id="ph1">&lt;xref:System.Double&gt;</ph> or <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The string that represents negative infinity.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "-Infinity".</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that denotes that the associated number is negative.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used in both formatting and parsing operations.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on its use in formatting operations, see the <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept> topics.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The string that denotes that the associated number is negative.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "-".</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of decimal places to use in numeric values.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalDigits%2A&gt;</ph> property is used with the "F" and "N" standard format strings without a precision specifier in numeric formatting operations.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>It defines the default number of fractional digits that appear after the decimal separator.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is overridden if a precision specifier is used.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>The number of decimal places to use in numeric values.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 2.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 99.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use as the decimal separator in numeric values.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph> property is used with the "E", "F", "G", "N", and "R" standard format strings to define the symbol that separates integral from fractional digits.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>The initial value of this property is derived from the settings in the <bpt id="p1">**</bpt>Region and Language<ept id="p1">**</ept> item in Control Panel.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>The string to use as the decimal separator in numeric values.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is ".".</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>The property is being set to an empty string.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that separates groups of digits to the left of the decimal in numeric values.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph> property is used with the "N" standard format string to define the symbol that separates groups of integral digits.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>The initial value of this property is derived from the settings in the <bpt id="p1">**</bpt>Region and Language<ept id="p1">**</ept> item in Control Panel.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The string that separates groups of digits to the left of the decimal in numeric values.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is ",".</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of digits in each group to the left of the decimal in numeric values.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A&gt;</ph> property affects the result of number values that are formatted by using the "N" .</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a custom numeric format string or other standard numeric format strings are used, the value of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSizes%2A&gt;</ph> property is ignored.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every element in the one-dimensional array must be an integer from 1 through 9.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last element can be 0.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each subsequent element refers to the next significant group of digits to the left of the previous group.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last element is 0, the remaining digits are not grouped.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to "55,55555,55555,55555,4444,333.00".</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the array contains { 3, 4, 0 }, the digits are grouped similar to "55555555555555555,4444,333.00".</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>The number of digits in each group to the left of the decimal in numeric values.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is a one-dimensional array with only one element, which is set to 3.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>The property is being set and the array contains an entry that is less than 0 or greater than 9.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The property is being set and the array contains an entry, other than the last entry, that is set to 0.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Gets or sets the format pattern for negative numeric values.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A&gt;</ph> property defines the format of negative values formatted with the "N" standard numeric format string.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has one of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>The symbol "-" is the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph> and <ph id="ph2">`n`</ph> is a number.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>Associated pattern</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>(n)</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>2</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>- n</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>3</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>4</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>n -</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for the invariant culture returned by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.InvariantInfo%2A&gt;</ph> property is 1, which represents "-n", where <bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept> is a number.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The format pattern for negative numeric values.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 4.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of decimal places to use in percent values.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalDigits%2A&gt;</ph> property is used with the "P" standard format string without a precision specifier in numeric formatting operations.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>It defines the default number of fractional digits that appear after the decimal separator.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is overridden if a precision specifier is used.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The number of decimal places to use in percent values.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 2.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 99.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use as the decimal separator in percent values.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A&gt;</ph> property is used with the "P" standard format string to define the symbol that separates integral from fractional digits.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>The string to use as the decimal separator in percent values.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is ".".</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>The property is being set to an empty string.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that separates groups of digits to the left of the decimal in percent values.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentGroupSeparator%2A&gt;</ph> property is used with the "P" standard format string to define the symbol that separates groups of integers.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The string that separates groups of digits to the left of the decimal in percent values.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is ",".</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of digits in each group to the left of the decimal in percent values.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentGroupSizes%2A&gt;</ph> property is used with the "P" standard format string to define the number of digits that appear in integral groups.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every element in the one-dimensional array must be an integer from 1 through 9.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last element can be 0.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first element of the array defines the number of elements in the least significant group of digits immediately to the left of the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentDecimalSeparator%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each subsequent element refers to the next significant group of digits to the left of the previous group.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last element of the array is not 0, the remaining digits are grouped based on the last element of the array.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last element is 0, the remaining digits are not grouped.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the array contains { 3, 4, 5 }, the digits are grouped similar to "55,55555,55555,55555,4444,333.00%".</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the array contains { 3, 4, 0 }, the digits are grouped similar to "55555555555555555,4444,333.00%".</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>The number of digits in each group to the left of the decimal in percent values.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is a one-dimensional array with only one element, which is set to 3.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>The property is being set and the array contains an entry that is less than 0 or greater than 9.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The property is being set and the array contains an entry, other than the last entry, that is set to 0.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>Gets or sets the format pattern for negative percent values.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentNegativePattern%2A&gt;</ph> property is used with the "P" standard format string to define the pattern of negative percentage values.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has one of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>The symbol "%" is the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A&gt;</ph>, the symbol "-" is the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A&gt;</ph>, and <ph id="ph3">`n`</ph> is a number.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values 3-11 were introduced in the .NET Framework 2.0 and cannot be used in earlier versions.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>Associated pattern</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>-n %</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>2</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>3</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>4</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>5</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>6</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>7</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>-% n</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>8</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>n %-</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>9</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>% n-</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>10</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>% -n</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>11</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT">
          <source>n- %</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The format pattern for negative percent values.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 0, which represents "-n %", where "%" is the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo.PercentSymbol"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">n</ph><ept id="p1">&lt;/code&gt;</ept> is a number.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 11.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Gets or sets the format pattern for positive percent values.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentPositivePattern%2A&gt;</ph> property is used with the "P" standard format string to define pattern of positive percentage values.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has one of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>The symbol "%" is the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A&gt;</ph> and <ph id="ph2">`n`</ph> is a number.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT">
          <source>Associated pattern</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>n %</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>2</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>3</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>% n</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>The format pattern for positive percent values.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is 0, which represents "n %", where "%" is the <ph id="ph2">&lt;xref href="System.Globalization.NumberFormatInfo.PercentSymbol"&gt;&lt;/xref&gt;</ph> and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">n</ph><ept id="p1">&lt;/code&gt;</ept> is a number.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>The property is being set to a value that is less than 0 or greater than 3.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use as the percent symbol.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string assigned to the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PercentSymbol%2A&gt;</ph> property is included in the result string when a numeric value is formatted with the "P"  or with a format string that includes the "%" .</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve">
          <source>The string to use as the percent symbol.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "%".</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use as the per mille symbol.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string assigned to the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PerMilleSymbol%2A&gt;</ph> property is included in the result string when a numeric value is formatted with a format string that includes the "‰" .</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>The string to use as the per mille symbol.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "‰", which is the Unicode character U+2030.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that represents positive infinity.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on positive infinity, see <ph id="ph1">&lt;xref:System.Double&gt;</ph> or <ph id="ph2">&lt;xref:System.Single&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>The string that represents positive infinity.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "Infinity".</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve">
          <source>The property is being set to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve">
          <source>Gets or sets the string that denotes that the associated number is positive.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used only for parsing numeric strings, not for formatting.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>The string that denotes that the associated number is positive.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The default for <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo.InvariantInfo"&gt;&lt;/xref&gt;</ph> is "+".</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>In a set operation, the value to be assigned is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The property is being set and the <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>Returns a read-only <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> wrapper.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>This wrapper prevents any modifications to <ph id="ph1">`nfi`</ph>.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to perform an assignment to a property of a read-only <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> causes an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> to wrap.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.Globalization.NumberFormatInfo"&gt;&lt;/xref&gt;</ph> wrapper around <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">nfi</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;nfi&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>