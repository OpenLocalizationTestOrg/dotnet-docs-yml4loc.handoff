<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">622f843892622b85545583c51c77fb4d645d74e7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.WebSockets.WebSocket.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05f37eb257fac88284a82e536a1cd4519afa331b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65d58a587afc93571bc0835fe6afe862c9e50ee4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The WebSocket class allows applications to send and receive data after the WebSocket upgrade has completed.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some of the classes in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace are supported on Windows 7, Windows Vista SP2, and Windows Server 2008.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the only public implementations of client and server WebSockets are supported on Windows 8 and Windows Server 2012.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The classes and class elements in the <ph id="ph1">&lt;xref:System.Net.WebSockets&gt;</ph> namespace that are supported on Windows 7, Windows Vista SP2, and Windows Server 2008 are abstract classes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows an application developer to inherit and extend these abstract classes with an actual implementation of client WebSockets.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates an instance of the <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aborts the WebSocket connection and cancels any pending IO operations.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Closes the WebSocket connection as an asynchronous operation using the close handshake defined in the <bpt id="p1">[</bpt>WebSocket protocol specification<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept> section 7.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the WebSocket has been closed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method closes the WebSocket connection using the close handshake defined in the <bpt id="p1">[</bpt>WebSocket protocol specification<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept> section 7.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Indicates the reason for closing the WebSocket connection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Specifies a human readable explanation as to why the connection is closed.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The token that can be used to propagate notification that operations should be canceled.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initiates or completes the close handshake defined in the <bpt id="p1">[</bpt>WebSocket protocol specification section 7<ept id="p1">](http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-06)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the output on the WebSocket has been closed.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Indicates the reason for closing the WebSocket connection.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Allows applications to specify a human readable explanation as to why the connection is closed.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The token that can be used to propagate notification that operations should be canceled.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Indicates the reason why the remote endpoint initiated the close handshake.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the close handshake has not been initiated yet, WebSocketCloseStatus.None is returned.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocketCloseStatus"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Allows the remote endpoint to describe the reason why the connection was closed.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Create client buffers to use with this <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the client receive buffer.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the send buffer.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.ArraySegment`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An array with the client buffers.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Allows callers to create a client side WebSocket class which will use the WSPC for framing purposes.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The connection to be used for IO operations.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The subprotocol accepted by the client.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The size in bytes of the client WebSocket receive buffer.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The size in bytes of the client WebSocket send buffer.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Determines how regularly a frame is sent over the connection as a keep-alive.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Applies only when the connection is idle.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Indicates whether a random key or a static key (just zeros) should be used for the WebSocket masking.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Will be used as the internal buffer in the WPC.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The size has to be at least <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">2 * ReceiveBufferSize + SendBufferSize + 256 + 20 (16 on 32-bit)</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Creates a WebSocket server buffer.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The size, in bytes, of the desired buffer.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.ArraySegment`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the default WebSocket protocol keep-alive interval in milliseconds.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The default WebSocket protocol keep-alive interval in milliseconds.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The typical value for this interval is 30 seconds.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Used to clean up unmanaged resources for ASP.NET and self-hosted implementations.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates if the WebSocket instance is targeting <ph id="ph1">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph> is targeting <ph id="ph3">[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</ph>; otherwise <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates if the state of the WebSocket instance is closed or aborted.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The current state of the WebSocket.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph> is closed or aborted; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Receives data from the <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph> connection asynchronously.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph> object will complete after the data has been received on the <ph id="ph2">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph> object in parallel.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>References the application buffer that is the storage location for the received data.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Propagates the notification that operations should be canceled.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1.Result"&gt;&lt;/xref&gt;</ph> property on the task object returns a <ph id="ph2">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> array containing the received data.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Allows callers to register prefixes for WebSocket requests (ws and wss).</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Sends data over the <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocket"&gt;&lt;/xref&gt;</ph> connection asynchronously.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation will not block.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the data has been sent on the <ph id="ph2">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exactly one send and one receive is supported on each <ph id="ph1">&lt;xref:System.Net.WebSockets.WebSocket&gt;</ph> object in parallel.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The buffer to be sent over the connection.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Indicates whether the application is sending a binary or text message.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Indicates whether the data in "buffer" is the last part of a message.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The token that propagates the notification that operations should be canceled.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The task object representing the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Returns the current state of the WebSocket connection.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Net.WebSockets.WebSocketState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The subprotocol that was negotiated during the opening handshake.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Verifies that the connection is in an expected state.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The current state of the WebSocket to be tested against the list of valid states.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>List of valid connection states.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>