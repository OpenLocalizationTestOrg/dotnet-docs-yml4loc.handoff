<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">825928cc9f578f0ccc9f315b86c1d39da2ce04b9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.LocalValueEntry.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">43ad2141668cb6c664c7ff7f9262ecb53af924bc</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b95698a4cfc8b1b46cd4b1f70f97fe4a7a8fa0da</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a property identifier and the property value for a locally set dependency property.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of this class are returned when getting the value of the <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> properties are read-only.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class has no public constructor.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to obtain instances of this class you must call <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph>, and then get the value of <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> from the returned <ph id="ph3">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Determines whether two <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> instances are equal.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> to compare with the current <ph id="ph2">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)"&gt;&lt;/xref&gt;</ph> implementation compares the values of the <ph id="ph2">&lt;xref href="System.Windows.LocalValueEntry.Property"&gt;&lt;/xref&gt;</ph>, and potentially compares the values of <ph id="ph3">&lt;xref href="System.Windows.LocalValueEntry.Value"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry.Property"&gt;&lt;/xref&gt;</ph> component of a <ph id="ph2">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> is a value type, so will always be a bitwise comparison.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry.Value"&gt;&lt;/xref&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>By default, this would be a reference equality of the values and thus the equality of the entire <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> would become a reference equality.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns the hash code for this <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A signed 32-bit integer value.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Compares the specified <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> instances to determine whether they are the same.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.op_Equality%2A&gt;</ph> implementation compares the values of the <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph>, and potentially compares the values of <ph id="ph3">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> component of a <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> is always a value type, so this comparison will always be a bitwise value comparison.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">`==`</ph> operator on the two values internally.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this is a reference equality of the values.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The first instance to compare.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The second instance to compare.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">obj1</ph><ept id="p1">&lt;/code&gt;</ept><ph id="ph3">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> is equal to the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">obj2</ph><ept id="p2">&lt;/code&gt;</ept><ph id="ph5">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Compares the specified <ph id="ph1">&lt;xref href="System.Windows.LocalValueEnumerator"&gt;&lt;/xref&gt;</ph> instances to determine whether they are different.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The first instance to compare.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The second instance to compare.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>This implementation compares the values of the <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry.Property"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Windows.LocalValueEntry.Value"&gt;&lt;/xref&gt;</ph> components of a <ph id="ph3">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry.Property"&gt;&lt;/xref&gt;</ph> component of a <ph id="ph2">&lt;xref href="System.Windows.LocalValueEntry"&gt;&lt;/xref&gt;</ph> is always a value type, so this comparison will always be a bitwise comparison.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>For the <ph id="ph1">&lt;xref href="System.Windows.LocalValueEntry.Value"&gt;&lt;/xref&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">`==`</ph> operator on the two values internally.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>By default, this is a reference equality of the values.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets the identifier for the locally set dependency property that is represented by this entry.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to query the identifier of the locally set dependency property and to obtain its metadata.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This obtained metadata may include the initial default value of the property and whether the property supports property value inheritance.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The identifier for the locally set dependency property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Gets the value of the locally set dependency property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine a more specific type for this value, check the <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> for the current <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> and get its <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The value of the locally set dependency property as an object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>