<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f054587333f44048c0a0be56cf585505c364eac9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.TypeIdentifierAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">890313dbcc7230e14a03c682c00b031469c986bd</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9b37854f37470252e36f0046a6fff2ef130d3a62</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides support for type equivalence.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeIdentifierAttribute&gt;</ph> attribute is primarily emitted by compilers.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It serves two purposes:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For all imported types, it indicates that the type is intended to be used for type equivalence.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For types that donâ€™t have GUIDs in their type library, it has a constructor that takes two strings (<ph id="ph1">`scope`</ph> and <ph id="ph2">`identifier`</ph>).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are combined into a GUID and become the key that is used for type equivalence.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Type equivalence is discussed in the <ph id="ph1">&lt;xref:System.Type.IsEquivalentTo%2A?displayProperty=fullName&gt;</ph> topic.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.TypeIdentifierAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor overload does not accept parameters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, interfaces that have this attribute use the type's GUID and simple name to establish type equivalence.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.TypeIdentifierAttribute"&gt;&lt;/xref&gt;</ph> class with the specified scope and identifier.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`scope`</ph> and <ph id="ph2">`identifier`</ph> parameters are used to establish type equivalence.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are combined into a GUID and become the key that is used for type equivalence.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is particularly useful for types that do not have GUIDs in their type library.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.TypeIdentifierAttribute&gt;</ph> class internally maintains the <ph id="ph2">`scope`</ph> and <ph id="ph3">`identifier`</ph> parameters as private members.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The first type equivalence string.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The second type equivalence string.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identifier</ph><ept id="p1">&lt;/code&gt;</ept> parameter that was passed to the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)"&gt;&lt;/xref&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The value of the constructor's <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">identifier</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">scope</ph><ept id="p1">&lt;/code&gt;</ept> parameter that was passed to the <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.TypeIdentifierAttribute.#ctor(System.String,System.String)"&gt;&lt;/xref&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The value of the constructor's <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">scope</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>