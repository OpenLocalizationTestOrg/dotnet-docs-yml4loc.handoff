<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3243c722c7516ff3bbaef164f572460a970b28ce</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.MaskedTextProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9faabd07bce77fc7a5e61909ada92a7134056270</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">346559d06f1a77b2256c832997b4a5e48996d796</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a mask-parsing service that can be used by any number of controls that support masking, such as the <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> control contains a mask, composed of literal characters and formatting elements, that it tests all user input against.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead of permanently associating a specific mask-parsing engine with <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>, Windows Forms provides it as a separate service, represented by the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class, which defines the syntax of the masking language discussed in the documentation for the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the members of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class refer their implementation to similarly named members of the associated <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.PromptChar%2A?displayProperty=fullName&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class refers all access to the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> of the <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The mask-parsing engine used by <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> is modeled after the Masked Edit control included in Microsoft Visual Basic version 6.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Its masking language is described in the documentation for the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following three distinct strings are involved with the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>String name</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Input character or string</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents the characters used as input that the mask is applied against.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>In actuality, the input string may be composed of multiple input operations, including <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the input string cannot be accessed directly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, aspects of the input string handling are available though the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mask</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents the input formatting mask used to transform the input string into the formatted string.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This string is set in the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> and accessed primarily though the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Characteristics of the mask are also available through other members, such as the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Formatted string</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Represents the string that results when the full mask is applied to the input string.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted string can be queried with many members of the class, including <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskFull%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A&gt;</ph>, and so on.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The full value of the formatted string is available from the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input string may represent direct user input, as in the case of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>, or may be generated by other processes not directly associated with user input/output operations.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of this constructor is exactly equivalent to the following call to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask and ASCII restriction value.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of this constructor is exactly equivalent to the following call to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to restrict input to ASCII-compatible characters; otherwise <ph id="ph2">`false`</ph> to allow the entire Unicode set.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask and culture.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of this constructor is exactly equivalent to the following call to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask, password character, and prompt usage value.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of this constructor is exactly equivalent to the following call to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that will be displayed for characters entered into a password string.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow the prompt character as input; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask, culture, and ASCII restriction value.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of this constructor is exactly equivalent to the following call to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to restrict input to ASCII-compatible characters; otherwise <ph id="ph2">`false`</ph> to allow the entire Unicode set.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask, culture, password character, and prompt usage value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of this constructor is exactly equivalent to the following call to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%28System.String%2CSystem.Globalization.CultureInfo%2CSystem.Boolean%2CSystem.Char%2CSystem.Char%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor:</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that will be displayed for characters entered into a password string.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow the prompt character as input; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> class using the specified mask, culture, prompt usage value, prompt character, password character, and ASCII restriction value.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor represents the most general overloaded form.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mask`</ph> parameter must conform to the masking language defined by the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class, which is detailed in the <ph id="ph3">&lt;xref:System.Windows.Forms.MaskedTextBox.Mask%2A?displayProperty=fullName&gt;</ph> property of the <ph id="ph4">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because neutral cultures cannot be queried for culture-specific information, the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor will use the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.GetCultures%2A&gt;</ph> method to search for the first non-neutral culture to use to determine the proper separator characters.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that represents the input mask.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> that is used to set region-sensitive separator characters.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> value that specifies whether the prompt character should be allowed as a valid input character.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that will be displayed as a placeholder for user input.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that will be displayed for characters entered into a password string.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to restrict input to ASCII-compatible characters; otherwise <ph id="ph2">`false`</ph> to allow the entire Unicode set.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The mask parameter is <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The mask contains one or more non-printable characters.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Adds the characters in the specified input string to the end of the formatted string, and then outputs position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method adds the characters from the <ph id="ph2">`input`</ph> string to the formatted string, starting with the first available position after <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will fail for any of the following reasons:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any of the characters in the input value, <ph id="ph1">`input`</ph>, are not printable, or the input value does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough available edit positions in the formatted string after the last assigned position.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method fails, no additions are made and the method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method functions the same as the overridden version taking a single <ph id="ph1">&lt;xref:System.String&gt;</ph> parameter, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29&gt;</ph>, except that it outputs additional information.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing character values to be appended to the formatted string.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the attempt was made to add the character.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters from the input string were added successfully; otherwise <ph id="ph2">`false`</ph> to indicate that no characters were added.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Adds the specified input character to the end of the formatted string, and then outputs position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method attempts to add the <ph id="ph2">`input`</ph> character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will fail if all available positions are before the last assigned position.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will fail for any of the following reasons:</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input value, <ph id="ph1">`input`</ph>, is not printable, or it does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method functions the same as the overridden version taking a single <ph id="ph1">&lt;xref:System.Char&gt;</ph> parameter, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29&gt;</ph>, except that it outputs additional information.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to be appended to the formatted string.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the attempt was made to add the character.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the input character was added successfully; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Adds the specified input character to the end of the formatted string.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.Char%29&gt;</ph> method adds the <ph id="ph2">`input`</ph> character value to the first available position in the formatted string after the position that was last assigned, which is represented by the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will fail for any of the following reasons:</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input value, <ph id="ph1">`input`</ph>, is not printable, or it does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are zero available edit positions in the formatted string, or there are no available edit positions after the last assigned position.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to be appended to the formatted string.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the input character was added successfully; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Adds the characters in the specified input string to the end of the formatted string.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%28System.String%29&gt;</ph> method adds the characters from the <ph id="ph2">`input`</ph> string to the formatted string, starting with the first available position after <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will fail for any of the following reasons:</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any of the characters in the input value, <ph id="ph1">`input`</ph>, are not printable, or the input value does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough available edit positions in the formatted string after the last assigned position.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this method fails, no additions are made and the method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing character values to be appended to the formatted string.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters from the input string were added successfully; otherwise <ph id="ph2">`false`</ph> to indicate that no characters were added.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the prompt character should be treated as a valid input character or not.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> property's value is set in the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the prompt character must be valid for the current location in the mask in order to be accepted.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can enter <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.PromptChar"&gt;&lt;/xref&gt;</ph> into the control; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the mask accepts characters outside of the ASCII character set.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph> property's value is set in the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`true`</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph> restricts user input to the ASCII character set.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if only ASCII is accepted; <ph id="ph2">`false`</ph> if <ph id="ph3">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> can accept any arbitrary Unicode character.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Gets the number of editable character positions that have already been successfully assigned an input value.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The total number of editable character positions, represented by the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> property, should equal the sum of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> containing the number of editable character positions in the input mask that have already been assigned a character value in the formatted string.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Gets the number of editable character positions in the input mask that have not yet been assigned an input value.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The total number of editable character positions, represented by the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> property, should equal the sum of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> containing the number of editable character positions that not yet been assigned a character value.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Clears all the editable input characters from the formatted string, replacing them with prompt characters.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear&gt;</ph> method reinitializes the formatted string, inserting the prompt character into all editable positions.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Clears all the editable input characters from the formatted string, replacing them with prompt characters, and then outputs descriptive information.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear%28System.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method reinitializes the formatted string, inserting the prompt character into all editable positions.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>It functions equivalently to the overridden version that takes no parameters, <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear&gt;</ph>, except it outputs additional information.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Creates a copy of the current <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Clone%2A&gt;</ph> method returns a new copy of the current <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider"&gt;&lt;/xref&gt;</ph> object this method creates, cast as an object.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets the culture that determines the value of the localizable separators and placeholders in the input mask.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Culture%2A&gt;</ph> property is set in the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> containing the culture information associated with the input mask.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets the default password character used obscure user input.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A&gt;</ph> property is defined in the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class to be the asterisk character (*).</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> that represents the default password character.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Gets the number of editable positions in the formatted string.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The total number of editable character positions, represented by the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> property, must equal the sum of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AssignedEditPositionCount%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.AvailableEditPositionCount%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value includes both the required and the optional editable characters.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> containing the number of editable positions in the formatted string.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets a newly created enumerator for the editable positions in the formatted string.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>On every access of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositions%2A&gt;</ph> property, a temporary collection of editable positions is created that the retrieved <ph id="ph2">&lt;xref:System.Collections.IEnumerator&gt;</ph> operates on.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection is read-only.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> that supports enumeration over the editable positions in the formatted string.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Returns the position of the first assigned editable position after the specified position using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted string is composed of editable characters and literals copied from the mask.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A&gt;</ph> method is used to search for the first assigned character after a specified position and search direction.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result can subsequently be passed as a parameter to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the assigned value at this position.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A&gt;</ph> methods are complements of this method.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to start the search.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first assigned editable position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>Returns the position of the first assigned editable position between the specified positions using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted string is composed of editable characters and literals copied from the mask.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A&gt;</ph> method is used to search for the first assigned character between two specified positions, inclusive, using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result can subsequently be passed as a parameter to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the assigned value at this position.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A&gt;</ph> methods are complements of this method.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search starts.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search ends.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first assigned editable position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Returns the position of the first editable position after the specified position using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A&gt;</ph> method is used to search for the next assigned or unassigned editable position in the formatted string after the specified position.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> method is the complement of this method.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to start the search.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first editable position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Returns the position of the first editable position between the specified positions using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A&gt;</ph> method is used to search for the first editable character between two specified positions, inclusive, using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result can subsequently be passed as a parameter to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the assigned value at this position.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> method is the complement of this method.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search starts.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search ends.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first editable position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Returns the position of the first non-editable position after the specified position using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> method is used to search for the next literal character in the formatted string after the specified position.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result can subsequently be passed as a parameter to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the literal value at this position.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionFrom%2A&gt;</ph> method is the complement of this method.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to start the search.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first literal position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Returns the position of the first non-editable position between the specified positions using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> method is used to search for the first literal character between two specified positions, inclusive, using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The result can subsequently be passed as a parameter to the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> indexer to obtain the literal value at this position.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindEditPositionInRange%2A&gt;</ph> method is the complement of this method.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search starts.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search ends.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first literal position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Returns the position of the first unassigned editable position after the specified position using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted string is composed of editable characters and literals copied from the mask.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionFrom%2A&gt;</ph> method is used to search for the first unassigned character after a specified position and search direction.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character should occupy this position.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionFrom%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionFrom%2A&gt;</ph> methods are complements of this method.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to start the search.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first unassigned editable position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Returns the position of the first unassigned editable position between the specified positions using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formatted string is composed of editable characters and literals copied from the mask.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editable character positions will either be occupied by the prompt character copied from the mask if they are unassigned, or with a valid input character if they have been assigned an input.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindUnassignedEditPositionInRange%2A&gt;</ph> method is used to search for the first unassigned character between two specified positions, inclusive, using the specified search direction.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character should occupy this position.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.FindNonEditPositionInRange%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.FindAssignedEditPositionInRange%2A&gt;</ph> methods are complements of this method.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search starts.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the search ends.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Boolean"&gt;&lt;/xref&gt;</ph> indicating the search direction; either <ph id="ph2">`true`</ph> to search forward or <ph id="ph3">`false`</ph> to search backward.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>If successful, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing the zero-based position of the first unassigned editable position encountered; otherwise <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> denotes success or failure.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following methods of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class contain a parameter of type <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextResultHint&gt;</ph> that is used to output information about the operation of the method: <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.Add%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.Clear%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A&gt;</ph>, and <ph id="ph11">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.GetOperationResultFromHint%2A&gt;</ph> method interprets this value and returns a Boolean value that indicates whether the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextResultHint&gt;</ph> has signaled that the operation was a success or failure.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> value typically obtained as an output parameter from a previous operation.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> value represents a success; otherwise, <ph id="ph3">`false`</ph> if it represents failure.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether literal characters in the input mask should be included in the formatted string.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties will determine whether prompt and literal characters appear when calling the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>By setting both of these properties to <ph id="ph1">`false`</ph>, the parsed string will represent only the characters entered by the user.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if literals are included; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether <ph id="ph1">&lt;xref href="System.Windows.Forms.MaskedTextBox.PromptChar"&gt;&lt;/xref&gt;</ph> is used to represent the absence of user input when displaying the formatted string.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties will determine whether prompt and literal characters appear when calling the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>By setting both of these properties to <ph id="ph1">`false`</ph>, the parsed string will represent only the characters entered by the user.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the prompt character is used to represent the positions where no user input was provided; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Inserts the specified character at the specified position within the formatted string.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts a character into the first edit position at or beyond that specified by the <ph id="ph2">`pos`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will shift all existing characters after the insertion point over by one position to make room for the inserted <ph id="ph1">`input`</ph> character.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of the following errors occurs, the insertion is not performed, and the method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editable character was not found in the formatted string at or beyond the specified position, <ph id="ph1">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>The insertion character, <ph id="ph1">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shifting the existing characters would produce a violation of the mask.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">`input`</ph> string will cause no change in the formatted string, but will return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> to be inserted.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to insert the character.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the insertion was successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Inserts the specified string at a specified position within the formatted string.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts each character from the <ph id="ph2">`input`</ph> string into the edit positions located at position <ph id="ph3">`pos`</ph> and beyond.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will shift all existing characters after the insertion point over by one position for each inserted character.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of the following errors occurs, no insertion is performed, and the method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not enough editable characters exist in the formatted string at or beyond the specified position, <ph id="ph1">`pos`</ph>, to insert all of the characters from the <ph id="ph2">`input`</ph> string.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shifting the existing characters would produce a violation of the mask.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this shifting occurs during the insertion of each individual character.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">`input`</ph> string will cause no change in the formatted string, but will return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> to be inserted.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to insert the input string.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the insertion was successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Inserts the specified character at the specified position within the formatted string, returning the last insertion position and the status of the operation.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts a character into the first edit position at or beyond that specified by the <ph id="ph2">`pos`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will shift all existing characters after the insertion point over by one position to make room for the inserted <ph id="ph1">`input`</ph> character.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of the following errors occurs, the insertion is not performed, and the method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editable character was not found in the formatted string at or beyond the specified position, <ph id="ph1">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The insertion character, <ph id="ph1">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are no available positions to the right of the insertion point, so that existing characters cannot be shifted.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shifting the existing characters would produce a violation of the mask.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">`input`</ph> string will cause no change in the formatted string, but will return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> to be inserted.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to insert the character.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the insertion operation.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the insertion was successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>Inserts the specified string at a specified position within the formatted string, returning the last insertion position and the status of the operation.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.InsertAt%2A&gt;</ph> method inserts each character from the <ph id="ph2">`input`</ph> string into the edit positions located at position <ph id="ph3">`pos`</ph> and beyond.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will shift all existing characters after the insertion point over by one position for each inserted character.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of the following errors occurs, no insertion is performed, and the method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>Not enough editable characters exist in the formatted string at or beyond the specified position, <ph id="ph1">`pos`</ph>, to insert all of the characters from the <ph id="ph2">`input`</ph> string.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more of the insertion characters are not a valid input character because they are not printable or do not match their corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough available positions to the right of the insertion point, so that existing characters cannot be shifted.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shifting the existing characters would produce a violation of the mask.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this shifting occurs during the insertion of each individual character.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty <ph id="ph1">`input`</ph> string will cause no change in the formatted string, but will return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> to be inserted.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string to insert the input string.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>If the method is successful, the last position where a character was inserted; otherwise, the first position where the insertion failed.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the insertion operation.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the insertion was successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Gets the upper bound of the range of invalid indexes.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.InvalidIndex%2A&gt;</ph> property is used to represent a result that is not valid for indexing operations, such as the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the provider or implement your own, you should use this property to decide if an index is invalid, rather than hard-coding knowledge of invalid values.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>A value representing the largest invalid index, as determined by the provider implementation.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>For example, if the lowest valid index is 0, this property will return -1.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Determines whether the specified position is available for assignment.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IsAvailablePosition%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> only if all of the following conditions are true:</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified position is an editable character.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character has not already been assigned to this position.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The zero-based position in the mask to test.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified position in the formatted string is editable and has not been assigned to yet; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Determines whether the specified position is editable.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IsEditPosition%2A&gt;</ph> method returns <ph id="ph2">`true`</ph> only if both of the following conditions are true:</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is within the bounds of the formatted string; that is, its value is greater than or equal to zero and less than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified position is an editable character.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The zero-based position in the mask to test.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified position in the formatted string is editable; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether password protection should be applied to the formatted string.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>Password protection can be initiated using one of the following two ways:</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property to a non-<ph id="ph2">`null`</ph> value.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A&gt;</ph> property to <ph id="ph2">`true`</ph>., which also sets the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property to the <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.DefaultPasswordChar%2A&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IsPassword%2A&gt;</ph> is used by the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> methods to determine whether to reveal the actual input characters or obscure them with <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the input string is to be treated as a password string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Determines whether the specified character is a valid input character.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid input characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified character contains a valid input value; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Determines whether the specified character is a valid mask character.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid mask characters include all printable characters, which include letters, digits, punctuation, symbols and the space character.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified character contains a valid mask value; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>Determines whether the specified character is a valid password character.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Valid password characters include all printable characters and the null character, which is used to disable password functionality.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Printable characters include letters, digits, punctuation, symbols and the space character.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified character contains a valid password value; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Gets the element at the specified position in the formatted string.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Item%2A&gt;</ph> property is the standard indexer for the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>A zero-based index of the element to retrieve.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> at the specified position in the formatted string.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero or greater than or equal to the <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.Length"&gt;&lt;/xref&gt;</ph> of the mask.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Gets the index in the mask of the rightmost input character that has been assigned to the mask.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.LastAssignedPosition%2A&gt;</ph> property represents the farthest edit position in the mask, relative to the origin, that has been assigned an input character.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>For languages read left-to-right (LTR), such as English, this is the rightmost assigned position; for languages read right-to-left (RTL), this would be the leftmost position.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>If at least one input character has been assigned to the mask, an <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> containing the index of rightmost assigned position; otherwise, if no position has been assigned, <ph id="ph2">&lt;xref href="System.ComponentModel.MaskedTextProvider.InvalidIndex"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Gets the length of the mask, absent any mask modifier characters.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> property represents the total number of characters in the mask, including both the literal and editable characters.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The number of literal characters can be determined by subtracting the value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.EditPositionCount%2A&gt;</ph> from the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> also describes the length of the formatted string, including input characters, literals, and prompt characters.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> containing the number of positions in the mask, excluding characters that modify mask input.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>Gets the input mask.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property is set in the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mask must contain only valid characters as defined by the masking language.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> containing the full mask.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether all required inputs have been entered into the formatted string.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A&gt;</ph> property checks only required input elements.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether all required and optional input elements have been entered, use the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.MaskFull%2A?displayProperty=fullName&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph> class instead.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property determines which formatting elements are considered required and which are optional.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all required input has been entered into the mask; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether all required and optional inputs have been entered into the formatted string.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>To verify if only required input elements have been entered, use the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.MaskCompleted%2A&gt;</ph> property instead.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph> property determines which formatting elements are considered required and which are optional.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all required and optional inputs have been entered; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Gets or sets the character to be substituted for the actual input characters.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>For sensitive user input, it is common practice to conceal the actual information entered by the user during output operations.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a non-<ph id="ph2">`null`</ph> character, output methods such as <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> will obscure the input characters with the specified password character.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`null`</ph> will disable password protection functionality.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value used as the password character.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source>The password character specified when setting this property is the same as the current prompt character, <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider.PromptChar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>The two are required to be different.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source>The character specified when setting this property is not a valid password character, as determined by the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>Gets or sets the character used to represent the absence of user input for all available edit positions.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> property represents the prompt character that is used by the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> methods to represent the current state of the formatted input string.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>A prompt character is placed in editable positions that have not yet been assigned an input value.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some versions of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method also depend on the value of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The character used to prompt the user for input.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The default is an underscore (_).</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>The prompt character specified when setting this property is the same as the current password character, <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider.PasswordChar"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The two are required to be different.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>The character specified when setting this property is not a valid password character, as determined by the <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextProvider.IsValidPasswordChar(System.Char)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Removes the last assigned character from the formatted string.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph> method has no effect if there are no characters assigned to the mask yet.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Removes the last assigned character from the formatted string, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Remove%2A&gt;</ph> method has no effect if there are no characters assigned to the mask yet.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the last assigned character is removed from the formatted string, the editable mask character is reset for that position, allowing subsequent input.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the character was actually removed.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Removes the assigned character at the specified position from the formatted string.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> method has no effect if there are no assigned characters at the removal position specified.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>Literal characters are not affected by this method.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Vacated positions are reset for input.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>If movement of the characters is prevented by the mask definition, no removal occurs, and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method call is exactly equivalent to the following call to the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%28System.Int32%2CSystem.Int32%29&gt;</ph> version:</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>The zero-based position of the assigned character to remove.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Removes the assigned characters between the specified positions from the formatted string.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> method has no effect if there are no assigned characters at the removal positions specified.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Vacated positions are reset for input.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>If movement of the characters is prevented by the mask definition, no removal occurs, and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first assigned character to remove.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last assigned character to remove.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Removes the assigned characters between the specified positions from the formatted string, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> method has no effect if there are no assigned characters at the removal positions specified.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a character is removed, the remaining higher-positioned characters in the mask will shift to the left to fill in the gap created by the removal.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>Vacated positions are reset for input.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>If movement of the characters is prevented by the mask definition, no removal occurs, and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.RemoveAt%2A&gt;</ph> provides two additional output parameters to convey more information about the operation of the method.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first assigned character to remove.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last assigned character to remove.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position in the formatted string of where the characters were actually removed; otherwise, the first position where the operation failed.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully removed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>Replaces a range of editable characters between the specified starting and ending positions with the specified string, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph> method searches for the first editable position in the formatted string between the specified starting and ending positions.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following conditions are considered errors.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an error occurs, no replacement occurs and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`startPos`</ph> or <ph id="ph2">`endPos`</ph> parameters point before the start of the formatted string or beyond its end.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough editable positions in the formatted string to hold the contents of the replacement string.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value used to replace the existing editable characters.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the replacement starts.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the replacement ends.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters were successfully replaced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>Replaces a single character between the specified starting and ending positions with the specified character value, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method searches for the first editable position in the formatted string between the specified starting and ending positions.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one is found, the value of the editable position is changed to the specified character, <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of <ph id="ph1">`false`</ph> to be returned:</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`startPos`</ph> or <ph id="ph2">`endPos`</ph> parameters point before the start of the formatted string or beyond its end.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editable character was not found in the specified interval.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement character, <ph id="ph1">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value that replaces the existing value.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the replacement starts.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the replacement ends.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully replaced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Replaces a range of editable characters starting at the specified position with the specified string, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method searches for the first editable position at or beyond the specified position, <ph id="ph2">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operating on the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following conditions are considered errors.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an error occurs, no replacement occurs and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough editable positions in the formatted string to hold the contents of the replacement string.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value used to replace the existing editable characters.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The zero-based position to search for the first editable character to replace.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters were successfully replaced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Replaces a single character at or beyond the specified position with the specified character value, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%2CSystem.Int32%40%2CSystem.ComponentModel.MaskedTextResultHint%40%29&gt;</ph> method searches for the first editable position in the formatted string at or beyond the specified position, <ph id="ph2">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one is found, the value of the editable position is changed to the specified character, <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any of the following conditions will result in an error condition that causes no replacement to be performed and a value of <ph id="ph1">`false`</ph> to be returned:</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editable character was not found in the formatted string at or beyond the specified position, <ph id="ph1">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement character, <ph id="ph1">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the return value, this method has two output parameters to supply additional information about the replacement operation.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value that replaces the existing value.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>The zero-based position to search for the first editable character to replace.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position in the formatted string where the last character was actually replaced; otherwise, the first position where the operation failed.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the replacement operation.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully replaced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Replaces a range of editable characters starting at the specified position with the specified string.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29&gt;</ph> method searches for the first editable position at or beyond the specified position, <ph id="ph2">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operating under the assumption that there are enough editable positions after this point, the existing character values are replaced one-by-one with the contents of the replacement string parameter, <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following conditions are considered errors.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an error occurs, no replacement occurs and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.String%2CSystem.Int32%29&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough editable positions in the formatted string to hold the contents of the replacement string.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value used to replace the existing editable characters.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>The zero-based position to search for the first editable character to replace.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters were successfully replaced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>Replaces a single character at or beyond the specified position with the specified character value.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Replace%28System.Char%2CSystem.Int32%29&gt;</ph> method searches for the first editable position in the formatted string at or beyond the specified position, <ph id="ph2">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one is found, the value of the editable position is changed to the specified character, <ph id="ph1">`input`</ph>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any of the following conditions will result in an error that causes no replacement to be performed and a value of <ph id="ph1">`false`</ph> to be returned:</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>An editable character was not found in the formatted string at or beyond the specified position, <ph id="ph1">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement character, <ph id="ph1">`input`</ph>, is not a valid input character because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value that replaces the existing value.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The zero-based position to search for the first editable character to replace.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character was successfully replaced; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines how an input character that matches the prompt character should be handled.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> can treat two categories of characters, paces and prompt characters, in a special manner.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, each input character will be tested against the mask and either accepted or rejected.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>Operating on the assumption that the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> property is set to a value other than <ph id="ph2">`null`</ph>, then setting the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A&gt;</ph> property to <ph id="ph4">`true`</ph> will result in special processing for the prompt character.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a prompt character is added, it causes the current mask character position to be cleared and the current position to be advanced to the next editable character.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnPrompt%2A&gt;</ph> takes precedence over the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> property as described in the following table.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resulting behavior</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character can be added and it causes the current mask position to be reset.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character can be added and it causes the current mask position to be reset.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character is processed as a normal input character.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>The prompt character is not valid and methods attempting to add the character will fail.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the prompt character entered as input causes the current editable position in the mask to be reset; otherwise, <ph id="ph2">`false`</ph> to indicate that the prompt character is to be processed as a normal input character.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines how a space input character should be handled.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider&gt;</ph> can treat two categories of characters, spaces and prompt characters, in a special manner.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>Normally, each input character will be tested against the mask and either accepted or rejected.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> property to <ph id="ph2">`true`</ph> will result in the current mask character position being cleared and the current position being advanced to the next editable character.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> is useful when assigning text that was saved excluding the prompt, where the prompt is replaced with a space.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before restoring such a string, setting <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> to <ph id="ph2">`true`</ph> will reset the prompt characters at the positions occupied by spaces in the input string.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the space input character causes the current editable position in the mask to be reset; otherwise, <ph id="ph2">`false`</ph> to indicate that it is to be processed as a normal input character.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>Sets the formatted string to the specified input string.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> method clears the existing contents of the formatted string and then applies the mask against the <ph id="ph2">`input`</ph> string to update the contents of the formatted string.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following conditions are considered errors.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an error occurs, the formatted string remains unaltered and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough editable positions in the formatted string to hold the contents of the replacement string.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value used to set the formatted string.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters were successfully set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Sets the formatted string to the specified input string, and then outputs the removal position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> method clears the existing contents of the formatted string and then applies the mask against the <ph id="ph2">`input`</ph> string to update the contents of the formatted string.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following conditions are considered errors.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an error occurs, the formatted string remains unaltered and <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are not enough editable positions in the formatted string to hold the contents of the replacement string.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>One of the replacement character values is not valid because it is not printable or does not match its corresponding mask element.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> provides two additional output parameters to convey more information about the operation of the method.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value used to set the formatted string.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position in the formatted string where the last character was actually set; otherwise, the first position where the operation failed.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the set operation.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the characters were successfully set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether literal character positions in the mask can be overwritten by their same values.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>Input masks can contain literal and editable characters.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an attempt is made to add an input character to the position in a mask occupied by a literal, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.MaskedTextBox.SkipLiterals%2A&gt;</ph> property determines the result.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`true`</ph>, it is valid to overwrite a literal with the same value when adding input characters.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a forward slash character value, <ph id="ph1">`'/'`</ph>, could be added to the third position of the mask <ph id="ph2">`"00/00/000"`</ph>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`false`</ph>, it is not valid to assign any value to a mask position occupied by a literal character.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow literals to be added back; otherwise, <ph id="ph2">`false`</ph> to not allow the user to overwrite literal characters.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>Returns the formatted string in a displayable form.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> method will always include prompt and literal characters in the return value, regardless of the value of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will always display password characters if the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a character value other than <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToDisplayString%2A&gt;</ph> is commonly used to obtain the string to display in associated user interface elements, such as <ph id="ph2">&lt;xref:System.Windows.Forms.MaskedTextBox&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>The formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that includes prompts and mask literals.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Returns a substring of the formatted string, optionally including prompt, literal, and password characters.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id="ph2">`startPos`</ph> and including the subsequent number of characters specified by the <ph id="ph3">`length`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return string includes prompts and literals according to the values of the <ph id="ph1">`IncludePrompt`</ph> and <ph id="ph2">`IncludeLiterals`</ph> parameters, respectively.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that these parameters override the values of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ignorePasswordChar`</ph> parameter is <ph id="ph2">`true`</ph>, it will return the original input characters, ignoring the value of the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this parameter is <ph id="ph1">`false`</ph>, it will use the password character to obscure editable user input if the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a value other than <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is less than zero, the starting position is set to zero.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is greater than or equal to the actual <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is less than or equal to zero, the <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return the actual editable characters; otherwise, <ph id="ph2">`false`</ph> to indicate that the <ph id="ph3">&lt;xref href="System.ComponentModel.MaskedTextProvider.PasswordChar"&gt;&lt;/xref&gt;</ph> property is to be honored.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include prompt characters in the return string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return literal characters in the return string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the output begins.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>The number of characters to return.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source>If successful, a substring of the formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, which includes all the assigned character values and optionally includes literals, prompts, and password characters; otherwise the <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> string.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Returns a substring of the formatted string, optionally including prompt and literal characters.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id="ph2">`startPos`</ph> and including the subsequent number of characters specified by the <ph id="ph3">`length`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return string includes prompts and literals according to the values of the <ph id="ph1">`IncludePrompt`</ph> and <ph id="ph2">`IncludeLiterals`</ph> parameters, respectively.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that these parameters override the values of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph><ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will always return the original input characters, ignoring the value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is less than zero, the starting position is set to zero.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is greater than or equal to the actual <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is less than or equal to zero, the <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include prompt characters in the return string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include literal characters in the return string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the output begins.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The number of characters to return.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>If successful, a substring of the formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, which includes all the assigned character values and optionally includes literals and prompts; otherwise the <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> string.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Returns a substring of the formatted string, optionally including password characters.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id="ph2">`startPos`</ph> and including the subsequent number of characters specified by the <ph id="ph3">`length`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned string includes prompts and literals according to the current values of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ignorePasswordChar`</ph> parameter is <ph id="ph2">`true`</ph>, it will return the original input characters, ignoring the value of the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this parameter is <ph id="ph1">`false`</ph>, it will use the password character to obscure editable user input if the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a value other than <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is less than zero, the starting position is set to zero.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is greater than or equal to the actual <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is less than or equal to zero, the <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return the actual editable characters; otherwise, <ph id="ph2">`false`</ph> to indicate that the <ph id="ph3">&lt;xref href="System.ComponentModel.MaskedTextProvider.PasswordChar"&gt;&lt;/xref&gt;</ph> property is to be honored.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the output begins.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve">
          <source>The number of characters to return.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>If successful, a substring of the formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, which includes literals, prompts, and optionally password characters; otherwise the <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> string.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Returns the formatted string, optionally including password characters.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method includes prompts and literals according to the current values of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`ignorePasswordChar`</ph> parameter is <ph id="ph2">`true`</ph>, it will return the original input characters, ignoring the value of the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this parameter is <ph id="ph1">`false`</ph>, it will use the password character to obscure editable user input if the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is set to a value other than <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method potentially reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return the actual editable characters; otherwise, <ph id="ph2">`false`</ph> to indicate that the <ph id="ph3">&lt;xref href="System.ComponentModel.MaskedTextProvider.PasswordChar"&gt;&lt;/xref&gt;</ph> property is to be honored.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that includes literals, prompts, and optionally password characters.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>Returns the formatted string, optionally including prompt and literal characters.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method includes prompts and literals according to the values of the <ph id="ph2">`IncludePrompt`</ph> and <ph id="ph3">`IncludeLiterals`</ph> parameters, respectively.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notice that these parameters override the values of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph><ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will always return the original input characters, ignoring the value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include prompt characters in the return string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include literal characters in the return string; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>The formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that includes all the assigned character values and optionally includes literals and prompts.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve">
          <source>Returns the formatted string that includes all the assigned character values.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method includes prompts and literals according to the current values of the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>It will always return the original input characters, ignoring the value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> that includes all the assigned character values.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>Returns a substring of the formatted string.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of the overloaded <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> method returns a substring of the formatted string, starting at the position <ph id="ph2">`startPos`</ph> and including the subsequent number of characters specified by the <ph id="ph3">`length`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned string includes prompts and literals according to the current values of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludePrompt%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IncludeLiterals%2A&gt;</ph> properties, respectively.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return string will contain the original input characters; the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph> property is always ignored.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method reveals information that is usually protected in the user interface by password characters, it should be used with extreme caution to avoid accidentally revealing sensitive user data.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ToString%2A&gt;</ph> performs the following actions when there are discrepancies in the input parameters:</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is less than zero, the starting position is set to zero.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`startPos`</ph> is greater than or equal to the actual <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the formatted string, the <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is greater than the remaining number of characters past the starting position, only the remaining characters are returned.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`length`</ph> is less than or equal to zero, the <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph> string is returned.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The zero-based position in the formatted string where the output begins.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source>The number of characters to return.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>If successful, a substring of the formatted <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>, which includes all the assigned character values; otherwise the <ph id="ph2">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph> string.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Tests whether the specified character could be set successfully at the specified position.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyChar%2A&gt;</ph> method tests whether a single character value represents valid input at the specified position in the formatted string.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will return <ph id="ph1">`false`</ph> for the following reasons:</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`pos`</ph> parameter is less than zero or greater than the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>The character <ph id="ph1">`input`</ph> is not a valid input character, as determined by the <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.IsValidInputChar%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`input`</ph> is not compatible with the mask element at the specified position, <ph id="ph2">`pos`</ph>.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last condition may depend on the current value of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ComponentModel.MaskedTextProvider.AsciiOnly%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.MaskedTextProvider.PasswordChar%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.PromptChar%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>To test an entire input string against the mask, use one of the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> methods instead.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>The position in the mask to test the input character against.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the operation.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified character is valid for the specified position; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>Tests whether the specified character would be escaped at the specified position.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is said to be <bpt id="p1">*</bpt>escaped<ept id="p1">*</ept> if it is valid input, but is not assigned to that position in the formatted string.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>Escaped characters fall into the following three categories:</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>Prompt characters are escaped if the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.AllowPromptAsInput%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>Input characters are escaped if they have the same value as the literal in the mask, and if the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.SkipLiterals%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>Space characters are escaped if the <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.ResetOnSpace%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyEscapeChar%2A&gt;</ph> method will also return <ph id="ph2">`false`</ph> if the <ph id="ph3">`pos`</ph> parameter is less than zero or greater than the <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.Length%2A&gt;</ph> of the <ph id="ph5">&lt;xref:System.ComponentModel.MaskedTextProvider.Mask%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Char"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve">
          <source>The position in the mask to test the input character against.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified character would be escaped at the specified position; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve">
          <source>Tests whether the specified string could be set successfully.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> applies the <ph id="ph2">`input`</ph> string against the mask, without actually changing the formatted string, to test whether <ph id="ph3">`input`</ph> would be valid in a corresponding <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> operation.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns <ph id="ph1">`true`</ph> if input is <ph id="ph2">`null`</ph> or has zero length.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified string represents valid input; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve">
          <source>Tests whether the specified string could be set successfully, and then outputs position and descriptive information.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> applies the <ph id="ph2">`input`</ph> string against the mask, without actually changing the formatted string, to test whether <ph id="ph3">`input`</ph> would be valid in a corresponding <ph id="ph4">&lt;xref:System.ComponentModel.MaskedTextProvider.Set%2A&gt;</ph> operation.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method also returns <ph id="ph1">`true`</ph> if input is <ph id="ph2">`null`</ph> or has zero length.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>This version of <ph id="ph1">&lt;xref:System.ComponentModel.MaskedTextProvider.VerifyString%2A&gt;</ph> provides two additional output parameters to convey more information about the operation of the method.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value to test.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>If successful, the zero-based position of the last character actually tested; otherwise, the first position where the test failed.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.MaskedTextResultHint"&gt;&lt;/xref&gt;</ph> that succinctly describes the result of the test operation.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source>An output parameter.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified string represents valid input; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>