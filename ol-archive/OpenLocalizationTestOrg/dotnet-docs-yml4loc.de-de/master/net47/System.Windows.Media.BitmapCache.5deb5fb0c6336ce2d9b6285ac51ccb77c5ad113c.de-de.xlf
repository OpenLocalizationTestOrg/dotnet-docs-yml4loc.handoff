<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">be4395a427500b43ada86051955535612558a439</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.BitmapCache.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ba2cabf47e4000a42575ba57ec517c4f63823ef8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7052df51fa49003f1f804f305ead2bdaa7332edc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Creates and caches a bitmap representation of a <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> class to improve rendering performance of a complex <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> and assign it to the <ph id="ph2">&lt;xref:System.Windows.UIElement.CacheMode%2A&gt;</ph> property of a <ph id="ph3">&lt;xref:System.Windows.UIElement&gt;</ph> to cache the element and its subtree as a bitmap in video memory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you need to animate, translate, or scale a <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> as quickly as possible.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This approach enables a tradeoff between performance and visual quality while content is cached.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> class to efficiently reuse a cached element.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to scale the bitmap cache.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful if an element will be zoomed, and you want the element to render more clearly than it would if the cache were simply generated at the elementâ€™s native resolution.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly, such as ClearType text.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is ignored by the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Caching a control does not affect mouse-over behavior, so mouse-over hit testing operates as if it the bitmap were a live control.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cache regeneration occurs only when the structure of the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or its subtree changes, or when the <ph id="ph2">&lt;xref:System.Windows.Media.CacheMode&gt;</ph> settings change.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> properties causes cache regeneration.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes to the parent visual tree of the cached <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, such as transforms, scales, opacities, and effects, do not affect the cache.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cache functions when hardware acceleration is not available.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the bitmap is rendered in software, and the maximum bitmap dimensions are 2048 x 2048.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Media.RenderOptions&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.TextOptions&gt;</ph> do not propagate through a cached element.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may have to set these options again in child elements below the cache.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache"&gt;&lt;/xref&gt;</ph> class with the specified scale.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A double that scales the bitmap.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache"&gt;&lt;/xref&gt;</ph>, making deep copies of the object's values.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone (deep copy) of the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache"&gt;&lt;/xref&gt;</ph> using its current values.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the bitmap is rendered with ClearType activated.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to allow ClearType text to be rendered in the cache.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, your application must render all of its ClearType text on an opaque background.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, text in the cache is rendered with grayscale antialiasing.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>ClearType text requires correct pixel alignment of rendered characters, so you should set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set this property, the content may not blend correctly.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property when you know the cache is rendered on pixel boundaries, so it is safe to cache ClearType text.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This situation occurs commonly in text-scrolling scenarios.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ClearType is active; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache.EnableClearType"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the scale that is applied to the bitmap.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property to render the <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache&gt;</ph> at a multiple of the normal bitmap size.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The normal size is determined by the local size of the element.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values greater than 1 increase the resolution of the bitmap relative to the native resolution of the element, and values less than 1 decrease the resolution.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property is set to 2.0, and you apply a scale transform that enlarges the content by a factor of 2, the content will have the same visual quality as the same content with <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> set to 1.0 and a transform scale of 1.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 0, no bitmap is rendered.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative values are clamped to 0.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change this value, the cache is regenerated at the appropriate new resolution.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following images show how the same content appears for different values of the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>RenderAtScale = 1<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-1.png "</bpt>RenderAtScale = 1<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>RenderAtScale = 0.5<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.5<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale05.png "</bpt>RenderAtScale = 0.5<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>RenderAtScale = 0.2<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 0.2<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale02.png "</bpt>RenderAtScale = 0.2<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following image shows a zoom transform that is applied to an ancestor of the cached element.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the zoom is set to 1 and <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 1, the image quality is almost the same as when <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> is set to 2.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>But when zoom is greater than 1, setting <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.RenderAtScale%2A&gt;</ph> to 2 will have better image quality.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>RenderAtScale = 1.0<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 1.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-10.png "</bpt>RenderAtScale = 1.0<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>RenderAtScale = 2.0<ept id="p1">**</ept></source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>RenderAtScale &amp;#61; 2.0<ept id="p1">]</ept><bpt id="p2">(~/add/media/ndp-scale-20.png "</bpt>RenderAtScale = 2.0<ept id="p2">")</ept></source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The scale that is applied to the bitmap.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default is 1.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache.RenderAtScale"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the bitmap is rendered with pixel snapping.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property when the cache displays content that requires pixel-alignment to render correctly.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the case for ClearType text.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.EnableClearType%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, consider setting <ph id="ph3">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> to <ph id="ph4">`true`</ph> to ensure proper rendering.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, you can move and scale the cached element by a fraction of a pixel, and bilinear filtering is applied.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the bitmap cache is aligned with pixel boundaries of the destination.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you move or scale the cached element by a fraction of a pixel, the bitmap snaps to the pixel grid.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the top-left corner of the bitmap is rounded up and snapped to the pixel grid, but the bottom-right corner is on a fractional pixel boundary.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.BitmapCache.SnapsToDevicePixels%2A&gt;</ph> property is ignored by <ph id="ph2">&lt;xref:System.Windows.Media.BitmapCacheBrush&gt;</ph> and when used with a <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Viewport2DVisual3D&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if pixel snapping is active; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.BitmapCache.SnapsToDevicePixels"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>