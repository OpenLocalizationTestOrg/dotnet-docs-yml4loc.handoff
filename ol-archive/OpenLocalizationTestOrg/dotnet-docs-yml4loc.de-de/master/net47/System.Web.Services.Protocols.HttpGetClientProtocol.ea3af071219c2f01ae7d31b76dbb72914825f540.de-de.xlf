<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb67078b8765adf42814ba26c4f137868116a3c4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.Services.Protocols.HttpGetClientProtocol.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a58dd64d901e4a10abf28b22e38fa9b464ee134c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff932e68ecc49e056bbba95d2edda6615eb96e91</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The base class for XML Web service client proxies that use the HTTP-GET protocol.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> needs to be created for the XML Web service you want to call.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>, which in turn derives from <ph id="ph2">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt;</ph> derive from <ph id="ph3">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clients calling an XML Web service using SOAP should derive from <ph id="ph1">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details on building a proxy class, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconcreatingwebserviceproxy&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/en-us/142d91f5-3249-4cfc-a431-1f3acb76d756)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.Services.Protocols.HttpGetClientProtocol"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> instance for the specified URI.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method overrides the base version of <ph id="ph1">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A&gt;</ph> to specify that the HTTP request to the XML Web service is made using HTTP-GET.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>By overriding this method, additional customizations can be made to the <ph id="ph1">&lt;xref:System.Net.WebRequest&gt;</ph> object before the XML Web service request is made.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example you could add a custom header to the request.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> to use when creating the <ph id="ph2">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.WebRequest"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">uri</ph><ept id="p1">&lt;/code&gt;</ept> parameter is null or has a length of zero.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>