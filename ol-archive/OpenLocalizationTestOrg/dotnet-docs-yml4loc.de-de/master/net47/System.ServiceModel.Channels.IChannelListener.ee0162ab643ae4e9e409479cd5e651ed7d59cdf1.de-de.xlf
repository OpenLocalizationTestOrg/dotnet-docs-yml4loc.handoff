<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3e42c06800d806646394be9eedf6fbfa2c850d07</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.IChannelListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcfecab2dc400d574ca1109c72d495452d813773</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09366bf495cafc1180c88eec6a10e937c3f2b7e3</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the interface that must be implemented by a channel listener to accept channels.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface represents the base interface for channel listeners.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Channel listeners and their associated channels are generally used by services that receive communications initiated by clients.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Channel factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface, by contrast, provide the mechanisms used to create the channels through which communication with a service is initiated.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to wait for a channel to arrive that must be completed within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous wait for a channel operation.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to wait for channels to arrive.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.IChannelListener.EndWaitForChannel(System.IAsyncResult)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a message arrived; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a layer supports returning the requested object, it returns it.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The typed object for which the method is querying.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The typed object <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept> requested, if it is present or <ph id="ph2">`null`</ph> if it is not.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the URI on which the listeners that are generated by the factory listen.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This URI represents the transport address on which the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> is listening for messages.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> on which the listeners that are generated by the factory listen.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Waits for a channel to arrive.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a channel arrived before the interval of time specified by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">timeout</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>