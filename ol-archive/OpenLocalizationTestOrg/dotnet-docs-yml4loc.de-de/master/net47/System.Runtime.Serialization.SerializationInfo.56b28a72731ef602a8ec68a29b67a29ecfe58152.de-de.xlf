<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc4b55683b05a6aeb1cbecddd743acb4209bff8a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Serialization.SerializationInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">19c2e81fe0db7ec7e514d7c812b8074cad3296d5</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0676c6ed3bacb5ed7c16ab1807779cb2e82a3ca6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Stores all the data needed to serialize or deserialize an object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is used by objects with custom serialization behavior.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> method on either <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.Serialization.ISerializationSurrogate&gt;</ph> populates the <ph id="ph4">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> store with the name, type, and value of each piece of information it wants to serialize.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>During deserialization, the appropriate function can extract this information.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects are added to the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> store at serialization time using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;</ph> methods and extracted from the <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> store at deserialization using the <ph id="ph4">&lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about customizing serialization, see <bpt id="p1">[</bpt>Custom Serialization<ept id="p1">](~/docs/framework/serialization/custom-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> passed as the <ph id="ph2">`converter`</ph> parameter converts data from its internal representation to the form the user requested.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The internal representation of the data within the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> depends on the formatter that created it.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object to serialize.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.IFormatterConverter"&gt;&lt;/xref&gt;</ph> used during deserialization.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;converter&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object to serialize.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.IFormatterConverter"&gt;&lt;/xref&gt;</ph> used during deserialization.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Indicates whether the object requires same token in partial trust.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store, where <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is associated with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">name</ph><ept id="p2">&lt;/code&gt;</ept> and is serialized as being of <ph id="ph4">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph><bpt id="p3">&lt;code&gt;</bpt><ph id="ph5">type</ph><ept id="p3">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The assigned type is always the type of the object, or one of its parents.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The value to be serialized.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Any children of this object will automatically be serialized.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> to associate with the current object.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>This parameter must always be the type of the object itself or of one of its base classes.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds a 64-bit unsigned integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`UInt64`</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds a 32-bit unsigned integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`UInt32`</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds a 16-bit unsigned integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`UInt16`</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Adds a single-precision floating-point value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The single value to serialize.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Adds an 8-bit signed integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Sbyte`</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Adds the specified object into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store, where it is associated with a specified name.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object contained in the <ph id="ph1">`value`</ph> parameter is serialized as the type returned by <ph id="ph2">`value`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The value to be serialized.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Any children of this object will automatically be serialized.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Adds a 64-bit signed integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The Int64 value to serialize.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Adds a 32-bit signed integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Int32`</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Adds a 16-bit signed integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Int16`</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Adds a double-precision floating-point value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The double value to serialize.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Adds a decimal value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The decimal value to serialize.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>If The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>If a value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value into the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value to serialize.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Adds a Unicode character value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The character value to serialize.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Adds an 8-bit unsigned integer value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The byte value to serialize.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Adds a Boolean value into the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two values are added with names that differ only by case, no exception will be thrown, which is not a recommended practice.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, adding two values with the exact same name will cause the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationException&gt;</ph> to be thrown.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The name to associate with the value, so it can be deserialized later.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The Boolean value to serialize.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A value has already been associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets the assembly name of the type to serialize during serialization only.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;</ph> is the same as the value returned by <ph id="ph2">&lt;xref:System.Reflection.Assembly.FullName%2A&gt;</ph> property of the assembly of the containing type.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the assembly name that the formatter uses when serializing type information for this object.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>The assembly name contains the name of the assembly, version, culture, and some security information about the object.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users who are changing the type being serialized (for example, to send a proxy for a particular type) will set the value of this property.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use this property during deserialization because the value of this property is undefined.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The full name of the assembly of the type to serialize.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The value the property is set to is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Gets or sets the full name of the <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> to serialize.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;</ph> is the same as what would be returned by calling the <ph id="ph2">&lt;xref:System.Type.FullName%2A&gt;</ph> on <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the type name the formatter uses when serializing type information for this object.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users who are changing the type to serialize (for example, to send a proxy for a particular type) will want to set the value of this property.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use this property during deserialization because the value of this property is undefined.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The full name of the type to serialize.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>The value this property is set to is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Retrieves a Boolean value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a Boolean, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The Boolean value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a Boolean value.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Retrieves an 8-bit unsigned integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is an 8-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The 8-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to an 8-bit unsigned integer.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Retrieves a Unicode character value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a Unicode character, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The Unicode character associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a Unicode character.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value from the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a <ph id="ph1">&lt;xref:System.DateTime&gt;</ph>, or can be converted to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph>, that value is returned; otherwise, a <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a <ph id="ph2">&lt;xref href="System.DateTime"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Retrieves a decimal value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a decimal, or can be converted to a decimal, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>A decimal value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a decimal.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Retrieves a double-precision floating-point value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a double, or can be converted to a double, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The double-precision floating-point value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a double-precision floating-point value.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfoEnumerator"&gt;&lt;/xref&gt;</ph> used to iterate through the name-value pairs in the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function will most often be used by formatters that need to enumerate through the values before writing them out to the stream.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfoEnumerator"&gt;&lt;/xref&gt;</ph> for parsing the name-value pairs contained in the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>Retrieves a 16-bit signed integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 16-bit signed integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The 16-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Retrieves a 32-bit signed integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The 32-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 32-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Retrieves a 64-bit signed integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 64-bit signed integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The 64-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 64-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>Retrieves an 8-bit signed integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is an <ph id="ph1">`Int8`</ph>, or can be converted to an <ph id="ph2">`Int8`</ph>, that value is returned; otherwise, a <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>The 8-bit signed integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to an 8-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Retrieves a single-precision floating-point value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a single-precision floating-point number, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The name of the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The single-precision floating-point value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a single-precision floating-point value.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Retrieves a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> value from the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a <ph id="ph1">&lt;xref:System.String&gt;</ph>, or can be converted to a <ph id="ph2">&lt;xref:System.String&gt;</ph>, that value is returned; otherwise, a <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Retrieves a 16-bit unsigned integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 16-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The 16-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 16-bit unsigned integer.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Retrieves a 32-bit unsigned integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 32-bit signed integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The 32-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 32-bit unsigned integer.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Retrieves a 64-bit unsigned integer value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is a 64-bit unsigned integer, or can be converted to one, that value is returned; otherwise, a <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>All conversions are done by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter&gt;</ph> associated with this <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The 64-bit unsigned integer associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to a 64-bit unsigned integer.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Retrieves a value from the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data stored in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> is of the type requested (or one of its derived classes), that value is returned directly.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Runtime.Serialization.IFormatterConverter.Convert%2A?displayProperty=fullName&gt;</ph> is called to convert it to the appropriate type.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value returned by the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;</ph> method can always be safely cast to the type specified in the <ph id="ph2">`type`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>The name associated with the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the value to retrieve.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>If the stored value cannot be converted to this type, the system will throw a <ph id="ph1">&lt;xref href="System.InvalidCastException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The object of the specified <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;name&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The value associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> cannot be converted to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">type</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>An element with the specified name is not found in the current instance.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Gets whether the assembly name has been explicitly set.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> if the assembly name has been explicitly set; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Gets whether the full type name has been explicitly set.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> if the full type name has been explicitly set; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>Gets the number of members that have been added to the <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> store.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The number of members that have been added to the current <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Returns the type of the object to be serialized.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The type of the object being serialized.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>Sets the <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object to serialize.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> is responsible for setting the <ph id="ph2">&lt;xref:System.Type&gt;</ph> of the <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> instance before passing it to <ph id="ph4">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, users who want to send proxies for their objects will need to change the type represented by this <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.SetType%2A&gt;</ph> method is equivalent to setting both the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the object to serialize.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>