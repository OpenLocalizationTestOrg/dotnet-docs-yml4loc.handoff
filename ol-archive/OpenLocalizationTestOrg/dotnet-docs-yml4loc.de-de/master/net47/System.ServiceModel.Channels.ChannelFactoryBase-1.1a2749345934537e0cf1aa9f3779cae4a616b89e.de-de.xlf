<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6cbf07a55090b50503d90421ddbdae97bf33316d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.ChannelFactoryBase-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">40c4da9fcecddfe89475f55cb7ac0e615a4514c7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b9a5ead63fdc9eb3478541e2379efbc97f4f8c5</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a common base implementation for channel factories on the client to create channels of a specified type connected to a specified address.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The channels created by channel factories on the client are accepted on the server by channel listeners.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once the channel connection is established between client and service, they can communicate by exchanging messages.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A&gt;</ph> uses the specified address as the destination for outgoing messages.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ServiceAddress.Uri property is used as the To header in the message.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ServiceReference.Via property is used as the physical destination to send messages to.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically the same as the ServiceAddress.Uri value.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The type of channel the factory produces.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.ChannelFactoryBase`1"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default constructor initializes timeout properties with the service model timeout values when exchanging messages.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify other values for these operation timeouts.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.ChannelFactoryBase`1"&gt;&lt;/xref&gt;</ph> class with the default communication timeouts specified.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.IDefaultCommunicationTimeouts"&gt;&lt;/xref&gt;</ph> that specifies the default timeouts for open, send, receive, and close operations when exchanging messages.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Creates a particular type of channel with a specified endpoint address.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> when invoked.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method cannot be overridden by a derived class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This uses <ph id="ph1">&lt;xref:System.ServiceModel.EndpointAddress.Uri%2A&gt;</ph> as the transport address to which messages are sent on the output channel.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> of the remote endpoint to which the channel sends messages.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> with the specified <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">address</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a particular type of channel with specified transport and endpoint addresses.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.OnCreateChannel%28System.ServiceModel.EndpointAddress%2CSystem.Uri%29&gt;</ph> when invoked.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> of the remote endpoint to which the channel sends messages.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which messages are sent on the output channel.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> with the specified remote and transport addresses.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Aborts each channel managed by the channel factory.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on-close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the on-close operation.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on-close operation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that references the asynchronous on-close operation.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Closes all the channels associated with the channel factory within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sequentially attempts to close all of the active channels associated with the channel factory in no particular order.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timeout parameter is the cumulative amount of time available for closing all of the channels.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a graceful close of one of the channels fails (for example, if the channel is faulted causing an exception to be thrown) then this operation fails and does not attempt to close the remaining channels.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Failure in this method causes the factory and any remaining channels to be aborted rather than closed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> that specifies how long the on-close operation has to complete before timing out.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When implemented in a derived class, provides an extensibility point when creating channels.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A&gt;</ph> when invoked.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.EndpointAddress"&gt;&lt;/xref&gt;</ph> of the remote endpoint to which the channel sends messages.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Uri"&gt;&lt;/xref&gt;</ph> that contains the transport address to which messages are sent on the output channel.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A channel of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TChannel</ph><ept id="p1">&lt;/code&gt;</ept> with the specified addresses.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Completes an asynchronous operation to close all the channels associated with the channel factory within a specified interval of time.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.ChannelFactoryBase`1.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Confirms that the channel factory is opened and ready to create channels.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The method throws one of the exceptions listed and checks for the conditions in the order they are listed in the table.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Closing"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.ServiceModel.CommunicationState.Closed"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The communication object is in a <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Faulted"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The current channel factory is not in the <ph id="ph1">&lt;xref href="System.ServiceModel.CommunicationState.Opened"&gt;&lt;/xref&gt;</ph> state.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>