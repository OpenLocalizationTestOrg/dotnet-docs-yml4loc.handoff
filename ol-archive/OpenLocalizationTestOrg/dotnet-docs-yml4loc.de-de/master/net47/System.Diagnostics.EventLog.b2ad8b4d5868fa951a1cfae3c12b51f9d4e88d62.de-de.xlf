<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3caf3d16c46f71c8cea78d9ee936321bb4bf0467</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.EventLog.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc1f66a7a63e903ed6115ab8c8847f42c843b21f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">565c9eb479f1badeddc60c2bac3936a03221a03a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides interaction with Windows event logs.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> lets you access or customize Windows event logs, which record information about important software or hardware events.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph>, you can read from existing logs, write entries to logs, create or delete event sources, delete logs, and respond to log entries.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also create new logs when creating an event source.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to providing access to individual event logs and their entries, the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class lets you access the collection of all event logs.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`static`</ph> members of <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to delete logs, get log lists, create or delete a source, or determine if a computer already contains a particular source.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are three default event logs: Application, System, and Security.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Security log is read-only.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other applications and services you install, such as Active Directory, might have additional event logs.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are security considerations when using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> requires <ph id="ph2">&lt;xref:System.Diagnostics.EventLogPermission&gt;</ph> permissions for specific actions in the .NET Framework 2.0 and later versions, or full trust in the .NET Framework 1.0 and 1.1.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that <ph id="ph1">&lt;xref:System.Diagnostics.EventLogPermission&gt;</ph> not be granted to partially trusted code.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should never pass any event log object, including <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> objects, to less trusted code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, creating an <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> object, writing an entry, and then passing the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> object to partially trusted code can create a security issue, because the ability to read and write to the event log allows code to perform actions such as issuing event log messages in the name of another application.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, User Account Control (UAC) determines the credentials of a user.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>To run the code that accesses the Security log, you must first elevate your credentials from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by opening the shortcut menu for the application (if you're using a mouse, right-click the application icon) and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to create custom event logs that you can view through the server's Event Viewer.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.RegisterDisplayName%2A&gt;</ph> method to display a localized name for your event log in the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A&gt;</ph> method to configure the behavior of your event log when it reaches its maximum log size.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>To read from an event log, specify the log name (<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property) and server computer name (<ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> property for the event log.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you don't specify the server computer name, the local computer, ".", is assumed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>It's not necessary to specify the event source (<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property), because a source is required only for writing to logs.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The  <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> property is automatically populated with the event log's list of entries.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>To write to an event log, specify or create an event source (<ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative credentials on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event source registers your application with the event log as a valid source of entries.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the event source  to write to only one log at a time.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property can be any random string, but the name must be distinct from other sources on the computer.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event source is typically the name of the application or another identifying string.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trying to create a duplicate <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> value throws an exception.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a single event log can be associated with multiple sources.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event source for the event log associated with the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance doesn't exist, a new event source is created.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative credentials.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This requirement is because all event logs, including Security logs, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, users do not have permission to access the Security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating or deleting an event source requires synchronization of the underlying code by using a named mutex.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a highly privileged application locks the named mutex, trying to create or delete an event source causes the application to stop responding until the lock is released.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>To help prevent this problem, never grant <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission to untrusted code.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode&gt;</ph> permission potentially allows other permissions to be bypassed and should only be granted to highly trusted code.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications and services should write to the Application log or to a custom log.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Device drivers should write to the System log.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not explicitly set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property, the event log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is nothing to protect an application from writing as any registered source.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an application is granted <ph id="ph1">&lt;xref:System.Diagnostics.EventLogPermissionAccess.Write&gt;</ph> permission, it can write events for any valid source registered on the computer.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> methods to write events to an event log.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system hasn't refreshed its list of event sources, and you try to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source by using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> object or the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative credentials on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, your application might require multiple sources configured for different event logs or different resource files.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other applications or components use the existing source, create a new source with the updated configuration instead of deleting the existing source.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register the event source with localized resources for your event category and message strings.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can write event log entries by using resource identifiers instead of specifying the actual string values.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Refer to the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> classes for more information about configuring your source with resource files.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes string values directly to the event log, you do not have to set the resource file properties for the source.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>When writing events, you must at least specify either a message string or the resource identifier for a message string.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other event properties are optional.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Examples of optional event settings include the following:</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> to specify the icon that the Event Viewer displays for the entry.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a category identifier for the event, if your application uses categories for filtering the events.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can attach binary data to your event entry if you want to associate additional information with a given event.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event logging consumes disk space, processor time, and other system resources.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is important to log only essential information.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you place event log calls in an error path, rather than in the main code path, so they don't adversely affect performance.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph>, see the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Does not associate the instance with any log.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, specify the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are only reading <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> from the log, you can alternatively specify only the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial Value</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("").</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("").</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local computer (".").</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Associates the instance with a log on the local computer.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload sets the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property to the <ph id="ph2">`logName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, specify the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are only reading <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> from the log, you can alternatively specify only the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the constructor specifies the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property, but you can change this before reading the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source you specify in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property is unique from other sources on the computer, a subsequent call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> creates a log with the specified name, if it does not already exist.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial Value</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("").</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`logName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The local computer (".").</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The name of the log on the local computer.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The log name is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The log name is invalid.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Associates the instance with a log on the specified computer.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload sets the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property to the <ph id="ph2">`logName`</ph> parameter and the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> property to the <ph id="ph4">`machineName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before calling <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, specify the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are only reading <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> from the log, you can alternatively specify only the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the constructor specifies the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> properties, but you can change either before reading the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial Value</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty string ("").</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`logName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`machineName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The name of the log on the specified computer.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The computer on which the log exists.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The log name is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The log name is invalid.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The computer name is invalid.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Associates the instance with a log on the specified computer and creates or assigns the specified source to the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor sets the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property to the <ph id="ph2">`logName`</ph> parameter, the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> property to the <ph id="ph4">`machineName`</ph> parameter, and the <ph id="ph5">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property to the <ph id="ph6">`source`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property is required when writing to an event log.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you are only reading from an event log, only the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> properties are required (as long as the event log on the server has a source already associated with it).</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are only reading from the event log, another overload of the constructor might suffice.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial Value</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`source`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`logName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`machineName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The name of the log on the specified computer</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The computer on which the log exists.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The source of event log entries.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The log name is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The log name is invalid.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The computer name is invalid.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Begins the initialization of an <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> used on a form or used by another component.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The initialization occurs at runtime.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to start the initialization of a component used on a form or by another component.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EndInit%2A&gt;</ph> method ends the initialization.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.EndInit%2A&gt;</ph> methods prevent the control from being used before it is fully initialized.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> is already initialized.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Removes all entries from the event log.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event logs are set with a maximum size that determines how many entries they can contain.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an event log is full, it stops recording new event information or begins to overwrite earlier entries.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If event recording stops, you can use this method to clear the log of existing entries and allow it to start recording events again.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrator permissions to the computer on which the log resides to clear event log entries.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Clear%2A&gt;</ph> closes the event log, releases the event handles, retrieves new read and write handles, and reopens the event log.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Events received after the call to the method are not cleared along with the existing events.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The event log was not cleared successfully.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The log cannot be opened.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A value is not specified for the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Log"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Make sure the log name is not an empty string.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The log does not exist.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>Closes the event log and releases read and write handles.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Close%2A&gt;</ph> method is called by the protected <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to invoke <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Close%2A&gt;</ph> before calling <ph id="ph2">&lt;xref:System.ComponentModel.Component.Dispose%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The event log's read handle or write handle was not released successfully.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Establishes a valid event source for writing localized event messages, using the specified configuration properties for the event source and the corresponding event log.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to configure a new source for writing entries to an event log on the local computer or a remote computer.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to use this method to read from an event log.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method uses the input <ph id="ph2">`sourceData`</ph><ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.Source%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Diagnostics.EventSourceCreationData.MachineName%2A&gt;</ph> properties to create registry values on the target computer for the new source and its associated event log.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new source name cannot match an existing source name or an existing event log name on the target computer.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.LogName%2A&gt;</ph> property is not set, the source is registered for the Application event log.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.MachineName%2A&gt;</ph> is not set, the source is registered on the local computer.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> to write events to an event log.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event source for an existing event log or a new event log.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system stores event logs as files.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is set by appending the first 8 characters of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property with the ".evt" file name extension.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each source can only write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, your application might require multiple sources configured for different event logs or different resource files.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register the event source with localized resource file(s) for your event category and message strings.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can write event log entries using resource identifiers, rather than specifying the actual string.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the resource identifier to find and display the corresponding string from the localized resource file based on current language settings.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can register a separate file for event categories, messages and parameter insertion strings, or you can register the same resource file for all three types of strings.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryCount%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData.CategoryResourceFile%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.EventSourceCreationData.MessageResourceFile%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Diagnostics.EventSourceCreationData.ParameterResourceFile%2A&gt;</ph> properties to configure the source to write localized entries to the event log.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes strings values directly to the event log, you do not need to set these properties.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a source is configured for an event log, and you reconfigure it for another event log, you must restart the computer for the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The configuration properties for the event source and its target event log.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The computer name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> is not valid.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The source name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The log name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> is not valid.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Event log names must consist of printable characters and cannot include the characters '*', '?', or '<ph id="ph1">\\</ph>'.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The log name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> is not valid for user log creation.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>The Event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>The log name matches an existing event source name.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The source name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The first 8 characters of the log name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> are not unique.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The source name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> is already registered.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>The source name specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">sourceData</ph><ept id="p1">&lt;/code&gt;</ept> matches an existing event log name.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;sourceData&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Establishes the specified source name as a valid event source for writing entries to a log on the local computer.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>This method can also create a new custom log on the local computer.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a custom log or to create and register a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> to an existing log on the local computer.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`logName`</ph> is <ph id="ph2">`null`</ph> or an empty string ("") when you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph>, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the log does not exist on the local computer, the system creates a custom log and registers your application as a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> for that log.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only need to create an event source if you are writing to the event log.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you write a log entry, the system uses the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> to find the appropriate log in which to place your entry.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are reading the event log, you can either specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>, or a <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>You are not required to specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> if you are connecting to a log on the local computer.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> when reading from a log, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> to write events to an event log.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event source for an existing event log or a new event log.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system stores event logs as files.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is set by appending the first 8 characters of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property with the ".evt" file name extension.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, your application might require multiple sources configured for different event logs or different resource files.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The source name by which the application is registered on the local computer.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The name of the log the source's entries are written to.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Possible values include Application, System, or a custom event log.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is an empty string ("") or <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;logName&lt;/code&gt;</ph> is not a valid event log name.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Event log names must consist of printable characters, and cannot include the characters '*', '?', or '<ph id="ph1">\\</ph>'.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;logName&lt;/code&gt;</ph> is not valid for user log creation.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The log name matches an existing event source name.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The first 8 characters of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">logName</ph><ept id="p1">&lt;/code&gt;</ept> match the first 8 characters of an existing event log name.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The source cannot be registered because it already exists on the local computer.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The source name matches an existing event log name.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the local computer.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Establishes the specified source name as a valid event source for writing entries to a log on the specified computer.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>This method can also be used to create a new custom log on the specified computer.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to create a custom log or to create and register a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> to an existing log on the specified computer.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`logName`</ph> is <ph id="ph2">`null`</ph> or an empty string ("") when you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph>, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the log does not exist on the specified computer, the system creates a custom log and registers your application as a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> for that log.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only need to create an event source if you are writing to the event log.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you write a log entry, the system uses the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> to find the appropriate log in which to place your entry.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are reading the event log, you can either specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>, or a <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista and later, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> to write events to an event log.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event source for an existing event log or a new event log.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system stores event logs as files.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is set by appending the first 8 characters of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property with the ".evt" file name extension.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, your application might require multiple sources configured for different event logs or different resource files.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The source by which the application is registered on the specified computer.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The name of the log the source's entries are written to.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Possible values include Application, System, or a custom event log.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>If you do not specify a value, <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">logName</ph><ept id="p1">&lt;/code&gt;</ept> defaults to Application.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>The name of the computer to register this event source with, or "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> is not a valid computer name.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is an empty string ("") or <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;logName&lt;/code&gt;</ph> is not a valid event log name.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>Event log names must consist of printable characters, and cannot include the characters '*', '?', or '<ph id="ph1">\\</ph>'.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;logName&lt;/code&gt;</ph> is not valid for user log creation.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The event log names AppEvent, SysEvent, and SecEvent are reserved for system use.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The log name matches an existing event source name.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The first 8 characters of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">logName</ph><ept id="p1">&lt;/code&gt;</ept> match the first 8 characters of an existing event log name on the specified computer.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The source cannot be registered because it already exists on the specified computer.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The source name matches an existing event source name.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the specified computer.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Removes an event log from the specified computer.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when the log you want to delete is on a remote computer.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can delete any log on the computer, provided you have the appropriate registry permissions.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> removes the log specified by <ph id="ph2">`logName`</ph> from the computer specified by <ph id="ph3">`machineName`</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to delete only the source registered to a log, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you only want to delete the log entries, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Clear%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> are <ph id="ph3">`static`</ph> methods, so they can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call either method.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method first deletes the file that holds the contents of the log.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then accesses the registry and removes all the event sources registered for that log.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recreating an event log can be a difficult process.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid deleting any of the system-created event logs, such as the Application log.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deleting a log through a call to <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> automatically deletes the sources registered to that log.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can make other applications using that log inoperative.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>The name of the log to delete.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Possible values include: Application, Security, System, and any custom event logs on the specified computer.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>The name of the computer to delete the log from, or "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;logName&lt;/code&gt;</ph> is an empty string ("") or <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is not a valid computer name.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the specified computer.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>The log does not exist on the specified computer.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>The event log was not cleared successfully.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The log cannot be opened.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Removes an event log from the local computer.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when the log you want to delete is on the local computer.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can delete any log on the computer, provided you have the appropriate registry permissions.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> removes the log specified by <ph id="ph2">`logName`</ph> from the local computer.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to delete only the source registered to a log, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you only want to delete the log entries, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Clear%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> are <ph id="ph3">`static`</ph> methods, so they can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create a new instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call either method.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> method first deletes the file that holds the contents of the log.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then accesses the registry and removes all the event sources registered for that log.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you recreate the log at a later point, you should register the event sources again, if they are to be reused.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not register the event sources and other users write to an event source without specifying a log name, the event source will be created in the Application event log.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, applications that previously were able to write entries to the log you deleted and recreated will write to the Application log instead, because it now contains the event source.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>Recreating an event log can be a difficult process.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid deleting any of the system-created event logs, such as the Application log.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deleting a log through a call to <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> automatically deletes the sources registered to that log.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can make other applications using that log inoperative.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The name of the log to delete.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Possible values include: Application, Security, System, and any custom event logs on the computer.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;logName&lt;/code&gt;</ph> is an empty string ("") or <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the local computer.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The log does not exist on the local computer.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The event log was not cleared successfully.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The log cannot be opened.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Removes the event source registration from the event log of the local computer.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to remove the registration of a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> from the local computer.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> accesses the registry on the local computer and removes the registration of your application as a valid source of events.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove your component as a valid source of events if you no longer need it to write entries to that log.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might do this if you need to change your component from one log to another.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> removes only the source registered to a log.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to remove the log itself, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you only want to delete the log entries, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Clear%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> are <ph id="ph3">`static`</ph> methods, so they can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call either method.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deleting a log through a call to <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> automatically deletes the sources registered to that log.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can make other applications using that log inoperative.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>The name by which the application is registered in the event log system.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not exist in the registry of the local computer.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>You do not have write access on the registry key for the event log.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Removes the application's event source registration from the specified computer.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to remove the registration of a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> from a remote computer.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> accesses the registry on the computer specified by <ph id="ph2">`machineName`</ph> and removes the registration of your application as a valid source of events.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove your component as a valid source of events if you no longer need it to write entries to that log.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might do this if you need to change your component from one log to another.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a source can only be registered to one log at a time, changing the log requires you to remove the current registration.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> removes only the source registered to a log.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to remove the log itself, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you only want to delete the log entries, call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Clear%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> are <ph id="ph3">`static`</ph> methods, so they can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call either method.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deleting a log through a call to <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Delete%2A&gt;</ph> automatically deletes the sources registered to that log.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can make other applications using that log inoperative.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>The name by which the application is registered in the event log system.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>The name of the computer to remove the registration from, or "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is invalid.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> parameter does not exist in the registry of the specified computer.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>You do not have write access on the registry key for the event log.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> cannot be deleted because in the registry, the parent registry key for <ph id="ph2">&lt;code&gt;source&lt;/code&gt;</ph> does not contain a subkey with the same name.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph>, and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> receives <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog.EntryWritten"&gt;&lt;/xref&gt;</ph> event notifications.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A&gt;</ph> property determines whether the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> raises events when entries are written to the log.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the property is <ph id="ph1">`true`</ph>, components that receive the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.EntryWritten&gt;</ph> event will receive notification any time an entry is written to the log that is specified in the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A&gt;</ph> is <ph id="ph2">`false`</ph>, no events are raised.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can receive event notifications only when entries are written on the local computer.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot receive notifications for entries written on remote computers.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> receives notification when an entry is written to the log; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>The event log is on a remote computer.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Ends the initialization of an <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> used on a form or by another component.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The initialization occurs at runtime.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> design environment uses this method to end the initialization of a component used on a form or by another component.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.BeginInit%2A&gt;</ph> method starts the initialization.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.BeginInit%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.EndInit%2A&gt;</ph> methods prevents the control from being used before it is fully initialized.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Gets the contents of the event log.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> member when reading from the event log.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the property is read-only, you cannot modify an entry or write to the log using <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> and call <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> to write a new log entry.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> to count the number of entries in the event log, and view each <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry&gt;</ph> in the collection.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the indexed <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryCollection.Item%2A&gt;</ph> member to retrieve information about a specific entry, such as <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntry.Message%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.EventLogEntry.Category%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.EventLogEntry.TimeWritten%2A&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.EventLogEntry.EntryType%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> when only reading from a log.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify only the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> name and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> (server computer name) properties for the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>In either case, the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> member is automatically populated with the event log's list of entries.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can select the appropriate index for an item in this list to read individual entries.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>An important distinction between reading and writing log entries is that it is not necessary to explicitly call a read method.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> are specified, the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> property is automatically populated.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the value of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Entries%2A&gt;</ph> property is repopulated the next time you read it.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>You are not required to specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> if you are connecting to a log.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>, the local computer, ".", is assumed.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryCollection"&gt;&lt;/xref&gt;</ph> holding the entries in the event log.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Each entry is associated with an instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntry"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Occurs when an entry is written to an event log on the local computer.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get event notifications, you must set <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EnableRaisingEvents%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only receive event notifications when entries are written on the local computer.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot receive notifications for entries written on remote computers.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create an <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EntryWritten&gt;</ph> delegate, you identify the method that will handle the event.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate the event with your event handler, add an instance of the delegate to the event.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler is called whenever the event occurs, until you remove the delegate.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events with delegates, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system responds to <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> only if the last write event occurred at least six seconds previously.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>This implies you will only receive one <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EntryWritten&gt;</ph> event notification within a six-second interval, even if more than one event log change occurs.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you insert a sufficiently long sleep interval (around 10 seconds) between calls to <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, you are less likely to miss an event.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if write events occur more frequently, you might not recieve the event notification until the next interval.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, missed event notifications are not lost, but delayed.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>Determines whether the log exists on the local computer.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine if a log exists on the local computer.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to determine whether a source exists on the local computer, use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SourceExists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, the query returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if the specified <ph id="ph1">`logName`</ph> already exists on the local computer.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`logName`</ph> parameter is not case sensitive.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph> is a <ph id="ph2">`static`</ph> method, so it can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve">
          <source>The name of the log to search for.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the log exists on the local computer; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The logName is <ph id="ph1">`null`</ph> or the value is empty.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Determines whether the log exists on the specified computer.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine if a log exists on a remote computer.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to determine whether a source exists on a remote computer, use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SourceExists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method accesses the registry, you must have the appropriate registry permissions on the specified computer; otherwise, the query returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because you cannot give a new log the name of an existing log on the same computer, use this method before creating a new log to determine if one with the specified <ph id="ph1">`logName`</ph> already exists on the server specified by the <ph id="ph2">`machineName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`logName`</ph> and <ph id="ph2">`machineName`</ph> parameters are not case sensitive.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph> is a <ph id="ph2">`static`</ph> method, so it can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create a new instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>The log for which to search.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Possible values include: Application, Security, System, other application-specific logs (such as those associated with Active Directory), or any custom log on the computer.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>The name of the computer on which to search for the log, or "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the log exists on the specified computer; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an invalid format.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Make sure you have used proper syntax for the computer on which you are searching.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">logName</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph> or the value is empty.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Searches for all event logs on the given computer and creates an array of <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> objects that contain the list.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> objects is a snapshot of all event logs on the computer specified by the <ph id="ph2">`machineName`</ph> parameter when the call to <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.GetEventLogs%2A&gt;</ph> is made.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should verify that a log in the array exists before you read or write to it.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array usually includes at least three logs: Application, System, and Security.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you created custom logs on the specified computer, they will appear in the array as well.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.GetEventLogs%2A&gt;</ph> is a <ph id="ph2">`static`</ph> method, so it can be called on the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph> class itself.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create an instance of an <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> object to make a call to the method.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the list of event logs, you must have the appropriate registry permissions.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>These permissions are identical to those required to call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.SourceExists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>The computer on which to search for event logs.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> that represents the logs on the given computer.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">machineName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an invalid computer name.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>You do not have read access to the registry.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>There is no event log service on the computer.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>Searches for all event logs on the local computer and creates an array of <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> objects that contain the list.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> objects is a snapshot of all event logs on the local computer when the call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.GetEventLogs%2A&gt;</ph> is made.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is not a dynamic collection, so it does not reflect the deletion or creation of logs in real time.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should verify that a log in the array exists before you read or write to it.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array usually includes at least three logs: Application, System, and Security.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you created custom logs on the local computer, they will appear in the array as well.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the list of event logs, you must have the appropriate registry permissions.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT">
          <source>These permissions are identical to those required to call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.SourceExists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> that represents the logs on the local computer.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>You do not have read access to the registry.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>There is no event log service on the computer.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the log to read from or write to.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>Three log files exist by default on the server: Application, System, and Security.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications and services use the Application log file.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>Device drivers use the System log file.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>The system generates success and failure audit events in the Security log when auditing is turned on.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have other applications installed, like Active Directory on Windows servers, there might be other default log files.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can create custom log files on a local or remote computer.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom logs help organize your entries in a more detailed way than is allowed when your components write events to the default Application log.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>Log names are limited to eight characters.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>According to the system, MyLogSample1 and MyLogSample2 are the same log.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write to an event log, it is not enough to specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must associate a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property with your event log resource to connect it to a particular log.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> when only reading from a log, but an event source must be associated with the event log resource in the server's registry.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify only the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> name and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> (server computer name) to read from it.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>You are not required to specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> if you are connecting to a log.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property has not been specified, a call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> returns an empty string if <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> has not been explicitly set (by setting the <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property, or through the constructor).</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> has been specified, <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> returns the name of the log to which that source was registered.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>A source can only be registered to one log at a time.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property was set for an instance of <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph>, you cannot change the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property for that <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> without changing the value of <ph id="ph5">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> or calling <ph id="ph6">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> first.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property after the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property has been set, writing a log entry throws an exception.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system stores event logs as files.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> to create a new event log, the associated file is stored in the %SystemRoot%\System32\Config directory on the specified computer.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>The file name is set by appending the first 8 characters of the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property with the ".evt" file name extension.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot create a new log using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property alone (without specifying a source for the log).</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph>, passing in a new log name as a parameter, and then call <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the intent is usually either to create (and write entries to) new application-specific logs, or to read from existing logs.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> value changes, the event log is closed and all event handles are released.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property to the name of a log that does not exist, the system attaches the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to the Application log, but does not warn you that it is using a log other than the one you specified.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The name of the log.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>This can be Application, System, Security, or a custom log name.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>Gets the event log's friendly name.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista and later, users do not have permission to access the security log.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are running Windows Vista or later as a user, you will get a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> when you attempt to access the display name for an event in the security log.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>In Windows Vista and later, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses the security log, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve">
          <source>A name that represents the event log in the system's event viewer.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The specified <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Log"&gt;&lt;/xref&gt;</ph> does not exist in the registry for this computer.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Gets the name of the log to which the specified source is registered.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event source indicates what logs the event.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications and services should write to the Application log or a custom log.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT">
          <source>Device drivers should write to the System log.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new source, which can only write to one log at a time, the system registers your application with the event log as a valid source of entries.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property can be any string, but the name cannot be used by other sources on the computer.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attempt to create a duplicated <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> value throws an exception.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, a single event log can have many different sources writing to it.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve">
          <source>The name of the event source.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>The name of the computer on which to look, or "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>The name of the log associated with the specified source in the registry.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the computer on which to read or write events.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write to an event log, you must associate a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> with your event log object to connect it to a particular log.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property when only reading from a log.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify only the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> name and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> (server computer name).</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>You need not specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> if you are connecting to a log.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT">
          <source>A source can only be registered to one log at a time.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property was set for an instance of <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph>, you cannot change the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> property for that <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> without changing the value of <ph id="ph5">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> or calling <ph id="ph6">&lt;xref:System.Diagnostics.EventLog.DeleteEventSource%2A&gt;</ph> first.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> closes all handles and reattaches to the log and source on the new computer.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> value cannot be an empty string.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is not explicitly set, it defaults to the local computer (".").</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve">
          <source>The name of the server on which the event log resides.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve">
          <source>The default is the local computer (".").</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve">
          <source>The computer name is invalid.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum event log size in kilobytes.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MaximumKilobytes%2A&gt;</ph> property represents the size limit of the event log file.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event log reaches the size limit, the configured <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.OverflowAction%2A&gt;</ph> value determines whether new entries are discarded, or whether new entries overwrite older entries.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property represents a configuration setting for the event log represented by this instance.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve">
          <source>The maximum event log size in kilobytes.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve">
          <source>The default is 512, indicating a maximum file size of 512 kilobytes.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve">
          <source>The specified value is less than 64, or greater than 4194240, or not an even multiple of 64.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Log"&gt;&lt;/xref&gt;</ph> value is not a valid log name.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the target computer.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve">
          <source>Gets the number of days to retain entries in the event log.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> property to examine the current setting for an event log.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A&gt;</ph> to change the minimum number of days that each entry in the event log must be retained.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> value depends on the configured overflow behavior of the event log.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.OverflowAction&gt;</ph> property for an event log is set to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded&gt;</ph>, then the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> value is 0.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.OverflowAction&gt;</ph> property for an event log is set to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.DoNotOverwrite&gt;</ph>, then the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> value is -1.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.OverflowAction&gt;</ph> property for an event log is set to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.OverwriteOlder&gt;</ph>, then the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> value is greater than zero, and represents the number of days to retain event log entries when the event log is full.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overflow behavior only occurs when an event log reaches its size limit.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> has its <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.OverflowAction%2A&gt;</ph> set to <ph id="ph3">&lt;xref:System.Diagnostics.OverflowAction.OverwriteOlder&gt;</ph>, and the event log reaches its maximum size, then new entries are written only if they can replace entries whose age exceeds the <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> period.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retaining event entries for a minimum period is appropriate when the event log is archived regularly.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, you risk losing new entries when the event log reaches its limit.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid losing new event information, set the minimum retention days for events based on your archive schedule for a particular event log.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>The number of days that entries in the event log are retained.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve">
          <source>The default value is 7.</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve">
          <source>Changes the configured behavior for writing new entries when the event log reaches its maximum file size.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overflow behavior for an event log specifies what happens when new entries are to be written to a log that has reached its maximum file size.</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overflow behavior takes effect only when an event log reaches its maximum file size.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A&gt;</ph> method configures the overflow behavior of an event log.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method for the event log specified by the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.OverflowAction%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MinimumRetentionDays%2A&gt;</ph> property values reflect the newly configured overflow behavior.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property represents a configuration setting for the event log represented by this instance.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event log reaches its maximum size, this property specifies how the operating system handles new entries written by all event sources registered for the event log.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`action`</ph> parameter to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded&gt;</ph> to indicate that a new entry overwrites the oldest entry when the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph> reaches its maximum size.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`action`</ph> parameter is set to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.OverwriteAsNeeded&gt;</ph>, the <ph id="ph3">`retentionDays`</ph> parameter value is ignored.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`action`</ph> parameter to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.OverwriteOlder&gt;</ph> to indicate that each new entry overwrites older entries when the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog&gt;</ph> reaches its maximum size.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify the number of days that events must be retained in the log using the <ph id="ph1">`retentionDays`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>Events written within the retention range are not overwritten by new entries.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">`action`</ph> parameter to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.DoNotOverwrite&gt;</ph> to discard new events when the maximum log size is reached.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`action`</ph> parameter is set to <ph id="ph2">&lt;xref:System.Diagnostics.OverflowAction.DoNotOverwrite&gt;</ph>, the <ph id="ph3">`retentionDays`</ph> parameter value is ignored.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the overflow policy to <ph id="ph1">&lt;xref:System.Diagnostics.OverflowAction.DoNotOverwrite&gt;</ph> specifies that new entries are discarded when the event log is full.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you use this setting, ensure the event log is regularly archived and cleared to avoid reaching its maximum size limit.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>The overflow behavior for writing new entries to the event log.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve">
          <source>The minimum number of days each event log entry is retained.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve">
          <source>This parameter is used only if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">action</ph><ept id="p1">&lt;/code&gt;</ept> is set to <ph id="ph2">&lt;xref href="System.Diagnostics.OverflowAction.OverwriteOlder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;action&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog.OverflowAction"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;retentionDays&lt;/code&gt;</ph> is less than one, or larger than 365.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Log"&gt;&lt;/xref&gt;</ph> value is not a valid log name.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the target computer.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve">
          <source>Gets the configured behavior for storing new entries when the event log reaches its maximum log file size.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event logs grow in size as new events are written to them.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each event log has a configured maximum size limit; the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MaximumKilobytes%2A&gt;</ph> property defines the maximum number of kilobytes allowed for the event log file size.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.OverflowAction%2A&gt;</ph> property value to examine the configured overflow behavior for an event log at its maximum size.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.ModifyOverflowPolicy%2A&gt;</ph> method to change the overflow behavior for an event log.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overflow behavior takes effect only when an event log reaches its maximum file size.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overflow behavior does not affect writing a new entry to a log that can accommodate additional event log entries.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.OverflowAction"&gt;&lt;/xref&gt;</ph> value that specifies the configured behavior for storing new entries when the event log reaches its maximum log size.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Diagnostics.OverflowAction.OverwriteOlder"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve">
          <source>Specifies the localized name of the event log, which is displayed in the server Event Viewer.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.RegisterDisplayName%2A&gt;</ph> to register and display a localized name in the Event Viewer for custom event logs.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified resource identifier must correspond to a localized string defined in the resource file.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer displays the custom event log name using the localized string and the current culture settings.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can define multiple event log names localized for different cultures in your resource file.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer displays the localized string corresponding to the culture settings of the current user.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the Event Viewer cannot load the localized string from the resource file, or if no display name was registered for the event log, then the Event Viewer displays the event log name defined in <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to register a display name for the pre-defined event logs.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operating system registers the localized display names for the Application, System, and Security event logs.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve">
          <source>The fully specified path to a localized resource file.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve">
          <source>The resource identifier that indexes a localized string within the resource file.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Log"&gt;&lt;/xref&gt;</ph> value is not a valid log name.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened on the target computer.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;resourceFile&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve">
          <source>Gets or sets the source name to register and use when writing to the event log.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event source indicates what logs the event.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is often the name of the application, or the name of a subcomponent of the application, if the application is large.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications and services should write to the Application log or a custom log.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT">
          <source>Device drivers should write to the System log.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT">
          <source>You only need to specify an event source if you are writing to an event log.</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before writing an entry to an event log, you must register the event source with the event log as a valid source of events.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you write a log entry, the system uses the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property to find the appropriate log in which to place your entry.</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are reading the event log, you can either specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>, or a <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT">
          <source>You are not required to specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> if you are connecting to a log on the local computer.</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> to write events to an event log.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must specify an event source to write events; you must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create an event source for an existing event log or a new event log.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a new source for a new event log, the system registers the source for that log, but the log is not created until the first entry is written to it.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be unique on the local computer; a new source name cannot match an existing source name or an existing event log name.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each source can write to only one event log at a time; however, your application can use multiple sources to write to multiple event logs.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, your application might require multiple sources configured for different event logs or different resource files.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> value, the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to which it is registered is closed and all event handles are released.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the configuration details of an existing source, you must delete the source and then create it with the new configuration.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT">
          <source>If other applications or components use the existing source, create a new source with the updated configuration rather than deleting the existing source.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a source has already been mapped to a log and you remap it to a new log, you must restart the computer for the changes to take effect.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>The name registered with the event log as a source of entries.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve">
          <source>The default is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve">
          <source>Determines whether an event source is registered on the local computer.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether an event source exists on the local computer.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to determine whether a log exists on the local computer, use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method accesses the registry, you must have the appropriate registry permissions on the local computer; otherwise, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> will be thrown.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>A service that is executing under the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceAccount.LocalSystem&gt;</ph> account does not have the privileges required to execute this method.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>The solution is to check whether the event source exists in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph>, and if it does not exist, to create the source in the installer.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> to ensure that a source with the name specified by <ph id="ph2">`source`</ph> does not already exist on the local computer.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`source`</ph> parameter is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>The name of the event source.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the event source is registered on the local computer; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> was not found, but some or all of the event logs could not be searched.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve">
          <source>Determines whether an event source is registered on a specified computer.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether an event source exists on the computer specified by the <ph id="ph1">`machineName`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to determine whether a log exists on the specified computer, use <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Exists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because this method accesses the registry, you must have the appropriate registry permissions on the given server; otherwise, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> will be thrown.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>To search for an event source in Windows Vista and later or Windows Server 2003, you must have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT">
          <source>The reason for this requirement is that all event logs, including security, must be searched to determine whether the event source is unique.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, users do not have permission to access the security log; therefore, a <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with Windows Vista, User Account Control (UAC) determines the privileges of a user.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a member of the Built-in Administrators group, you are assigned two run-time access tokens: a standard user access token and an administrator access token.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, you are in the standard user role.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>To execute the code that accesses performance counters, you must first elevate your privileges from standard user to administrator.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this when you start an application by right-clicking the application icon and indicating that you want to run as an administrator.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>A service that is executing under the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceAccount.LocalSystem&gt;</ph> account does not have the privileges required to execute this method.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>The solution is to check whether the event source exists in the <ph id="ph1">&lt;xref:System.ServiceProcess.ServiceInstaller&gt;</ph>, and if it does not exist, to create the source in the installer.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because you cannot give a new source the name of an existing source on the same computer, use this method before attempting to call <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> to ensure that a source with the name specified by <ph id="ph2">`source`</ph> does not already exist on the computer.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`source`</ph> and <ph id="ph2">`machineName`</ph> parameters are not case sensitive.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SourceExists%2A&gt;</ph> is a <ph id="ph2">`static`</ph> method, so it can be called on the class itself.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not necessary to create an instance of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> to call <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.SourceExists%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>The name of the event source.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>The name the computer on which to look, or "." for the local computer.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the event source is registered on the given computer; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;machineName&lt;/code&gt;</ph> is an invalid computer name.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> was not found, but some or all of the event logs could not be searched.</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve">
          <source>Gets or sets the object used to marshal the event handler calls issued as a result of an <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> entry written event.</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph> is <ph id="ph2">`null`</ph>, methods handling the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.EntryWritten&gt;</ph> event are called on a thread from the system thread pool.</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on system thread pools, see <ph id="ph1">&lt;xref:System.Threading.ThreadPool&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.EntryWritten&gt;</ph> event is handled by a visual Windows Forms component, such as a button, accessing the component through the system thread pool might not work, or might result in an exception.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid this by setting <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph> to a Windows Forms component, which causes the methods handling the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.EntryWritten&gt;</ph> event to be called on the same thread on which the component was created.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> is used inside <ph id="ph2">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph> in a Windows Forms designer, <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph> is automatically set to the control containing the <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you place an <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> on a designer for Form1 (which inherits from <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>) the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.SynchronizingObject%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> is set to the instance of Form1.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;&lt;/xref&gt;</ph> used to marshal event-handler calls issued as a result of an <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog.EntryWritten"&gt;&lt;/xref&gt;</ph> event on the event log.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve">
          <source>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log (using the specified registered event source) and appends binary data to the message.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write application-defined event-specific data to the event log, using a source already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use event-specific data sparingly; include it only if you are sure it will be useful.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use event-specific data to store information the application can process independently of the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the category to filter events written by an event source.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter should be a positive value.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative category values appear as a complementary positive number in the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a –10 will appear as 65,526, a –1 as 65,535.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <ph id="ph1">`category`</ph> to a resource identifier in the category resource file.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event source does not have a configured category resource file, or the specified <ph id="ph1">`category`</ph> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configure the category resource file, along with the number of category strings in the resource file, using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event identifiers, together with the event source, uniquely identify an event.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application can define its own numbered events and the description strings to which they map.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can specify an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>The source by which the application is registered on the specified computer.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>The application-specific subcategory associated with the message.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventID&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve">
          <source>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, using the specified registered event source.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">category</ph><ept id="p1">&lt;/code&gt;</ept> can be used by the Event Viewer to filter events in the log.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an entry with an application-defined <ph id="ph1">`category`</ph> to the event log, using a source that is already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the category to filter events written by an event source.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter should be a positive value.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative category values appear as a complementary positive number in the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a –10 appears as 65,526, a –1 as 65,535.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <ph id="ph1">`category`</ph> to a resource identifier in the category resource file.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event source does not have a configured category resource file, or the specified <ph id="ph1">`category`</ph> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configure the category resource file, along with the number of category strings in the resource file, using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the category, you can specify an event identifier for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event identifiers, along with the event source, uniquely identify an event.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application can define its own numbered events and the description strings to which they map.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can specify an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>The source by which the application is registered on the specified computer.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve">
          <source>The application-specific subcategory associated with the message.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventID&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve">
          <source>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log, and appends binary data to the message.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this overload to write application-defined event-specific data to the event log.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer does not interpret this data; it displays raw data only in a combined hexadecimal and text format.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use event-specific data sparingly, including it only if you are sure it will be useful to someone debugging the problem.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use event-specific data to store information the application can process independently of the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could write a viewer specifically for your events, or write a program that scans the logfile and creates reports that include information from the event-specific data.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the binary data, you can specify an application-defined category and an application-defined event identifier.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the category to filter events written by an event source.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter should be a positive value.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative category values appear as a complementary positive number in the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a –10 appears as 65,526, a –1 as 65,535.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <ph id="ph1">`category`</ph> to a resource identifier in the category resource file.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event source does not have a configured category resource file, or the specified <ph id="ph1">`category`</ph> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configure the category resource file, along with the number of category strings in the resource file, using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event identifiers, along with the event source, uniquely identify an event.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application can define its own numbered events and the description strings to which they map.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can specify an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before you can write entries to the log.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source specified in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance is not registered on the computer that your component is writing to, <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> and registers the source.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> for your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance before you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system needs to register the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> through a call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property has not been set on your <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many exceptions listed above are generated by errors raised during the process of registering the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>The application-specific subcategory associated with the message.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventID&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>Writes an entry with the given message text and application-defined event identifier to the event log, using the specified registered event source.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an entry with an application-defined <ph id="ph1">`eventID`</ph> to the event log, using a source already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventID`</ph>, along with the source, uniquely identify an event.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application can define its own numbered events and the description strings to which they map.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event viewers present these strings to the user to help the user understand what went wrong and suggest what actions to take.</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the event identifier, this overload of <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> lets you specify an <ph id="ph2">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>The source by which the application is registered on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventID&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>Writes an entry with the given message text, application-defined event identifier, and application-defined category to the event log.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an entry with an application-defined <ph id="ph1">`category`</ph> to the event log.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the category to filter events written by an event source.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer can display the category as a numeric value, or it can use the category as a resource identifier to display a localized category string.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`category`</ph> parameter should be a positive value.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Negative category values appear as a complementary positive number in the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a –10 appears as 65,526, a –1 as 65,535.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT">
          <source>To display localized category strings in the Event Viewer, you must use an event source configured with a category resource file, and set the <ph id="ph1">`category`</ph> to a resource identifier in the category resource file.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event source does not have a configured category resource file, or the specified <ph id="ph1">`category`</ph> does not index a string in the category resource file, then the Event Viewer displays the numeric category value for that entry.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Configure the category resource file, along with the number of category strings in the resource file, using the <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph> or the <ph id="ph2">&lt;xref:System.Diagnostics.EventSourceCreationData&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the category, you can specify an event identifier for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event identifiers, along with the event source, uniquely identify an event.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application can define its own numbered events and the description strings to which they map.</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, you can specify an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before you can write entries to the log.</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source specified in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance is not registered on the computer that your component is writing to, <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> and registers the source.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> for your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance before you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system needs to register the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> through a call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property has not been set on your <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many exceptions listed above are generated by errors raised during the process of registering the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>The application-specific subcategory associated with the message.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventID&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log.</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an entry of a specified <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> to the event log.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before you can write entries to the log.</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source specified in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance is not registered on the computer that your component is writing to, <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> and registers the source.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> for your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance before you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system needs to register the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> through a call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property has not been set on your <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many exceptions listed above are generated by errors raised during the process of registering the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>Writes an entry with the given message text and application-defined event identifier to the event log.</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an entry with an application-defined <ph id="ph1">`eventID`</ph> to the event log.</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventID`</ph> together with the source uniquely identify an event.</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each application can define its own numbered events and the description strings to which they map.</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event viewers display these string values to help the user understand what went wrong and suggest what actions to take.</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the event identifier, you can specify an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> for the event being written to the event log.</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT">
          <source>This parameter indicates whether the event type is error, warning, information, success audit, or failure audit.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before you can write entries to the log.</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source specified in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance is not registered on the computer that your component is writing to, <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> and registers the source.</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> for your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance before you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system needs to register the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> through a call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property has not been set on your <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many exceptions listed above are generated by errors raised during the process of registering the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>The application-specific identifier for the event.</source>
        </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;eventID&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve">
          <source>Writes an information type entry with the given message text to the event log, using the specified registered event source.</source>
        </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an information entry to the event log, using a source that is already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to specify any other <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph>, use a different overload of <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve">
          <source>The source by which the application is registered on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>Writes an information type entry, with the given message text, to the event log.</source>
        </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an information entry to the event log associated with this <ph id="ph1">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to specify any other <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph>, use a different overload of <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before you can write entries to the log.</source>
        </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the source specified in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property of this <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance is not registered on the computer that your component is writing to, <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> calls <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> and registers the source.</source>
        </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> for your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance before you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the system needs to register the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> through a call to <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.Log%2A&gt;</ph> property has not been set on your <ph id="ph4">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance, the log defaults to the Application log.</source>
        </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the exceptions listed above are generated by errors raised during the process of registering the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the message (the text string) might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve">
          <source>Writes an error, warning, information, success audit, or failure audit entry with the given message text to the event log, using the specified registered event source.</source>
        </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write an entry of a specified <ph id="ph1">&lt;xref:System.Diagnostics.EventLogEntryType&gt;</ph> to the event log, using a source already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`type`</ph> is indicated by an icon and text in the Type column in the Event Viewer for a log.</source>
        </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method writes the given string directly to the event log; it does not use a localizable message resource file.</source>
        </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write events using a localized message resource file.</source>
        </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`message`</ph> parameter contains a NUL character, the message in the event log is terminated at the NUL character.</source>
        </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve">
          <source>The source by which the application is registered on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve">
          <source>The string to write to the event log.</source>
        </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve">
          <source>The message string is longer than 31,839 bytes (32,766 bytes on Windows operating systems before Windows Vista).</source>
        </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;type&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Diagnostics.EventLogEntryType"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve">
          <source>Writes an event log entry with the given event data and message replacement strings, using the specified registered event source.</source>
        </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write a localized entry to the event log, using a source already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the event properties with resource identifiers rather than string values.</source>
        </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</source>
        </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must register the source with the corresponding resource file before you write events using resource identifiers.</source>
        </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`instance`</ph> instance specifies the event message and properties.</source>
        </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.InstanceId%2A&gt;</ph> of the <ph id="ph2">`instance`</ph> input for the defined message in the source message resource file.</source>
        </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can optionally set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.CategoryId%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> of the <ph id="ph3">`instance`</ph> input to define the category and event type of your event entry.</source>
        </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify an array of language-independent strings to insert into the localized message text.</source>
        </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">`values`</ph> to <ph id="ph2">`null`</ph> if the event message does not contain formatting placeholders for replacement strings.</source>
        </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified source must be registered for an event log before using <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</source>
        </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method if your application writes string values directly to the event log.</source>
        </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve">
          <source>The name of the event source registered for the application on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Diagnostics.EventInstance"&gt;&lt;/xref&gt;</ph> instance that represents a localized event log entry.</source>
        </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve">
          <source>An array of strings to merge into the message text of the event log entry.</source>
        </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance.InstanceId&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph> has more than 256 elements.</source>
        </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">values</ph><ept id="p1">&lt;/code&gt;</ept> elements is longer than 32766 bytes.</source>
        </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>Writes a localized entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write a localized entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the event properties with resource identifiers rather than string values.</source>
        </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must register the source with the corresponding resource file before you write events using resource identifiers.</source>
        </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`instance`</ph> instance specifies the event message and properties.</source>
        </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.InstanceId%2A&gt;</ph> of the <ph id="ph2">`instance`</ph> input for the defined message in the source message resource file.</source>
        </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can optionally set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.CategoryId%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> of the <ph id="ph3">`instance`</ph> input to define the category and event type of your event entry.</source>
        </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify an array of language-independent strings to insert into the localized message text.</source>
        </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">`values`</ph> to <ph id="ph2">`null`</ph> if the event message does not contain formatting placeholders for replacement strings.</source>
        </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before using <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</source>
        </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method if your application writes string values directly to the event log.</source>
        </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the <ph id="ph1">`message`</ph> string might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Diagnostics.EventInstance"&gt;&lt;/xref&gt;</ph> instance that represents a localized event log entry.</source>
        </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve">
          <source>An array of strings to merge into the message text of the event log entry.</source>
        </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance.InstanceId&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph> has more than 256 elements.</source>
        </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">values</ph><ept id="p1">&lt;/code&gt;</ept> elements is longer than 32766 bytes.</source>
        </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve">
          <source>Writes an event log entry with the given event data, message replacement strings, and associated binary data.</source>
        </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write a localized entry with additional event-specific data to the event log.</source>
        </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the event properties with resource identifiers rather than string values.</source>
        </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must register the source with the corresponding resource file before you write events using resource identifiers.</source>
        </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`instance`</ph> instance specifies the event message and properties.</source>
        </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.InstanceId%2A&gt;</ph> of the <ph id="ph2">`instance`</ph> input for the defined message in the source message resource file.</source>
        </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can optionally set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.CategoryId%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> of the <ph id="ph3">`instance`</ph> input to define the category and event type of your event entry.</source>
        </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify an array of language-independent strings to insert into the localized message text.</source>
        </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">`values`</ph> to <ph id="ph2">`null`</ph> if the event message does not contain formatting placeholders for replacement strings.</source>
        </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify binary data with an event when it is necessary to provide additional details for the event.</source>
        </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, use the <ph id="ph1">`data`</ph> parameter to include information on a specific error.</source>
        </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</source>
        </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use event-specific data sparingly; include it only if you are sure it will be useful.</source>
        </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use event-specific data to store information the application can process independently of the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</source>
        </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must set the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.Source%2A&gt;</ph> property on your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> component before component before using <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</source>
        </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not specify a <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.MachineName%2A&gt;</ph> for your <ph id="ph2">&lt;xref:System.Diagnostics.EventLog&gt;</ph> instance before you call <ph id="ph3">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>, the local computer (".") is assumed.</source>
        </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method if your application writes string values directly to the event log.</source>
        </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you write an entry to a remote computer, the value of the <ph id="ph1">`message`</ph> string might not be what you expect if the remote computer is not running the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, the <ph id="ph1">`message`</ph> string cannot contain %<bpt id="p1">*</bpt><ph id="ph2">n</ph><ept id="p1">*</ept>, where <bpt id="p2">*</bpt><ph id="ph3">n</ph><ept id="p2">*</ept> is an integer value (for example, %1), because the event viewer treats it as an insertion string.</source>
        </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because an Internet Protocol, version 6 (IPv6) address can contain this character sequence, you cannot log an event message that contains an IPv6 address.</source>
        </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Diagnostics.EventInstance"&gt;&lt;/xref&gt;</ph> instance that represents a localized event log entry.</source>
        </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve">
          <source>An array of strings to merge into the message text of the event log entry.</source>
        </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.Source"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Diagnostics.EventLog"&gt;&lt;/xref&gt;</ph> has not been set.</source>
        </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>The method attempted to register a new event source, but the computer name in <ph id="ph1">&lt;xref href="System.Diagnostics.EventLog.MachineName"&gt;&lt;/xref&gt;</ph> is not valid.</source>
        </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>The source is already registered for a different event log.</source>
        </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance.InstanceId&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph> has more than 256 elements.</source>
        </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">values</ph><ept id="p1">&lt;/code&gt;</ept> elements is longer than 32766 bytes.</source>
        </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve">
          <source>Writes an event log entry with the given event data, message replacement strings, and associated binary data, and using the specified registered event source.</source>
        </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to write a localized entry with additional event-specific data to the event log, using a source already registered as an event source for the appropriate log.</source>
        </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the event properties with resource identifiers rather than string values.</source>
        </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer uses the resource identifiers to display the corresponding strings from the localized resource file for the source.</source>
        </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must register the source with the corresponding resource file before you write events using resource identifiers.</source>
        </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve" extradata="MT">
          <source>The input <ph id="ph1">`instance`</ph> instance specifies the event message and properties.</source>
        </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.InstanceId%2A&gt;</ph> of the <ph id="ph2">`instance`</ph> input for the defined message in the source message resource file.</source>
        </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can optionally set the <ph id="ph1">&lt;xref:System.Diagnostics.EventInstance.CategoryId%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.EventInstance.EntryType%2A&gt;</ph> of the <ph id="ph3">`instance`</ph> input to define the category and event type of your event entry.</source>
        </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify an array of language-independent strings to insert into the localized message text.</source>
        </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">`values`</ph> to <ph id="ph2">`null`</ph> if the event message does not contain formatting placeholders for replacement strings.</source>
        </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specify binary data with an event when it is necessary to provide additional details for the event.</source>
        </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, use the <ph id="ph1">`data`</ph> parameter to include information on a specific error.</source>
        </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Event Viewer does not interpret the associated event data; it displays the data in a combined hexadecimal and text format.</source>
        </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use event-specific data sparingly; include it only if you are sure it will be useful.</source>
        </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use event-specific data to store information the application can process independently of the Event Viewer.</source>
        </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you could write a viewer specifically for your events, or write a program that scans the event log and creates reports that include information from the event-specific data.</source>
        </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified source must be registered for an event log before using <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified source must be configured for writing localized entries to the log; the source must at minimum have a message resource file defined.</source>
        </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must create and configure the event source before writing the first entry with the source.</source>
        </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create the new event source during the installation of your application.</source>
        </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows time for the operating system to refresh its list of registered event sources and their configuration.</source>
        </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the operating system has not refreshed its list of event sources, and you attempt to write an event with the new source, the write operation will fail.</source>
        </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can configure a new source using an <ph id="ph1">&lt;xref:System.Diagnostics.EventLogInstaller&gt;</ph>, or using the <ph id="ph2">&lt;xref:System.Diagnostics.EventLog.CreateEventSource%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must have administrative rights on the computer to create a new event source.</source>
        </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve" extradata="MT">
          <source>The source must be configured either for writing localized entries or for writing direct strings.</source>
        </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method if your application writes string values directly to the event log.</source>
        </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application writes entries using both resource identifiers and string values, you must register two separate sources.</source>
        </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, configure one source with resource files, and then use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEvent%2A&gt;</ph> method to write entries using resource identifiers to the event log.</source>
        </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then create a different source without resource files, and use that source in the <ph id="ph1">&lt;xref:System.Diagnostics.EventLog.WriteEntry%2A&gt;</ph> method to write strings directly to the event log using that source.</source>
        </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve">
          <source>The name of the event source registered for the application on the specified computer.</source>
        </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Diagnostics.EventInstance"&gt;&lt;/xref&gt;</ph> instance that represents a localized event log entry.</source>
        </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve">
          <source>An array of bytes that holds the binary data associated with the entry.</source>
        </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve">
          <source>An array of strings to merge into the message text of the event log entry.</source>
        </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is an empty string ("").</source>
        </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">source</ph><ept id="p1">&lt;/code&gt;</ept> value is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance.InstanceId&lt;/code&gt;</ph> is less than zero or greater than <ph id="ph2">&lt;xref href="System.UInt16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;values&lt;/code&gt;</ph> has more than 256 elements.</source>
        </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve">
          <source>One of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">values</ph><ept id="p1">&lt;/code&gt;</ept> elements is longer than 32766 bytes.</source>
        </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve">
          <source>The source name results in a registry key path longer than 254 characters.</source>
        </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;instance&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve">
          <source>The registry key for the event log could not be opened.</source>
        </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve">
          <source>The operating system reported an error when writing the event entry to the event log.</source>
        </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve">
          <source>A Windows error code is not available.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>