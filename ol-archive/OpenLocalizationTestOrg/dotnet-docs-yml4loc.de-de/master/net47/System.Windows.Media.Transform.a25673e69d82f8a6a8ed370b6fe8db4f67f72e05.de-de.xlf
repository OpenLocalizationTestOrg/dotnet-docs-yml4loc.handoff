<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73fc853790769760de109a33ad3ec4c107d9dae1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Transform.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee0b2759df3ae48dfd959900acf5f75b4645a756</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">459b94754de4ace22a9ab215c145fbeccc209e35</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines functionality that enables transformations in a 2-D plane.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Transformations include rotation (<ph id="ph1">&lt;xref href="System.Windows.Media.RotateTransform"&gt;&lt;/xref&gt;</ph>), scale (<ph id="ph2">&lt;xref href="System.Windows.Media.ScaleTransform"&gt;&lt;/xref&gt;</ph>), skew (<ph id="ph3">&lt;xref href="System.Windows.Media.SkewTransform"&gt;&lt;/xref&gt;</ph>), and translation (<ph id="ph4">&lt;xref href="System.Windows.Media.TranslateTransform"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class hierarchy differs from the <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> structure because it is a class and it supports animation and enumeration semantics.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph> class to create custom transformations that are not provided by the <ph id="ph2">&lt;xref:System.Windows.Media.RotateTransform&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.ScaleTransform&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.SkewTransform&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Media.TranslateTransform&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_2d](~/includes/tlasharptla-2d-md.md)]</ph> x-y plane uses a 3x3 matrix for transformations.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can multiply affine transformation matrices to form linear transformations, such as rotation and skew (shear) that are followed by translation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An affine transformation matrix has its final column equal to (0, 0, 1); therefore, you only have to specify the members in the first two columns.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> <ph id="ph2">&lt;xref:System.Windows.Media.Matrix&gt;</ph> has the following structure:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The members in the last row, <ph id="ph1">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph>, represent translation values.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods and properties usually specify the transformation matrix as a vector that has only six members; they are as follows:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>(<ph id="ph1">&lt;xref:System.Windows.Media.Matrix.M11%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Matrix.M12%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Media.Matrix.M21%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Media.Matrix.M22%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Media.Matrix.OffsetX%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Media.Matrix.OffsetY%2A&gt;</ph>)</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Creates a modifiable copy of this <ph id="ph1">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> by making deep copies of its values.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to produce modifiable copies of read-only <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method copies dependency properties, it copies resource references and data bindings although they might no longer resolve.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not copy animations or their current values.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A modifiable deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the cloned object returns <ph id="ph2">`false`</ph> even if the <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the source is <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> object by making deep copies of its values.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method does not copy resource references, data bindings, or animations, although it does copy their current values.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to produce modifiable copies of read-only <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A modifiable deep copy of the current object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the cloned object is <ph id="ph2">`false`</ph> even if the <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property of the source is <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets an identity transform.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>An identity transform (identity matrix) that has the following configuration:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you apply an identity matrix, it does not change the object.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is like multiplying by <ph id="ph1">`1`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>An identity transform.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the inverse of this transform, if it exists.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The inverse of this transform, if it exists; otherwise, <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph> from the specified string representation of a transformation matrix.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the XAML Attribute Usage section of the <ph id="ph1">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph> class page.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Six comma-delimited <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> values that describe the new <ph id="ph2">&lt;xref href="System.Windows.Media.Transform"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>See also Remarks.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A new transform that is constructed from the specified string.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Transforms the specified bounding box and returns an axis-aligned bounding box that is exactly large enough to contain it.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The bounding box to transform.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The smallest axis-aligned bounding box that can contain the transformed <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">rect</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Attempts to transform the specified point and returns a value that indicates whether the transformation was successful.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform.Transform%2A&gt;</ph> method, this method does not throw an exception if the transformation is unsuccessful.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The point to transform.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The result of transforming <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">inPoint</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">inPoint</ph><ept id="p1">&lt;/code&gt;</ept> was transformed; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the current transformation as a <ph id="ph1">&lt;xref href="System.Windows.Media.Matrix"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The current matrix transformation.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>