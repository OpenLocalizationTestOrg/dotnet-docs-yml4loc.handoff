<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">428d103cff504ce5101d950220f8b1fec6114ef4</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IO.FileInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4024dcf7d7ef2cd75001d41480e54d8cbad9539d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0365e6e9442df986b527a857bb2c8f5085d2687a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides properties and instance methods for the creation, copying, deletion, moving, and opening of files, and aids in the creation of <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/io/fileinfo.cs#4ee673c1a4ecad41)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> class for typical operations such as copying, moving, renaming, creating, opening, deleting, and appending to files.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are performing multiple operations on the same file, it can be more efficient to use <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> instance methods instead of the corresponding static methods of the <ph id="ph2">&lt;xref:System.IO.File&gt;</ph> class, because a security check will not always be necessary.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many of the <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> methods return other I/O types when you create or open files.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use these other types to further manipulate a file.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see specific <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> members such as <ph id="ph2">&lt;xref:System.IO.FileInfo.Open%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.IO.FileInfo.OpenRead%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.IO.FileInfo.OpenText%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.IO.FileInfo.CreateText%2A&gt;</ph>, or <ph id="ph6">&lt;xref:System.IO.FileInfo.Create%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, full read/write access to new files is granted to all users.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the enumerations that are used to customize the behavior of various <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumeration</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies read and write access to a file.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies the level of access permitted for a file that is already in use.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifies whether the contents of an existing file are preserved or overwritten, and whether requests to create an existing file cause an exception.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>In members that accept a path as an input string, that path must be well-formed or an exception is raised.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a path is fully qualified but begins with a space, the path is not trimmed in methods of the class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the path is malformed and an exception is raised.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, a path or a combination of paths cannot be fully qualified twice.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, "c:\temp c:\windows" also raises an exception in most cases.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ensure that your paths are well-formed when using methods that accept a path string.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>In members that accept a path, the path can refer to a file or just a directory.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified path can also refer to a relative path or a Universal Naming Convention (UNC) path for a server and share name.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, all the following are acceptable paths:</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>"c:<ph id="ph1">\\</ph>\MyDir<ph id="ph2">\\</ph>\MyFile.txt" in C#, or "c:\MyDir\MyFile.txt" in Visual Basic.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>"c:<ph id="ph1">\\</ph>\MyDir" in C#, or "c:\MyDir" in Visual Basic.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>"MyDir<ph id="ph1">\\</ph>\MySubdir" in C#, or "MyDir\MySubDir" in Visual Basic.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>"<ph id="ph1">\\</ph><ph id="ph2">\\</ph><ph id="ph3">\\</ph>\MyServer<ph id="ph4">\\</ph>\MyShare" in C#, or "<ph id="ph5">\\</ph>\MyServer\MyShare" in Visual Basic.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> class provides the following properties that enable you to retrieve information about a file.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example of how to use each property, see the property pages.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph> property retrieves an object that represents the parent directory of a file.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph> property retrieves the full path of the parent directory of a file.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property checks for the presence of a file before operating on it.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property retrieves or sets a value that specifies whether a file can be modified.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph> retrieves the size of a file.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Name%2A&gt;</ph> retrieves the name of a file.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> class, which acts as a wrapper for a file path.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify either the fully qualified or the relative file name, but the security check gets the fully qualified name.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The fully qualified name of the new file, or the relative file name.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Do not end the path with the directory separator character.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The file name is empty, contains only white spaces, or contains invalid characters.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Access to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileName</ph><ept id="p1">&lt;/code&gt;</ept> is denied.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileName&lt;/code&gt;</ph> contains a colon (:) in the middle of the string.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.IO.StreamWriter"&gt;&lt;/xref&gt;</ph> that appends text to the file represented by this instance of the <ph id="ph2">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`StreamWriter`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Copies an existing file to a new file, disallowing the overwriting of an existing file.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph> method to allow overwriting of an existing file.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The name of the new file to copy to.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A new file with a fully qualified path.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An error occurs, or the destination file already exists.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A directory path is passed in, or the file is being moved to a different drive.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The directory specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> contains a colon (:) within the string but does not specify the volume.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Copies an existing file to a new file, allowing the overwriting of an existing file.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to allow or prevent overwriting of an existing file.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.CopyTo%2A&gt;</ph> method to prevent overwriting of an existing file by default.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever possible, avoid using short file names (such as XXXXXX~1.XXX) with this method.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If two files have equivalent short file names then this method may fail and raise an exception and/or result in undesirable behavior</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The name of the new file to copy to.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to allow an existing file to be overwritten; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A new file, or an overwrite of an existing file if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">overwrite</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>If the file exists and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">overwrite</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`false`</ph>, an <ph id="ph3">&lt;xref href="System.IO.IOException"&gt;&lt;/xref&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An error occurs, or the destination file already exists and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">overwrite</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The directory specified in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A directory path is passed in, or the file is being moved to a different drive.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> contains a colon (:) in the middle of the string.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Creates a file.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, full read/write access to new files is granted to all users.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a wrapper for the functionality provided by <ph id="ph1">&lt;xref:System.IO.File.Create%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A new file.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.IO.StreamWriter"&gt;&lt;/xref&gt;</ph> that writes a new text file.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, full read/write access to new files is granted to all users.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`StreamWriter`</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The file name is a directory.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The disk is read-only.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Decrypts a file that was encrypted by the current account using the <ph id="ph1">&lt;xref href="System.IO.FileInfo.Encrypt"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method allows you to decrypt a file that was encrypted using the <ph id="ph2">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method can decrypt only files that were encrypted using the current user account.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>An invalid drive was specified.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object could not be found.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The file system is not NTFS.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Permanently deletes a file.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the file does not exist, this method does nothing.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The target file is open or memory-mapped on a computer running Microsoft Windows NT.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>There is an open handle on the file, and the operating system is Windows XP or earlier.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>This open handle can result from enumerating directories and files.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Enumerate Directories and Files<ept id="p1">](~/docs/standard/io/how-to-enumerate-directories-and-files.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The path is a directory.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets an instance of the parent directory.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the parent directory as a string, use the <ph id="ph1">&lt;xref:System.IO.FileInfo.DirectoryName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.DirectoryInfo"&gt;&lt;/xref&gt;</ph> object representing the parent directory of this file.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets a string representing the directory's full path.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the parent directory as a <ph id="ph1">&lt;xref:System.IO.DirectoryInfo&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.IO.FileInfo.Directory%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>A string representing the directory's full path.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> was passed in for the directory name.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The fully qualified path is 260 or more characters.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Encrypts a file so that only the account used to encrypt the file can decrypt it.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method allows you to encrypt a file so that only the account used to call this method can decrypt it.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method to decrypt a file encrypted by the <ph id="ph2">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the <ph id="ph1">&lt;xref:System.IO.FileInfo.Encrypt%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.IO.FileInfo.Decrypt%2A&gt;</ph> method use the cryptographic service provider (CSP) installed on the computer and the file encryption keys of the process calling the method.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current file system must be formatted as NTFS and the current operating system must be Microsoft Windows NT or later.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>An invalid drive was specified.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object could not be found.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The file system is not NTFS.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object is read-only.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether a file exists.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Exists%2A&gt;</ph> property returns <ph id="ph2">`false`</ph> if any error occurs while trying to determine if the specified file exists.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can occur in situations that raise exceptions such as passing a file name with invalid characters or too many characters, a failing or missing disk, or if the caller does not have permission to read the file.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the file exists; <ph id="ph2">`false`</ph> if the file does not exist or if the file is a directory.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;&lt;/xref&gt;</ph> object that encapsulates the specified type of access control list (ACL) entries for the file described by the current <ph id="ph2">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.AccessControlSections"&gt;&lt;/xref&gt;</ph> values that specifies which group of access control entries to retrieve.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control rules for the current file.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The current system account does not have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The file could not be found.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control list (ACL) entries for the file described by the current <ph id="ph2">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the access control list (ACL) entries for the current file.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;&lt;/xref&gt;</ph> object that encapsulates the access control rules for the current file.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The current system account does not have administrative privileges.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The file could not be found.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines if the current file is read only.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to quickly determine or change whether the current file is read only.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current file is read only; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object could not be found.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>An I/O error occurred while opening the file.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>This operation is not supported on the current platform.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>The user does not have write permission, but attempted to set this property to <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Gets the size, in bytes, of the current file.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.IO.FileInfo.Length%2A&gt;</ph> property is pre-cached if the current instance of the <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object was returned from any of the following <ph id="ph3">&lt;xref:System.IO.DirectoryInfo&gt;</ph>methods:</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the latest value, call the <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The size of the current file in bytes.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.IO.FileSystemInfo.Refresh"&gt;&lt;/xref&gt;</ph> cannot update the state of the file or directory.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The file does not exist.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`Length`</ph> property is called for a directory.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>Moves a specified file to a new location, providing the option to specify a new file name.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method works across disk volumes.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the file c:\MyFile.txt can be moved to d:\public and renamed NewFile.txt.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The path to move the file to, which can specify a different file name.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, such as the destination file already exists or the destination device is not ready.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is empty, contains only white spaces, or contains invalid characters.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The file is not found.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>The specified path, file name, or both exceed the system-defined maximum length.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;destFileName&lt;/code&gt;</ph> contains a colon (:) in the middle of the string.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets the name of the file.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>When first called, <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> calls <ph id="ph2">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> and caches information about the file.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>On subsequent calls, you must call <ph id="ph1">&lt;xref:System.IO.FileSystemInfo.Refresh%2A&gt;</ph> to get the latest copy of the information.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The name of the file includes the file extension.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The name of the file.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Opens a file in the specified mode.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileMode"&gt;&lt;/xref&gt;</ph> constant specifying the mode (for example, <ph id="ph2">`Open`</ph> or <ph id="ph3">`Append`</ph>) in which to open the file.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A file opened in the specified mode, with read/write access and unshared.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>The file is not found.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The file is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The file is already open.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Opens a file in the specified mode with read, write, or read/write access.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileMode"&gt;&lt;/xref&gt;</ph> constant specifying the mode (for example, <ph id="ph2">`Open`</ph> or <ph id="ph3">`Append`</ph>) in which to open the file.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileAccess"&gt;&lt;/xref&gt;</ph> constant specifying whether to open the file with <ph id="ph2">`Read`</ph>, <ph id="ph3">`Write`</ph>, or <ph id="ph4">`ReadWrite`</ph> file access.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph> object opened in the specified mode and access, and unshared.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The file is not found.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>The file is already open.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Opens a file in the specified mode with read, write, or read/write access and the specified sharing option.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileMode"&gt;&lt;/xref&gt;</ph> constant specifying the mode (for example, <ph id="ph2">`Open`</ph> or <ph id="ph3">`Append`</ph>) in which to open the file.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileAccess"&gt;&lt;/xref&gt;</ph> constant specifying whether to open the file with <ph id="ph2">`Read`</ph>, <ph id="ph3">`Write`</ph>, or <ph id="ph4">`ReadWrite`</ph> file access.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileShare"&gt;&lt;/xref&gt;</ph> constant specifying the type of access other <ph id="ph2">`FileStream`</ph> objects have to this file.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph> object opened with the specified mode, access, and sharing options.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The file is not found.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The file is already open.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Creates a read-only <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns a read-only <ph id="ph1">&lt;xref:System.IO.FileStream&gt;</ph> object with the <ph id="ph2">&lt;xref:System.IO.FileShare&gt;</ph> mode set to <ph id="ph3">&lt;xref:System.IO.FileShare.Read&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>A new read-only <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>The file is already open.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.IO.StreamReader"&gt;&lt;/xref&gt;</ph> with UTF8 encoding that reads from an existing text file.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">`StreamReader`</ph> with UTF8 encoding.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The file is not found.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The specified path is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Creates a write-only <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.OpenWrite%2A&gt;</ph> method opens a file if one already exists for the file path, or creates a new file if one does not exist.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an existing file, it does not append the new text to the existing text.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it overwrites the existing characters with the new characters.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you overwrite a longer string (such as "This is a test of the OpenWrite method") with a shorter string (like "Second run"), the file will contain a mix of the strings ("Second runtest of the OpenWrite method").</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A write-only unshared <ph id="ph1">&lt;xref href="System.IO.FileStream"&gt;&lt;/xref&gt;</ph> object for a new or existing file.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The path specified when creating an instance of the <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object is read-only or is a directory.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The path specified when creating an instance of the <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object is invalid, such as being on an unmapped drive.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Replaces the contents of a specified file with the file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of the file described by the current <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also creates a backup of the file that was replaced.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, it returns a new <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object that describes the overwritten file.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will succeed in Windows 2000 environments if the <ph id="ph1">`destFileName`</ph> is read-only and will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to check if the destination file is read-only before attempting to replace it.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass <ph id="ph1">`null`</ph> to the <ph id="ph2">`destBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The name of a file to replace with the current file.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The name of a file with which to create a backup of the file described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object that encapsulates information about the file described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The path described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter was not of a legal form.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The path described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destBackupFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter was not of a legal form.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object could not be found.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The file described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destinationFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter could not be found.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Replaces the contents of a specified file with the file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object, deleting the original file, and creating a backup of the replaced file.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Also specifies whether to ignore merge errors.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.Replace%2A&gt;</ph> method replaces the contents of a specified file with the contents of the file described by the current <ph id="ph2">&lt;xref:System.IO.FileInfo&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also creates a backup of the file that was replaced.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Finally, it returns a new <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object that describes the overwritten file.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method will succeed in Windows 2000 environments if the <ph id="ph1">`destFileName`</ph> is read-only and will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.IsReadOnly%2A&gt;</ph> property to check if the destination file is read-only before attempting to replace it.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass <ph id="ph1">`null`</ph> to the <ph id="ph2">`destBackupFileName`</ph> parameter if you do not want to create a backup of the file being replaced.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The name of a file to replace with the current file.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The name of a file with which to create a backup of the file described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to ignore merge errors (such as attributes and ACLs) from the replaced file to the replacement file; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object that encapsulates information about the file described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The path described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter was not of a legal form.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>The path described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destBackupFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter was not of a legal form.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The file described by the current <ph id="ph1">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object could not be found.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The file described by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">destinationFileName</ph><ept id="p1">&lt;/code&gt;</ept> parameter could not be found.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows NT or later.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Applies access control list (ACL) entries described by a <ph id="ph1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;&lt;/xref&gt;</ph> object to the file described by the current <ph id="ph2">&lt;xref href="System.IO.FileInfo"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method applies access control list (ACL) entries to the current file that represents the noninherited ACL list.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method whenever you need to add or remove ACL entries from a file.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>The ACL specified for the <ph id="ph1">`fileSecurity`</ph> parameter replaces the existing ACL for the file.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add permissions for a new user, use the <ph id="ph1">&lt;xref:System.IO.Directory.GetAccessControl%2A&gt;</ph> method to obtain the existing ACL, modify it, and then use <ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> to apply it back to the file.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ACL describes individuals and/or groups who have, or do not have, rights to specific actions on the given file.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add or Remove Access Control List Entries<ept id="p1">](~/docs/standard/io/how-to-add-or-remove-access-control-list-entries.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method persists only <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> objects that have been modified after object creation.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object has not been modified, it will not be persisted to a file.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, it is not possible to retrieve a <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from one file and reapply the same object to another file.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>To copy ACL information from one file to another:</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.IO.FileInfo.GetAccessControl%2A&gt;</ph> method to retrieve the <ph id="ph2">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object from the source file.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a new <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object for the destination file.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm%2A&gt;</ph> method of the source <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to retrieve the ACL information.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm%2A&gt;</ph> method to copy the information retrieved in step 3 to the destination <ph id="ph3">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the destination <ph id="ph1">&lt;xref:System.Security.AccessControl.FileSecurity&gt;</ph> object to the destination file using the <ph id="ph2">&lt;xref:System.IO.FileInfo.SetAccessControl%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Security.AccessControl.FileSecurity"&gt;&lt;/xref&gt;</ph> object that describes an access control list (ACL) entry to apply to the current file.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileSecurity</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>The file could not be found or modified.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The current process does not have access to open the file.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The current operating system is not Microsoft Windows 2000 or later.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>Returns the path as a string.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>The string returned by the <ph id="ph1">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method represents path that was passed to the constructor.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object using the constructors, the <ph id="ph2">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method returns the fully qualified path.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, there are cases where the string returned by the <ph id="ph1">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method does not represent the fully qualified path.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when you create a <ph id="ph1">&lt;xref:System.IO.FileInfo&gt;</ph> object using the <ph id="ph2">&lt;xref:System.IO.DirectoryInfo.GetFiles%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.IO.FileInfo.ToString%2A&gt;</ph> method does not represent the fully qualified path.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>A string representing the path.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>