<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9c0683150541906fe3c37b407c6471e5a791305e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.MessageBuffer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4aa565f8f6885cab71dcc6dc15590093bf6d2483</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db24bac86e73c196668d4d9c4f22f31e8c5db13c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a memory buffer that stores an entire message for future consumption.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance can only be consumed or written once.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you wish to consume a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance more than once, you should use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> class to completely store an entire <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance into memory.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance is constructed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> is then created and returned, which assumes ownership of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> and reads the entire content into memory.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to retrieve a copy of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>, you must call the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph> method of the <ph id="ph4">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This returns an identical copy of the original <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance you provided.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can control the maximum size of the buffer by setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> to the maximum number of bytes desired.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always close a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> when finished working with it.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows system resources to potentially be freed sooner.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special note for Managed C++ users deriving from this class:</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) in order to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets the approximate number of bytes consumed by this <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can control the maximum size of the buffer by setting <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer.BufferSize%2A&gt;</ph> to the maximum number of bytes desired.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This number does not necessarily cover any transient allocations related to building the buffer, or properties attached to the message.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not related to the actual size of the message when serialized.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The approximate number of bytes consumed by this <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Finishes working with the buffer.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should always close a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.Close%2A&gt;</ph> when finished working with it.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>This allows system resources to potentially be freed sooner.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have called <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a message buffer of a message, and inspected the message using <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer.CreateMessage%2A&gt;</ph>, you will get a <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> when you attempt to close the buffer using this method.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this problem, you need to recreate the message from the buffer before closing.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the code sample in the Example section for a demonstration of the previous scenario and a way to resolve this problem.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns a copy of the original message.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method creates an identical copy of the original <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance you previously provided to the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> method of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then save the message to a durable storage.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An identical copy of the original <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> instance you previously provided to the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.Message.CreateBufferedCopy(System.Int32)"&gt;&lt;/xref&gt;</ph> method of a <ph id="ph3">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object, with the navigator positioned on the node specified.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The location you want the navigator to be positioned on initially.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object, with the specified <ph id="ph2">`xml:space`</ph> scope.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A valid <ph id="ph1">&lt;xref href="System.Xml.XmlSpace"&gt;&lt;/xref&gt;</ph> space.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object, with the navigator positioned on the specified node and <ph id="ph2">`xml:space`</ph> scope.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method if you want to manipulate just a portion of the message copy.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The location you want the navigator to be positioned on initially.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A valid <ph id="ph1">&lt;xref href="System.Xml.XmlSpace"&gt;&lt;/xref&gt;</ph> space.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> object for navigating this object.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the type of message content stored in this buffer.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The type of message content stored in this buffer.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Writes the entire content of this buffer to the specified IO stream.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This function uses a binary encoder instead of a UTF-8 encoder.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you cannot directly convert from a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> to a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code in the example section shows how to work around this problem.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An IO stream that the entire content of this buffer is written to.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method when you are finished using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method leaves the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method, you must release all references to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> was occupying.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call this method before you release your last reference to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using are not freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>