<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4a71c3cf3ac0e76fc32da398a765ab84bc6a06dc</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.IChannelFactory.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e8be4440ea4feecc41f9f51cce4402a090ee0f81</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c8a9353c0069ddeff2ff81315212dbea9fc91b27</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the interface that must be implemented by a channel factory to produce channels.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface represents the base interface for channel factories.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Channel factories and their associated channels are generally used by the clients of a service that initiate communication.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Listener factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface and their associated listeners, by contrast, provide the mechanisms used to accept the channels through which communications with a service is initiated.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a layer supports returning the requested object, it returns it.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must implement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A&gt;</ph> whenever you implement a channel factory.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A&gt;</ph> is an excellent way to communicate information along the channel factory stack without having to know what channel factories are below you, or what channel factories above you are interested in performing queries.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define interfaces for people to query on for any interesting information you have.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever you do not recognize the type argument for <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory.GetProperty%2A&gt;</ph>, delegate down to the next channel factory in the stack or return <ph id="ph2">`null`</ph> if you are creating a new transport channel at the bottom of the stack.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The typed object for which the method is querying.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The typed object <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept> requested, if it is present, or <ph id="ph2">`null`</ph> if it is not.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>