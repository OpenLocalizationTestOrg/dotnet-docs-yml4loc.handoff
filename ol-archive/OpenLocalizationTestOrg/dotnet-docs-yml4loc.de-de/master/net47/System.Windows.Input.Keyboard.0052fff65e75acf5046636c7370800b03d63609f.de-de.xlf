<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">286e894542c04dc0454c75a4269a64404df64444</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Input.Keyboard.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">88a092528bd21d252af8627e0bbb95de2c623a13</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0248d2c0f28aa459573c31535c82e8e21e98e9e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the keyboard device.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each of the events that <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> defines as an attached event is also re-exposed by the base element classes <ph id="ph2">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ContentElement&gt;</ph> as a new routed event.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, it is more convenient to handle keyboard events for an application on <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph>, rather than using the <ph id="ph3">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order for an element to receive keyboard input, the element must be focusable.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Most <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> derived objects are focusable by default.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, to make an element focusable, set the <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> property on the base element to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the base elements, see <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> classes, such as <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, set the default value of <ph id="ph4">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, for these objects to obtain keyboard focus, <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keyboard focus refers to the object that is receiving keyboard input.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element with keyboard focus has <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can be only one element with keyboard focus on the entire desktop.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus refers to the object within a focus scope that has focus.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on focus, keyboard focus, and logical focus, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> and <bpt id="p2">[</bpt>Focus Overview<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The static members of the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class delegate to the primary <ph id="ph2">&lt;xref:System.Windows.Input.KeyboardDevice&gt;</ph> of the calling thread, so they are not necessarily thread-safe.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.GotKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.LostKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewGotKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Adds a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewLostKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access and <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> attribute processing of the <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The event handler to be added.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Clears focus.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If focus is within a Win32 window, WPF calls the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.ClearFocus%2A&gt;</ph> method on restoration of focus when a menu is closed.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets the behavior of <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> when restoring focus.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An enumeration value that specifies the behavior of <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> when restoring focus.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default in <ph id="ph1">&lt;xref href="System.Windows.Input.RestoreFocusMode.Auto"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Sets keyboard focus on the specified element.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an element to receive keyboard input, the element must be focusable.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>To make an element focusable, set the <ph id="ph1">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> property on the base element to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on the base elements, see <bpt id="p1">[</bpt>Base Elements Overview<ept id="p1">](~/docs/framework/wpf/advanced/base-elements-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Controls.Panel&gt;</ph> classes, such as <ph id="ph2">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>, set the default value of <ph id="ph4">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> to <ph id="ph5">`false`</ph>; therefore, for these objects to obtain keyboard focus, <ph id="ph6">&lt;xref:System.Windows.UIElement.Focusable%2A&gt;</ph> must be set to <ph id="ph7">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keyboard focus refers to the object that is receiving keyboard input.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element with keyboard focus has <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can be only one element with keyboard focus on the entire desktop.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus refers to the object within a focus scope that has focus.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on focus, keyboard focus, and logical focus, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> and <bpt id="p2">[</bpt>Focus Overview<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element with keyboard focus also has logical focus for the focus scope the element belongs to.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element with logical focus may or may not have keyboard focus.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The element on which to set keyboard focus.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The element with keyboard focus.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets the element that has keyboard focus.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>Keyboard focus refers to the object that is receiving keyboard input.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The element with keyboard focus has <ph id="ph1">&lt;xref:System.Windows.IInputElement.IsKeyboardFocused%2A&gt;</ph> set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>There can be only one element with keyboard focus on the entire desktop.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Logical focus refers to the object within a focus scope that has focus.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on focus, keyboard focus, and logical focus, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept> and <bpt id="p2">[</bpt>Focus Overview<ept id="p2">](~/docs/framework/wpf/advanced/focus-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element with keyboard focus also has logical focus for the focus scope the element belongs to.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>An element with logical focus may or may not have keyboard focus.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The focused element.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets the set of key states for the specified key.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.KeyStates&gt;</ph> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a key could be in the pressed state as well as in the toggled state.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use bit comparison operations to determine the exact state or states the key is in.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class provides a number of static methods which can also be used to obtain key state information.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The methods are: <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>The specified key.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Input.KeyStates"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.GotKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is pressed.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method can be used to determine the set of states of a specific key.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The specified key.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept> is in the down state; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is toggled.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method can be used to determine the set of states of a specific key.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The specified key.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept> is in the toggled state; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is released.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GetKeyStates%2A&gt;</ph> method can be used to determine the set of states of a specific key.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The key to check.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">key</ph><ept id="p1">&lt;/code&gt;</ept> is in the up state; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.LostKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets the set of <ph id="ph1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;&lt;/xref&gt;</ph> that are currently pressed.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use bit operations to determine the exact set of modifier keys pressed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Input.ModifierKeys"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewGotKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewLostKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>You often use these identifiers as parameters to event system methods, to identify a particular routed event.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets the primary keyboard input device.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property supports the <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The device.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.GotKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.KeyUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.LostKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewGotKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyDown"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewKeyUp"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Removes a handler for the <ph id="ph1">&lt;xref href="System.Windows.Input.Keyboard.PreviewLostKeyboardFocus"&gt;&lt;/xref&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method provides attached property accessors for code access to the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=fullName&gt;</ph> attached event.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.UIElement"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.ContentElement"&gt;&lt;/xref&gt;</ph> that listens to this event.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The event handler to be removed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>