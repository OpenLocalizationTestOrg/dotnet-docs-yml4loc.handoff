<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">85c8c6cbfad945b371ebe5f8d68acde17b52de5f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Schema.XmlSchemaDatatype.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">61916443e8daf095536831a49910a5901120d6a6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0fb2edc92c994b96a1b1b78cebcf18c81493fcdc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph>, to the CLR type specified.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=fullName&gt;</ph> classes and conversion of XML data types, see the <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The input value to convert to the specified type.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The target type to convert the input value to.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The converted input value.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> parameter is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The type represented by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> does not support a conversion from type of the value specified to the type specified.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph>, to the CLR type specified using the <ph id="ph2">&lt;xref href="System.Xml.IXmlNamespaceResolver"&gt;&lt;/xref&gt;</ph> if the <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> represents the xs:QName type or a type derived from it.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=fullName&gt;</ph> classes and conversion of XML data types, see the <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> topic.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The input value to convert to the specified type.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The target type to convert the input value to.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.IXmlNamespaceResolver"&gt;&lt;/xref&gt;</ph> used for resolving namespace prefixes.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>This is only of use if the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> represents the xs:QName type or a type derived from it.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The converted input value.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> parameter is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The type represented by the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> does not support a conversion from type of the value specified to the type specified.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)"&gt;&lt;/xref&gt;</ph> method always returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, validates the <ph id="ph1">`string`</ph> specified against a built-in or user-defined simple type.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method validates the <ph id="ph2">`string`</ph> specified against a built-in or user-defined simple type.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if this <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> represents the type xs:date, then an instance of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following are the steps performed during the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method's validation process.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Convert the value specified as a <ph id="ph1">`string`</ph> to its corresponding Common Language Runtime (CLR) type.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Verify that the value does not violate any facets defined for the simple type.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The converted value is then returned as an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and can be cast safely to the type returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object represents a list type, the input <ph id="ph2">`string`</ph> value is converted to a list of one or more objects.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object represents a list type, an attempt is made to parse the input value as a member type of the union.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the parse is unsuccessful, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`string`</ph> to validate against the simple type.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlNameTable"&gt;&lt;/xref&gt;</ph> to use for atomization while parsing the <ph id="ph2">`string`</ph> if this <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> object represents the xs:NCName type.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.IXmlNamespaceResolver"&gt;&lt;/xref&gt;</ph> object to use while parsing the <ph id="ph2">`string`</ph> if this <ph id="ph3">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype"&gt;&lt;/xref&gt;</ph> object represents the xs:QName type.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that can be cast safely to the type returned by the <ph id="ph2">&lt;xref href="System.Xml.Schema.XmlSchemaDatatype.ValueType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The input value is not a valid instance of this W3C XML Schema type.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value to parse cannot be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the type for the <ph id="ph1">`string`</ph> as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Allows the <ph id="ph1">`string`</ph> to be read as a particular XML type, for example, a CDATA section type.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the token types.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlTokenizedType</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Description</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>CDATA type</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>ID type</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDREF type</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDREFS type</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>ENTITY type</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>ENTITIES type</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>NMTOKEN type</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>NMTOKENS type</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>NOTATION type</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>ENUMERATION type</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>QName type</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>NCName type</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>No type</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlTokenizedType"&gt;&lt;/xref&gt;</ph> value for the <ph id="ph2">`string`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlTypeCode"&gt;&lt;/xref&gt;</ph> value for the simple type.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>W3C XML Schema list types such as xs:ENTITIES, xs:NMTOKENS and xs:IDREFS are not represented by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead they are represented by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> values for the xs:ENTITY, xs:NMTOKEN and xs:IDREF types with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Both the xs:anySimpleType and xs:anyType types are not represented by <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are represented in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> whose value is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic&gt;</ph> for xs:anySimpleType or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlTypeCode.Item&gt;</ph> for xs:anyType.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlTypeCode"&gt;&lt;/xref&gt;</ph> value for the simple type.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property gets the CLR type of the item.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, an element of type <ph id="ph1">`xs:int`</ph> would have a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> could be any one of the valid types that can be mapped to <ph id="ph2">`xs:int`</ph>, such as <ph id="ph3">&lt;xref:System.Int16&gt;</ph> or <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=fullName&gt;</ph> namespace, see <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The Common Language Runtime (CLR) type of the item.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatypeVariety"&gt;&lt;/xref&gt;</ph> value for the simple type.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.Schema.XmlSchemaDatatypeVariety"&gt;&lt;/xref&gt;</ph> value for the simple type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>