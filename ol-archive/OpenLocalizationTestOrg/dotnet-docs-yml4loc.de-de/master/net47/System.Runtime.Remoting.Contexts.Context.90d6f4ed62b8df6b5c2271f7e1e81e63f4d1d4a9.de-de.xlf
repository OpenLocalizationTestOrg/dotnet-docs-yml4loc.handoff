<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90234092d6c3de8d0bd8bf0e0e975a0611060c2e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Remoting.Contexts.Context.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eff04edd7a7e0365d651be289c3236f3c06de894</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a227c171731ada1dee5c57c5d4f1150ca5a4290c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines an environment for the objects that are resident inside it and for which a policy can be enforced.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A context is an ordered sequence of properties that define an environment for the objects resident inside it.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contexts get created during the activation process for objects that are configured to require certain automatic services, such as synchronization, transactions, just-in-time activation, security, and so on.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple objects can live inside a context.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes are marked with an instance of the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.ContextAttribute&gt;</ph> class, which provides the usage rules.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever a new object is instantiated, the .NET Framework finds a compatible or creates a new instance of the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.Context&gt;</ph> class for the object.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once an object is placed in a context, it stays in it for life.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that can be bound to a context are called context-bound classes.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When accessed from another context, such classes are referenced directly by using a proxy.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any call from an object in one context to an object in another context will go through a context proxy and be affected by the policy that the combined context properties enforce.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>A new object's context is generally chosen based on meta-data attributes on the class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This mechanism is extensible through custom attributes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>These are known as static-context properties, which are compiled into the class meta-data.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dynamic-context properties (also known as configuration properties) can be applied and configured by administrators.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on contexts, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph1">\&lt;</ph>topic://cpconboundariesprocessesapplicationdomainscontexts&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/en-us/7574180d-70df-44b8-8b78-55a119f2c96d)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Contexts.Context"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Allocates an unnamed data slot.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The slot is allocated on all the contexts.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A local data slot.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Allocates a named data slot.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The slot is allocated on all the contexts.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Named data slots are public and can be manipulated by anyone.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The required name for the data slot.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A local data slot object.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets the context ID for the current context.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The context ID for the current context.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the array of the current context properties.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The current context properties array; otherwise, <ph id="ph1">`null`</ph> if the context does not have any properties attributed to it.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets the default context for the current application domain.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every thread in an application domain for which a context is not explicitly set is considered to be running in the default context.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The default context for the <ph id="ph1">&lt;xref href="System.AppDomain"&gt;&lt;/xref&gt;</ph> namespace.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Executes code in another context.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A callback can be done by calling the <ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.Context.DoCallBack%2A&gt;</ph> method on it by passing in a delegate.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The delegate is used to request a callback.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The delegate must be a <ph id="ph1">&lt;xref:System.Runtime.Remoting.Contexts.CrossContextDelegate&gt;</ph> class type.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The delegate used to request the callback.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Cleans up the backing objects for the nondefault contexts.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>For default contexts, backing objects are cleaned up during shut down of the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Frees a named data slot on all the contexts.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Named data slots are public and can be manipulated by anyone.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The name of the data slot to free.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Freezes the context, making it impossible to add or remove context properties from the current context.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Context properties cannot be added after the context has been frozen.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The context is already frozen.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Retrieves the value from the specified slot on the current context.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The data slot that contains the data.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns the data associated with <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">slot</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Looks up a named data slot.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the name has not been used, a new slot is allocated.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Named data slots are public and can be manipulated by anyone.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The data slot name.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Returns a local data slot.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns a specific context property, specified by name.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The name of the property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The specified context property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Registers a dynamic property implementing the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Contexts.IDynamicProperty"&gt;&lt;/xref&gt;</ph> interface with the remoting service.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Based on <ph id="ph1">`obj`</ph> and <ph id="ph2">`ctx`</ph>, <ph id="ph3">`prop`</ph> is asked to contribute a sink that is placed at some location in the path of remoting calls.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>If multiple properties are registered, their sinks will be called in an arbitrary order that can change between calls.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`obj`</ph> is not <ph id="ph2">`null`</ph>, and then if it is a proxy, all calls made on the proxy are intercepted.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, if <ph id="ph1">`obj`</ph> is a real object, all calls on the object are intercepted.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ctx`</ph> parameter must be <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ctx`</ph> is not <ph id="ph2">`null`</ph>, <ph id="ph3">`obj`</ph> must be <ph id="ph4">`null`</ph> and all calls entering and leaving the context are intercepted.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both <ph id="ph1">`ctx`</ph> and <ph id="ph2">`obj`</ph> are <ph id="ph3">`null`</ph>, all calls entering and leaving all contexts are intercepted.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The dynamic property to register.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The object/proxy for which the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">property</ph><ept id="p1">&lt;/code&gt;</ept> is registered.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The context for which the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">property</ph><ept id="p1">&lt;/code&gt;</ept> is registered.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the property was successfully registered; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Either <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">prop</ph><ept id="p1">&lt;/code&gt;</ept> or its name is <ph id="ph2">`null`</ph>, or it is not dynamic (it does not implement <ph id="ph3">&lt;xref href="System.Runtime.Remoting.Contexts.IDynamicProperty"&gt;&lt;/xref&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Both an object as well as a context are specified (both <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">ctx</ph><ept id="p2">&lt;/code&gt;</ept> are not <ph id="ph3">`null`</ph>).</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Sets the data in the specified slot on the current context.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The data slot where the data is to be added.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The data that is to be added.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Sets a specific context property by name.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>Adding properties to the default context is not allowed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The actual context property.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The context is frozen.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The property or the property name is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> class representation of the current context.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> class representation of the current context.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>Unregisters a dynamic property implementing the <ph id="ph1">&lt;xref href="System.Runtime.Remoting.Contexts.IDynamicProperty"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The name of the dynamic property to unregister.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>The object/proxy for which the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">property</ph><ept id="p1">&lt;/code&gt;</ept> is registered.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The context for which the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">property</ph><ept id="p1">&lt;/code&gt;</ept> is registered.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the object was successfully unregistered; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">name</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Both an object as well as a context are specified (both <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">ctx</ph><ept id="p2">&lt;/code&gt;</ept> are not <ph id="ph3">`null`</ph>).</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>