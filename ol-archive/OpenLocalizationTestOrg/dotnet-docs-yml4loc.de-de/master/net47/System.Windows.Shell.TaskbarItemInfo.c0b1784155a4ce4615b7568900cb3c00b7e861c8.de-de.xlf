<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0ee9f5d52483d979da3a431d190ebb214f9cb1c</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Shell.TaskbarItemInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1434dfa6b89e4397d0490896a0ec357cf075942</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a70a5b4c7ffc712abef1b2644325f1e4a5811e1b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents information about how the taskbar thumbnail is displayed.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class provides a managed wrapper for <ph id="ph2">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar functionality.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the Windows shell and native taskbar APIs, see <bpt id="p1">[</bpt>Taskbar Extensions<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=178479)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> is exposed as the <ph id="ph2">&lt;xref:System.Windows.Window.TaskbarItemInfo%2A?displayProperty=fullName&gt;</ph> dependency property on a <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar provides enhanced functionality that enables you to use the taskbar item to communicate status to a user and expose common tasks when the window is minimized or hidden.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The functionality that is exposed by the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class is unavailable in versions of Windows earlier than <ph id="ph2">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications that use the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class can still run in earlier versions of Windows; however, these taskbar enhancements are unavailable in the earlier versions.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>, some taskbar functionality might be unavailable, depending on the user's settings.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, taskbar functionality is unavailable if <ph id="ph1">[!INCLUDE[TLA#tla_aero](~/includes/tlasharptla-aero-md.md)]</ph> is disabled or if the application is started with elevated permissions.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application should provide other ways to interact with the user that do not depend on the enhanced taskbar functionality in <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar hides program icons in the notification area.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can set the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A&gt;</ph> property to add an image to the taskbar button to communicate status, such as online status in a messaging application.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overlay image lets users see the application status even if they cannot see the program icon in the notification area.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also display the progress of running tasks in the taskbar button by setting the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar displays a thumbnail of the application when you move the mouse pointer over the taskbar button.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default the whole application window is shown.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a particular part of the window to display in the thumbnail by setting the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify a <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Description%2A&gt;</ph> that is displayed in a tooltip above the taskbar thumbnail.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tooltip is displayed even when the thumbnail cannot be seen because of user settings.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add buttons to the taskbar thumbnail to provide access to common tasks without switching to the application window.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Window Media Player provides Play, Pause, Forward, and Back buttons that let you control media playback from the taskbar thumbnail when the application is minimized.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Buttons in the taskbar thumbnail are represented by <ph id="ph1">&lt;xref:System.Windows.Shell.ThumbButtonInfo&gt;</ph> objects and are contained in the <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the enhanced features of the <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Enhanced Features</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets the text for the taskbar item tooltip.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The tooltip is displayed above the taskbar thumbnail when the mouse pointer is over the taskbar button.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the taskbar thumbnail is not displayed because of user settings, the tooltip is still displayed.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the taskbar <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Description%2A&gt;</ph> tooltip.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Description</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The text for the taskbar item tooltip.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default is an empty string.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo.Description"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets the image that is displayed over the program icon in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add an image to the program icon in the taskbar button to communicate application status to the user.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overlay uses a static or animated <ph id="ph1">&lt;xref:System.Windows.Media.ImageSource&gt;</ph> that is positioned over the bottom-right corner of the icon in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The overlay is not displayed if the user sets the taskbar to show small icons.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Program icons in the notification area, which is at the far right of the taskbar, are typically used to communicate application status to a user.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>, program icons in the notification area are hidden by default, and are therefore, less useful for communicating status.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the taskbar button overlay in <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> to communicate status when the icon in the notification area is hidden.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can detect the version of Windows and provide notifications in a manner that is appropriate for the operating system.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Overlay images are rendered at the appropriate size.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Media.ImageSource&gt;</ph> represents an <ph id="ph2">&lt;xref:System.Drawing.Icon&gt;</ph>, the appropriate bit depth is also used.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the taskbar <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.Overlay%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Overlay</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The image that is displayed over the program icon in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo.Overlay"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates how the progress indicator is displayed in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can communicate the progress of long-running tasks by displaying a progress indicator in a <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar button.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The color of the indicator is determined by the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> property, which contains one of the <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemProgressState&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Normal&gt;</ph>, the indicator is green.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Paused&gt;</ph>, the indicator is yellow.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Error&gt;</ph>, the indicator is red.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For these states, the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> property determines how much of the taskbar button is filled by the progress indicator.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> is ignored for other values of <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate&gt;</ph> shows a pulsing green indicator across the entire taskbar button.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>No indicator is shown for <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the taskbar progress indicator in the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Normal&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Progress Indicator</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An enumeration value that indicates how the progress indicator is displayed in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemProgressState.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo.ProgressState"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the fullness of the progress indicator in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> property is represented as a value between 0.0 and 1.0.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Numbers smaller and larger are coerced to be within those bounds.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Double.NaN&gt;</ph> is coerced to 0.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can communicate the progress of long-running tasks by displaying a progress indicator in a <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar button.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The color of the indicator is determined by the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> property, which contains one of the <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemProgressState&gt;</ph> enumeration values.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph> property is <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Normal&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Paused&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Error&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> property determines the fullness of the progress indicator.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> is ignored for some values of <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressState%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.Indeterminate&gt;</ph> shows a pulsing green indicator across the entire taskbar button.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>No indicator is shown for <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemProgressState.None&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the taskbar progress indicator with a <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ProgressValue%2A&gt;</ph> of 82 percent.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Progress Indicator</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A value that indicates the fullness of the progress indicator in the taskbar button.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The default is 0.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo.ProgressValue"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets or sets the collection of <ph id="ph1">&lt;xref href="System.Windows.Shell.ThumbButtonInfo"&gt;&lt;/xref&gt;</ph> objects that are associated with the <ph id="ph2">&lt;xref href="System.Windows.Window"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add buttons to the taskbar thumbnail to give users access to common tasks without requiring them to switch to the application window.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Windows Media Player provides Play, Pause, Forward, and Back buttons that let users control media playback from the taskbar thumbnail when the application is minimized.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Buttons in the taskbar thumbnail are represented by <ph id="ph1">&lt;xref:System.Windows.Shell.ThumbButtonInfo&gt;</ph> objects and are contained in the <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> shell allows a maximum of seven buttons in the taskbar thumbnail.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>If more than seven <ph id="ph1">&lt;xref:System.Windows.Shell.ThumbButtonInfo&gt;</ph> objects are added to the <ph id="ph2">&lt;xref:System.Windows.Shell.ThumbButtonInfoCollection&gt;</ph>, the additional objects are treated as overflow.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a button is <ph id="ph1">&lt;xref:System.Windows.Visibility.Collapsed&gt;</ph>, it does not have any visible elements, and no space is reserved for it.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, additional buttons from the <ph id="ph1">&lt;xref:System.Windows.Shell.ThumbButtonInfoCollection&gt;</ph> overflow are displayed.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the taskbar preview with a collection of two thumb buttons.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Thumb Buttons</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The collection of <ph id="ph1">&lt;xref href="System.Windows.Shell.ThumbButtonInfo"&gt;&lt;/xref&gt;</ph> objects that are associated with the <ph id="ph2">&lt;xref href="System.Windows.Window"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The default is an empty collection.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo.ThumbButtonInfos"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar displays a scaled thumbnail of an application window's client area.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A&gt;</ph> property to specify a cropped area of the client window that is displayed in the thumbnail.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, this property is useful if you want to focus the thumbnail on the window content while you exclude the application toolbars.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property cannot be used to display content in the thumbnail that is not already visible in the application window.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify the area that is displayed in the thumbnail by setting the <ph id="ph1">&lt;xref:System.Windows.Thickness&gt;</ph> of the border around the area.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>The border starts at the edge of the client window and extends inward by the specified amount.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Content inside the border is displayed in the thumbnail.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the borders that define the <ph id="ph1">&lt;xref:System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Thumbnail clip margin<ept id="p1">](~/add/media/wpfshell-clipmargin.png "Thumbnail clip margin")</ept></source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thumbnail Clip Margin Border</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following illustration shows the clipped thumbnail preview.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">![</bpt>Taskbar Item Info Sample<ept id="p1">](~/add/media/wpfshell-taskbariteminfo.png "Taskbar Item Info Sample")</ept></source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Windows Taskbar Thumbnail Preview</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>A value that specifies the part of the application window's client area that is displayed in the taskbar thumbnail.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The default is an empty <ph id="ph1">&lt;xref href="System.Windows.Thickness"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Shell.TaskbarItemInfo.ThumbnailClipMargin"&gt;&lt;/xref&gt;</ph> dependency property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>