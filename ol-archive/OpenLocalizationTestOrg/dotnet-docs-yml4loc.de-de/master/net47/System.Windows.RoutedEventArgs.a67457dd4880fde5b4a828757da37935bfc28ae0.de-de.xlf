<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9ac7c8e79db5a547109263fe62bc93f29a377c51</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.RoutedEventArgs.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9aaf3319466ee3892cf54eab1e66790e0c301ee3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fd7528374b0038470bd0c8371867b4d3986b93e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains state information and event data associated with a routed event.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Different <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> can be used with a single <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.RoutedEvent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class is responsible for packaging the event data for a <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.RoutedEvent%2A&gt;</ph>, providing extra event state information, and is used by the event system for invoking the handler associated with the routed event.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this parameterless constructor, all public properties of the new <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> instance assume the following default values:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.RoutedEvent%2A&gt;</ph> defaults to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> defaults to <ph id="ph2">`false`</ph></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> defaults to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> defaults to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Null values for <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> only mean that the <ph id="ph3">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> data makes no attempt to specify the source.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this instance is used in a call to <ph id="ph1">&lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;</ph>, the  <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> values are populated based on the element that raised the event and are passed on to listeners through the routing.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;&lt;/xref&gt;</ph> class, using the supplied routed event identifier.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this overloaded constructor, unspecified properties of the new <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> instance assume the following default values:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> defaults to <ph id="ph2">`false`</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> defaults to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> defaults to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Null values for <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> only mean that this <ph id="ph3">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> makes no attempt to specify the source.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this instance is used in a call to <ph id="ph1">&lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;</ph>, the  <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> values are populated based on the element that raised the event and are passed on to listeners through the routing.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The routed event identifier for this instance of the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;&lt;/xref&gt;</ph> class, using the supplied routed event identifier, and providing the opportunity to declare a different source for the event.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using this overloaded constructor, unspecified properties of the new <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> instance assume the following default values:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> defaults to <ph id="ph2">`false`</ph></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> defaults to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Null values for <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> are populated based on the element that raised the event and passed on through the routing, but will read <ph id="ph2">`null`</ph> prior to invocation.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this signature when passing <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> to virtuals such as <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged%2A&gt;</ph>, where the arguments are used to call <ph id="ph3">&lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;</ph> internally.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The routed event identifier for this instance of the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>An alternate source that will be reported when the event is handled.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This pre-populates the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.Source"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates the present state of the event handling for a routed event as it travels the route.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Marking the event handled will limit the visibility of the routed event to listeners along the event route.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event does still travel the remainder of the route, but only handlers specifically added with <ph id="ph1">`HandledEventsToo`</ph> <ph id="ph2">`true`</ph> in the <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29&gt;</ph> method call will be invoked in response.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default handlers on instance listeners (such as those expressed in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>) will not be invoked.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling events that are marked handled is not a common scenario.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are a control author defining your own events, the decisions you make regarding event handling at the class level will impact users of your control as well as any users of derived controls, and potentially other elements that are either contained by your control or that contain your control.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>In very rare circumstances it is appropriate to handle events where  <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> is marked <ph id="ph2">`true`</ph>, and modify the event arguments by changing <ph id="ph3">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be necessary in certain areas of input events of controls, such as key handling of <ph id="ph1">&lt;xref:System.Windows.UIElement.KeyDown&gt;</ph> versus <ph id="ph2">&lt;xref:System.Windows.UIElement.TextInput&gt;</ph> where low level and high level input events compete for the handling, and each is attempting to work with a different routing strategy.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If setting, set to <ph id="ph1">`true`</ph> if the event is to be marked handled; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If reading this value, <ph id="ph1">`true`</ph> indicates that either a class handler, or some instance handler along the route, has already marked this event handled.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph>.indicates that no such handler has marked the event handled.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides a way to invoke event handlers in a type-specific way, which can increase efficiency over the base implementation.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base implementation incorporates reflection to determine the right handler for any case where the handler is not literally <ph id="ph1">&lt;xref:System.Windows.RoutedEventHandler&gt;</ph>, and this reflection step does have some performance consequences.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Invocations can be made more efficient by not relying on reflection.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the scenario that motivates this method being available for any routed event arguments class that choose to override it.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implementations should not call the base for this method, because your implementation should already be responsible for invoking the type safe handlers.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The generic handler / delegate implementation to be invoked.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The target on which the provided handler should be invoked.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, provides a notification callback entry point whenever the value of the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.Source"&gt;&lt;/xref&gt;</ph> property of an instance changes.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The new value that <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.Source"&gt;&lt;/xref&gt;</ph> is being set to.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets the original reporting source as determined by pure hit testing, before any possible <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.Source"&gt;&lt;/xref&gt;</ph> adjustment by a parent class.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property acquires its value once, before the class event handlers or any instance handlers are invoked, and is never adjusted past this point.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The original source information is read-only to class handlers or class implementations, just as it is reported in the event data.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Common cases where the source may be adjusted include content elements inside a content model for a control (the contents of a list item, for instance, will report the list item element as the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> and the actual element within the list item will be the <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Source adjustment by various elements and content models varies from class to class.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each class that adjusts event sources attempts to anticipate which source is the most useful to report for most input scenarios and the scenarios for which the class is intended, and then sets that source as the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this source is not the one that has relevance to your handling of the event, try checking <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> instead to see if it reports a different source that is more suitable.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details on input events, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The original reporting source, before any possible <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.Source"&gt;&lt;/xref&gt;</ph> adjustment made by class handling, which may have been done to flatten composited element trees.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.RoutedEvent"&gt;&lt;/xref&gt;</ph> associated with this <ph id="ph2">&lt;xref href="System.Windows.RoutedEventArgs"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set this value on a <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs&gt;</ph> that has already been routed (for instance, if you obtained the arguments through a handler).</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to do so will generate an exception.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can only set it on an instance that has not yet been used to generate an invocation of the event.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.RoutedEvent%2A&gt;</ph> cannot be <ph id="ph2">`null`</ph> at any time.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The identifier for the event that has been invoked.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Attempted to change the <ph id="ph1">&lt;xref href="System.Windows.RoutedEventArgs.RoutedEvent"&gt;&lt;/xref&gt;</ph> value while the event is being routed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to the object that raised the event.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>For any bubbling routed event that has actually traveled the route beyond the element that raised it, and for any tunneling routed event that has not yet tunneled down to the element that raised it, the value of <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> will be different than the value of the <ph id="ph2">`sender`</ph> parameter of the event arguments class.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Which of the two elements involved in the event is of the most importance in any given handler (<ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph>, the element that raised it, or <ph id="ph2">`sender`</ph>, the element that is currently handling it) is dependent on the application logic that your handler is addressing.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property is typically only done when overriding or implementing other <ph id="ph1">[!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)]</ph> that adjust event sources, such as when class handling an event.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Resetting apparent event sources from instance handlers is not recommended, particularly when the handler does not mark the event as handled.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do reset <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> to report a different event source, <ph id="ph2">&lt;xref:System.Windows.RoutedEventArgs.OriginalSource%2A&gt;</ph> will continue to report the source as first raised by the originating <ph id="ph3">&lt;xref:System.Windows.UIElement.RaiseEvent%2A&gt;</ph> call.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The object that raised the event.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>