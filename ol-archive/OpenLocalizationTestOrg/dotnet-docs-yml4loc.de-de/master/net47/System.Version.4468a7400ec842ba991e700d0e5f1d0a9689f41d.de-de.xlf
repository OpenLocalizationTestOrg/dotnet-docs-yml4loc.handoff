<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bad3f2c90c2b3ca09de4a203fd69c95fd2c2b8b5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Version.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9fdcc35652ff6f426983610d97145c74292f1cbe</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2399314906a680283dd557c0285efd612e4fa67e</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the version number of an assembly, operating system, or the common language runtime.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version numbers consist of two to four components: major, minor, build, and revision.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The major and minor components are required; the build and revision components are optional, but the build component is required if the revision component is defined.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>All defined components must be integers greater than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of the version number is as follows (optional components are shown in square brackets ([ and ]):</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>major<ept id="p1">*</ept>.<bpt id="p2">*</bpt>minor<ept id="p2">*</ept>[.<bpt id="p3">*</bpt>build<ept id="p3">*</ept>[.<bpt id="p4">*</bpt>revision<ept id="p4">*</ept>]]</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components are used by convention as follows:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>Major<ept id="p1">*</ept>: Assemblies with the same name but different major versions are not interchangeable.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A higher version number might indicate a major rewrite of a product where backward compatibility cannot be assumed.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>Minor<ept id="p1">*</ept>: If the name and major version number on two assemblies are the same, but the minor version number is different, this indicates significant enhancement with the intention of backward compatibility.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This higher minor version number might indicate a point release of a product or a fully backward-compatible new version of a product.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>Build<ept id="p1">*</ept>: A difference in build number represents a recompilation of the same source.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Different build numbers might be used when the processor, platform, or compiler changes.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>Revision<ept id="p1">*</ept>: Assemblies with the same name, major, and minor version numbers but different revisions are intended to be fully interchangeable.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>A higher revision number might be used in a build that fixes a security hole in a previously released assembly.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subsequent versions of an assembly that differ only by build or revision numbers are considered to be Hotfix updates of the prior version.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">&lt;xref:System.Version&gt;</ph> properties that have not been explicitly assigned a value is undefined (-1).</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting with .NET Framework 2.0, the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> properties enable you to identify a temporary version of your application that, for example, corrects a problem until you can release a permanent solution.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Furthermore, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Assigning Version Information to Assemblies</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordinarily, the <ph id="ph1">&lt;xref:System.Version&gt;</ph> class is not used to assign a version number to an assembly.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Reflection.AssemblyVersionAttribute&gt;</ph> class is used to define an assembly's version, as illustrated by the example in this topic.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving Version Information</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Version&gt;</ph> objects are most frequently used to store version information about some system or application component (such as the operating system), the common language runtime, the current application's executable, or a particular assembly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following examples illustrate some of the most common scenarios:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the operating system version.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.OperatingSystem.Version%2A?displayProperty=fullName&gt;</ph> property to retrieve the version number of the operating system.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#1)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the version of the common language runtime.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Environment.Version%2A?displayProperty=fullName&gt;</ph> property to retrieve version information about the common language runtime.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/GettingVersions1.cs#2)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/GettingVersions1.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the current application's assembly version.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetEntryAssembly%2A?displayProperty=fullName&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the application executable and then retrieves its assembly version number.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class#5<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentapp.cs#5)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class#5<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentapp.vb#5)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the current assembly's assembly version.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt;</ph> property to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that represents the assembly that contains the application entry point, and then retrieves its version information.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class#4<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/currentassem.cs#4)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class#4<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/currentassem.vb#4)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the version of a specific assembly.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A?displayProperty=fullName&gt;</ph> method to obtain a reference to an <ph id="ph2">&lt;xref:System.Reflection.Assembly&gt;</ph> object that has a particular file name, and then retrieves its version information.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that several other methods also exist to instantiate an <ph id="ph1">&lt;xref:System.Reflection.Assembly&gt;</ph> object by file name or by strong name.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class#3<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/specificassem.cs#3)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class#3<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/specificassem.vb#3)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Retrieving the Publish Version of a ClickOnce application.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A?displayProperty=fullName&gt;</ph> property to display an application's Publish Version.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that its successful execution requires the example's application identity to be set.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is handled automatically by the Visual Studio Publish Wizard.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class#7<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Version.Class/cs/clickonce.cs#7)</ept><ept id="p1">]</ept>  <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class#7<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Version.Class/vb/clickonce.vb#7)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Publish Version of an application for ClickOnce deployment is completely independent of its assembly version.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comparing Version Objects</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method to determine whether one <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is earlier than, the same as, or later than a second <ph id="ph3">&lt;xref:System.Version&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example indicates that Version 2.1 is later than Version 2.0.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class.Comparing#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons1.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class.Comparing#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons1.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>For two versions to be equal, the major, minor, build, and revision numbers of the first <ph id="ph1">&lt;xref:System.Version&gt;</ph> object must be identical to those of the second <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the build or revision number of a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object is undefined, that <ph id="ph2">&lt;xref:System.Version&gt;</ph> object is considered to be earlier than a <ph id="ph3">&lt;xref:System.Version&gt;</ph> object whose build or revision number is equal to zero.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example illustrates this by comparing three <ph id="ph1">&lt;xref:System.Version&gt;</ph> objects that have undefined version components.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>System.Version.Class.Comparing#2<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.version.class.comparing/cs/comparisons2.cs#2)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>System.Version.Class.Comparing#2<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.version.class.comparing/vb/comparisons2.vb#2)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>undefined (-1)</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>undefined (-1)</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> class using the specified string.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`version`</ph> parameter can contain only the components major, minor, build, and revision, in that order, and all separated by periods.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>There must be at least two components, and at most four.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first two components are assumed to be major and minor.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of unspecified components is undefined.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of the version number is as follows.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optional components are shown in square brackets ('[' and ']'):</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>major.minor[.build[.revision]]</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>All defined components must be integers greater than or equal to 0.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the major number is 6, the minor number is 2, the build number is 1, and the revision number is 3, then <ph id="ph1">`version`</ph> should be "6.2.1.3".</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>A string containing the major, minor, build, and revision numbers, where each number is delimited with a period character ('.').</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph> has fewer than two components or more than four components.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>A major, minor, build, or revision component is less than zero.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>At least one component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">version</ph><ept id="p1">&lt;/code&gt;</ept> does not parse to an integer.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>At least one component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">version</ph><ept id="p1">&lt;/code&gt;</ept> represents a number greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> class using the specified major and minor values.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>undefined (-1)</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>undefined (-1)</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The major version number.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The minor version number.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;major&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;minor&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> class using the specified major, minor, and build values.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>undefined (-1)</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The major version number.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The minor version number.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The build number.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;major&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;minor&lt;/code&gt;</ph>, or <ph id="ph3">&lt;code&gt;build&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> class with the specified major, minor, build, and revision numbers.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.Version&gt;</ph> object with the following property values.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The major version number.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The minor version number.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The build number.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The revision number.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;major&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;minor&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;build&lt;/code&gt;</ph>, or <ph id="ph4">&lt;code&gt;revision&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets the value of the build component of the version number for the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the version number is 6.2.1.3, the build number is 1.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the version number is 6.2, the build number is undefined.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The build number, or -1 if the build number is undefined.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object whose value is the same as the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type of the return value is important, cast the <ph id="ph1">&lt;xref:System.Object&gt;</ph> instance that is returned by this method to a <ph id="ph2">&lt;xref:System.Version&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> whose values are a copy of the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Compares the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object to a specified object and returns an indication of their relative values.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unknown component is assumed to be older than any known component.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1 is older than version 1.1.0</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1 is older than version 1.1.1</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1 is older than version 1.1.2.3</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1.2 is older than version 1.1.2.4</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.2.5 is newer than version 1.2.3.4</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>An object to compare, or <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is a version before <ph id="ph2">&lt;code&gt;version&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is the same version as <ph id="ph2">&lt;code&gt;version&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is a version subsequent to <ph id="ph2">&lt;code&gt;version&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph> is not of type <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Compares the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object to a specified <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object and returns an indication of their relative values.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.CompareTo%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components of <ph id="ph1">`Version`</ph> in decreasing order of importance are: major, minor, build, and revision.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>An unknown component is assumed to be older than any known component.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example:</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1 is older than version 1.1.0.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1 is older than version 1.1.1.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1 is older than version 1.1.2.3.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.1.2 is older than version 1.1.2.4.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Version 1.2.5 is newer than version 1.2.3.4.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object to compare to the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>A signed integer that indicates the relative values of the two objects, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Less than zero</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is a version before <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is the same version as <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Greater than zero</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is a version subsequent to <ph id="ph2">&lt;code&gt;value&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is equal to a specified object.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>An object to compare with the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object and <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">obj</ph><ept id="p1">&lt;/code&gt;</ept> are both <ph id="ph4">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> objects, and every component of the current <ph id="ph5">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object matches the corresponding component of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph6">obj</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph7">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object and a specified <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object represent the same value.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface, and performs slightly better than the <ph id="ph2">&lt;xref:System.Version.Equals%2A&gt;</ph> method because it does not have to unbox the <ph id="ph3">`obj`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object to compare to the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object, or <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if every component of the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object matches the corresponding component of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">obj</ph><ept id="p1">&lt;/code&gt;</ept> parameter; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Returns a hash code for the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer hash code.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Gets the value of the major component of the version number for the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the version number is 6.2, the major version is 6.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The major version number.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Gets the high 16 bits of the revision number.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting in the .NET Framework version 2.0, the Windows NT operating system uses the <ph id="ph1">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to encode the service pack number.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>A 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>Gets the value of the minor component of the version number for the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the version number is 6.2, the minor version is 2.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>The minor version number.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Gets the low 16 bits of the revision number.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Suppose you release an interim version of your application to temporarily correct a problem until you can release a permanent solution.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The temporary version does not warrant a new revision number, but it does need to be identified as a different version.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, encode the identification information in the high and low 16-bit portions of the 32-bit revision number.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Version.Revision%2A&gt;</ph> property to obtain the entire revision number, use the <ph id="ph2">&lt;xref:System.Version.MajorRevision%2A&gt;</ph> property to obtain the high 16 bits, and use the <ph id="ph3">&lt;xref:System.Version.MinorRevision%2A&gt;</ph> property to obtain the low 16 bits.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>A 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> objects are equal.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">v1</ph><ept id="p1">&lt;/code&gt;</ept> equals <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">v2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Determines whether the first specified <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is greater than the second specified <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">v1</ph><ept id="p1">&lt;/code&gt;</ept> is greater than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">v2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>Determines whether the first specified <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is greater than or equal to the second specified <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">v1</ph><ept id="p1">&lt;/code&gt;</ept> is greater than or equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">v2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>Determines whether two specified <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> objects are not equal.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.Equals%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">v1</ph><ept id="p1">&lt;/code&gt;</ept> does not equal <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">v2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Determines whether the first specified <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is less than the second specified <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">v1</ph><ept id="p1">&lt;/code&gt;</ept> is less than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">v2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;v1&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>Determines whether the first specified <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object is less than or equal to the second <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Version.CompareTo%28System.Object%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The second <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">v1</ph><ept id="p1">&lt;/code&gt;</ept> is less than or equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">v2</ph><ept id="p2">&lt;/code&gt;</ept>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;v1&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Converts the string representation of a version number to an equivalent <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`input`</ph> parameter must have the following format:</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optional components are shown in square brackets ([ and ]).</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components must appear in the specified order, and must be separated by periods.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the string representation of a version number must conform to a recognized pattern, applications should always use exception handling when calling the <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method to parse user input.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can call the <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method to parse the string representation of a version number and return a value that indicates whether the parse operation succeeded.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Version.Parse%2A&gt;</ph> method is a convenience method; it is equivalent to calling the <ph id="ph2">&lt;xref:System.Version.%23ctor%28System.String%29&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>A string that contains a version number to convert.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>An object that is equivalent to the version number specified in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;input&lt;/code&gt;</ph> has fewer than two or more than four version components.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>At least one component in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> is less than zero.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>At least one component in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> is not an integer.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>At least one component in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> represents a number that is greater than <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>Gets the value of the revision component of the version number for the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the version number is 6.2.1.3, the revision number is 3.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the version number is 6.2, the revision number is undefined.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The revision number, or -1 if the revision number is undefined.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object to its equivalent <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object, as depicted in the following format.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Each component is separated by a period character ('.').</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Square brackets ('[' and ']') indicate a component that will not appear in the return value if the component is not defined:</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>major.minor[.build[.revision]]</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>For example, if you create a <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object using the constructor <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">Version(1,1)</ph><ept id="p1">&lt;/code&gt;</ept>, the returned string is "1.1".</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>If you create a <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object using the constructor <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">Version(1,3,4,2)</ph><ept id="p1">&lt;/code&gt;</ept>, the returned string is "1.3.4.2".</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Converts the value of the current <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object to its equivalent <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>A specified count indicates the number of components to return.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The number of components to return.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fieldCount</ph><ept id="p1">&lt;/code&gt;</ept> ranges from 0 to 4.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representation of the values of the major, minor, build, and revision components of the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object, each separated by a period character ('.').</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fieldCount</ph><ept id="p1">&lt;/code&gt;</ept> parameter determines how many components are returned.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>fieldCount</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Return Value</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>An empty string ("").</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>major</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>2</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>major.minor</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>3</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>major.minor.build</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>4</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>major.minor.build.revision</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>For example, if you create <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object using the constructor <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">Version(1,3,5)</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">ToString(2)</ph><ept id="p2">&lt;/code&gt;</ept> returns "1.3" and <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">ToString(4)</ph><ept id="p3">&lt;/code&gt;</ept> throws an exception.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fieldCount&lt;/code&gt;</ph> is less than 0, or more than 4.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fieldCount&lt;/code&gt;</ph> is more than the number of components defined in the current <ph id="ph2">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Tries to convert the string representation of a version number to an equivalent <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object, and returns a value that indicates whether the conversion succeeded.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Version.TryParse%2A&gt;</ph> method is similar to the <ph id="ph2">&lt;xref:System.Version.Parse%2A&gt;</ph> method, except that it does not throw an exception if the conversion fails.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, it returns <ph id="ph1">`false`</ph> if <ph id="ph2">`input`</ph> is null, has fewer than two or more than four components, has at least one component that is not an integer, has at least one component that is less than zero, or has at least one component that is greater than <ph id="ph3">&lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the parse operation to succeed, the <ph id="ph1">`input`</ph> parameter must be in the following format:</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>where <bpt id="p1">*</bpt>major<ept id="p1">*</ept>, <bpt id="p2">*</bpt>minor<ept id="p2">*</ept>, <bpt id="p3">*</bpt>build<ept id="p3">*</ept>, and <bpt id="p4">*</bpt>revision<ept id="p4">*</ept> are the string representations of the version number's four components: major version number, minor version number, build number, and revision number.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optional components are shown in square brackets ([ and ]).</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The components must appear in order, and must be separated by periods.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>A string that contains a version number to convert.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>When this method returns, contains the <ph id="ph1">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> equivalent of the number that is contained in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">input</ph><ept id="p1">&lt;/code&gt;</ept>, if the conversion succeeded, or a <ph id="ph3">&lt;xref href="System.Version"&gt;&lt;/xref&gt;</ph> object whose major and minor version numbers are 0 if the conversion failed.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">input</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">result</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph5">`null`</ph> when the method returns.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">input</ph><ept id="p1">&lt;/code&gt;</ept> parameter was converted successfully; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>