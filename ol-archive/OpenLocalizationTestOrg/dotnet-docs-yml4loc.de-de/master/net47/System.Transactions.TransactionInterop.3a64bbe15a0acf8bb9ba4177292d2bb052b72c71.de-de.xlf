<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">500d3e23f61c09f45ce0aba00eca89818305e45d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Transactions.TransactionInterop.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7d5b3af899c2582b04c28f222533fa7cf7387694</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">45c710943873a9d816c1237d7ac0c8603e4b1ee8</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Facilitates interaction between <ph id="ph1">&lt;xref href="System.Transactions"&gt;&lt;/xref&gt;</ph> and components that were previously written to interact with MSDTC, COM+, or <ph id="ph2">&lt;xref href="System.EnterpriseServices"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class provides methods for transaction propagation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on how this process works, see <bpt id="p1">[</bpt>Transaction Propagation<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/b09541e6-4baf-4e37-b879-62884fbb0969.asp)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the methods provided by this class, you can engage in two types of transaction propagations, Export/Import (push model) and Transmitter/Receiver (pull model).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Export/Import (push model) propagation involves these steps,</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the remote machine, obtain the "whereabouts" of the transaction manager of that machine by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetWhereabouts%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then cache this piece of information on the client machine for future usage.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Send the data containing the whereabouts to the client machine using any preferred method</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the client machine, use the whereabouts to "export" the transaction to the remote machine and generate a transaction "cookie".</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is done by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> and passing in the remote machine's whereabouts.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Send the data containing the transaction "cookie" to the remote machine using any preferred method</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the remote machine, use the transaction "cookie" to obtain a clone of the client transaction by calling the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromExportCookie%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the remote machine, use the clone transaction to enlist the resource manager using the <ph id="ph1">&lt;xref:System.Transactions.Transaction.EnlistVolatile%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Transactions.Transaction.EnlistDurable%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Transactions.Transaction&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transmitter/Receiver (pull model) propagation involves these steps,</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the client machine, using the transaction generates a corresponding "propagation token" by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Send the data containing the "propagation token" of the transaction to the remote machine using any preferred method</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the remote machine, use the "propagation token" to obtain a clone of the client transaction by calling <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Transmitter/Receiver model provides better performance in scenarios where the transaction token is sent to a remote machine, but the remote machine may not use it to obtain the transaction.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because the transaction is not propagated until <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Another advantage is that the propagation token can be sent to any remote machine, while the export cookie can be used only on the machine that provided the whereabouts.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you should also note that the whereabouts of remote transaction managers are encapsulated in all the propagation tokens, making them bigger than the corresponding transaction cookies from the Export/Import model.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">**</bpt>Note<ept id="p1">**</ept> This type uses <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction.LinkDemand&gt;</ph> to prevent it from being called from untrusted code; however, only the immediate caller is required to possess the <ph id="ph2">`FullTrust`</ph> permission set.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Transactions.IDtcTransaction"&gt;&lt;/xref&gt;</ph> instance that represents a <ph id="ph2">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> instance to be marshaled.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Transactions.IDtcTransaction"&gt;&lt;/xref&gt;</ph> instance that represents a <ph id="ph2">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Transactions.IDtcTransaction"&gt;&lt;/xref&gt;</ph> instance is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;xref href="System.EnterpriseServices.ITransaction"&gt;&lt;/xref&gt;</ph> used by <ph id="ph3">&lt;xref href="System.EnterpriseServices"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Transforms a transaction object into an export transaction cookie.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method if you want to export a transaction.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`transaction`</ph> that is passed along is marshaled into a transaction cookie.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then send the transaction cookie to the destination process.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is referred to as propagating the transaction between processes or systems.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The propagation is considered to be a push model where the local transaction is pushed to the destination.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, information contained in <ph id="ph1">`whereabouts`</ph> must describe the destination transaction manager.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> object to be marshaled.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>An export transaction cookie representing the specified <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Generates a <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> from a specified <ph id="ph2">&lt;xref href="System.Transactions.IDtcTransaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`transactionNative`</ph> is compatible with the unmanaged form of <bpt id="p1">[</bpt>ITransaction<ept id="p1">](http://msdn.microsoft.com/library/default.asp?url=/library/cossdk/html/d40264be-f9b2-4044-aac6-84b43e5be666.asp)</ept> used by MSDTC and with the Managed form of <ph id="ph2">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> used by <ph id="ph3">&lt;xref:System.EnterpriseServices&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> instance that represents the given <ph id="ph2">&lt;xref href="System.Transactions.IDtcTransaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Generates a <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> from the specified an export cookie.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> from the specified export cookie.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Generates a <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> instance from the specified transmitter propagation token.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method, together with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetTransmitterPropagationToken%2A&gt;</ph> method, provide functionality for "pull" propagation, in which the transaction is "pulled" from the remote machine when this method is called to unmarshal the transaction.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph> from the specified transmitter propagation token.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The deserialization of a transaction fails because the transaction manager cannot be contacted.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>This may be caused by network firewall or security settings.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Generates a propagation token for the specified <ph id="ph1">&lt;xref href="System.Transactions.Transaction"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A transaction to be marshaled into a propagation token.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This method, together with the <ph id="ph1">&lt;xref href="System.Transactions.TransactionInterop.GetTransactionFromTransmitterPropagationToken(System.Byte[])"&gt;&lt;/xref&gt;</ph> method, provide functionality for Transmitter/Receiver propagation, in which the transaction is "pulled" from the remote machine when the latter is called to unmarshal the transaction.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>For more information on different propagation models, see <ph id="ph1">&lt;xref href="System.Transactions.TransactionInterop"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;xref href="System.Transactions"&gt;&lt;/xref&gt;</ph> uses.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Whereabouts contains an address that describes the location of a transaction manager.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This permits two transaction managers to communicate with one another and thereby propagate a transaction from one system to the other.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information returned by this method can be used to provide location information for push model transaction propagation with the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop.GetExportCookie%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on different propagation models, see the Remarks section of the <ph id="ph1">&lt;xref:System.Transactions.TransactionInterop&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The Whereabouts of the distributed transaction manager that <ph id="ph1">&lt;xref href="System.Transactions"&gt;&lt;/xref&gt;</ph> uses.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The type of the distributed transaction processor.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is used for the <ph id="ph1">`Transaction.PromoterType`</ph> property if the transaction is or will be promoted to MSDTC and the <ph id="ph2">`Transaction.GetPromotedToken`</ph> method will return an MSDTC transaction propagation token for the <ph id="ph3">`byte[]`</ph> result.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>