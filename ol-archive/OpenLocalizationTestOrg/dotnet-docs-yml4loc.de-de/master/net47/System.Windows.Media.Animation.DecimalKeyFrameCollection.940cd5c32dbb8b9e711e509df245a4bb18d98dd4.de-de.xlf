<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4115f96094eda18668fb668ff320b77e7f919787</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Media.Animation.DecimalKeyFrameCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">dcf413653efa2178853ab4c2c6761d38719651d0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">583df29567518c529d6e726a0a06fb78af5f96e9</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a collection of <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This collection is used as part of a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DecimalAnimationUsingKeyFrames&gt;</ph> to animate a <ph id="ph2">&lt;xref:System.Decimal&gt;</ph> property value along a set of key frames.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Implicit Collection Usage</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML Values</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">*</bpt>oneOrMoreDecimalKeyFrameObjectElements<ept id="p1">*</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>One or more <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DecimalKeyFrame&gt;</ph> objects, declared using object element syntax.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to the end of the collection.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to add to the end of the collection.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The index at which the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyFrame</ph><ept id="p1">&lt;/code&gt;</ept> was added.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Removes all <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> objects from the collection.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used to produce modifiable copies of frozen <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For convenience, this method shadows the inherited version with a strongly typed implementation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A modifiable clone of the current object.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The cloned object's <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property will be <ph id="ph2">`false`</ph> even if the source's <ph id="ph3">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property was <ph id="ph4">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Makes this instance a deep copy of the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a modifiable copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCore%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> to clone.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Makes this instance a modifiable deep copy of the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> using current property values.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Resource references, data bindings, and animations are not copied, but their current values are.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a modifiable copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValue%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.CloneCurrentValueCore%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> to clone.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether the collection contains the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DecimalKeyFrameCollection.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, this method is an O(<bpt id="p1">*</bpt><ph id="ph1">n</ph><ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt><ph id="ph2">n</ph><ept id="p2">*</ept> is <ph id="ph3">&lt;xref:System.Windows.Media.Animation.DecimalKeyFrameCollection.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to locate in the collection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the collection contains <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">keyFrame</ph><ept id="p1">&lt;/code&gt;</ept>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Copies all of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> objects in a collection to a specified array.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Identifies the array to which content is copied.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Index position in the array to which the contents of the collection are copied.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the number of key frames contained in the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The number of key frames contained in the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates a new, frozen instance of <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A frozen instance of <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets an empty <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An empty <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Makes this instance of <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> read-only or determines whether it can be made read-only.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this method should simply determine whether this instance can be frozen.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> if this instance should actually freeze itself when this method is called.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is true, this method returns <ph id="ph2">`true`</ph> if this instance can be made read-only, or <ph id="ph3">`false`</ph> if it cannot be made read-only.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">isChecking</ph><ept id="p1">&lt;/code&gt;</ept> is false, this method returns <ph id="ph2">`true`</ph> if this instance is now read-only, or <ph id="ph3">`false`</ph> if it cannot be made read-only, with the side effect of having begun to change the frozen status of this object.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Makes this instance a clone of the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that if these properties contain resource references or data bindings, <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> will fail when trying to freeze the object and will throw an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a frozen copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozen%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Freezable.GetAsFrozenCore%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> object to clone and freeze.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Makes this instance a frozen clone of the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Resource references, data bindings, and animations are not copied, but their current values are.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a frozen copy of the current object, call <ph id="ph1">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A&gt;</ph> instead of calling this method directly.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information see <ph id="ph1">&lt;xref:System.Windows.Freezable.GetCurrentValueAsFrozenCore%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection"&gt;&lt;/xref&gt;</ph> to copy and freeze.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>Returns an enumerator that can iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators only allow reading the data in the collection.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first item in the collection.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> also brings the enumerator back to this position.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> to advance the enumerator to the first item of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the next item.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the end of the collection is passed, the enumerator is positioned after the last item in the collection, and calling <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> to the first item of the collection again, you can call <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> followed by <ph id="ph3">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying or deleting items, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> will return the item that it is set to, even if the enumerator is already invalidated.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> that can iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Searches for the specified <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> and returns the zero-based index of the first occurrence within the entire collection.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection is searched forward starting at the first key frame and ending at the last key frame.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Windows.Media.Animation.DecimalKeyFrameCollection.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>That is, this method is an O(<bpt id="p1">*</bpt><ph id="ph1">n</ph><ept id="p1">*</ept>) operation, where <bpt id="p2">*</bpt><ph id="ph2">n</ph><ept id="p2">*</ept> is <ph id="ph3">&lt;xref:System.Windows.Media.Animation.DecimalKeyFrameCollection.Count%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to locate in the collection.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first occurrence of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">keyFrame</ph><ept id="p1">&lt;/code&gt;</ept> within the entire collection, if found; otherwise, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">-1</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Inserts a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> into a specific location within the collection.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The index position at which the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> is inserted.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> object to insert in the collection.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates if the collection size can ever change.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the collection is frozen; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates if the collection is read-only.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the collection is read-only; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether access to the collection is synchronized (thread-safe).</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads could still modify the collection, which causes the enumerator to throw an exception.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access to the collection is synchronized (thread-safe); otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> at the specified index position.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The zero-based index of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to get or set.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> at the specified index.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The attempt to modify the collection is invalid because the collection is frozen (its <ph id="ph1">&lt;xref href="System.Windows.Freezable.IsFrozen"&gt;&lt;/xref&gt;</ph> property is <bpt id="p1">**</bpt>true<ept id="p1">**</ept>).</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is equal to or greater than <ph id="ph2">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrameCollection.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Removes a <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> object from the collection.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Identifies the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to remove from the collection.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Removes the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> at the specified index position from the collection.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Index position of the <ph id="ph1">&lt;xref href="System.Windows.Media.Animation.DecimalKeyFrame"&gt;&lt;/xref&gt;</ph> to be removed.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the collection.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the collection.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <ph id="ph1">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph> to an <ph id="ph2">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph>, starting at a particular <ph id="ph3">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> index.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>The one-dimensional <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;xref href="System.Collections.ICollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Array"&gt;&lt;/xref&gt;</ph> must have zero-based indexing.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The zero-based index in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which copying begins.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Adds an item to the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The object to add to the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The position into which the new element was inserted, or -1 to indicate that the item was not inserted into the collection.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Determines whether the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> contains a specific value.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The object to locate in the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> is found in the <ph id="ph3">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Determines the index of a specific item in the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The object to locate in the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The index of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> if found in the list; otherwise, -1.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Inserts an item to the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph> at the specified index.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The zero-based index at which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> should be inserted.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The object to insert into the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets or sets the element at the specified index.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The zero-based index of the element to get or set.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The element at the specified index.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Removes the first occurrence of a specific object from the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The object to remove from the <ph id="ph1">&lt;xref href="System.Collections.IList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>