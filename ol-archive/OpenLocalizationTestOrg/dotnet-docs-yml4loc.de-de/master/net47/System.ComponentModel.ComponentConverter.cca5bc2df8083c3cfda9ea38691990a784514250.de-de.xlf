<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc5eb51aa480ec6737ab2c598d61d4961a48c456</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.ComponentConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7f652bd32c55b5e6ded1275f9bba7becd6223dc0</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2fac7c871793afb54105f03233f5309b9e524f1f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a type converter to convert components to and from various other representations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class implements <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ComponentModel.ComponentConverter.GetProperties%2A&gt;</ph> by returning the properties through the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetProperties%2A&gt;</ph> method of <ph id="ph4">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about type converters, see the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class and <bpt id="p1">[</bpt>How to: Implement a Type Converter<ept id="p1">](http://msdn.microsoft.com/library/90373a3f-d8c8-492d-841c-945d62393c56)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should never create an instance of <ph id="ph1">&lt;xref:System.ComponentModel.ComponentConverter&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method of <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the examples in the <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> base class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This converter converts an object that implements <ph id="ph1">&lt;xref:System.ComponentModel.IComponent&gt;</ph> and displays its properties in the Properties window.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.ComponentConverter"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that represents the type to associate with this component converter.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets a collection of properties for the type of component specified by the value parameter.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`attributes`</ph> array will be used to filter the array.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`attributes`</ph> can have a mix of <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Attribute&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Filtering is defined by the following rules:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Type&gt;</ph> object will be treated as a wildcard; it will match any property that has the <ph id="ph2">&lt;xref:System.Type&gt;</ph> in its set of attributes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a property does not have an <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> of the same class, the property will not be included in the returned array.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the attribute is an instance of <ph id="ph1">&lt;xref:System.Attribute&gt;</ph>, the property must be an exact match or it will not be included in the returned array.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a <ph id="ph1">&lt;xref:System.Attribute&gt;</ph> instance is specified and it is the default property, it will be included in the returned array even if there is no instance of the <ph id="ph2">&lt;xref:System.Attribute&gt;</ph> in the property.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> that provides a format context.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that specifies the type of component to get the properties for.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Attribute"&gt;&lt;/xref&gt;</ph> that will be used as a filter.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptorCollection"&gt;&lt;/xref&gt;</ph> with the properties that are exposed for the component, or <ph id="ph2">`null`</ph> if there are no properties.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this object supports properties using the specified context.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ITypeDescriptorContext"&gt;&lt;/xref&gt;</ph> that provides a format context.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> because <ph id="ph2">&lt;xref href="System.ComponentModel.TypeConverter.GetProperties(System.Object)"&gt;&lt;/xref&gt;</ph> should be called to find the properties of this object.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method never returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>