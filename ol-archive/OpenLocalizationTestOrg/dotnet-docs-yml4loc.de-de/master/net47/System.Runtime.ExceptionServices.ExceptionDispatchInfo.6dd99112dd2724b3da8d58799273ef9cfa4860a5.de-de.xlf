<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b722a721f406e736b08b696d64a4c2ccda42318</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.ExceptionServices.ExceptionDispatchInfo.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00992ccb54ca0c9067b84d2036cca8bc82556e13</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5dd2d1abbf54b1d4562fc529c09d5dcfb04dd24a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an exception whose state is captured at a certain point in code.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception can be thrown at another time and possibly on another thread by calling the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception is thrown as if it had flowed from the point where it was captured to the point where the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> cannot be serialized and is not intended to cross application domain boundaries.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Runtime.ExceptionServices.ExceptionDispatchInfo"&gt;&lt;/xref&gt;</ph> object that represents the specified exception at the current point in code.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo&gt;</ph> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The exception whose state is captured, and which is represented by the returned object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An object that represents the specified exception at the current point in code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;source&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the exception that is represented by the current instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not intended to be used by application code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A&gt;</ph> method to restore the state of the captured exception and throw it.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The exception that is represented by the current instance.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Throws the exception that is represented by the current <ph id="ph1">&lt;xref href="System.Runtime.ExceptionServices.ExceptionDispatchInfo"&gt;&lt;/xref&gt;</ph> object, after restoring the state that was saved when the exception was captured.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: "End of stack trace from the previous location where the exception was thrown".</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>