<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ac2f1e046dd2dadddb8b59ce707eee111464f651</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Threading.DispatcherOperation.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e64d15ed12f0b3077ae6b4e9536f9909e818aee9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">929976b9217d39e755a3900769fa4fecd0bfa4c0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents an object that is used to interact with an operation that has been posted to the <ph id="ph1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph> queue.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> object when it is called.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> object can be used to interact with the delegate on the <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> queue, such as changing the priority of the operation or aborting the operation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the return value of the invoked delegate, use the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> is not an exception handling boundary.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that exceptions are handled by the <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> and are not preserved by the operation.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Aborts the operation.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an operation is already in progress, this method will return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When an operation is aborted, the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Status%2A&gt;</ph> of the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> is set to <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Aborted&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherOperation.Aborted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the operation was aborted; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Occurs when the operation is aborted.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Occurs when the operation has completed.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph> that the operation was posted to.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The dispatcher.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns an object that is notified when the asynchronous operation is finished.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An object that is notified when the asynchronous operation is finished.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Begins the operation that is associated with this <ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherOperation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph> in all cases.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets the priority of the operation in the <ph id="ph1">&lt;xref href="System.Windows.Threading.Dispatcher"&gt;&lt;/xref&gt;</ph> queue.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The priority of the delegate on the queue.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Gets the result of the operation after it has completed.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The result of the operation -or- <ph id="ph1">`null`</ph> if the operation has not completed.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets the current status of the operation..</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The stages of a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation&gt;</ph> are <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Pending&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Executing&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Completed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>At any point before the operation has completed, the status can be set to <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperationStatus.Aborted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The status of the operation.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Threading.Tasks.Task`1"&gt;&lt;/xref&gt;</ph> that represents the current operation.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>An object that represents the current operation.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Waits for the operation to complete</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the return value of the invoked delegate, use the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The status of the operation.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherOperation.Status"&gt;&lt;/xref&gt;</ph> is equal to <ph id="ph2">&lt;xref href="System.Windows.Threading.DispatcherOperationStatus.Executing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This can occur when waiting for an operation that is already executing on the same thread.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Waits for the operation to complete in the specified period of time.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To obtain the return value of the invoked delegate, use the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherOperation.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The maximum period of time to wait.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The status of the operation.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Threading.DispatcherOperation.Status"&gt;&lt;/xref&gt;</ph> is equal to <ph id="ph2">&lt;xref href="System.Windows.Threading.DispatcherOperationStatus.Executing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>This can occur when waiting for an operation that is already executing on the same thread.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>