<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f53a51f714f9ec0d80af32da74dba93cfb1131b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Math.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">352b2ef517b2dfef146b1982952be6d594913ba8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9e3d064c31ba26644d765c7af59b8418222fd393</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides constants and static methods for trigonometric, logarithmic, and other common mathematical functions.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#mscorlib/system/math.cs#a4407e67b9a5afad)</ept>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> number.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of a <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 1.2 and -1.2 is 1.2.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>A number that is greater than or equal to <ph id="ph1">&lt;xref href="System.Decimal.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.Decimal.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A decimal number, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.Decimal.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of a <ph id="ph1">&lt;xref:System.Double&gt;</ph> is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 1.2e03 and -1.2e03 is 1.2e03.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Double.NegativeInfinity&gt;</ph> or <ph id="ph3">&lt;xref:System.Double.PositiveInfinity&gt;</ph>, the return value is <ph id="ph4">&lt;xref:System.Double.PositiveInfinity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>, the return value is <ph id="ph3">&lt;xref:System.Double.NaN&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A number that is greater than or equal to <ph id="ph1">&lt;xref href="System.Double.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.Double.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.Double.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of an <ph id="ph1">&lt;xref:System.Int16&gt;</ph> is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 123 and -123 is 123.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A number that is greater than <ph id="ph1">&lt;xref href="System.Int16.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.Int16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A 16-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.Int16.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> equals <ph id="ph2">&lt;xref href="System.Int16.MinValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a 32-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of an <ph id="ph1">&lt;xref:System.Int32&gt;</ph> is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 123 and -123 is 123.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A number that is greater than <ph id="ph1">&lt;xref href="System.Int32.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A 32-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.Int32.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> equals <ph id="ph2">&lt;xref href="System.Int32.MinValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a 64-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of an <ph id="ph1">&lt;xref:System.Int64&gt;</ph> is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 123 and -123 is 123.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A number that is greater than <ph id="ph1">&lt;xref href="System.Int64.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.Int64.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A 64-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.Int64.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> equals <ph id="ph2">&lt;xref href="System.Int64.MinValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of an 8-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of a signed byte is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 12 and -12 is 12.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A number that is greater than <ph id="ph1">&lt;xref href="System.SByte.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.SByte.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An 8-bit signed integer, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.SByte.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> equals <ph id="ph2">&lt;xref href="System.SByte.MinValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Returns the absolute value of a single-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The absolute value of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> is its numeric value without its sign.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the absolute value of both 1.2e-03 and -1.2e03 is 1.2e03.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph> or <ph id="ph3">&lt;xref:System.Single.PositiveInfinity&gt;</ph>, the return value is <ph id="ph4">&lt;xref:System.Single.PositiveInfinity&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`value`</ph> is equal to <ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph>, the return value is <ph id="ph3">&lt;xref:System.Single.NaN&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A number that is greater than or equal to <ph id="ph1">&lt;xref href="System.Single.MinValue"&gt;&lt;/xref&gt;</ph>, but less than or equal to <ph id="ph2">&lt;xref href="System.Single.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A single-precision floating-point number, x, such that 0 ≤ x ≤<ph id="ph1">&lt;xref href="System.Single.MaxValue"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Returns the angle whose cosine is the specified number.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply the return value by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph> to convert from radians to degrees.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A number representing a cosine, where <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> must be greater than or equal to -1, but less than or equal to 1.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>An angle, θ, measured in radians, such that 0 ≤θ≤π</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">d</ph><ept id="p1">&lt;/code&gt;</ept> &lt; -1 or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">d</ph><ept id="p2">&lt;/code&gt;</ept> &gt; 1 or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">d</ph><ept id="p3">&lt;/code&gt;</ept> equals <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Returns the angle whose sine is the specified number.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply the return value by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph> to convert from radians to degrees.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>A number representing a sine, where <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> must be greater than or equal to -1, but less than or equal to 1.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">d</ph><ept id="p1">&lt;/code&gt;</ept> &lt; -1 or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">d</ph><ept id="p2">&lt;/code&gt;</ept> &gt; 1 or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">d</ph><ept id="p3">&lt;/code&gt;</ept> equals <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Returns the angle whose tangent is the specified number.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>A positive return value represents a counterclockwise angle from the x-axis; a negative return value represents a clockwise angle.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply the return value by 180/<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph> to convert from radians to degrees.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>A number representing a tangent.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>An angle, θ, measured in radians, such that -π/2 ≤θ≤π/2.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">d</ph><ept id="p1">&lt;/code&gt;</ept> equals <ph id="ph3">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, -π/2 rounded to double precision (-1.5707963267949) if <bpt id="p2">&lt;code&gt;</bpt><ph id="ph4">d</ph><ept id="p2">&lt;/code&gt;</ept> equals <ph id="ph5">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, or π/2 rounded to double precision (1.5707963267949) if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph6">d</ph><ept id="p3">&lt;/code&gt;</ept> equals <ph id="ph7">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the angle whose tangent is the quotient of two specified numbers.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value is the angle in the Cartesian plane formed by the x-axis, and a vector starting from the origin, (0,0), and terminating at the point, (x,y).</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The y coordinate of a point.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>The x coordinate of a point.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>An angle, θ, measured in radians, such that -π≤θ≤π, and tan(θ) = <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">y</ph><ept id="p1">&lt;/code&gt;</ept><ph id="ph2"> / </ph><bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">x</ph><ept id="p2">&lt;/code&gt;</ept>, where (<bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">x</ph><ept id="p3">&lt;/code&gt;</ept>, <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">y</ph><ept id="p4">&lt;/code&gt;</ept>) is a point in the Cartesian plane.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Observe the following:</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>For (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept>) in quadrant 1, 0 &lt; θ &lt; π/2.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>For (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept>) in quadrant 2, π/2 &lt; θ≤π.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>For (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept>) in quadrant 3, -π &lt; θ &lt; -π/2.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>For (<bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept>) in quadrant 4, -π/2 &lt; θ &lt; 0.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>For points on the boundaries of the quadrants, the return value is the following:</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>If y is 0 and x is not negative, θ = 0.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>If y is 0 and x is negative, θ = π.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>If y is positive and x is 0, θ = π/2.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>If y is negative and x is 0, θ = -π/2.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>If y is 0 and x is 0, θ = 0.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> is <ph id="ph3">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, or if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph4">x</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">y</ph><ept id="p4">&lt;/code&gt;</ept> are either <ph id="ph6">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph> or <ph id="ph7">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, the method returns <ph id="ph8">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Produces the full product of two 32-bit numbers.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The first number to multiply.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>The second number to multiply.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The number containing the product of the specified numbers.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Returns the smallest integral value that is greater than or equal to the specified decimal number.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, the presence of any fractional component causes <ph id="ph2">`d`</ph> to be rounded to the next highest integer.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`d`</ph> is negative, the rounding operation causes any fractional component of <ph id="ph2">`d`</ph> to be discarded.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Floor%28System.Decimal%29&gt;</ph> method, which supports rounding toward negative infinity.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>A decimal number.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The smallest integral value that is greater than or equal to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Note that this method returns a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> instead of an integral type.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Returns the smallest integral value that is greater than or equal to the specified double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This kind of rounding is sometimes called rounding toward positive infinity.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if <ph id="ph1">`a`</ph> is positive, the presence of any fractional component causes <ph id="ph2">`a`</ph> to be rounded to the next highest integer.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`a`</ph> is negative, the rounding operation causes any fractional component of <ph id="ph2">`a`</ph> to be discarded.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Floor%28System.Double%29&gt;</ph> method, which supports rounding toward negative infinity.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The smallest integral value that is greater than or equal to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, that value is returned.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Note that this method returns a <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> instead of an integral type.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Returns the cosine of the specified angle.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The angle, <ph id="ph1">`d`</ph>, must be in radians.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180 to convert degrees to radians.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Acceptable values of <ph id="ph1">`d`</ph> range from approximately -9223372036854775295 to approximately 9223372036854775295.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For values outside this range, the <ph id="ph1">&lt;xref:System.Math.Cos%2A&gt;</ph> method returns <ph id="ph2">`d`</ph> unchanged rather than throwing an exception.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>An angle, measured in radians.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The cosine of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, this method returns <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic cosine of the specified angle.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The angle, <ph id="ph1">`value`</ph>, must be in radians.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180 to convert degrees to radians.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>An angle, measured in radians.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>The hyperbolic cosine of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, <ph id="ph4">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>Calculates the quotient of two 64-bit signed integers and also returns the remainder in an output parameter.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder is calculated by using the modulus operation.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The dividend.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The divisor.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The remainder.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The quotient of the specified numbers.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;b&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>Calculates the quotient of two 32-bit signed integers and also returns the remainder in an output parameter.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>The remainder is calculated by using the modulus operation.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The dividend.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The divisor.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The remainder.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The quotient of the specified numbers.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;b&lt;/code&gt;</ph> is zero.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Represents the natural logarithmic base, specified by the constant, <ph id="ph1">`e`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this field is 2.7182818284590452354.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`e`</ph> raised to the specified power.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`e`</ph> is a mathematical constant whose value is approximately 2.71828.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Math.Pow%2A&gt;</ph> method to calculate powers of other bases.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Math.Exp%2A&gt;</ph> is the inverse of <ph id="ph2">&lt;xref:System.Math.Log%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A number specifying a power.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The number <ph id="ph1">`e`</ph> raised to the power <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> equals <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, that value is returned.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> equals <ph id="ph2">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, 0 is returned.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Returns the largest integer less than or equal to the specified decimal number.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, any fractional component is truncated.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A decimal number.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The largest integer less than or equal to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Note that the method returns an integral value of type <ph id="ph1">&lt;xref href="System.Math"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>Returns the largest integer less than or equal to the specified double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The behavior of this method follows IEEE Standard 754, section 4.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This kind of rounding is sometimes called rounding toward negative infinity.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, if <ph id="ph1">`d`</ph> is positive, any fractional component is truncated.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation of this method differs from the <ph id="ph1">&lt;xref:System.Math.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The largest integer less than or equal to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, that value is returned.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>Returns the remainder resulting from the division of a specified number by another specified number.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>This operation complies with the remainder operation defined in Section 5.1 of ANSI/IEEE Std 754-1985; IEEE Standard for Binary Floating-Point Arithmetic; Institute of Electrical and Electronics Engineers, Inc; 1985.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>The<ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph> method is not the same as the modulus operator.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although both return the remainder after division, the formulas they use are different.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The formula for the <ph id="ph1">&lt;xref:System.Math.IEEERemainder%2A&gt;</ph> method is:</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the formula for the modulus operator is:</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>A dividend.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>A divisor.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>A number equal to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> - (<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> Q), where Q is the quotient of <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">x</ph><ept id="p3">&lt;/code&gt;</ept><ph id="ph4"> / </ph><bpt id="p4">&lt;code&gt;</bpt><ph id="ph5">y</ph><ept id="p4">&lt;/code&gt;</ept> rounded to the nearest integer (if <bpt id="p5">&lt;code&gt;</bpt><ph id="ph6">x</ph><ept id="p5">&lt;/code&gt;</ept><ph id="ph7"> / </ph><bpt id="p6">&lt;code&gt;</bpt><ph id="ph8">y</ph><ept id="p6">&lt;/code&gt;</ept> falls halfway between two integers, the even integer is returned).</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> - (<bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept> Q) is zero, the value +0 is returned if <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">x</ph><ept id="p3">&lt;/code&gt;</ept> is positive, or -0 if <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">x</ph><ept id="p4">&lt;/code&gt;</ept> is negative.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">y</ph><ept id="p1">&lt;/code&gt;</ept> = 0, <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Returns the natural (base <ph id="ph1">`e`</ph>) logarithm of a specified number.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter <ph id="ph1">`d`</ph> is specified as a base 10 number.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The number whose logarithm is to be found.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source>One of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> parameter</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>Positive</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source>The natural logarithm of <ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>; that is, ln <ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph>, or log e <ph id="ph3">&lt;code&gt;d&lt;/code&gt;</ph></source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Negative</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>Equal to <ph id="ph1">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source>Equal to <ph id="ph1">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Returns the logarithm of a specified number in a specified base.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>The number whose logarithm is to be found.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The base of the logarithm.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>One of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>(+Infinity denotes <ph id="ph1">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, -Infinity denotes <ph id="ph2">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, and NaN denotes <ph id="ph3">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.)</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> Return value</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph><ph id="ph2">&gt;</ph> 0</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>(0 &lt;<ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph>&lt; 1) -or-(<ph id="ph2">&lt;code&gt;newBase&lt;/code&gt;</ph><ph id="ph3">&gt; 1)</ph></source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>lognewBase(a)</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph>&lt; 0</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>(any value)</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>(any value)</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph>&lt; 0</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> != 1</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> = 0</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> != 1</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> = +Infinity</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> = NaN</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>(any value)</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>(any value)</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> = NaN</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>(any value)</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> = 1</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>NaN</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> = 0</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>0 &lt;<ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph>&lt; 1</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>+Infinity</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> = 0</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph><ph id="ph2">&gt;</ph> 1</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-Infinity</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> =  +Infinity</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>0 &lt;<ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph>&lt; 1</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>-Infinity</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> =  +Infinity</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph><ph id="ph2">&gt;</ph> 1</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>+Infinity</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> = 1</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> = 0</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;a&lt;/code&gt;</ph> = 1</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;newBase&lt;/code&gt;</ph> = +Infinity</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>Returns the base 10 logarithm of a specified number.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter <ph id="ph1">`d`</ph> is specified as a base 10 number.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A number whose logarithm is to be found.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>One of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> parameter</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>Positive</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The base 10 log of <ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>; that is, log 10<ph id="ph2">&lt;code&gt;d&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Zero</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>Negative</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Equal to <ph id="ph1">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Equal to <ph id="ph1">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 16-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The first of two 16-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The second of two 16-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Returns the larger of two single-precision floating-point numbers.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The first of two single-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The second of two single-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept>, or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, or both <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">val1</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">val2</ph><ept id="p4">&lt;/code&gt;</ept> are equal to <ph id="ph5">&lt;xref href="System.Single.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Single.NaN"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 64-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The first of two 64-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>The second of two 64-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 32-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>The first of two 32-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>The second of two 32-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 8-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The first of two 8-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The second of two 8-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 32-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The first of two 32-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The second of two 32-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 16-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The first of two 16-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The second of two 16-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>Returns the larger of two double-precision floating-point numbers.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The first of two double-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The second of two double-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, or both <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">val1</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">val2</ph><ept id="p4">&lt;/code&gt;</ept> are equal to <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Returns the larger of two decimal numbers.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>The first of two decimal numbers to compare.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The second of two decimal numbers to compare.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 8-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The first of two 8-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The second of two 8-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Returns the larger of two 64-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The first of two 64-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>The second of two 64-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is larger.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 64-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The first of two 64-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>The second of two 64-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 64-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The first of two 64-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The second of two 64-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 32-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The first of two 32-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>The second of two 32-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 16-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source>The first of two 16-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>The second of two 16-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two single-precision floating-point numbers.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The first of two single-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The second of two single-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, or both <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">val1</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">val2</ph><ept id="p4">&lt;/code&gt;</ept> are equal to <ph id="ph5">&lt;xref href="System.Single.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Single.NaN"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 8-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>The first of two 8-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The second of two 8-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 16-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>The first of two 16-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The second of two 16-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two double-precision floating-point numbers.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The first of two double-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The second of two double-precision floating-point numbers to compare.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, or both <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">val1</ph><ept id="p3">&lt;/code&gt;</ept> and <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">val2</ph><ept id="p4">&lt;/code&gt;</ept> are equal to <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph6">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two decimal numbers.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>The first of two decimal numbers to compare.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The second of two decimal numbers to compare.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 8-bit unsigned integers.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source>The first of two 8-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The second of two 8-bit unsigned integers to compare.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Returns the smaller of two 32-bit signed integers.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The first of two 32-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The second of two 32-bit signed integers to compare.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">val1</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">val2</ph><ept id="p2">&lt;/code&gt;</ept>, whichever is smaller.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>Represents the ratio of the circumference of a circle to its diameter, specified by the constant, π.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this field is 3.14159265358979323846.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Returns a specified number raised to the specified power.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table indicates the return value when various values or ranges of values are specified for the <ph id="ph1">`x`</ph> and <ph id="ph2">`y`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Double?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> or <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NaN`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> = Any value except <ph id="ph2">`NaN`</ph>; <ph id="ph3">`y`</ph> = 0.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> &lt; 0.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> is a positive odd integer.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`NegativeInfinity`</ph>; <ph id="ph4">`y`</ph> is positive but not an odd integer.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> &lt; 0 but not <ph id="ph2">`NegativeInfinity`</ph>; <ph id="ph3">`y`</ph> is not an integer, <ph id="ph4">`NegativeInfinity`</ph>, or <ph id="ph5">`PositiveInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> = -1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NegativeInfinity`</ph> or <ph id="ph5">`PositiveInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>-1 &lt; <ph id="ph1">`x`</ph> &lt; 1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`NegativeInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>-1 &lt; <ph id="ph1">`x`</ph> &lt; 1; <ph id="ph2">`y`</ph><ph id="ph3"> = </ph><ph id="ph4">`PositiveInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> &lt; -1 or <ph id="ph2">`x`</ph> &gt; 1; <ph id="ph3">`y`</ph><ph id="ph4"> = </ph><ph id="ph5">`NegativeInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> &lt; -1 or <ph id="ph2">`x`</ph> &gt; 1; <ph id="ph3">`y`</ph><ph id="ph4"> = </ph><ph id="ph5">`PositiveInfinity`</ph>.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> = 0; <ph id="ph2">`y`</ph> &lt; 0.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> = 0; <ph id="ph2">`y`</ph> &gt; 0.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph> = 1; <ph id="ph2">`y`</ph> is any value except <ph id="ph3">`NaN`</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`PositiveInfinity`</ph>; <ph id="ph4">`y`</ph> &lt; 0.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>0</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`x`</ph><ph id="ph2"> = </ph><ph id="ph3">`PositiveInfinity`</ph>; <ph id="ph4">`y`</ph> &gt; 0.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number to be raised to a power.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number that specifies a power.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The number <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x</ph><ept id="p1">&lt;/code&gt;</ept> raised to the power <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">y</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>Rounds a double-precision floating-point value to the nearest integral value.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number to be rounded.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>The integer nearest <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>If the fractional component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept> is halfway between two integers, one of which is even and the other odd, then the even number is returned.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>Note that this method returns a <ph id="ph1">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> instead of an integral type.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Rounds a decimal value to a specified number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>A decimal number to be rounded.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The number of decimal places in the return value.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Specification for how to round <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> if it is midway between two other numbers.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>The number nearest to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> that contains a number of fractional digits equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">decimals</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> has fewer fractional digits than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">decimals</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">d</ph><ept id="p3">&lt;/code&gt;</ept> is returned unchanged.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;decimals&lt;/code&gt;</ph> is less than 0 or greater than 28.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid value of <ph id="ph2">&lt;xref href="System.MidpointRounding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>The result is outside the range of a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>Rounds a double-precision floating-point value to a specified number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number to be rounded.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The number of fractional digits in the return value.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>Specification for how to round <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> if it is midway between two other numbers.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>The number nearest to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> that has a number of fractional digits equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">digits</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> has fewer fractional digits than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">digits</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">value</ph><ept id="p3">&lt;/code&gt;</ept> is returned unchanged.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;digits&lt;/code&gt;</ph> is less than 0 or greater than 15.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid value of <ph id="ph2">&lt;xref href="System.MidpointRounding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Rounds a double-precision floating-point value to the nearest integer.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number to be rounded.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Specification for how to round <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> if it is midway between two other numbers.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The integer nearest <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is halfway between two integers, one of which is even and the other odd, then <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">mode</ph><ept id="p2">&lt;/code&gt;</ept> determines which of the two is returned.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid value of <ph id="ph2">&lt;xref href="System.MidpointRounding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Rounds a decimal value to the nearest integral value.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>A decimal number to be rounded.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The integer nearest parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>If the fractional component of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> is halfway between two integers, one of which is even and the other odd, the even number is returned.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>Note that this method returns a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph> instead of an integral type.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>The result is outside the range of a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Rounds a decimal value to the nearest integer.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>A parameter specifies how to round the value if it is midway between two numbers.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>A decimal number to be rounded.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>Specification for how to round <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> if it is midway between two other numbers.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source>The integer nearest <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> is halfway between two numbers, one of which is even and the other odd, then <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">mode</ph><ept id="p2">&lt;/code&gt;</ept> determines which of the two is returned.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is not a valid value of <ph id="ph2">&lt;xref href="System.MidpointRounding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The result is outside the range of a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Rounds a decimal value to a specified number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>A decimal number to be rounded.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The number of decimal places in the return value.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The number nearest to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept> that contains a number of fractional digits equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">decimals</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;decimals&lt;/code&gt;</ph> is less than 0 or greater than 28.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The result is outside the range of a <ph id="ph1">&lt;xref href="System.Decimal"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Rounds a double-precision floating-point value to a specified number of fractional digits.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>For examples and comprehensive usage information about this and other overloads of the <ph id="ph1">`Round`</ph> method, see the <ph id="ph2">&lt;xref:System.Math.Round%2A&gt;</ph> reference page.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>A double-precision floating-point number to be rounded.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source>The number of fractional digits in the return value.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The number nearest to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> that contains a number of fractional digits equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">digits</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;digits&lt;/code&gt;</ph> is less than 0 or greater than 15.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of a decimal number.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>A signed decimal number.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of a double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>A signed number.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of a 16-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>A signed number.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of a 32-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>A signed number.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of a 64-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve">
          <source>A signed number.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of an 8-bit signed integer.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>A signed number.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve">
          <source>Returns an integer that indicates the sign of a single-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>A signed number.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source>A number that indicates the sign of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve">
          <source>Meaning</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>0</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to zero.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>1</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is greater than zero.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;value&lt;/code&gt;</ph> is equal to <ph id="ph2">&lt;xref href="System.Single.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve">
          <source>Returns the sine of the specified angle.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>The angle, <ph id="ph1">`a`</ph>, must be in radians.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180 to convert degrees to radians.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>Acceptable values of <ph id="ph1">`a`</ph> range from approximately -9223372036854775295 to approximately 9223372036854775295.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>For values outside of this range, the <ph id="ph1">&lt;xref:System.Math.Sin%2A&gt;</ph> method returns <ph id="ph2">`a`</ph> unchanged rather than throwing an exception.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>An angle, measured in radians.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve">
          <source>The sine of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, this method returns <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic sine of the specified angle.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>The angle, <ph id="ph1">`value`</ph>, must be in radians.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180 to convert degrees to radians.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>An angle, measured in radians.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, this method returns a <ph id="ph5">&lt;xref href="System.Double"&gt;&lt;/xref&gt;</ph> equal to <bpt id="p2">&lt;code&gt;</bpt><ph id="ph6">value</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Returns the square root of a specified number.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>The number whose square root is to be found.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve">
          <source>One of the values in the following table.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph> parameter</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve">
          <source>Zero or positive</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve">
          <source>The positive square root of <ph id="ph1">&lt;code&gt;d&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve">
          <source>Negative</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve">
          <source>Equals <ph id="ph1">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve">
          <source>Equals <ph id="ph1">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve">
          <source>Returns the tangent of the specified angle.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>The angle, <ph id="ph1">`a`</ph>, must be in radians.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180 to convert degrees to radians.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>An angle, measured in radians.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve">
          <source>The tangent of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">a</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, this method returns <ph id="ph5">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>Returns the hyperbolic tangent of the specified angle.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>The angle, <ph id="ph1">`value`</ph>, must be in radians.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiply by <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180 to convert degrees to radians.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>An angle, measured in radians.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The hyperbolic tangent of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NegativeInfinity"&gt;&lt;/xref&gt;</ph>, this method returns -1.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>If value is equal to <ph id="ph1">&lt;xref href="System.Double.PositiveInfinity"&gt;&lt;/xref&gt;</ph>, this method returns 1.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> is equal to <ph id="ph2">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>, this method returns <ph id="ph3">&lt;xref href="System.Double.NaN"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>Calculates the integral part of a specified decimal number.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Math.Truncate%2A&gt;</ph> rounds <ph id="ph2">`d`</ph> to the nearest integer towards zero.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source>A number to truncate.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The integral part of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>; that is, the number that remains after any fractional digits have been discarded.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Calculates the integral part of a specified double-precision floating-point number.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Math.Truncate%2A&gt;</ph> rounds <ph id="ph2">`d`</ph> to the nearest integer towards zero.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>A number to truncate.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>The integral part of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">d</ph><ept id="p1">&lt;/code&gt;</ept>; that is, the number that remains after any fractional digits have been discarded, or one of the values listed in the following table.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Return value</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>