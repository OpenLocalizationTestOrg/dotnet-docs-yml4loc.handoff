<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ef3068a69f405e9cea01cf7459992d82bcac24b3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.Serialization.XmlTextAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">42e3089105f872153fefbdb2e9436f2f70959d5c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2a9af9fdfb8ae9905a3f326043f97bd3eb06b1a7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates to the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph> that the member must be treated as XML text when the class that contains it is serialized or deserialized.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> belongs to a family of attributes that controls how the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes and deserializes an object (through its <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlSerializer.Serialize%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlSerializer.Deserialize%2A&gt;</ph> methods).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a complete list of similar attributes, see <bpt id="p1">[</bpt>Attributes That Control XML Serialization<ept id="p1">](~/docs/framework/serialization/attributes-that-control-xml-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one instance of the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> class can be applied in a class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to public fields and public read/write properties that return primitive and enumeration types.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to a field or property that returns an array of strings.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also apply the attribute to an array of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> but you must set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute.Type%2A&gt;</ph> property to string.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, any strings inserted into the array are serialized as XML text.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> can also be applied to a field that returns an <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> or an array of <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a class member as an XML element.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to a member, the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> translates its value into XML text.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means that the value is encoded into the content of an XML element.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/framework/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> occasionally generates the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> when creating classes from an XML Schema definition (XSD) file.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>This occurs when the schema contains a <ph id="ph1">`complexType`</ph> with mixed content; in that case, the corresponding class contains a member that returns a string array to which the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> is applied.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the <ph id="ph1">`Xml Schema Definition`</ph> tool processes this schema:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>the following class is generated (extra spaces and remarks have been removed):</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>XmlTextAttribute#0<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Remoting/XmlTextAttribute/cs/source.cs#0)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>XmlTextAttribute#0<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Remoting/XmlTextAttribute/vb/source.vb#0)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the word <ph id="ph1">`XmlText`</ph> in your code instead of the longer <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlTextAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the way that the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a public field or public read/write property by creating an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>, and setting its <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property to an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlTextAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override the way that the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> serializes a public field or public read/write property by creating an <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlAttributes&gt;</ph>, and setting its <ph id="ph3">&lt;xref:System.Xml.Serialization.XmlAttributes.XmlText%2A&gt;</ph> property to an <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more details, see the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlAttributeOverrides&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the member to be serialized.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets or sets the XML Schema definition language (XSD) data type of the text generated by the <ph id="ph1">&lt;xref href="System.Xml.Serialization.XmlSerializer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A&gt;</ph> property to an XML Schema simple data type affects the format of the generated XML.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, setting the property to "date" causes the generated text to be formatted in the general date style, for example: 2001-08-31.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>By contrast, setting the property to "dateTime" results in a specific instant as defined by the International Organization for Standardization document 8601, "Representations of Dates and Times", for example: 2001-08-15T06:59:11.0508456-07:00.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The effect of setting the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A&gt;</ph> property can also be seen when using the <bpt id="p1">[</bpt>XML Schema Definition Tool (Xsd.exe)<ept id="p1">](~/docs/framework/serialization/xml-schema-definition-tool-xsd-exe.md)</ept> to generate the XML Schema for a compiled file.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on using the tool, see <bpt id="p1">[</bpt>The XML Schema Definition Tool and XML Serialization<ept id="p1">](~/docs/framework/serialization/the-xml-schema-definition-tool-and-xml-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table lists the XML Schema simple data types with their .NET equivalents.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the XML Schema <ph id="ph1">`base64Binary`</ph> and <ph id="ph2">`hexBinary`</ph> data types, use an array of <ph id="ph3">&lt;xref:System.Byte&gt;</ph> structures, and apply a <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A&gt;</ph> set to "base64Binary" or "hexBinary", as appropriate.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For the XML Schema <ph id="ph1">`time`</ph> and <ph id="ph2">`date`</ph> data types, use the <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> type and apply the <ph id="ph4">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> with the <ph id="ph5">&lt;xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A&gt;</ph> set to "date" or "time".</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For every XML Schema data type that is mapped to a string, apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> with its <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute.DataType%2A&gt;</ph> property set to the XML Schema data type.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this does not change the serialization format, only the schema for the member.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property is case-sensitive, so you must set it exactly to one of the XML Schema data types.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>Passing binary data as an XML element is more efficient than passing it as an XML attribute.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about XML Schema data types, see the World Wide Web Consortium (www.w3.org) document named "XML Schema Part 2: Datatypes".</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>XSD data type</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>.NET data type</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>anyURI</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>base64Binary</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>boolean</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>byte</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>date</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>dateTime</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>decimal</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>double</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>ENTITY</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>ENTITIES</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>float</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>gDay</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>gMonth</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>gMonthDay</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>gYear</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>gYearMonth</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>hexBinary</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Array of <ph id="ph1">&lt;xref:System.Byte&gt;</ph> objects</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>ID</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDREF</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>IDREFS</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>int</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>integer</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>language</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>long</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>NCName</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>negativeInteger</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>NMTOKEN</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>NMTOKENS</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>normalizedString</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>nonNegativeInteger</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>nonPositiveInteger</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>NOTATION</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>positiveInteger</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>QName</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>duration</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>string</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>short</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>time</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>token</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>unsignedByte</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>unsignedInt</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>unsignedLong</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>unsignedShort</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>An XML Schema (XSD) data type, as defined by the World Wide Web Consortium (www.w3.org) document "XML Schema Part 2: Datatypes".</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The XML Schema data type you have specified cannot be mapped to the .NET data type.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The XML Schema data type you have specified is invalid for the property and cannot be converted to the member type.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of the member.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Type&gt;</ph> property can only be set to primitive types and enumerations.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> can also be applied to a field that returns an <ph id="ph2">&lt;xref:System.Xml.XmlNode&gt;</ph> or an array of <ph id="ph3">&lt;xref:System.Xml.XmlNode&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlTextAttribute&gt;</ph> to a field or property that returns an array of strings.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also apply the attribute to an array of type <ph id="ph1">&lt;xref:System.Object&gt;</ph> but you must set the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlTextAttribute.Type%2A&gt;</ph> property to string.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, any strings inserted into the array are serialized as XML text.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the member.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>