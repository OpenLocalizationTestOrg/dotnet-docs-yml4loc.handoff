<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bd12cbb51fa1766b7887b1b2ffa2891004c1fc2a</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xaml.XamlReaderSettings.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86f4c17e847a635f23f090cf18901dc1679d248d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f6830138f2463c488423e989261ac87d4c49d98</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies processing rules or option settings for a <ph id="ph1">&lt;xref href="System.Xaml.XamlReader"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, an initialized <ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings&gt;</ph> object uses values for its properties that correspond to expected defaults, such as <ph id="ph2">`false`</ph> for Boolean properties or null values for reference-type properties.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default initialization results in the following values:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings.BaseUri%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlReaderSettings.LocalAssembly%2A&gt;</ph> properties are <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A&gt;</ph> property is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A&gt;</ph> property is <ph id="ph2">`false`</ph> in the object model; however, it can be set to <ph id="ph3">`true`</ph> at run time based on the loaded executables and their debug settings, or by XAML schema context.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.XamlReaderSettings"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about initialization of a <ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings&gt;</ph> default instance, see <ph id="ph2">&lt;xref:System.Xaml.XamlReaderSettings&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Xaml.XamlReaderSettings"&gt;&lt;/xref&gt;</ph> class based on values in another <ph id="ph2">&lt;xref href="System.Xaml.XamlReaderSettings"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor supports the merging of settings for XAML readers where additional settings can also come from other participants in the reader process.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>An existing <ph id="ph1">&lt;xref href="System.Xaml.XamlReaderSettings"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the root object may include members that have a protected code access model when it reports the XAML type representation.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This setting is relevant to some XAML implementations such as WPF where the root object is often a "factory" for generating an instance from a pattern type, when that pattern type is not always a practical object instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a root of <ph id="ph1">`UserControl`</ph> has a certain meaning for WPF and Silverlight application models, and <ph id="ph2">`UserControl`</ph> might have protected properties (<ph id="ph3">`UserControl.Content`</ph>) that the parser needs access to.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Tools and design surfaces also need access to such properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>These cases should generally be reported to the XAML type system as writable properties even though they have protected access in the backing type system.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the root object may include members that have a protected code access model; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Gets or sets the base URI that is used to resolve relative paths.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some URI-related properties in the .NET Framework XAML Services API treat URIs for XAML namespaces as strings; however, this property uses the true <ph id="ph1">&lt;xref:System.Uri&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The base URI to use.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the XAML reader should ignore values for <ph id="ph1">`x:Uid`</ph> attributes that exist on property elements.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>During localization, the <ph id="ph1">`x:Uid`</ph> attribute is used to identify elements in markup so that localization tools can process XAML elements as discrete entities for localization.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes do not usually appear on property elements in XAML.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, <ph id="ph1">`x:Uid`</ph> is an exception because some usages put localized text in a property element as content, instead of as a separate object that can receive its own <ph id="ph2">`x:Uid`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting an <ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings.IgnoreUidsOnPropertyElements%2A&gt;</ph> value to <ph id="ph2">`true`</ph> enables a stricter mode.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of <ph id="ph1">`false`</ph> continues to process property element <ph id="ph2">`x:Uid`</ph> attributes.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the reader should ignore values for <ph id="ph2">`x:Uid`</ph> attributes on property elements.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`false`</ph> if the reader should process <ph id="ph2">`x:Uid`</ph> attributes on property elements.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that represents the current local assembly for processing.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>This assembly information is used for calls to helper APIs such as <ph id="ph1">&lt;xref href="System.Xaml.XamlType.GetAllMembers"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A CLR reflection <ph id="ph1">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the reader can provide line number and position.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlReaderSettings.ProvideLineInfo%2A&gt;</ph> is <ph id="ph2">`false`</ph> in the object model; however, it can be set to <ph id="ph3">`true`</ph> at run time based on the loaded executables and their debug settings.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the reader can provide line number and position information; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the reader enforces that all <ph id="ph1">`Value`</ph> nodes are processed as a <ph id="ph2">`String`</ph> type.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to <ph id="ph1">&lt;xref:System.String&gt;</ph>, a possible <ph id="ph2">`Value`</ph> content under some XAML implementations is <ph id="ph3">&lt;xref:System.Windows.Markup.XData&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the reader enforces that only <ph id="ph2">`String`</ph> is contained in <ph id="ph3">`Value`</ph> nodes; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>