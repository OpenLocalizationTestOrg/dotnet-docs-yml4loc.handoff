<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20a29fc3b48ee0693eab215d645602056bc1856d</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.Stopwatch.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">55722aee96e602e350dff39fa699e6c4ad292a4e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a7146c0c5924eb40494716a0843cbb429b64a322</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a set of methods and properties that you can use to accurately measure elapsed time.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To view the .NET Framework source code for this type, see the <bpt id="p1">[</bpt>Reference Source<ept id="p1">](http://referencesource.microsoft.com/#System/services/monitoring/system/diagnosticts/Stopwatch.cs#ceb0ba9cc88de82e)</ept>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id="p1">[</bpt>instructions<ept id="p1">](http://referencesource.microsoft.com/)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance can measure elapsed time for one interval, or the total of elapsed time across multiple intervals.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is either running or stopped; use <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.IsRunning%2A&gt;</ph> to determine the current state of a <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> to begin measuring elapsed time; use <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> to stop measuring elapsed time.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Query the elapsed time value through the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can query the elapsed time properties while the instance is running or stopped.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> measures elapsed time by counting timer ticks in the underlying timer mechanism.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the installed hardware and operating system support a high-resolution performance counter, then the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses that counter to measure elapsed time.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses the system timer to measure elapsed time.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> fields to determine the precision and resolution of the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timing implementation.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class assists the manipulation of timing-related performance counters within managed code.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> field and <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> method can be used in place of the unmanaged Win32 APIs <ph id="ph3">`QueryPerformanceFrequency`</ph> and <ph id="ph4">`QueryPerformanceCounter`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>On a multiprocessor computer, it does not matter which processor the thread runs on.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, because of bugs in the BIOS or the Hardware Abstraction Layer (HAL), you can get different timing results on different processors.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify processor affinity for a thread, use the <ph id="ph1">&lt;xref:System.Diagnostics.ProcessThread.ProcessorAffinity%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.Stopwatch"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is stopped, and the elapsed time property of the instance is zero.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method to begin measuring elapsed time with the new <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.StartNew%2A&gt;</ph> method to initialize a new <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance and immediately start it.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the total elapsed time measured by the current instance.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property to retrieve the elapsed time value using <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> methods and properties.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can format the returned <ph id="ph1">&lt;xref:System.TimeSpan&gt;</ph> instance into a text representation, or pass it to another class that requires a <ph id="ph2">&lt;xref:System.TimeSpan&gt;</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can query the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> while the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is running or stopped.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A read-only <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> representing the total elapsed time measured by the current instance.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Gets the total elapsed time measured by the current instance, in milliseconds.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property represents elapsed time rounded down to the nearest whole millisecond value.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For higher precision measurements, use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can query the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> while the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is running or stopped.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A read-only long integer representing the total number of milliseconds measured by the current instance.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Gets the total elapsed time measured by the current instance, in timer ticks.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property represents the number of elapsed ticks in the underlying timer mechanism.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>A tick is the smallest unit of time that the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer can measure.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> field to convert the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> value into a number of seconds.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can query the properties <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.ElapsedMilliseconds%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> while the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance is running or stopped.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The elapsed time properties steadily increase while the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> is running; they remain constant when the instance is stopped.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the elapsed time value of a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance equals the total of all measured time intervals.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> begins counting at the cumulative elapsed time; each call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> ends the current interval measurement and freezes the cumulative elapsed time value.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in an existing <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> ticks are different from <ph id="ph2">&lt;xref:System.DateTime.Ticks%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each tick in the <ph id="ph1">&lt;xref:System.DateTime.Ticks%2A?displayProperty=fullName&gt;</ph> value represents one 100-nanosecond interval.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each tick in the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.ElapsedTicks%2A&gt;</ph> value represents the time interval equal to 1 second divided by the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>A read-only long integer representing the total number of timer ticks measured by the current instance.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the frequency of the timer as the number of ticks per second.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timer frequency indicates the timer precision and resolution.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a timer frequency of 2 million ticks per second equals a timer resolution of 500 nanoseconds per tick.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>In other words, because one second equals 1 billion nanoseconds, a timer frequency of 2 million ticks per second is equivalent to 2 million ticks per 1 billion nanoseconds, which can be further simplified to 1 tick per 500 nanoseconds.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value depends on the resolution of the underlying timing mechanism.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the installed hardware and operating system support a high-resolution performance counter, then the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value reflects the frequency of that counter.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value is based on the system timer frequency.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> frequency depends on the installed hardware and operating system, the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Frequency&gt;</ph> value remains constant while the system is running.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets the current number of ticks in the timer mechanism.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses a high-resolution performance counter, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> returns the current value of that counter.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class uses the system timer, <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.GetTimestamp%2A&gt;</ph> returns the current <ph id="ph3">&lt;xref:System.DateTime.Ticks%2A?displayProperty=fullName&gt;</ph> property of the <ph id="ph4">&lt;xref:System.DateTime.Now%2A?displayProperty=fullName&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A long integer representing the tick counter value of the underlying timer mechanism.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Indicates whether the timer is based on a high-resolution performance counter.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>This field is read-only.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>The timer used by the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> class depends on the system hardware and operating system.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> is <ph id="ph2">`true`</ph> if the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer is based on a high-resolution performance counter.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.IsHighResolution&gt;</ph> is <ph id="ph2">`false`</ph>, which indicates that the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer is based on the system timer.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Diagnostics.Stopwatch"&gt;&lt;/xref&gt;</ph> timer is running.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance begins running with a call to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.StartNew%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The instance stops running with a call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Diagnostics.Stopwatch"&gt;&lt;/xref&gt;</ph> instance is currently running and measuring elapsed time for an interval; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Stops time interval measurement and resets the elapsed time to zero.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> to stop the current interval measurement and retain the cumulative elapsed time value.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> to stop any interval measurement in progress and clear the elapsed time value.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Stops time interval measurement, resets the elapsed time to zero, and starts measuring elapsed time.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset or restarted.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> to stop the current interval measurement and retain the cumulative elapsed time value.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> to stop any interval measurement in progress and clear the elapsed time value.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Restart%2A&gt;</ph> to stop current interval measurement and start a new interval measurement.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>Starts, or resumes, measuring elapsed time for an interval.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once started, a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> timer measures the current interval, in elapsed timer ticks, until the instance is stopped or reset.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Starting a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> that is already running does not change the timer state or reset the elapsed time properties.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance measures more than one interval, the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method resumes measuring time from the current elapsed time value.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance calculates and retains the cumulative elapsed time across multiple time intervals, until the instance is reset.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method before calling <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> to clear the cumulative elapsed time in a <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Restart%2A&gt;</ph> method to <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> with a single command.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Initializes a new <ph id="ph1">&lt;xref href="System.Diagnostics.Stopwatch"&gt;&lt;/xref&gt;</ph> instance, sets the elapsed time property to zero, and starts measuring elapsed time.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is equivalent to calling the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> constructor and then calling <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> on the new instance.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.Stopwatch"&gt;&lt;/xref&gt;</ph> that has just begun measuring elapsed time.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Stops measuring elapsed time for an interval.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a typical <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> scenario, you call the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> method, then eventually call the <ph id="ph3">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method, and then you check elapsed time using the <ph id="ph4">&lt;xref:System.Diagnostics.Stopwatch.Elapsed%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method ends the current time interval measurement.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stopping a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> that is not running does not change the timer state or reset the elapsed time properties.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance measures more than one interval, the <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch.Stop%2A&gt;</ph> method is equivalent to pausing the elapsed time measurement.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>A subsequent call to <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Start%2A&gt;</ph> resumes measuring time from the current elapsed time value.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.Stopwatch.Reset%2A&gt;</ph> method to clear the cumulative elapsed time in a <ph id="ph2">&lt;xref:System.Diagnostics.Stopwatch&gt;</ph> instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>