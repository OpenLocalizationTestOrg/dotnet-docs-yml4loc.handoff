<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e3fb186599ac427535daa6ce2a0b8c92028013b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Documents.DynamicDocumentPaginator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">efe557d1b8c5213080881e5b0c7da8df4b5c2b57</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24d01bd83307c2693b9e7247cac4b03c718b7778</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an abstract base class that supports automatic background pagination and tracking content positions across repaginations in addition to the methods and properties of its own base class.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, a <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator&gt;</ph> will automatically pre-paginate content in the background (this process begins when <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.IsBackgroundPaginationEnabled%2A&gt;</ph> is <ph id="ph3">`true`</ph>, which is the default setting).</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.IsBackgroundPaginationEnabled%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the layout will also be repaginated due to changes in content or changes in <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> event occurs upon completion of pagination (or repagination) of one or more pages, such as in the following situations:</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> events occur as content is paginated in the background.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the implementation, the event may occur upon paginating one or multiple pages (<ph id="ph1">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs&gt;</ph> specifies which pages have been paginated).</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPageAsync%2A&gt;</ph> may cause an <ph id="ph3">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> event to occur if the page specified has not been paginated.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if background pagination is enabled (<ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.IsBackgroundPaginationEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>) but pagination has only been completed up to the third page, a call of <ph id="ph4">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> with an argument of 6 will cause pages four, five, six, and seven to be paginated.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon completion, a <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> event will be raised with <ph id="ph2">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs&gt;</ph> settings of <ph id="ph3">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs.Start%2A&gt;</ph> = 4 and <ph id="ph4">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs.Count%2A&gt;</ph> = 4.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>With background pagination enabled (<ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.IsBackgroundPaginationEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`true`</ph>), a change in <ph id="ph4">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> on flow-format content, such as a <ph id="ph5">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph>, may cause repagination and associated <ph id="ph6">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that <ph id="ph1">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph> has no effect in repagination on fixed-format content, such as <ph id="ph2">&lt;xref:System.Windows.Documents.FixedDocument&gt;</ph>, where the visual page size does not affect the layout.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted&gt;</ph> event also occurs when background pagination is disabled.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if there is only one page of content and <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.IsBackgroundPaginationEnabled%2A&gt;</ph><ph id="ph2"> = </ph><ph id="ph3">`false`</ph>), calling <ph id="ph4">&lt;xref:System.Windows.Documents.DocumentPaginator.GetPage%2A&gt;</ph> with an argument of 0 will result in two events:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> event with <ph id="ph2">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs&gt;</ph> settings of <ph id="ph3">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs.Start%2A&gt;</ph> = 0 and <ph id="ph4">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs.Count%2A&gt;</ph> = 1.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns a <ph id="ph1">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph> for the specified <ph id="ph2">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The object to return the <ph id="ph1">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph> of.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph> of the given object.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, returns the zero-based page number of the specified <ph id="ph1">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If pages prior to the <ph id="ph1">`contentPosition`</ph> have not been formatted, they will be paginated synchronously prior to returning the requested page number.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A&gt;</ph> provides similar functionality as <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumber%2A&gt;</ph>, but with asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The content position whose page number is needed.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Int32"&gt;&lt;/xref&gt;</ph> representing zero-based page number where the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">contentPosition</ph><ept id="p1">&lt;/code&gt;</ept> appears.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Asynchronously, returns (through the This method raises the <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberCompleted"&gt;&lt;/xref&gt;</ph> event) the zero-based page number of the specified <ph id="ph2">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The only way to cancel the asynchronous operation of this method is to cancel all asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contrast this with the other overload of this method: <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%28System.Windows.Documents.ContentPosition%2CSystem.Object%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The page number is passed to the event as one of the event arguments.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%28System.Windows.Documents.ContentPosition%2CSystem.Object%29&gt;</ph> for how to use this method to get the page number.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The content position whose page number is needed.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Asynchronously, returns (through the This method raises the <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberCompleted"&gt;&lt;/xref&gt;</ph> event) the zero-based page number of the specified <ph id="ph2">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload of the method makes it possible to cancel this asynchronous operation without cancelling all asynchronous operations.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberCompleted&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following steps illustrate how to retrieve the page number of a given <ph id="ph1">`contentPosition`</ph> asynchronously.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Create a <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventHandler&gt;</ph> delegate and add it to be notified of <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberCompleted&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%28System.Windows.Documents.ContentPosition%2CSystem.Object%29&gt;</ph> specifying the <ph id="ph2">`contentPosition`</ph> desired and a unique <ph id="ph3">`userState`</ph> object that will be used to identify the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event occurs and the delegate is called, compare the event's <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property with the original <ph id="ph3">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A&gt;</ph> <ph id="ph4">`userState`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.ComponentModel.AsyncCompletedEventArgs.UserState%2A&gt;</ph> property matches the original <ph id="ph3">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%28System.Windows.Documents.ContentPosition%2CSystem.Object%29&gt;</ph> <ph id="ph4">`userState`</ph>, the operation is complete and the page number is ready.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>(The <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventArgs.ContentPosition%2A&gt;</ph> property will also match the original <ph id="ph3">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%28System.Windows.Documents.ContentPosition%2CSystem.Object%29&gt;</ph> <ph id="ph4">`contentPosition`</ph> parameter.)</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventArgs&gt;</ph>.<ph id="ph2">&lt;xref:System.Windows.Documents.GetPageNumberCompletedEventArgs.PageNumber%2A&gt;</ph> property contains the zero-based page number of the specified <ph id="ph3">`contentPosition`</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumber%2A&gt;</ph> provides similar functionality as <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync%2A&gt;</ph>, but for synchronous operation.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The content position element to return the page number of.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A unique identifier for the asynchronous task.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Occurs when <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberAsync*"&gt;&lt;/xref&gt;</ph> has completed.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the position of the specified page in the document's content.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The page whose position is needed.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Documents.ContentPosition"&gt;&lt;/xref&gt;</ph> representing the position of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">page</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether pagination is performed automatically in the background in response to certain events, such as a change in page size.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">`true`</ph>, pagination is performed in the background, raising <ph id="ph2">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted&gt;</ph> events as appropriate.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pagination of <ph id="ph1">&lt;xref:System.Windows.Documents.FixedDocument&gt;</ph> content, as distinct from a <ph id="ph2">&lt;xref:System.Windows.Documents.FlowDocument&gt;</ph> is not affected by changes to the visual <ph id="ph3">&lt;xref:System.Windows.Documents.DocumentPaginator.PageSize%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if background pagination is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator.GetPageNumberCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Documents.GetPageNumberCompletedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Documents.DynamicDocumentPaginator.PaginationProgress"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Documents.PaginationProgressEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Occurs when all document content has been paginated.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Documents.DynamicDocumentPaginator.PaginationCompleted&gt;</ph> occurs, <ph id="ph2">&lt;xref:System.Windows.Documents.DocumentPaginator.IsPageCountValid%2A&gt;</ph> is <ph id="ph3">`true`</ph> until a new pagination is initiated.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Occurs when one or more content pages have been paginated.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs&gt;</ph> properties <ph id="ph2">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs.Start%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Documents.PaginationProgressEventArgs.Count%2A&gt;</ph> identify the range of pages paginated.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>