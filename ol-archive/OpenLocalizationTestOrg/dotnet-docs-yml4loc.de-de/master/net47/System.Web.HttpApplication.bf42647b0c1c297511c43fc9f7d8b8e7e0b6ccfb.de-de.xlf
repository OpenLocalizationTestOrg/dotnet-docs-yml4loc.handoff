<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">33bfc393e67598ff57a97f86d5afee86dbedb0a1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.HttpApplication.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2653b10e480d387eaf7c3ae1b78945d9b4e1663b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bea09641f40ce2d5d0e1474d5b93086c534fd7d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is the base class for applications that are defined by the user in the Global.asax file.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>One instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it can process only one request at a time.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Thus, member variables can be used to store per-request data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An application raises events that can be handled by custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The application events are raised in the following order:</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler is executed.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.HttpApplication"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.AuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.AcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.BeginRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.MapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAcquireRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthenticateRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthenticateRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthenticateRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph> to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostAuthorizeRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostLogRequest"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostMapRequestHandler"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the event.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PostUpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.PreRequestHandlerExecute"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.ReleaseRequestState"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.ResolveRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>Adds the specified <ph id="ph1">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph> event handlers for the current request.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.BeginEventHandler"&gt;&lt;/xref&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.EndEventHandler"&gt;&lt;/xref&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;xref href="System.Web.HttpApplication.UpdateRequestCache"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>Gets the current state of an application.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpApplicationState"&gt;&lt;/xref&gt;</ph> for the current request.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Occurs when a security module has established the identity of the user.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source>Occurs when a security module has verified user authorization.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is always raised and is always the first event to occur during the processing of a request.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id="ph1">&lt;xref href="System.Web.HttpApplication.EndRequest"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source>Gets HTTP-specific information about the current request.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> for the current request.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Disposes the <ph id="ph1">&lt;xref href="System.Web.HttpApplication"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>Occurs when the application is disposed.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you create a <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>To associate the event with your event handler, add an instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The event handler is called whenever the event occurs, unless you remove the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>Occurs when an unhandled exception is thrown.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception that raises the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your Web application contains XML Web services, you cannot use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>Gets the list of event handler delegates that process all application events.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.EventHandlerList"&gt;&lt;/xref&gt;</ph> that contains the names of the event handler delegates.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Gets the name of the default output-cache provider that is configured for a Web site.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id="ph1">`defaultProvider`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can select different output-cache providers for individual control and for individual requests.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id="ph1">`providerName`</ph> attribute in a page or control directive, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The name of the default provider.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;context&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or is an empty string.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Provides an application-wide implementation of the <ph id="ph1">&lt;xref href="System.Web.UI.PartialCachingAttribute.VaryByCustom"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>The implementation has to call the base class for custom values that it does not recognize.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> object that contains information about the current Web request.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>The custom string that specifies which cached response is used to respond to the current request.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>If the value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">custom</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`"browser"`</ph>, the browser's <ph id="ph3">&lt;xref href="System.Web.Configuration.HttpCapabilitiesBase.Type"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Executes custom initialization code after all event handler modules have been added.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>In a derived class, you can override the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve">
          <source>Occurs just before ASP.NET performs any logging for the current request.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Occurs when the handler is selected to respond to the request.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Register HTTP Handlers<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the collection of modules for the current application.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpModuleCollection"&gt;&lt;/xref&gt;</ph> that contains the names of the modules for the application.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>Occurs when a security module has established the identity of the user.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>Occurs when the user for the current request has been authorized.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET has completed processing all the event handlers for the <ph id="ph1">&lt;xref href="System.Web.HttpApplication.LogRequest"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET has mapped the current request to the appropriate event handler.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Occurs just before ASP.NET sends content to the client.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Occurs just before ASP.NET sends HTTP headers to the client.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Registers an application module.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The type of the module.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Occurs after ASP.NET finishes executing all request event handlers.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>This event causes state modules to save the current state data.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Gets the intrinsic request object for the current request.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest"&gt;&lt;/xref&gt;</ph> object that the application is processing.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpRequest"&gt;&lt;/xref&gt;</ph> object is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>Occurs when the managed objects that are associated with the request have been released.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>It enables modules to clean up resources after all managed modules and handlers have executed.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Gets the intrinsic response object for the current request.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpResponse"&gt;&lt;/xref&gt;</ph> object that the application is processing.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpResponse"&gt;&lt;/xref&gt;</ph> object is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>Gets the intrinsic server object for the current request.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.HttpServerUtility"&gt;&lt;/xref&gt;</ph> object that the application is processing.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>Gets the intrinsic session object that provides access to session data.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SessionState.HttpSessionState"&gt;&lt;/xref&gt;</ph> object for the current session.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.SessionState.HttpSessionState"&gt;&lt;/xref&gt;</ph> object is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Gets or sets a site interface for an <ph id="ph1">&lt;xref href="System.ComponentModel.IComponent"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ComponentModel.ISite"&gt;&lt;/xref&gt;</ph> object that allows a container to manage and communicate with its child components.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Gets the intrinsic user object for the current request.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Principal.IPrincipal"&gt;&lt;/xref&gt;</ph> object that represents the current authenticated or anonymous user.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Principal.IPrincipal"&gt;&lt;/xref&gt;</ph> object is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Initiates an asynchronous call to the HTTP event handler.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AsyncCallback"&gt;&lt;/xref&gt;</ph> to call when the asynchronous method call is complete.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cb</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>, the delegate is not called.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Any extra data that is required to process the request.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that contains information about the status of the process.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>Provides an asynchronous process <ph id="ph1">`End`</ph> method when the process finishes.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that contains information about the status of the process.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">`Boolean`</ph> value indicating whether another request can use the <ph id="ph2">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>To explicitly set the <ph id="ph1">`IsReusable`</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>, provide code that overrides the <ph id="ph4">`IsReusable`</ph> property accessor.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> object is reusable; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id="ph1">&lt;xref href="System.Web.IHttpHandler"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object provides access to the intrinsic <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, and <ph id="ph3">`Server`</ph> objects for the request.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Web.HttpContext"&gt;&lt;/xref&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>In all cases.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>