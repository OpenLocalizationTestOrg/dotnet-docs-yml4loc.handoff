<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5bea7f8c1ccf3e778dca91931939ce8eb430d326</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.NonSerializedAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">007e8d8eb43d2003f2a69da29d6f1ecb15e2d6e9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cff827b8aac3f5eb6b00ed3f267b27662b5fec40</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Indicates that a field of a serializable class should not be serialized.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.Soap.SoapFormatter&gt;</ph> classes to serialize an object, use the <ph id="ph3">&lt;xref:System.NonSerializedAttribute&gt;</ph> attribute to prevent a field from being serialized.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this attribute to prevent the serialization of sensitive data.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The target objects for the <ph id="ph1">&lt;xref:System.NonSerializedAttribute&gt;</ph> attribute are public and private fields of a serializable class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, classes are not serializable unless they are marked with <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>During the serialization process all the public and private fields of a class are serialized by default.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Fields marked with <ph id="ph1">&lt;xref:System.NonSerializedAttribute&gt;</ph> are excluded during serialization.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using the <ph id="ph1">&lt;xref:System.Xml.Serialization.XmlSerializer&gt;</ph> class to serialize an object, use the <ph id="ph2">&lt;xref:System.Xml.Serialization.XmlIgnoreAttribute&gt;</ph> class to get the same functionality.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface to explicitly control the serialization process.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that classes that implement <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> must still be marked with <ph id="ph2">&lt;xref:System.SerializableAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To apply the <ph id="ph1">&lt;xref:System.NonSerializedAttribute&gt;</ph> class to an event, set the attribute location to field, as shown in the following C# code.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a field is not serialized, but it still requires a default value that must be supplied after deserialization, you can create a method that supplies the field with a value, then apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.OnDeserializedAttribute&gt;</ph> to the method.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about using attributes, see <bpt id="p1">[</bpt>Attributes<ept id="p1">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.NonSerializedAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>