<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cf9267f50968b51910d5224b6ee007a915ed0289</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Description.ClientCredentials.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4cdb63827a6e2acef8eeccf66102a289f4e9a41f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">af8b74849dc50173ae50139f7e4de1c90798dc9f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables the user to configure client and service credentials as well as service credential authentication settings for use on the client side of communication.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> is accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is added to the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property is a <bpt id="p1">*</bpt>Fa√ßade<ept id="p1">*</ept> (a well-known design pattern) over an entry in that collection.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many properties in this class return objects that consist mainly of properties.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>These objects can be used for configuration: once you <ph id="ph1">`get`</ph> the object, you can use it to <ph id="ph2">`set`</ph> properties by calling its members.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor creates a <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object with default settings, for example, <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials.SupportInteractive%2A&gt;</ph><ph id="ph3"> = </ph><ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This is a copy constructor.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>All properties of the newly-constructed instance reflect the values of this parameter.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Applies the specified client behavior to the endpoint.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The client behavior is applied to the endpoint only if the endpoint does not have a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement&gt;</ph> associated with it.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The endpoint to which the specified client behavior is to be applied.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The client behavior that is to be applied to the specified endpoint.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serviceEndpoint&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;behavior&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets an object that you can use to provide the X.509 certificate that the client uses to authenticate to the service.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set this value using the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;certificate<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/certificate-of-clientcertificate-element.md)</ept> in a client application configuration file.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Security.X509CertificateInitiatorClientCredential"&gt;&lt;/xref&gt;</ph> that represents the client certificate.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Creates a new copy of this <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Creates a new copy of this <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials.Clone%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials.CloneCore%2A&gt;</ph> methods follow the Core design pattern.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials.CloneCore%2A&gt;</ph> can be overridden in derived classes if they add new fields that must be cloned.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials.CloneCore%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials.%23ctor%2A&gt;</ph> constructor.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Creates a security token manager for this instance.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>This method is rarely called explicitly; it is primarily used in extensibility scenarios and is called by the system itself.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is usually overridden by custom client credentials implementations that inherit from this class.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is responsible for returning a new instance of a <ph id="ph1">&lt;xref:System.IdentityModel.Selectors.SecurityTokenManager&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.ClientCredentialsSecurityTokenManager"&gt;&lt;/xref&gt;</ph> for this <ph id="ph2">&lt;xref href="System.ServiceModel.Description.ClientCredentials"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Generates and returns a security token using the <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> system and the specified policy chain and token serializer.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A value that determines whether <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph> is required.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.CardSpacePolicyElement"&gt;&lt;/xref&gt;</ph> that describes the federated security chain that the client requires a final token to unwind.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IdentityModel.Selectors.SecurityTokenSerializer"&gt;&lt;/xref&gt;</ph> that can read a <ph id="ph2">`KeyInfo`</ph> clause.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.GenericXmlSecurityToken"&gt;&lt;/xref&gt;</ph> that represents the generated security token.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">requiresInfoCard</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Gets the current HTTP Digest credential.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the object returned by this property to configure the credential by calling the <ph id="ph1">&lt;xref:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Similarly, you can specify the network credential to use if it is different from the current thread's token.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Security.HttpDigestClientCredential"&gt;&lt;/xref&gt;</ph> that represents the credential that the client uses to authenticate to the service when the HTTP Digest authentication method is chosen.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Use this property to specify the endpoint address and binding to use when contacting your local Security Token Service.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This information is used when a service requires authentication using an issued token, but the policy of the service (represented as a binding on the client) does not explicitly specify how and where to obtain the issued token.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the object returned by this property to configure the settings of the local Security Token Service by calling its members.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Security.IssuedTokenClientCredential"&gt;&lt;/xref&gt;</ph> that specifies parameters to be used to obtain a token from a local Security Token Service.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Controls the credentials that a peer node uses to authenticate itself to other nodes in the mesh, as well as authentication settings that a peer node uses to authenticate other peer nodes.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the object returned by this property to configure the credential by calling its members, such as <ph id="ph1">&lt;xref:System.ServiceModel.Security.PeerCredential.Certificate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Security.PeerCredential.MeshPassword%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.ServiceModel.Security.PeerCredential.PeerAuthentication%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Security.PeerCredential"&gt;&lt;/xref&gt;</ph> that represents the current peer credential.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the security token handler for the client credential.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The security token handler for the client credential.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets an object used to specify a service's X.509 certificate.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the object returned by this property to configure the certificate's properties by calling its members.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify a single default certificate as well as a different certificate to be used when communicating with a particular URI.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Through this class, you also control the authentication settings for service certificates negotiated through SSL/TLS negotiation performed at the message level.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property does not always have to be specified.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whether it is required depends on the authentication mode and negotiation options set on the binding that is used to communicate with the service.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some relevant classes that control this behavior are <ph id="ph1">&lt;xref:System.ServiceModel.MessageSecurityOverHttp&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.MessageSecurityOverTcp&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set this value using the <bpt id="p1">[</bpt><ph id="ph1">\&amp;</ph>lt;certificate<ph id="ph2">\&amp;</ph>gt;<ept id="p1">](~/docs/framework/configure-apps/file-schema/wcf/certificate-for-identity.md)</ept> element in a client application configuration file.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Security.X509CertificateRecipientClientCredential"&gt;&lt;/xref&gt;</ph> that represents the certificate to use for a particular service.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the system is allowed to interactively prompt the user for credentials when necessary.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>For example, setting it to <ph id="ph1">`false`</ph> might be desired in middle-tier scenarios.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property controls whether a user interface is allowed to pop up during credential provisioning.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common case where this currently happens is with <ph id="ph1">[!INCLUDE[infocard](~/includes/infocard-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the credential supports interactive mode; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the client credentials uses identity configuration.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`True`</ph> if the client credentials uses identity configuration; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Gets a credential object that you can use to set the user name and password that the client uses to authenticate itself to the service.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the object returned by this property to configure the credential by calling its members, such as <ph id="ph1">&lt;xref:System.ServiceModel.Security.UserNamePasswordClientCredential.UserName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Security.UserNamePasswordClientCredential.Password%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Security.UserNamePasswordClientCredential"&gt;&lt;/xref&gt;</ph> that represents the current UserName credential.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>Gets an object used to control the Windows credential that the client uses to authenticate itself to the service.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the object returned by this property to configure the Windows credential by calling its members, such as <ph id="ph1">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Security.WindowsClientCredential.AllowedImpersonationLevel%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>These settings control the Windows credential used during SPNEGO negotiation at either the message or transport level or the properties of Kerberos tokens used for authentication at the message level.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Security.WindowsClientCredential"&gt;&lt;/xref&gt;</ph> that represents the current Windows credential.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Adds this instance of this class to a binding parameter collection.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>An explicit implementation of the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials.System%23ServiceModel%23Description%23IEndpointBehavior%23AddBindingParameters%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Implements a modification or extension of the service across an endpoint.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Reserved for future use.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>