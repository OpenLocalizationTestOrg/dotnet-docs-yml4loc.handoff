<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">90b880fce939fa0573ed470f65f5c31c1a91d868</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.AddIn.Contract.Collections.IEnumeratorContract-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d8ab15f1458bc7cdbc9e350fb35759b2ca041569</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">688c0e3469c216b92752c27470df3cd13f0287ef</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enumerates the elements of a generic collection of <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, the return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, the return value of <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The type of objects to enumerate.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source><bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">C</ph><ept id="p1">&lt;/code&gt;</ept> must implement the <ph id="ph2">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> in the collection at the current position of the enumerator.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value of <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> is undefined under any of the following conditions:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator is positioned before the first element in the collection, immediately after the enumerator is created or after <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> must be called to advance the enumerator to the first element of the collection before calling <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The last call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, which indicates the end of the collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator is invalidated due to changes made in the collection, such as adding, modifying, or deleting elements.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> returns the same object until <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> sets the return value of <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.GetCurrent%2A&gt;</ph> to the next element.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.AddIn.Contract.IContract"&gt;&lt;/xref&gt;</ph> in the collection at the current position of the enumerator.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the collection.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> method is called, an enumerator is positioned before the first element of the collection.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first call to the <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> method moves the enumerator to the first element of the collection.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> passes the end of the collection, the enumerator is positioned after the last element in the collection and <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is at this position, subsequent calls to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> also return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">`false`</ph> if the enumerator has passed the end of the collection.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the collection.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Collections.IEnumeratorContract%601.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>