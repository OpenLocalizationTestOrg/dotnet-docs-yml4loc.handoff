<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a5442fe4444a5ec7e13c86ea6374cb10e9697f3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Speech.Synthesis.TtsEngine.TtsEngineSsml.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b14194624f7d3129ef9527926092b912a3f976c8</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">885413f6f8da827c40821439261b7ff8c306a3f4</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract base class to be implemented by all text to speech synthesis engines.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>To construct a custom text to speech engine, an application must always implement a class derived from the abstract base class <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A properly registered implementation of <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> can then be used as a synthesizer voice by <ph id="ph2">&lt;xref:System.Speech.Synthesis&gt;</ph> name space based applications.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Objects inheriting from <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> must override the following members: <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.%23ctor%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;</ph> and <ph id="ph6">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most important member of the <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> class to be implemented is the <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.Speak%2A&gt;</ph> method is called by the infrastructures text parser receiving:</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>A reference to the <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.ITtsEngineSite&gt;</ph> interface, which provides access to system services such as even queuing and writing audio output.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>An array of <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph> instance produced from Speech Synthesis Markup Language (SSML) input.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to text to be rendered as speech, the parsing of the SSML stores information about the requested attributes of the speech in a <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.FragmentState&gt;</ph> instance associated with each incoming <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.TextFragment&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>A speech synthesizer application can optionally make requests for a specified output format by implementing <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.GetOutputFormat%2A&gt;</ph> to be called by the platform when it tries to provide the correct audio output.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>An implementer can also provide support for managing external definitions of pronunciations, or lexicons, by their implementation of <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.RemoveLexicon%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Constructs a new instance of <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;&lt;/xref&gt;</ph> based on an appropriate Voice Token registry key.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calls to this constructor are typically generated by <ph id="ph1">&lt;xref:System.Speech.Synthesis&gt;</ph> based applications selecting a synthesizer voice to be used by an instance of <ph id="ph2">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> must be register under HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Speech\Voices\Tokens.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Full name of the registry key for the Voice Token associated with the <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;&lt;/xref&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>engine.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Adds a lexicon to the <ph id="ph1">`Synthesizer``Voice`</ph> implemented by the current <ph id="ph2">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically called by the platform infrastructure in response to a <ph id="ph1">&lt;xref:System.Speech.Synthesis&gt;</ph> based applications calling <ph id="ph2">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml.AddLexicon%2A&gt;</ph> and using the synthesizer voice implemented by the current <ph id="ph3">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of <ph id="ph1">`mediaType`</ph> is typically a MIME specification, as the SSML specification uses MIME for media specifications.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A valid instance of <ph id="ph1">`System.Uri`</ph> indicating the location of the lexicon information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A string containing the media type of the lexicon.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Media types are case insensitive.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A reference to an <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;&lt;/xref&gt;</ph> interface used to interact with the platform infrastructure.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns the best matching audio output supported by a given synthesize engine response to a request to the synthesizer engine for the support of a particular output format.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The structure used as <ph id="ph1">`targetWaveFormat`</ph> and returned by the method should compatible with the <ph id="ph2">`WAVEFORMATEX`</ph> available under SAPI, and the returned value should be allocated using <ph id="ph3">`CoTaskMemAlloc`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`struct`</ph> must provide functionality equivalent to:</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Valid member of the <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.SpeakOutputFormat"&gt;&lt;/xref&gt;</ph> enumeration indicating the type of requested audio output format.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A pointer to a <ph id="ph1">`struct`</ph> containing detail setting for the audio format type requested by the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">speakOutputFormat</ph><ept id="p1">&lt;/code&gt;</ept> argument.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Returns a valid <ph id="ph1">`IntPtr`</ph> instance referring to a <ph id="ph2">`struct`</ph> containing detailed information about the output format.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Removes a lexicon currently loaded by the <ph id="ph1">`Synthesizer``Voice`</ph> implemented by the current <ph id="ph2">&lt;xref href="System.Speech.Synthesis.TtsEngine.TtsEngineSsml"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>A pronunciation lexicon is a collection of words or phrases together with their pronunciations specified using an appropriate pronunciation alphabet.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is typically called in response to a <ph id="ph1">&lt;xref:System.Speech.Synthesis&gt;</ph> based applications calling <ph id="ph2">&lt;xref:System.Speech.Synthesis.SpeechSynthesizer.RemoveLexicon%2A&gt;</ph> and using the synthesizer voice implemented by the current <ph id="ph3">&lt;xref:System.Speech.Synthesis.TtsEngine.TtsEngineSsml&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>A valid instance of <ph id="ph1">`System.Uri`</ph> indicating the location of the lexicon information.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A reference to an <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;&lt;/xref&gt;</ph> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Renders specified <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TextFragment"&gt;&lt;/xref&gt;</ph> array in the specified output format.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>The structure used as <ph id="ph1">`waveHeader`</ph> and returned by the method should compatible with the <ph id="ph2">`WAVEFORMATEX`</ph> available under SAPI.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`struct`</ph> must provide functionality equivalent to:</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.TextFragment"&gt;&lt;/xref&gt;</ph> instances containing the text to be rendered into speech.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`IntPtr`</ph> pointing to a structure containing audio output format.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A reference to an <ph id="ph1">&lt;xref href="System.Speech.Synthesis.TtsEngine.ITtsEngineSite"&gt;&lt;/xref&gt;</ph> interface passed in by the platform infrastructure to allow access to the infrastructure resources.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>