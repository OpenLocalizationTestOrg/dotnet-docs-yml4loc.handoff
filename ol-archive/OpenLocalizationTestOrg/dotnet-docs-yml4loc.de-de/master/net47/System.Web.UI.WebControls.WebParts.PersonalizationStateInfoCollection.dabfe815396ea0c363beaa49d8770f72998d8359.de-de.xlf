<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f72e99c417218e0ce7377e0f47d895e4e8f47404</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2454c34619c5335c7daf6acfe3f894b0a38699f</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52f0f23268f6a61a30767de0f03e4cf7abebdc5f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a collection of <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&gt;</ph> class provides a collection-based wrapper over a set of <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&gt;</ph> instances.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>These instances are retrieved by iterating sequentially over the collection, by ordinal index or by key value.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instances are indexed on a combination of path and user name.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is necessary because <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo&gt;</ph> instances representing shared data are indexed according to <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A&gt;</ph> object, whereas <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&gt;</ph> instances are indexed according to both a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo.Path%2A&gt;</ph> object and a <ph id="ph5">&lt;xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo.Username%2A&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The information objects are maintained in the collection in the order in which they were received from the provider.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection does not attempt to change the order of the instances or maintain a specific sort order within the collection.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes an empty collection.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Adds a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph>-derived instance to the end of the collection.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method adds a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&gt;</ph>-derived instance to the end of the collection.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, the count of the collection is incremented by one.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any enumerators currently active against the collection are invalidated.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph>-derived instance to be added.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The collection was marked as read-only.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An attempt was made to add an object to the collection when an instance of the same shared or per-user state already exists in the collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The data parameter is null.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Clears the collection of all items.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any enumerators currently active against the collection are invalidated.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The collection was marked as read-only.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Copies the elements of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection"&gt;&lt;/xref&gt;</ph> collection into a <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> array, starting at the specified position.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method if you want to create a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&gt;</ph> array.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method simply calls the <ph id="ph1">&lt;xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName&gt;</ph> method and passes the <ph id="ph2">`array`</ph> and <ph id="ph3">`index`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The array the elements in the collection are copied into.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The location at which to start the copy operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the number of items in a collection.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>The count of the items in the collection can be used to iterate through the collection, as shown in the example.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The number of items in a collection.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns a standard enumerator capable of iterating over the collection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph> property is undefined.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Collections.IEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph2">&lt;xref:System.Collections.IEnumerator.Current%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information on enumerators, see <ph id="ph1">&lt;xref:System.Collections.IEnumerator&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`foreach`</ph> statement of the C# language (<ph id="ph2">`for each`</ph> in Visual Basic) hides the complexity of the enumerators.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, using <ph id="ph1">`foreach`</ph> is recommended, instead of directly manipulating the enumerator.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> that can be used to iterate through the collection.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection"&gt;&lt;/xref&gt;</ph> collection is synchronized (thread safe).</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A&gt;</ph> property returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if access to the collection is synchronized; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The value is always <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection"&gt;&lt;/xref&gt;</ph> objects created by the Web Parts control set.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> instance located at the specified ordinal index in the collection.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property retrieves the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&gt;</ph> instance located at the specified ordinal index in the collection.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The ordinal index of the object to be retrieved.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> instance located at the specified ordinal index in the collection.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;index&lt;/code&gt;</ph> is greater than <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Count"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets an element from the collection based on the specified parameters.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is the default indexer for the collection.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>If only <ph id="ph1">`path`</ph> is provided, the property returns a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both <ph id="ph1">`path`</ph> and <ph id="ph2">`username`</ph> are provided, the property returns a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&gt;</ph> instance for the combination of <ph id="ph4">`path`</ph> and <ph id="ph5">`username`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`path`</ph> (in the case that <ph id="ph2">`username`</ph> is set to <ph id="ph3">`null`</ph>) does not exist, or if <ph id="ph4">`username`</ph> and <ph id="ph5">`path`</ph> do not exist, <ph id="ph6">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The relative application path of the personalization state object to be retrieved.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The user name of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> object to be retrieved.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>An element from the collection based on the specified parameters.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Removes a <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph>-derived object from the collection.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method removes a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfo&gt;</ph>-derived instance from the collection.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any elements after the removed instance are moved up to occupy the vacant position.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Internally, the count of the collection is decremented by one.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any enumerators currently active against the collection are invalidated.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If only <ph id="ph1">`path`</ph> is provided, then the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.SharedPersonalizationStateInfo&gt;</ph> instance for that path is removed.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If both <ph id="ph1">`path`</ph> and <ph id="ph2">`username`</ph> are provided, then the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo&gt;</ph> instance for the combination of <ph id="ph4">`path`</ph> and <ph id="ph5">`username`</ph> is removed.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can try to remove a non-existing item from the collection; this action will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The relative application path of the personalization state object to be removed.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The user name of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.UserPersonalizationStateInfo"&gt;&lt;/xref&gt;</ph>-derived object to be removed.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The collection was marked as read-only.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is null.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source><ph id="ph1">\-</ph> or -</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>both parameters are null.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Marks the collection as read-only.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods that attempt to modify a read-only collection, such as <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.Remove%2A&gt;</ph>, throw a <ph id="ph3">&lt;xref:System.NotSupportedException&gt;</ph> exception.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SetReadOnly%2A&gt;</ph> method multiple times on the collection; this will not raise an exception.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Derived classes can provide their own synchronized versions of the collection using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection itself.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The Web Parts control set returns a reference to the current collection object.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Implements the base <ph id="ph1">&lt;xref href="System.Collections.ICollection.CopyTo(System.Array,System.Int32)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method, like the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection&gt;</ph> class's own <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebParts.PersonalizationStateInfoCollection.CopyTo%2A&gt;</ph> method, simply calls the <ph id="ph3">&lt;xref:System.Collections.ArrayList.CopyTo%2A?displayProperty=fullName&gt;</ph> method and passes the <ph id="ph4">`array`</ph> and <ph id="ph5">`index`</ph> parameters.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>The array into which a collection of <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> objects will be copied.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The point in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">array</ph><ept id="p1">&lt;/code&gt;</ept> at which to start copying the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.WebParts.PersonalizationStateInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>