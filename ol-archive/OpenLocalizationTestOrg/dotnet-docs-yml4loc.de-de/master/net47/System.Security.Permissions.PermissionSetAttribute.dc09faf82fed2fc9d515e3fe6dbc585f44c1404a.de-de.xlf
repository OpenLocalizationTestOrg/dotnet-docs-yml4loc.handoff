<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">474f9eb4eb7309242278783aebc5f59d90be1b71</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Permissions.PermissionSetAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9341ff519c2c9a3c9d462a095737554d406208c6</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e2b3aa2dc9bb64b3dddf541a2b32a3b9e057f79</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Allows security actions for a <ph id="ph1">&lt;xref href="System.Security.PermissionSet"&gt;&lt;/xref&gt;</ph> to be applied to code using declarative security.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionSetAttribute&gt;</ph> properties <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionSetAttribute.Name%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.PermissionSetAttribute.File%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Security.Permissions.PermissionSetAttribute.XML%2A&gt;</ph> are mutually exclusive, meaning that a permission set can have as its source only one of the following: a named permission set, a file containing an XML representation of a permission set, or a string containing an XML representation of a permission set.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The scope of the declaration that is allowed depends on the <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> that is used.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAction&gt;</ph> performed on a <ph id="ph2">&lt;xref:System.Security.PermissionSet&gt;</ph> is the equivalent of performing that action on each of the permissions within the set.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The security information declared by a security attribute is stored in the metadata of the attribute target and is accessed by the system at run time.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security attributes are used only for declarative security.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For imperative security, use the corresponding permission class.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionSetAttribute"&gt;&lt;/xref&gt;</ph> class with the specified security action.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies a security action.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>This method is not used.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not used; it is included only to support inheritance from <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityAttribute&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>A null reference (<ph id="ph1">`nothing`</ph> in Visual Basic) in all cases.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Creates and returns a new permission set based on this permission set attribute object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method should be called only by the security system, never by application code.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes are used at compile time to convert security declarations to a serialized form in metadata.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Declarative security data in metadata is created from the permission object that this method returns, which corresponds to this attribute instance.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A new permission set.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a file containing the XML representation of a custom permission set to be declared.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the file specified is Unicode, set the <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionSetAttribute.UnicodeEncoded%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The physical path to the file containing the XML representation of the permission set.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the hexadecimal representation of the XML encoded permission set.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The hexadecimal representation of the XML encoded permission set.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the permission set.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because named permission sets can vary from computer to computer, the use of named permission sets for declarative security is restricted to the immutable named permission sets included as part of the default policy.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This ensures that the permissions contained in the permission set referenced will be the same wherever the code is run.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A compiler error will be thrown if a mutable or unrecognized named permission set is used.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The name of an immutable <ph id="ph1">&lt;xref href="System.Security.NamedPermissionSet"&gt;&lt;/xref&gt;</ph> (one of several permission sets that are contained in the default policy and cannot be altered).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the file specified by <ph id="ph1">&lt;xref href="System.Security.Permissions.PermissionSetAttribute.File"&gt;&lt;/xref&gt;</ph> is Unicode or ASCII encoded.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is not set, the file is assumed to be ASCII.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionSetAttribute.File%2A&gt;</ph> is <ph id="ph2">`null`</ph> this property is not used.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the file is Unicode encoded; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets or sets the XML representation of a permission set.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The XML representation of a permission set.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>