<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">35b09247bad2846477029f69a3d92293904f306f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Linq.Expressions.DebugInfoExpression.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b7eda4b7bd77652c49cf69781e1c6482b640d178</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e2423d154c3c2afcb175621966f1c55aa3f396f6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Emits or clears a sequence point for debug information.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This allows the debugger to highlight the correct source code when debugging.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Dispatches to the specific visit method for this node type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">&lt;xref href="System.Linq.Expressions.MethodCallExpression"&gt;&lt;/xref&gt;</ph> calls the <ph id="ph2">&lt;xref href="System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This default implementation for <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionType.Extension&gt;</ph> nodes calls <ph id="ph2">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Override this method to call into a more specific method on a derived visitor class of the <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it should still support unknown visitors by calling <ph id="ph1">&lt;xref:System.Linq.Expressions.ExpressionVisitor.VisitExtension%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>The visitor to visit this node with.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The result of visiting this node.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Linq.Expressions.SymbolDocumentInfo"&gt;&lt;/xref&gt;</ph> that represents the source file.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.SymbolDocumentInfo"&gt;&lt;/xref&gt;</ph> that represents the source file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets the end column of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The number of the end column of the code that was used to generate the wrapped expression.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets the end line of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The number of the end line of the code that was used to generate the wrapped expression.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the value to indicate if the <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression"&gt;&lt;/xref&gt;</ph> is for clearing a sequence point.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>True if the <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression"&gt;&lt;/xref&gt;</ph> is for clearing a sequence point, otherwise false.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>Returns the node type of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.ExpressionType"&gt;&lt;/xref&gt;</ph> that represents this expression.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets the start column of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The number of the start column of the code that was used to generate the wrapped expression.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets the start line of this <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The number of the start line of the code that was used to generate the wrapped expression.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets the static type of the expression that this <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> represents.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Linq.Expressions.DebugInfoExpression.Type"&gt;&lt;/xref&gt;</ph> that represents the static type of the expression.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>