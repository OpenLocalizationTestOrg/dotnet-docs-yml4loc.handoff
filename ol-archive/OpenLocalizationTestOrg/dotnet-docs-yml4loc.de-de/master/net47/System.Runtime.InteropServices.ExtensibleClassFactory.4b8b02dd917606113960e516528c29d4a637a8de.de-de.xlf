<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3d2fb5587f5737d916e76a3bd695848efa47f26</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.ExtensibleClassFactory.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7ef3b670b815f97e25aeb0551708f126f0b4860b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89cd1daf2738c42d93c4663757eb5c0f56315829</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables customization of managed objects that extend from unmanaged objects during creation.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ExtensibleClassFactory`</ph> allows users to specify a <ph id="ph2">`delegate`</ph> that is called during construction of a runtime callable wrapper (RCW) that provides an instance of the underlying COM object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In effect, the callback acts as the class factory for the COM object wrapped by the RCW.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without the callback, the common language runtime creates the underlying COM object by calling <ph id="ph1">`CoCreateInstance`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This callback provides an alternative way of activating the underlying object, such as with a COM moniker or by providing a singleton object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ExtensibleClassFactory.RegisterObjectCreationCallback%2A&gt;</ph> method must be called in the <ph id="ph2">`static`</ph> initializer of the class that is extending the RCW.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one object creation callback is permitted per object type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the extensible RCW is activated, the callback is registered.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the underlying COM object needs to be created, the callback is called to provide a reference to the object.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The callback must return an <ph id="ph1">`IUnknown`</ph> interface pointer for the base object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Registers a <ph id="ph1">`delegate`</ph> that is called when an instance of a managed type, that extends from an unmanaged type, needs to allocate the aggregated unmanaged object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`delegate`</ph> allocates and aggregates the unmanaged object and is called in place of <ph id="ph2">`CoCreateInstance`</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This <ph id="ph1">`delegate`</ph> must be registered in the context of the <ph id="ph2">`static`</ph> class initializer for which the callbacks will be made.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one class in an hierarchy should register a <ph id="ph1">`delegate`</ph> callback.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`delegate`</ph> that is called in place of <ph id="ph2">`CoCreateInstance`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>