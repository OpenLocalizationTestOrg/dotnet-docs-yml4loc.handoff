<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3eecb9523cc32a0252e4a7920e07b726d6bea3e0</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b75ebe40829c4248927d1c8e1e5fb2f131202a76</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39a7cb5821098fd09de102d9d452dd08b42ab32b</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClauseSerializer"&gt;&lt;/xref&gt;</ph> that can process X.509 certificate reference types.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified reader is positioned at an <ph id="ph1">`&lt;ds:X509Data&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the key identifier clause.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the reader is referring to an <ph id="ph2">`&lt;ds:X509Data&gt;`</ph> element; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the specified key identifier clause can be serialized by this handler.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supported key identifier clause types are:</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The key identifier clause to check.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key identifier clause is supported by this handler; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Deserializes a key identifier clause from XML by using the specified XML reader.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.ReadKeyIdentifierClause%2A&gt;</ph> method reads <ph id="ph2">`&lt;ds:X509IssuerSerial&gt;`</ph>, <ph id="ph3">`&lt;ds:X509SKI&gt;`</ph>, and <ph id="ph4">`&lt;ds:X509Certificate&gt;`</ph> elements and returns the first one found as a <ph id="ph5">&lt;xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause&gt;</ph>, a <ph id="ph6">&lt;xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&gt;</ph>, or a <ph id="ph7">&lt;xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of these elements is not found under the <ph id="ph1">`&lt;ds:X509Data&gt;`</ph> element, the method returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>An XML reader positioned at the start element of the key identifier clause to read.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The key identifier clause that was deserialized from the XML or <ph id="ph1">`null`</ph> if a key identifier clause could not be read.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is not positioned at a `<ph id="ph2">&lt;ds:X509Data&gt;</ph>` element.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>(The <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.X509DataSecurityKeyIdentifierClauseSerializer.CanReadKeyIdentifierClause(System.Xml.XmlReader)"&gt;&lt;/xref&gt;</ph> method returns <ph id="ph2">`false`</ph>.)</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Serializes the specified key identifier clause.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supported key identifier clause types are:</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The XML writer to use to serialize the key identifier clause.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The key identifier clause to serialize.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;reader&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;securityKeyIdentifierClause&lt;/code&gt;</ph> is not a supported clause type.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>