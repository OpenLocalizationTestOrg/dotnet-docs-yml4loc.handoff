<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9f39760b82cb4d71f2217e1f24279b803b9d67a5</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Net.PeerToPeer.Collaboration.Peer.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3899ac6f16fa2b893fba1d5a32424ae37019150e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cec6e1ee312a357e2514a9f26c37b2ab118905cc</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>This class represents a remote peer.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The purpose of the abstract <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> class is to provide a common base class definition that can be shared by derived classes such as <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It cannot be directly constructed, since it is abstract.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Developers should use the subclasses PeerNearMe or PeerContact instead.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contact, peer, remote peer, <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.ContactManager.LocalContact%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> are synonymous terms, based on context.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>"Calling peer" and "remote peer" are commonly synonymous.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling peer does not refer to the application calling a given method.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Returns a type <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> object, subclassed on <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The PeerContact <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A&gt;</ph> or the PeerNearMe <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.Nickname%2A&gt;</ph> contain unique references to the name of the new peer object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Reference to the object that holds the data needed to deserialize this instance.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Context that provides the means for deserializing the data.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Also referred to as the source of the serialized data.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Set to <ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Performs a case-sensitive comparison of the current <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> and the specified peer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two peers are considered equal if they have the same endpoint collection, regardless of the values in their <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Usage scenarios do not involve this class directly, but rather the derived <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph> or the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> instance to compare to this instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the supplied <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> instance has the same <ph id="ph3">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer.PeerEndPoints"&gt;&lt;/xref&gt;</ph> as this peer instance, otherwise <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>This method also returns <ph id="ph1">`false`</ph> if the peer parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> object with the data needed to serialize the target <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> to populate with data.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The destination for this serialization.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets the collection of data objects from a local cache.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>This functionality is only exposed on the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>This functionality is not exposed on any other type of peer for security reasons.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the peer collaboration session did not instantiate with a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, this method cannot access objects on the local computer.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The same is true of the applications registered into the collaboration session.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection of peer objects consists of application, data object, and presence information for the peer or endpoint specified by this instance.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no objects are found for the endpoint, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the calling peer is subscribed to this endpoint, the cache is automatically updated; otherwise <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A&gt;</ph> must be called prior to calling this method.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller is not required to be signed into the collaboration infrastructure for this method to complete successfully.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>A successful call to <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A&gt;</ph> or one of the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> methods must have been completed while the caller was signed in previous to calling this method.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>NOTE: Additional overloads are defined on the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> class instead of the subclasses <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> collection for the peer or endpoint specified by this instance.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The caller is not subscribed to the endpoint or has not yet called <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The method is unable to complete due to an error in the underlying Peer Collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object associated with the supplied <ph id="ph2">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> from the <ph id="ph3">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObjectCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This functionality is only exposed on the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This functionality is not exposed on any other type of peer for security reasons.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The collection of peer objects consists of application, data object, and presence information for the peer or endpoint specified by this instance.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no objects are found for the endpoint, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the calling peer is subscribed to this endpoint, the cache is automatically updated; otherwise <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A&gt;</ph> must be called prior to calling this method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller is not required to be signed into the collaboration infrastructure for this method to complete successfully.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>A successful call to <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A&gt;</ph> or one of the <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A&gt;</ph> methods must have been completed while the caller was signed in previous to calling this method.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>NOTE: Additional overloads are defined on the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer&gt;</ph> class instead of the derived classes <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerContact&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerNearMe&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> of the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object to be retrieved from the collection</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object associated with the supplied <ph id="ph2">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>If an object is not found, a collection of size zero (0) is returned.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The object ID is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The caller is not subscribed to the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint"&gt;&lt;/xref&gt;</ph> or has not yet called <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData"&gt;&lt;/xref&gt;</ph> against it.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>An error occurred when getting object information from the peer.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets the available presence information for a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Presence information includes status descriptors such as online, offline, and away.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint"&gt;&lt;/xref&gt;</ph> for which to retrieve presence information.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerPresenceInfo"&gt;&lt;/xref&gt;</ph> object which contains presence information for an available endpoint if it is available; otherwise it is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;peerEndPoint&lt;/code&gt;</ph> does not contain a valid endpoint.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;peerEndPoint&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>This object has been disposed and cannot be used in current peer operations.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>An error occurred while retrieving presence information from the peer.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Sends an invitation to a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> to start a specific <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the peer collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> for which the invitation is sent.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A message to send to the remote peer along with the application invitation.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The message can be no more than 255 Unicode characters.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>A user defined data blob to associate with the invitation.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Its size can be no more than 16,384 bytes.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse"&gt;&lt;/xref&gt;</ph> from the peer that received the invitation.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The application is not registered for collaboration.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;invitationData&lt;/code&gt;</ph> is larger than 16,384 bytes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>An error occurred during the invitation process.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The currently executing application is not registered with the peer collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Sends an invitation to a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> to start a specific <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the Peer Collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse"&gt;&lt;/xref&gt;</ph> from the peer that received the invitation.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>An error occurred during the invitation process.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The currently executing application is not registered with the Peer Collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous invitation operation which sends an invitation to a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> to start a specific <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the peer collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>User-defined object to pass to the callback of the asynchronous operation for identification.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>This required parameter must be unique across all asynchronous invitation operations in progress.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is <ph id="ph2">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>An error occurred during the invitation process.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The currently executing application is not registered with the collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Begins an asynchronous invitation operation which sends an invitation to a <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> to start a specific <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>This state is created when the peer collaboration session begins.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerApplication"&gt;&lt;/xref&gt;</ph> for which the invitation is sent.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A message to send to the remote peer along with the application invitation.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>The maximum size of this message is 255 Unicode characters.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>A user defined data blob to associate with the invitation.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Its size can be no more than 16,384 bytes.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>User-defined object to pass to the callback of the asynchronous operation for identification.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>This required parameter must be unique across all asynchronous invitation operations in progress.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The application is not registered with the collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;userToken&lt;/code&gt;</ph> is <ph id="ph2">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;invitationData&lt;/code&gt;</ph> is larger than 16,384 bytes.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>An error occurred during the invitation process.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>The currently executing application is not registered with the collaboration infrastructure.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Cancels the invitation that was sent with the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method guarantees the system will cease to wait for a <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&gt;</ph> from the peer associated with the InviteAsync request.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple invitations may be outstanding at any given time.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel%2A&gt;</ph> method is called when an asynchronous operation identified by the <ph id="ph2">`userToken`</ph> is not in existence, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`userToken`</ph> object must be provided since it is used to track a specific asynchronous call.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This host application-supplied object is unique for each invite request.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is used, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&gt;</ph> event can still be raised, but the Cancelled property on the associated <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs&gt;</ph> object will be set to <ph id="ph3">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>User defined object to pass to the callback of the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)"&gt;&lt;/xref&gt;</ph> operation for identification.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>This required parameter must be unique across all asynchronous invitation operations in progress.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">userToken</ph><ept id="p1">&lt;/code&gt;</ept> parameter cannot be <ph id="ph2">`null.`</ph></source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source>An asynchronous invitation is not outstanding.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Raised when the invitation process for a remote peer has completed.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse&gt;</ph> specifies the result of the invitation operation.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method requires a <ph id="ph1">&lt;xref:System.Security.Permissions.PermissionState&gt;</ph> of <ph id="ph2">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object has been disposed.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Gets a value specifying if the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> is currently 'online'.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> is online at any of the endpoints associated with it; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Unless specified, the default value for this property is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object has been disposed.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Classes that inherit from this class can override this method to perform additional tasks when the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted&gt;</ph> event is raised.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerInvitationResponse"&gt;&lt;/xref&gt;</ph> object containing the event data to be passed to delegates associated with the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPointCollection"&gt;&lt;/xref&gt;</ph> associated with the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a remote peer is an intermediary for a host peer, the <ph id="ph1">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint&gt;</ph> objects contained in <ph id="ph2">&lt;xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection&gt;</ph> associate with the local contacts for the remote peer.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPointCollection"&gt;&lt;/xref&gt;</ph> associated with the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph> object has been disposed.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>When this property value is set, all events not fired as the result of an asynchronous operation will have the associated event handlers called back on the thread that created the specific <ph id="ph1">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerEndPoint.SynchronizingObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default set value for this property is <ph id="ph1">`null`</ph>, indicating that all event handlers are called on a system thread pool thread.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is typically set to a UI element such as a <ph id="ph1">&lt;xref:System.Windows.Forms.Form&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>Object that implements the <ph id="ph1">&lt;xref href="System.ComponentModel.ISynchronizeInvoke"&gt;&lt;/xref&gt;</ph> interface and is used by instances of this type for event handler synchronization on the thread that created it.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>The calling object has been disposed.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>Returns a <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName"&gt;&lt;/xref&gt;</ph> associated with the <ph id="ph3">&lt;xref href="System.Net.PeerToPeer.Collaboration.Peer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> representing the <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Populates a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> class instance with the data required to serialize the specified <ph id="ph2">&lt;xref href="System.Net.PeerToPeer.Collaboration.PeerObject"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A derived type must call the base type <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.SerializationInfo"&gt;&lt;/xref&gt;</ph> to populate with data.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The destination for the serialization.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>