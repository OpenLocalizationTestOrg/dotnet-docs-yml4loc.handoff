<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae22448227439045f9061a3a96b99389aabc9622</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Data.BindingExpression.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">db8ec888616cfa886e03cec3dd28c27aab601a21</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b3f0d8c26a0d7e3444a82b7482ceaed869489068</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Contains information about a single instance of a <ph id="ph1">&lt;xref href="System.Windows.Data.Binding"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class is the high-level class for the declaration of a binding.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> class is the underlying object that maintains the connection between the binding source and the binding target.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> contains all the information that can be shared across several <ph id="ph2">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> is an instance expression that cannot be shared and that contains all the instance information about the <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider the following, where <ph id="ph1">`myDataObject`</ph> is an instance of the <ph id="ph2">`MyData`</ph> class, <ph id="ph3">`myBinding`</ph> is the source <ph id="ph4">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, and <ph id="ph5">`MyData`</ph> class is a defined class that contains a string property named <ph id="ph6">`MyDataProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example binds the text content of <ph id="ph1">`mytext`</ph>, which is an instance of <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>, to <ph id="ph3">`MyDataProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[!code-csharp</bpt><bpt id="p2">[</bpt>CodeOnlyBinding#1<ept id="p2">](~/samples/snippets/csharp/VS_Snippets_Wpf/CodeOnlyBinding/CSharp/binding.cs#1)</ept><ept id="p1">]</ept> <bpt id="p3">[!code-vb</bpt><bpt id="p4">[</bpt>CodeOnlyBinding#1<ept id="p4">](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CodeOnlyBinding/VisualBasic/App.vb#1)</ept><ept id="p3">]</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the same <ph id="ph1">`myBinding`</ph> object to create other bindings.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might use the <ph id="ph1">`myBinding`</ph> object to bind the text content of a check box to <ph id="ph2">`MyDataProperty`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that scenario, there will be two instances of <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> that share the <ph id="ph2">`myBinding`</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can obtain a <ph id="ph1">&lt;xref:System.Windows.Data.BindingExpression&gt;</ph> object by using the <ph id="ph2">&lt;xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.GetBindingExpression%2A&gt;</ph> method on a data-bound object.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Gets the binding source object that this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph> uses.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The binding source object that this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph> uses.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.Windows.Data.Binding"&gt;&lt;/xref&gt;</ph> object of the current <ph id="ph2">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Data.Binding"&gt;&lt;/xref&gt;</ph> object of the current binding expression.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets the binding source object for this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The binding source object for this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the name of the binding source property for this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>The name of the binding source property for this <ph id="ph1">&lt;xref href="System.Windows.Data.BindingExpression"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Sends the current binding target value to the binding source property in <ph id="ph1">&lt;xref href="System.Windows.Data.BindingMode.TwoWay"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Data.BindingMode.OneWayToSource"&gt;&lt;/xref&gt;</ph> bindings.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method does nothing when the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.Mode%2A&gt;</ph> of the binding is not <ph id="ph2">&lt;xref:System.Windows.Data.BindingMode.TwoWay&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Data.BindingMode.OneWayToSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A&gt;</ph> value of your binding is set to <ph id="ph2">&lt;xref:System.Windows.Data.UpdateSourceTrigger.Explicit&gt;</ph>, you must call the <ph id="ph3">&lt;xref:System.Windows.Data.BindingExpression.UpdateSource%2A&gt;</ph> method or the changes will not propagate back to the source.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The binding has been detached from its target.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Forces a data transfer from the binding source property to the binding target property.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method enables you to force a data transfer from the source property to the target property.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your source object implements a proper property-changed notification mechanism such as <ph id="ph1">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph>, target updates happen automatically.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you have the option to use this method to update the target property explicitly in cases where your source object does not provide the proper property-changed notifications.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use this method if your application needs to update the target properties periodically.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The binding has been detached from its target.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This member supports the <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The type of the <ph id="ph1">&lt;xref href="System.Windows.WeakEventManager"&gt;&lt;/xref&gt;</ph> calling this method.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>This only recognizes manager objects of type <ph id="ph1">&lt;xref href="System.Collections.Specialized.CollectionChangedEventManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Object that originated the event.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Event data.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the listener handled the event; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>