<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47cc1ea0cfa0b0d61f4adf6c903f72dded3e8134</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IO.MemoryMappedFiles.MemoryMappedFile.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5e4487ed607a770d6a93bdeade1c0692fc22022</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a45e8840f0aea8de1f7ed7234cb3a7ac0b463468</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A memory-mapped file maps the contents of a file to an applicationâ€™s logical address space.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Memory-mapped files enable programmers to work with extremely large files because memory can be managed concurrently, and they allow complete, random access to a file without the need for seeking.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Memory-mapped files can also be shared across multiple processes.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateFromFile%2A&gt;</ph> methods create a memory-mapped file from a specified path or a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> of an existing file on disk.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changes are automatically propagated to disk when the file is unmapped.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IO.MemoryMappedFiles.MemoryMappedFile.CreateNew%2A&gt;</ph> methods create a memory-mapped file that is not mapped to an existing file on disk; and are suitable for creating shared memory for interprocess communication (IPC).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>A memory-mapped file is associated with a name.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can create multiple views of the memory-mapped file, including views of parts of the file.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can map the same part of a file to more than one address to create concurrent memory.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>For two views to remain concurrent, they have to be created from the same memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Creating two file mappings of the same file with two views does not provide concurrency.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file from a file on disk.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The path to file to map.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;xref href="System.IO.Path.GetInvalidFileNameChars"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode from a file on disk.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use only the <ph id="ph1">&lt;xref:System.IO.FileMode.Open&gt;</ph> enumeration value to create the memory-mapped file from the source file on disk.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The path to file to map.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Access mode; must be <ph id="ph1">&lt;xref href="System.IO.FileMode.Open"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified access mode.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;xref href="System.IO.Path.GetInvalidFileNameChars"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.Append"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.Create"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.IO.FileMode.CreateNew"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.IO.FileMode.Truncate"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.OpenOrCreate"&gt;&lt;/xref&gt;</ph> and the file on disk does not exist.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode and name from a file on disk.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use only the <ph id="ph1">&lt;xref:System.IO.FileMode.Open&gt;</ph> enumeration value to create the memory-mapped file from the source file on disk.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The path to the file to map.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Access mode; must be <ph id="ph1">&lt;xref href="System.IO.FileMode.Open"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name and access mode.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;xref href="System.IO.Path.GetInvalidFileNameChars"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.Append"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.Create"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.IO.FileMode.CreateNew"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.IO.FileMode.Truncate"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.OpenOrCreate"&gt;&lt;/xref&gt;</ph> and the file on disk does not exist.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode, name, and capacity from a file on disk.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The path to the file to map.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Access mode; can be any of the <ph id="ph1">&lt;xref href="System.IO.FileMode"&gt;&lt;/xref&gt;</ph> enumeration values except <ph id="ph2">&lt;xref href="System.IO.FileMode.Append"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> is an empty string, contains only white space, or has one or more invalid characters, as defined by the <ph id="ph2">&lt;xref href="System.IO.Path.GetInvalidFileNameChars"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> refers to an invalid device.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.Append"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size (but not zero).</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is zero, and the size of the file on disk is also zero.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified access mode, name, capacity, and access type from a file on disk.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`mode`</ph> parameter pertains to the source file on disk.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The path to the file to map.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Access mode; can be any of the <ph id="ph1">&lt;xref href="System.IO.FileMode"&gt;&lt;/xref&gt;</ph> enumeration values except <ph id="ph2">&lt;xref href="System.IO.FileMode.Append"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not an allowed value.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> specifies an empty file.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is specified as <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read"&gt;&lt;/xref&gt;</ph> and capacity is greater than the size of the file indicated by <ph id="ph3">&lt;code&gt;path&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mode&lt;/code&gt;</ph> is <ph id="ph2">&lt;xref href="System.IO.FileMode.Append"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size (but not zero).</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is zero, and the size of the file on disk is also zero.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a defined <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The size of the file indicated by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">path</ph><ept id="p1">&lt;/code&gt;</ept> is greater than <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">capacity</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;path&lt;/code&gt;</ph> exceeds the maximum length defined by the operating system.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>In Windows, paths must contain fewer than 248 characters, and file names must contain fewer than 260 characters.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permissions for the file.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file from an existing file with the specified access mode, name, inheritability, and capacity.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The file stream of the existing file.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">filestream</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>This parameter canâ€™t be set to <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>A value that indicates whether to close the source file stream when the <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;&lt;/xref&gt;</ph> is disposed.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph> or an empty string.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> and the length of the file are zero.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value, which is not allowed.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;code&gt;capacity&lt;/code&gt;</ph> is larger than the length of <ph id="ph4">`filestream`</ph>.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified name, capacity, access type, security permissions, inheritability, and disposal requirement from a file on disk.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`capacity`</ph> is larger than the size of the file on disk, the file on disk is increased to match the specified capacity even if no data is written to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>To prevent this from occurring, specify 0 (zero) for the default capacity, which will internally set <ph id="ph1">`capacity`</ph> to the size of the file on disk.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">fileStream</ph><ept id="p1">&lt;/code&gt;</ept> to the file to map.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Specify 0 to set the capacity to the size of the file on disk.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve">
          <source>This parameter canâ€™t be set to <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to not dispose <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">fileStream</ph><ept id="p1">&lt;/code&gt;</ept> after the <ph id="ph3">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;&lt;/xref&gt;</ph> is closed; <ph id="ph4">`false`</ph> to dispose <bpt id="p2">&lt;code&gt;</bpt><ph id="ph5">fileStream</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> and the length of the file are zero.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Read"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value, which is not allowed.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;mapname&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than zero.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than the file size.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;fileStream&lt;/code&gt;</ph> was closed.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph> when <ph id="ph3">&lt;code&gt;fileStream&lt;/code&gt;</ph>'s access is set to <ph id="ph4">&lt;xref href="System.IO.FileAccess.Read"&gt;&lt;/xref&gt;</ph> or <ph id="ph5">&lt;xref href="System.IO.FileAccess.Write"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> already exists.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified capacity in system memory.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name and capacity.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified capacity and access type in system memory.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified name, capacity, access type, memory allocation options and inheritability.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Creates a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Creates a new empty memory mapped file or opens an existing memory mapped file if one exists with the same name.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>If opening an existing file, the capacity, options, and memory arguments will be ignored.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A bitwise combination of values that indicate the memory allocation options to apply to the file.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A value that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The operating system denied the specified access to the file; for example, access is set to <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>, but the file or directory is read-only.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>Creates or opens a memory-mapped file that has the specified capacity, access type, memory allocation, security permissions, and inheritability in system memory.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A bitwise combination of enumeration values that specifies memory allocation options for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>This parameter can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>The operating system denied the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">access</ph><ept id="p1">&lt;/code&gt;</ept> to the file; for example, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">access</ph><ept id="p2">&lt;/code&gt;</ept> is set to <ph id="ph3">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> or <ph id="ph4">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>, but the file or directory is read-only.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve">
          <source>Creates or opens a memory-mapped file that has the specified capacity in system memory.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name and size.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Creates or opens a memory-mapped file that has the specified capacity and access type in system memory.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to create or open a memory-mapped file that is not persisted (that is, not associated with a file on disk), which you can use to share data between processes.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>A name to assign to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>The maximum size, in bytes, to allocate to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is set to write-only with the <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is greater than the size of the logical address space.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;capacity&lt;/code&gt;</ph> is less than or equal to zero.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The operating system denied the specified access to the file; for example, access is set to <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>, but the file or directory is read-only.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;&lt;/xref&gt;</ph> that maps to a view of the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source>A randomly accessible block of memory.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;&lt;/xref&gt;</ph> that maps to a view of the memory-mapped file, and that has the specified offset and size.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>A randomly accessible block of memory.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Creates a <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedViewAccessor"&gt;&lt;/xref&gt;</ph> that maps to a view of the memory-mapped file, and that has the specified offset, size, and access restrictions.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the view returned by this method for random access to a memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>A randomly accessible block of memory.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>An I/O error occurred.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Creates a stream that maps to a view of the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>A stream of memory.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset and size.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>A stream of memory that has the specified offset and size.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>Access to the memory-mapped file is unauthorized.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the total virtual memory.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>Creates a stream that maps to a view of the memory-mapped file, and that has the specified offset, size, and access type.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the stream returned by this method for sequential access to a memory-mapped file, such as for inter-process communications.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a complete view of the memory-mapped file, specify 0 (zero) for the <ph id="ph1">`size`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, the size of the view might be smaller or larger than the size of the source file on disk.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is because views are provided in units of system pages, and the size of the view is rounded up to the next system page size.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>The byte at which to start the view.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>The size of the view.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Specify 0 (zero) to create a view that starts at <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">offset</ph><ept id="p1">&lt;/code&gt;</ept> and ends approximately at the end of the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the type of access allowed to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.ReadWrite"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source>A stream of memory that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;offset&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;size&lt;/code&gt;</ph> is a negative value.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the logical address space.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;size&lt;/code&gt;</ph> is greater than the total virtual memory.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;access&lt;/code&gt;</ph> is invalid for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Releases all resources used by the <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFile"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Gets the access control to the memory-mapped file resource.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>The memory-mapped file is closed.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>The current platform is Windows 98 or earlier.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>The memory-mapped file was opened as <ph id="ph1">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileAccess.Write"&gt;&lt;/xref&gt;</ph> only.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Opens an existing memory-mapped file that has the specified name in system memory.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT">
          <source>The memory-mapped file can be either a persisted memory-mapped file (associated with a file on disk) or non persisted.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>The name of the memory-mapped file to open.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified name.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>The file specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mapName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Opens an existing memory-mapped file that has the specified name and access rights in system memory.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>The name of the memory-mapped file to open.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileRights"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>The file specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mapName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>Opens an existing memory-mapped file that has the specified name, access rights, and inheritability in system memory.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The name of the memory-mapped file to open.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies the access rights to apply to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>One of the enumeration values that specifies whether a handle to the memory-mapped file can be inherited by a child process.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.IO.HandleInheritability.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>A memory-mapped file that has the specified characteristics.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is an empty string.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;mapName&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;desiredAccessRights&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.MemoryMappedFiles.MemoryMappedFileRights"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;inheritability&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.IO.HandleInheritability"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve">
          <source>The requested access is invalid for the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The file specified for <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">mapName</ph><ept id="p1">&lt;/code&gt;</ept> does not exist.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>Gets the file handle of a memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The handle to the memory-mapped file.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>Sets the access control to the memory-mapped file resource.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The permissions that can be granted for file access and operations on memory-mapped files.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;memoryMappedFileSecurity&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>An underlying call to set security information failed.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>