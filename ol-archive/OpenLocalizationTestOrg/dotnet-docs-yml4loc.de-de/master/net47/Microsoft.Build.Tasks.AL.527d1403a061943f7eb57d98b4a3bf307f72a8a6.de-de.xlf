<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">591ae648533099958c1a4e505a3f5e023bbd4868</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.Build.Tasks.AL.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b820e46e9d2669291b49d1b7507289a1eb6a85be</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c23368764a12d5b90c3b13d77fb00ded737c73d</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Implements the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">AL</ph><ept id="p1">&lt;/code&gt;</ept> task.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Use the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">AL</ph><ept id="p1">&lt;/code&gt;</ept> element in your project file to create and execute this task.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>For usage and parameter information, see <bpt id="p1">[</bpt>AL (Assembly Linker) Task<ept id="p1">](http://msdn.microsoft.com/library/2ddefbf2-5662-4d55-99a6-ac383bf44560)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="Microsoft.Build.Tasks.AL"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Fills the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">commandLine</ph><ept id="p1">&lt;/code&gt;</ept> parameter with switches and other information that can go into a response file.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Command line builder to add arguments to.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Gets or sets an algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/algid`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The algorithm to hash all files in a multifile assembly except the file that contains the assembly manifest.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets or sets the address at which a DLL will be loaded on the user’s computer at run time.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applications load faster if you specify the base address of the DLLs, rather than letting the operating system relocate the DLLs in the process space.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the /base[address] option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The address at which a DLL will be loaded on the user’s computer at run time.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Company</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/comp[any]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Company</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Configuration</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/config[uration]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Configuration</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Copyright</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/copy[right]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Copyright</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Gets or sets the culture string to associate with the assembly.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/c[ulture]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The culture string to associate with the assembly.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that indicates whether to place only the public key in the assembly (<ph id="ph1">`true`</ph>) or to fully sign the assembly (<ph id="ph2">`false`</ph>).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/delay[sign]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if only the public key is placed in the assembly; <ph id="ph2">`false`</ph> if the assembly is fully signed.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Description</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/descr[iption]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Description</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Gets or sets the resources to embed in the image that contains the assembly manifest.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>This task copies the contents of the resource file into the image.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The items set in this property may have optional metadata attached to them called <ph id="ph1">`LogicalName`</ph> and <ph id="ph2">`Access`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`LogicalName`</ph> metadata is used to specify the internal identifier for the resource.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Access`</ph> metadata can be set to <ph id="ph2">`private`</ph> in order to make the resource not visible to other assemblies.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/embed[resource]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The resources to embed in the image that contains the assembly manifest.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets the file to embed in the assembly with the resource name of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Security.Evidence</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use <ph id="ph1">`Security.Evidence`</ph> for regular resources.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/e[vidence]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The file to embed in the assembly with the resource name of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Security.Evidence</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>Executes the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">AL</ph><ept id="p1">&lt;/code&gt;</ept> task.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if task execution succeeded; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">File Version</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/fileversion`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">File Version</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Flags</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/flags`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Flags</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Gets or sets a Boolean value that indicates whether to cause the task to use the absolute path for any files that are reported in an error message.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/fullpaths`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the task will use the absolute path for any files that are reported in an error message; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Returns the full file path to the AL tool.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The full file path to the AL tool.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Gets or sets a container that holds a key pair.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will sign the assembly (give it a strong name) by inserting a public key into the assembly manifest.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The task will then sign the final assembly with the private key.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/keyn[ame]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The container that holds a key pair.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets or sets a file that contains a key pair or just a public key to sign an assembly.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The compiler inserts the public key in the assembly manifest and then signs the final assembly with the private key.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/keyf[ile]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The file that contains a key pair or just a public key to sign an assembly.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets or sets the resource files to link to an assembly.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resource becomes part of the assembly, but the file is not copied.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The items passed in to this parameter may have optional metadata attached to them called <ph id="ph1">`LogicalName`</ph>, <ph id="ph2">`Target`</ph>, and <ph id="ph3">`Access`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`LogicalName`</ph> metadata is used to specify the internal identifier for the resource.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Target`</ph> metadata can specify the path and filename to which the task copies the file, after which it compiles this new file into the assembly.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Access`</ph> metadata can be set to <ph id="ph2">`private`</ph> in order to make the resource not visible to other assemblies.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/link[resource]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The resource files to link to an assembly.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Gets or sets the fully qualified name (<bpt id="p1">*</bpt>class.method<ept id="p1">*</ept>) of the method to use as an entry point when converting a module to an executable file.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/main`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The fully qualified name (<bpt id="p1">*</bpt>class.method<ept id="p1">*</ept>) of the method to use as an entry point when converting a module to an executable file.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the file generated by this task.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/out`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The name of the file generated by this task.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Gets or sets a string that limits which platform this code can run on; must be one of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x86</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Itanium</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">x64</ph><ept id="p3">&lt;/code&gt;</ept>, or <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">anycpu</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`anycpu`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/platform`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>A string that limits which platform this code can run on; must be one of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">x86</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">Itanium</ph><ept id="p2">&lt;/code&gt;</ept>, <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">x64</ph><ept id="p3">&lt;/code&gt;</ept>, or <bpt id="p4">&lt;code&gt;</bpt><ph id="ph4">anycpu</ph><ept id="p4">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets or sets a flag indicating whether the task runs on a 32 bit platform.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns the value of the flag.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Product</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/prod[uct]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Product</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ProductVersion</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/productv[ersion]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">ProductVersion</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>Gets or sets the names of the response files that contain commands for the AL tool.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The names of the response files that contain commands for the AL tool.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets the path to the SDK tools.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>Returns the path to the SDK tools.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets or sets the modules to be compiled into an assembly.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The modules will be listed in the manifest of the resulting assembly, and will still need to distributed and available in order for the assembly to load.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>The items passed into this parameter may have additional metadata called <ph id="ph1">`Target`</ph>, which specifies the path and filename to which the task copies the file, after which it compiles this new file into the assembly.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the list of modules passed into Al.exe without a specific switch.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The modules to be compiled into an assembly.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>Gets or sets the file format of the output file: <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">library</ph><ept id="p1">&lt;/code&gt;</ept> (code library), <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">exe</ph><ept id="p2">&lt;/code&gt;</ept> (console application), or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">win</ph><ept id="p3">&lt;/code&gt;</ept> (Windows-based application).</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default is <ph id="ph1">`library`</ph>.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/t[arget]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The file format of the output file: <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">library</ph><ept id="p1">&lt;/code&gt;</ept> (code library), <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">exe</ph><ept id="p2">&lt;/code&gt;</ept> (console application), or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">win</ph><ept id="p3">&lt;/code&gt;</ept> (Windows-based application).</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>Gets or sets the assembly from which to inherit all assembly metadata, except the culture field.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>The specified assembly must have a strong name.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>An assembly that you create with the <ph id="ph1">`TemplateFile`</ph> parameter will be a satellite assembly.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/template`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The assembly from which to inherit all assembly metadata, except the culture field.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Title</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/title`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Title</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>Gets the name of the tool (Al.exe).</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the tool.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>Gets or sets the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Trademark</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/trade[mark]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">Trademark</ph><ept id="p1">&lt;/code&gt;</ept> field in the assembly.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets the version information for this assembly.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>The format of the string is <bpt id="p1">*</bpt>major.minor.build.revision<ept id="p1">*</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 0.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/v[ersion]`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The version information for this assembly.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>Gets or sets the .ico file to insert in the assembly.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .ico file gives the output file the desired appearance in Windows Explorer.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property corresponds to the <ph id="ph1">`/win32icon`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The .ico file to insert in the assembly.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets a Win32 resource (.res file) to insert in the output file.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the documentation for the <ph id="ph1">`/win32res`</ph> option in <bpt id="p1">[</bpt>Al.exe (Assembly Linker)<ept id="p1">](~/docs/framework/tools/al-exe-assembly-linker.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The Win32 resource (.res file) to insert in the output file.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>