<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c27ea21394e2a53dbbde20752e1d012bfb52e86</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.Design.ITypeResolutionService.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ff2649a6d65320893850d77323edea53967bbe7</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c31a30bcf02de637e5c107b8b2eee7ead263c23</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an interface to retrieve an assembly or type by name.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This service is used to load types at design time.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Gets the requested assembly.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The name of the assembly to retrieve.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>An instance of the requested assembly, or <ph id="ph1">`null`</ph> if no assembly can be located.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Gets the requested assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The name of the assembly to retrieve.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">`false`</ph>, and this method returns <ph id="ph3">`null`</ph> if the assembly cannot be located.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An instance of the requested assembly, or <ph id="ph1">`null`</ph> if no assembly can be located.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Gets the path to the file from which the assembly was loaded.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The name of the assembly.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The path to the file from which the assembly was loaded.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Loads a type with the specified name.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that corresponds to the specified name, or <ph id="ph2">`null`</ph> if no type can be found.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Loads a type with the specified name.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type cannot be loaded and the <ph id="ph1">`throwOnError`</ph> parameter is <ph id="ph2">`true`</ph>, this will throw an exception.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">`false`</ph>, and this method returns <ph id="ph3">`null`</ph> if the assembly cannot be located.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that corresponds to the specified name, or <ph id="ph2">`null`</ph> if no type can be found.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Loads a type with the specified name.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the type cannot be loaded and the <ph id="ph1">`throwOnError`</ph> parameter is <ph id="ph2">`true`</ph>, this will throw an exception.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The name of the type.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the type name is not a fully qualified name that indicates an assembly, this service will search its internal set of referenced assemblies.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this method should throw an exception if the assembly cannot be located; otherwise, <ph id="ph2">`false`</ph>, and this method returns <ph id="ph3">`null`</ph> if the assembly cannot be located.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to ignore case when searching for types; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An instance of <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> that corresponds to the specified name, or <ph id="ph2">`null`</ph> if no type can be found.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Adds a reference to the specified assembly.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a reference to an assembly has been added to this service, this service can load types from names that do not specify an assembly.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Reflection.AssemblyName"&gt;&lt;/xref&gt;</ph> that indicates the assembly to reference.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>