<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9eb05ac15053a94f5ab51be453bd4173b08531e1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Markup.Primitives.MarkupProperty.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fa9559bb6aab6aedd84e7cc143b78950bb7db34e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">394ee36514d0bb39af2ba9dae0c18e425c095f65</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A property is either represented as a string or a list of items.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property can be represented as a string, <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the property is a list of items.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the attributes associated with this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>The collection of attributes.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;xref href="System.Windows.DependencyProperty"&gt;&lt;/xref&gt;</ph> identifier for the markup property if the property is implemented as a dependency property</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The dependency property identifier.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> is an attached <ph id="ph2">&lt;xref href="System.Windows.DependencyProperty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> is not <ph id="ph4">`null`</ph> and <ph id="ph5">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> can be <ph id="ph6">`null`</ph>, but is not required to be.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the property is an attached <ph id="ph2">&lt;xref href="System.Windows.DependencyProperty"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> is a composite property.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the property can be represented as a string and <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A&gt;</ph> are valid to use.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the property is one or more items and <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A&gt;</ph> is valid to use.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> is this property is a composite property; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> represents a constructor argument.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are both <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML only uses <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A&gt;</ph> for representing the constructor arguments of instances of <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>Markup Extensions and WPF XAML<ept id="p1">](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this property represents a constructor argument; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> represents direct content of a collection.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are both <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dictionaries are included when determining whether this <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</ph> represents direct content.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the property represents direct content; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> represents the key used by the <ph id="ph2">&lt;xref href="System.Windows.Markup.Primitives.MarkupObject"&gt;&lt;/xref&gt;</ph> to store the item in a dictionary.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>XAML will use the identified property as an <ph id="ph1">`x:Key`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this property represents a key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, determines whether this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior is to return <ph id="ph1">`false.`</ph></source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A&gt;</ph> is <ph id="ph2">`true`</ph>, <ph id="ph3">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> are both <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is provided through <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A&gt;</ph> is <ph id="ph3">`true`</ph>, it will be the only property the type will provide.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph>, if this <ph id="ph2">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> represents a string; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the items that make up the value of this property.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is not an enumeration, only one item will be returned.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the property is an enumeration, or enumerable, all the items will be returned.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>At least one item is always returned, because <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupObject&gt;</ph> will not create a <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty&gt;</ph> for properties with no items.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The items that make up the value of this property.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>A serializer should not use this value.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>It should use the <ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A&gt;</ph> and/or <ph id="ph2">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The identifier property name.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the <ph id="ph1">&lt;xref href="System.ComponentModel.PropertyDescriptor"&gt;&lt;/xref&gt;</ph> for the markup property.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default behavior returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The property descriptor.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the CLR type of the property.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The CLR type.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the string value of this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The string value.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the set of types that this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph> will reference when it serializes its value as a string.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A&gt;</ph> enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The set of types.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the current value of this <ph id="ph1">&lt;xref href="System.Windows.Markup.Primitives.MarkupProperty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The current value.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>