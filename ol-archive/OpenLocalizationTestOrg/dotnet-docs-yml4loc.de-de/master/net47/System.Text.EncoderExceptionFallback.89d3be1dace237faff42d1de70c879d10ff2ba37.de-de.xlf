<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">52449e756e9e57076ec3a3f274007a863c121e0b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Text.EncoderExceptionFallback.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7a19f40ac8166775c35f2ad5ceb7fe34ca240242</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb20a351fedf40866737886596864bb354ba3b0c</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a failure-handling mechanism, called a fallback, for an input character that cannot be converted to an output byte sequence.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The fallback throws an exception if an input character cannot be converted to an output byte sequence.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>An encoding maps a Unicode character to an encoded sequence of bytes, which can subsequently be transferred to a physical medium, such as a disk, or over a communications link.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Characters can be mapped in various ways, and a particular encoding is represented by a type derived from the <ph id="ph1">&lt;xref:System.Text.Encoding&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Specifically, the encoding type's <ph id="ph1">`GetBytes`</ph> method encodes a character to a byte sequence, and the <ph id="ph2">`GetChars`</ph> method decodes a byte sequence to a character.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An encoding operation can fail if the input character cannot be represented by the encoding.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Text.ASCIIEncoding&gt;</ph> object cannot encode a character that yields a Unicode code point value that is outside the range U+0000 to U+007F.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In cases where an encoding or decoding conversion cannot be performed, the .NET Framework provides a failure-handling mechanism called a fallback.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your application can use the predefined .NET Framework encoder fallback, or it can create a custom encoder fallback derived from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework provides two predefined classes that implement different fallback strategies for handling encoding conversion failures.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph> class substitutes a string provided for any input character that cannot be converted.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The substitute string is encoded in place of the invalid character, and then the encoding operation continues converting the remainder of the input.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In contrast, the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> class throws a <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> when an invalid character is encountered.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallback"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Returns an encoder fallback buffer that throws an exception if it cannot convert a character sequence to a byte sequence.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>An encoder fallback buffer is responsible for receiving and handling characters that an encoder cannot convert to a byte sequence.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns an instance of the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> class, which is a subclass of  the <ph id="ph2">&lt;xref:System.Text.EncoderFallbackBuffer&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallbackBuffer&gt;</ph> object throws an <ph id="ph2">&lt;xref:System.Text.EncoderFallbackException&gt;</ph> exception whenever characters are passed to its <ph id="ph3">&lt;xref:System.Text.EncoderExceptionFallbackBuffer.Fallback%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An encoder fallback buffer that throws an exception when it cannot encode a character sequence.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Indicates whether the current <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallback"&gt;&lt;/xref&gt;</ph> object and a specified object are equal.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>An object that derives from the <ph id="ph1">&lt;xref href="System.Text.EncoderExceptionFallback"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">value</ph><ept id="p1">&lt;/code&gt;</ept> is not <ph id="ph3">`null`</ph> (<ph id="ph4">`Nothing`</ph> in Visual Basic .NET) and is a <ph id="ph5">&lt;xref href="System.Text.EncoderExceptionFallback"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Retrieves the hash code for this instance.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Text.EncoderExceptionFallback.GetHashCode%2A&gt;</ph> method always returns the same value, the application should not use this value to distinguish one instance of the <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph> class from another.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The return value is always the same arbitrary value, and has no special significance.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the maximum number of characters this instance can return.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The return value is always zero.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>