<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">65df3b0eb2a58f662b4fdaa2c78480efccd2e8c3</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.ComUnregisterFunctionAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86cfb57f062056d20c342dc8b95e1b76d1dc6fa3</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">69fee0de8797ab526447e5395f72ad4820ae0476</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies the method to call when you unregister an assembly for use from COM; this allows for the execution of user-written code during the unregistration process.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can apply this attribute to methods.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComUnregisterFunctionAttribute&gt;</ph> enables you to add code that reverses the operations performed by a registration method.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComRegisterFunctionAttribute&gt;</ph> to provide a registration method, you must also provide an unregistration method to reverse the operations done in the registration method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can have only one unregistration method for a class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The common language runtime calls the method with this attribute when its containing assembly is unregistered (directly or indirectly) with the <bpt id="p1">[</bpt>Regasm.exe (Assembly Registration Tool)<ept id="p1">](~/docs/framework/tools/regasm-exe-assembly-registration-tool.md)</ept> or through the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly%2A?displayProperty=fullName&gt;</ph> API method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Methods with this attribute can have any visibility (public, private, and so on), but must be <ph id="ph1">`static`</ph> and must take a single <ph id="ph2">&lt;xref:System.Type&gt;</ph> parameter for the <ph id="ph3">&lt;xref:System.Type&gt;</ph> to unregister.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.ComUnregisterFunctionAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>