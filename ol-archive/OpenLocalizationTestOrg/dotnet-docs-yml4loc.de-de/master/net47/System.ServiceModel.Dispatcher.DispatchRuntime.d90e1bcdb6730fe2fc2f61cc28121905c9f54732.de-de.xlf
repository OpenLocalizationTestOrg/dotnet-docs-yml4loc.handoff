<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1a203a43d9183b5239e06f2d789c8e072c39d75</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Dispatcher.DispatchRuntime.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4a0162e40b0ea517108f96a8a2046a31d259d44</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">32b8b1bbb2a246cb85d9c18fde518b9a06967809</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Exposes properties that can be used to modify default service behavior as well as attach custom objects that can modify how incoming messages are transformed into objects and dispatched to operations.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> class either to modify the default behavior of a service or individual endpoint, or to insert objects that implement custom modifications to one or both of the following service processes:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transformation of incoming messages into objects and releasing those objects as method invocations on a service object.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The transformation of objects received from the response to a service operation invocation into outbound messages.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>, the channel and endpoint dispatchers are the service components responsible for accepting new channels, receiving messages, method dispatch and invocation, and response processing.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each endpoint exposed by a <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object has one endpoint dispatcher and an associated channel dispatcher; in addition, each client that participates in duplex communication also has an endpoint dispatcher and channel dispatcher for each callback endpoint.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> enables you to intercept and extend the channel or endpoint dispatcher for all messages across a particular contract, even when a message is not recognized.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a message arrives that does not match any messages declared in the contract it is dispatched to the operation that was returned by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>To intercept or extend across all messages for a particular operation, see the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are four main areas of dispatcher extensibility exposed by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> class:</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Dispatch components use the properties of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> and those of the associated channel dispatcher returned by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher%2A&gt;</ph> property to customize how the channel dispatcher accepts and closes channels.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>This category includes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message components are customized for each message processed.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This category includes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph>, and the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instance components customize the creation, lifetime, and disposal of instances of the service type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about service object lifetimes, see the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This category includes the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>Security-related components can use the following properties:</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> indicates where audit events are written.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A&gt;</ph> controls whether the service attempts to impersonate using the credentials provided by the incoming message.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A&gt;</ph> controls whether successful message authentication events are written to the event log specified by <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A&gt;</ph> controls how the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> specifies how the auditing of authorization events is performed.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A&gt;</ph> specifies whether to suppress non-critical exceptions that occur during the logging process.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically custom extension objects are assigned to a <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime&gt;</ph> property or inserted into a collection by a service behavior (an object that implements <ph id="ph2">&lt;xref:System.ServiceModel.Description.IServiceBehavior&gt;</ph>), a contract behavior (an object that implements <ph id="ph3">&lt;xref:System.ServiceModel.Description.IContractBehavior&gt;</ph>), or an endpoint behavior (an object that implements <ph id="ph4">&lt;xref:System.ServiceModel.Description.IEndpointBehavior&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then the installing behavior object is added to the appropriate collection of behaviors either programmatically or by implementing a custom <ph id="ph1">&lt;xref:System.ServiceModel.Configuration.BehaviorExtensionElement&gt;</ph> object to enable the behavior to be inserted using an application configuration file.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the service closes an input session when the client closes an output session.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, the channel must be closed by some other mechanism.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you must add a custom session shutdown handler to the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default when a client closes an output session and the service has finished processing any remaining messages the server closes the session.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown%2A&gt;</ph> to <ph id="ph2">`false`</ph> prevents the server from automatically closing the session and enables custom control of session lifetimes.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service closes an input session when the client closes an output session; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph> object that represents the installation point for extensions to <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> for outbound calls to a duplex callback endpoint.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime%2A&gt;</ph> to add custom extension objects that view or modify the conversion of parameters to outbound messages and response messages back into return values.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ClientRuntime&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ClientRuntime"&gt;&lt;/xref&gt;</ph> object that is the installation point for run-time client customization in duplex contracts.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.ChannelDispatcher"&gt;&lt;/xref&gt;</ph> for this dispatch run-time object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The channel dispatcher for the dispatch run-time object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets or sets whether an instance of a service processes messages sequentially or concurrently.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>The service implementation must be thread-safe to use the <ph id="ph1">`Multiple`</ph> concurrency mode.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.ConcurrencyMode"&gt;&lt;/xref&gt;</ph> object that controls whether an instance of a service processes messages sequentially or concurrently.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.EndpointDispatcher"&gt;&lt;/xref&gt;</ph> for this dispatch runtime.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher%2A&gt;</ph> property to obtain the endpoint dispatcher associated with this dispatch runtime to modify or customize endpoint-specific execution.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.EndpointDispatcher"&gt;&lt;/xref&gt;</ph> for this dispatch runtime.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether messages are to be dispatched in the order they were sent.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if messages are to be dispatched in the order they were sent; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets the external authorization policies that define a set of rules for authorizing a user, given a set of claims.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to add a custom implementation of <ph id="ph1">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> that defines a set of rules for authorizing a user, given a set of claims.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>This custom implementation is used every time the service is called.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.IdentityModel.Policy.IAuthorizationPolicy"&gt;&lt;/xref&gt;</ph> objects that define a set of rules for authorizing a user, given a set of claims.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Gets or sets whether to ignore the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.TransactionMessageProperty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionMessageProperty&gt;</ph> allows third-party channel developers who use a proprietary transaction flow mechanism for their channel to introduce their transaction into <ph id="ph2">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is set to <ph id="ph1">`true`</ph>, the transaction is ignored when executing the service method.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph>, the <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.TransactionMessageProperty"&gt;&lt;/xref&gt;</ph> is ignored when executing the service method; otherwise <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that controls whether the service attempts to impersonate using the credentials provided by the incoming message.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations%2A&gt;</ph> property to control whether impersonation is performed when an operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> property value is <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.Allowed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception is thrown if the property is <ph id="ph1">`true`</ph> but an operation's <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> property value is <ph id="ph3">&lt;xref:System.ServiceModel.ImpersonationOption.NotAllowed&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an operation's <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation%2A&gt;</ph> property value is <ph id="ph2">&lt;xref:System.ServiceModel.ImpersonationOption.Required&gt;</ph> impersonation is always attempted.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service attempts to impersonate based on message credentials when an operation's <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchOperation.Impersonation"&gt;&lt;/xref&gt;</ph> property value is either <ph id="ph3">&lt;xref href="System.ServiceModel.ImpersonationOption.Required"&gt;&lt;/xref&gt;</ph> or <ph id="ph4">&lt;xref href="System.ServiceModel.ImpersonationOption.Allowed"&gt;&lt;/xref&gt;</ph>; <ph id="ph5">`false`</ph> if the service attempts impersonation only if an operation's <ph id="ph6">&lt;xref href="System.ServiceModel.Dispatcher.DispatchOperation.Impersonation"&gt;&lt;/xref&gt;</ph> property value is <ph id="ph7">&lt;xref href="System.ServiceModel.ImpersonationOption.Required"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether impersonation is used on serializing reply operation.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if impersonation is used on serializing reply operation; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInputSessionShutdown"&gt;&lt;/xref&gt;</ph> objects that can be used to add a custom handler to control how input sessions are closed.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Add an <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> object to this property to control the manner in which input sessions are closed.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a call to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IInputChannel.Receive%2A?displayProperty=fullName&gt;</ph> method on the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=fullName&gt;</ph> first returns <ph id="ph3">`null`</ph>, (which indicates that the input session has been closed), the dispatcher invokes each <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> object, passing it an <ph id="ph5">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel?displayProperty=fullName&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Custom <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInputSessionShutdown&gt;</ph> objects can use this <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IDuplexSessionChannel&gt;</ph> object to perform clean-up for each channel state or to send a response message before closing the channel.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedCollection`1"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.IInputSessionShutdown"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceContextInitializer"&gt;&lt;/xref&gt;</ph> objects that can be used to inspect or modify an <ph id="ph2">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> object when it is first created.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers%2A&gt;</ph> property to add a custom initializer that can inspect or modify an <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object when it is first created.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The frequency with which <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects are created is controlled by the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedCollection`1"&gt;&lt;/xref&gt;</ph> object of type <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceContextInitializer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceContextProvider"&gt;&lt;/xref&gt;</ph> to be used by the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceContextProvider"&gt;&lt;/xref&gt;</ph> to be used by the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Gets or sets an <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceProvider"&gt;&lt;/xref&gt;</ph> object that you can use to control the creation and destruction of service objects.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider&gt;</ph> interface and assign the implementation to the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider%2A&gt;</ph> property to control instances of the service type using a constructor other than the default constructor, for example, to implement a custom instancing mode such as instance pooling.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> method is invoked once, when the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is first created.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method is also invoked once, when the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is closed.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>A service can also be configured to release an instance before the <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object is closed.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be configured by using the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A&gt;</ph> property or by calling the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this is done, the <ph id="ph1">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a new message arrives after the instance has been released, a new instance is created using the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceProvider"&gt;&lt;/xref&gt;</ph> object that controls the creation and destruction of service objects associated with an <ph id="ph2">&lt;xref href="System.ServiceModel.InstanceContext"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether successful message authentication events are written to the event log specified by <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel%2A&gt;</ph> property to specify whether successful message authentication events are written to the event log.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.AuditLevel"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.AuditLevel.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IDispatchMessageInspector"&gt;&lt;/xref&gt;</ph> objects that can be used to attach a custom message inspector for all incoming and outgoing messages across the endpoint.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors%2A&gt;</ph> property to attach custom <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> objects that can inspect or transform all messages that flow through the endpoint.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.IDispatchMessageInspector&gt;</ph> object gets a reference to the message, you can buffer it and examine a copy of the body.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedCollection`1"&gt;&lt;/xref&gt;</ph> object of type <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.IDispatchMessageInspector"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.DispatchOperation"&gt;&lt;/xref&gt;</ph> objects that can be used to control the execution behavior of a particular operation.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.Operations%2A&gt;</ph> property to inspect or modify parameters, control parameter and return value serialization and deserialization, control operation invocation, and modify other behaviors for a single operation.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Collections.Generic.SynchronizedKeyedCollection`2"&gt;&lt;/xref&gt;</ph> of type <ph id="ph2">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.ServiceModel.Dispatcher.DispatchOperation"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets the <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IDispatchOperationSelector"&gt;&lt;/xref&gt;</ph> object that controls the selection of a destination <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchOperation"&gt;&lt;/xref&gt;</ph> for a particular message.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector%2A&gt;</ph> property to decide which operation receives a given message.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default operation selector returns the value of the action header for the message, which is used as the key to locate the correct <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchOperation&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If no matching operation is found, the invocation is dispatched to the return value from the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IDispatchOperationSelector"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets or sets whether the message is preserved.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if message is preserved; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies how the <ph id="ph1">&lt;xref href="System.Threading.Thread.CurrentPrincipal"&gt;&lt;/xref&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.None&gt;</ph>, the <ph id="ph3">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is not set.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value is <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups&gt;</ph> the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is populated with a <ph id="ph3">&lt;xref:System.Security.Principal.WindowsPrincipal&gt;</ph> based on the user credentials of the incoming message.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value is <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles&gt;</ph> the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is populated with an <ph id="ph3">&lt;xref:System.Security.Principal.IPrincipal&gt;</ph> object based on <ph id="ph4">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> role information.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value is <ph id="ph1">&lt;xref:System.ServiceModel.Description.PrincipalPermissionMode.Custom&gt;</ph> the <ph id="ph2">&lt;xref:System.Threading.Thread.CurrentPrincipal%2A&gt;</ph> property is populated by a custom <ph id="ph3">&lt;xref:System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.Description.PrincipalPermissionMode"&gt;&lt;/xref&gt;</ph> values; the default is <ph id="ph2">&lt;xref href="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the service object is recycled after the transaction successfully completes.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete%2A&gt;</ph> to specify that the <ph id="ph2">&lt;xref:System.ServiceModel.InstanceContext.ReleaseServiceInstance%2A&gt;</ph> method is called when the transaction successfully completes.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the service object is recycled after the transaction successfully completes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default value is the value of <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets the custom <ph id="ph1">&lt;xref href="System.Web.Security.RoleProvider"&gt;&lt;/xref&gt;</ph> that is used by the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The custom <ph id="ph1">&lt;xref href="System.Web.Security.RoleProvider"&gt;&lt;/xref&gt;</ph> that is used by the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>Gets or sets the location of the audit log.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.AuditLogLocation"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve">
          <source>Gets or sets the object that manages an authentication process for service operations.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Authentication determines the identity of the entity that signed a message.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>An authentication management object.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that controls what service authorization events are audited.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default case, no service authorization events are audited.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> value is <ph id="ph2">&lt;xref:System.ServiceModel.AuditLevel.Success&gt;</ph>, only successful service authorization events are written to the audit log specified by the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property has a value of <ph id="ph1">&lt;xref:System.ServiceModel.AuditLevel.Failure&gt;</ph>, only unsuccessful service authorization events are written to the audit log specified by the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel%2A&gt;</ph> value is <ph id="ph2">&lt;xref:System.ServiceModel.AuditLevel.SuccessOrFailure&gt;</ph>, both successful and failed service authorization events are written to the audit log.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ServiceModel.AuditLevel"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.ServiceModel.AuditLevel.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceAuthorizationManager"&gt;&lt;/xref&gt;</ph> that provides authorization checking for the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceAuthorizationManager"&gt;&lt;/xref&gt;</ph> that provides authorization checking for the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>Gets or sets the singleton <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceContextProvider"&gt;&lt;/xref&gt;</ph> to be used by the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The singleton <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.IInstanceContextProvider"&gt;&lt;/xref&gt;</ph> to be used by the <ph id="ph2">&lt;xref href="System.ServiceModel.Dispatcher.DispatchRuntime"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether to suppress non-critical exceptions that occur during the logging process.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure%2A&gt;</ph> to <ph id="ph2">`false`</ph> if you want exceptions that occur during the course of writing the audit log to be re-thrown to the application.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the default case, only the <ph id="ph1">&lt;xref:System.OutOfMemoryException&gt;</ph>, <ph id="ph2">&lt;xref:System.StackOverflowException&gt;</ph>, <ph id="ph3">&lt;xref:System.Threading.ThreadAbortException&gt;</ph>, and <ph id="ph4">&lt;xref:System.ArgumentException&gt;</ph> exceptions that result from attempts to write audit events are re-thrown to the application; all other exceptions are suppressed.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if non-critical exceptions that occur during the logging process are suppressed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>Gets or sets the synchronization context that is used to invoke the service operations.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The return value can be <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this value is not <ph id="ph1">`null`</ph>, then this synchronization context is used to invoke the service operations on the correct thread.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Threading.SynchronizationContext"&gt;&lt;/xref&gt;</ph> object used to determine on which thread the service operation is invoked.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether to automatically complete the current transaction when the session closes.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> is <ph id="ph2">`true`</ph> and there is an active transaction, the transaction is completed when the session closes.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose%2A&gt;</ph> is <ph id="ph2">`false`</ph>, active transactions are not completed and are eventually aborted.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if transactions automatically complete when the session closes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>The default is the value specified by <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceBehaviorAttribute.TransactionAutoCompleteOnSessionClose"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets or sets the contract type.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source>The type of the contract.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Gets or sets the operation to which unrecognized messages are dispatched.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The operation return by the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation%2A&gt;</ph> is the operation indicated by the use of the "*" (asterisk) in the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.ServiceModel.Dispatcher.DispatchOperation"&gt;&lt;/xref&gt;</ph> to which unrecognized messages are dispatched.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Determines whether unexpected message headers cause an error condition.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>The value of <ph id="ph1">&lt;xref href="System.ServiceModel.ServiceBehaviorAttribute.ValidateMustUnderstand"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>