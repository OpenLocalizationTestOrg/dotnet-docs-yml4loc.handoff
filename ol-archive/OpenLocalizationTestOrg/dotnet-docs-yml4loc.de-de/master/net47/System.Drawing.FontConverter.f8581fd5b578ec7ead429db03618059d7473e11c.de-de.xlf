<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f1c97dc33fc570ecffab44c82aeeb2c1c4c3ea9</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Drawing.FontConverter.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">936f990c825efb31750d10a200b6fd90e348153d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f6f9bb291f4ac50f178bd6fe56bc9ed239ff7a3f</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Converts <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> objects from one data type to another.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type converter is used to convert values between data types.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>A type converter also supports property configuration at design time by providing text-to-value conversion or a list of values that users can select from.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Access the <ph id="ph1">&lt;xref:System.Drawing.FontConverter&gt;</ph> class through the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class by calling the <ph id="ph3">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Initializes a new <ph id="ph1">&lt;xref href="System.Drawing.FontConverter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should access a <ph id="ph1">&lt;xref:System.Drawing.FontConverter&gt;</ph> object through the <ph id="ph2">&lt;xref:System.ComponentModel.TypeDescriptor.GetConverter%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Determines whether this converter can convert an object in the specified source type to the native type of the converter.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>A formatter context.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>This object can be used to get additional information about the environment this converter is being called from.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>This may be <ph id="ph1">`null`</ph>, so you should always check.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Also, properties on the context object may also return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The type you want to convert from.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if this object can perform the conversion.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this converter can convert an object to the given destination type using the context.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`context`</ph> parameter can be used to extract additional information about the environment this converter is being invoked from.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can be <ph id="ph1">`null`</ph>, so always check.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also, properties on the context object can return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`ITypeDescriptorContext`</ph> object that provides a format context.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> object that represents the type you want to convert to.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if this converter can perform the conversion; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Converts the specified object to the native type of the converter.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>A formatter context.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This object can be used to get additional information about the environment this converter is being called from.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This may be <ph id="ph1">`null`</ph>, so you should always check.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Also, properties on the context object may also return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">`CultureInfo`</ph> object that specifies the culture used to represent the font.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The converted object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The conversion could not be performed.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Converts the specified object to another type.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The most common type conversion is to and from a string type.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation calls the <ph id="ph1">&lt;xref:System.Object.ToString%2A&gt;</ph> method of the object if the object is valid and if the destination type is string.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A formatter context.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This object can be used to get additional information about the environment this converter is being called from.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>This may be <ph id="ph1">`null`</ph>, so you should always check.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Also, properties on the context object may also return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Globalization.CultureInfo"&gt;&lt;/xref&gt;</ph> object that specifies the culture used to represent the object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The object to convert.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The data type to convert the object to.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The converted object.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The conversion was not successful.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Creates an object of this type by using a specified set of property values for the object.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A type descriptor through which additional context can be provided.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A dictionary of new property values.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The dictionary contains a series of name-value pairs, one for each property returned from the <ph id="ph1">&lt;xref href="System.Drawing.FontConverter.GetProperties*"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The newly created object, or <ph id="ph1">`null`</ph> if the object could not be created.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The default implementation returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Drawing.FontConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)"&gt;&lt;/xref&gt;</ph> useful for creating non-changeable objects that have changeable properties.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Allows the <ph id="ph1">&lt;xref href="System.Drawing.FontConverter"&gt;&lt;/xref&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;xref href="System.Drawing.FontConverter"&gt;&lt;/xref&gt;</ph> is reclaimed by garbage collection.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Determines whether changing a value on this object should require a call to the <ph id="ph1">&lt;xref href="System.Drawing.FontConverter.CreateInstance*"&gt;&lt;/xref&gt;</ph> method to create a new value.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>A type descriptor through which additional context can be provided.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">`CreateInstance`</ph> object should be called when a change is made to one or more properties of this object; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Retrieves the set of properties for this type.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>By default, a type does not have any properties to return.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>A type descriptor through which additional context can be provided.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The value of the object to get the properties for.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Attribute"&gt;&lt;/xref&gt;</ph> objects that describe the properties.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The set of properties that should be exposed for this data type.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>If no properties should be exposed, this may return <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The default implementation always returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An easy implementation of this method can call the <ph id="ph1">&lt;xref href="System.ComponentModel.TypeConverter.GetProperties*"&gt;&lt;/xref&gt;</ph> method for the correct data type.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Determines whether this object supports properties.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>A type descriptor through which additional context can be provided.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>This method returns <ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Drawing.FontConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)"&gt;&lt;/xref&gt;</ph> method should be called to find the properties of this object; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>