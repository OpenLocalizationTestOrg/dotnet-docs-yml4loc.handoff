<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">593051b591d53eb9a6443c6cc99d8ce93a0334ea</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.CompilerServices.RuntimeCompatibilityAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">911670070cc42bd278dbc9fd14edcef092fe4fe9</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8255162504e74db5196375ee8e5d2d77c1f75523</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Specifies whether to wrap exceptions that do not derive from the <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> class with a <ph id="ph2">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some languages, such as C++, allow you to throw exceptions of any type.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other languages, such as Microsoft C# and Visual Basic, require that every thrown exception be derived from the <ph id="ph1">&lt;xref:System.Exception&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>To maintain compatibility between languages, the common language runtime (CLR) wraps objects that do not derive from <ph id="ph1">&lt;xref:System.Exception&gt;</ph> in a <ph id="ph2">&lt;xref:System.Runtime.CompilerServices.RuntimeWrappedException&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> class to specify whether exceptions should appear wrapped inside catch blocks and exception filters for an assembly.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Many language compilers, including the Microsoft C# and Visual Basic compilers, apply this attribute by default to specify the wrapping behavior.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that the runtime still wraps exceptions even if you use the <ph id="ph1">&lt;xref:System.Runtime.CompilerServices.RuntimeCompatibilityAttribute&gt;</ph> class to specify that you do not want them wrapped.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, exceptions are unwrapped only inside catch blocks or exception filters.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether to wrap exceptions that do not derive from the <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> class with a <ph id="ph2">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if exceptions that do not derive from the <ph id="ph2">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> class should appear wrapped with a <ph id="ph3">&lt;xref href="System.Runtime.CompilerServices.RuntimeWrappedException"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>