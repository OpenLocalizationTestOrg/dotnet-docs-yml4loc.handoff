<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6a0228c07569edbbbf143aa184e4b10c9d1aa96f</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Data.Services.Client.DataServiceQuery-1.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cdf08767a1f3d2a043c6319f0ca5298cc523c478</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">172f05cb0d5fa2818e13fc8b75d6142ea630a9d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a single query request to a data service.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>No public constructors are defined on this class.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Object instances are created by using <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> on the <ph id="ph3">&lt;xref:System.Data.Services.Client.DataServiceContext&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Type of results returned by the query.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Data.Services.Client.DataServiceQuery`1"&gt;&lt;/xref&gt;</ph> with the query option set in the URI generated by the returned query.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The query options are added to the resultant URI using <ph id="ph1">`?name=value&amp;name2=value2`</ph>â€¦</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>syntax where the name maps directly to the <ph id="ph1">`name`</ph> parameter and the <ph id="ph2">`value`</ph> is obtained by calling ToString on the <ph id="ph3">`value`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`name`</ph> starts with <ph id="ph2">`$`</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Non-<ph id="ph1">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> syntax does not start with <ph id="ph2">`$`</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Non-<ph id="ph1">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> query options can be added using this method.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is legal to add the same query option twice if the option is not an <ph id="ph1">[!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]</ph> query option.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a query option is added that is already present in the underlying URI, an exception is thrown.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The string value that contains the name of the query string option to add.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The object that contains the value of the query string option.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A new query that includes the requested query option appended to the URI of the supplied query</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Starts an asynchronous network operation that executes the query represented by this object instance.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The delegate to invoke when the operation completes.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>User defined object used to transfer state between the start of the operation and the callback defined by <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">callback</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> that represents the status of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Returns the type of the object used in the template to create the <ph id="ph1">&lt;xref href="System.Data.Services.Client.DataServiceQuery`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Gets the type represented by T in the generic methods: <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceContext.CreateQuery%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> representing the type used in the template when the query is created.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Ends an asynchronous query request to a data service.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The pending asynchronous query request.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Returns an <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerable`1"&gt;&lt;/xref&gt;</ph> that contains the results of the query operation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>When the data service returns an HTTP 404: Resource Not Found error.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the results as a collection that implements <ph id="ph1">`IEnumerable`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>When iterating over the returned collection, if an object is encountered in the input stream that cannot be deserialized to an instance of <ph id="ph1">`T`</ph> then a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph> is thrown.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.Generic.IEnumerable`1"&gt;&lt;/xref&gt;</ph> in which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">T</ph><ept id="p1">&lt;/code&gt;</ept> represents the type of the query results.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>When the data service returns an HTTP 404: Resource Not Found error.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Creates a new <ph id="ph1">&lt;xref href="System.Data.Services.Client.DataServiceQuery`1"&gt;&lt;/xref&gt;</ph> with the expand option set in the URI generated by the returned query.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A string value that contains the requesting URI.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A new query that includes the requested <ph id="ph1">`$expand`</ph> query option appended to the URI of the supplied query.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Represents an expression containing the query to the data service.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Linq.Expressions.Expression"&gt;&lt;/xref&gt;</ph> object representing the query.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the results as a collection.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> is executed against the service.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A typed enumerator over the results in which <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">TEntity</ph><ept id="p1">&lt;/code&gt;</ept> represents the type of the query results.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Requests that the count of all entities in the entity set be returned inline with the query results.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.IncludeTotalCount%2A&gt;</ph> method is equivalent to including the <ph id="ph2">`$inlinecount`</ph> query option in the query URI.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Data.Services.Client.DataServiceQuery`1"&gt;&lt;/xref&gt;</ph> object that has the inline count option set.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Represents the query provider instance.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Linq.IQueryProvider"&gt;&lt;/xref&gt;</ph> representing the data source provider.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Get the URI for the query.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The URI of the request.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Represents the URI of the query to the data service.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A URI as string that represents the query to the data service for this <ph id="ph1">&lt;xref href="System.Data.Services.Client.DataServiceQuery`1"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Executes the query and returns the results as a collection.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.System%23Collections%23IEnumerable%23GetEnumerator%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.Data.Services.Client.DataServiceQuery%601&gt;</ph> is executed against the service.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Data.Services.Client.DataServiceQuery%601.GetEnumerator%2A&gt;</ph> returns an enumerable the first time it is called.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>On successive calls it returns null.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>An enumerator over the query results.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>