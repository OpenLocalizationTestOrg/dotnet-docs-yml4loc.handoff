<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">245a86db222f47a6d34a0f0a5aa73d09cd6d2c37</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.Configuration.PagesSection.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b5aacdaf9b4cba57f0c59746bc4bdf38499581f2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d5635fe7ff293c40f46a2cb65db7867dc844a2f1</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides programmatic access to the  section of the configuration file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection&gt;</ph> class provides a way to programmatically access and modify the content of the configuration file  section.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This configuration section supports setting certain ASP.NET page and control directives globally for all pages and controls in the scope of the configuration file.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This includes the <ph id="ph1">`@ Page`</ph> directive, the <ph id="ph2">`@ Import`</ph> directive through the <ph id="ph3">&lt;xref:System.Web.Configuration.PagesSection.Namespaces%2A&gt;</ph> collection property, and the <ph id="ph4">`@ Register`</ph> directive through the <ph id="ph5">&lt;xref:System.Web.Configuration.PagesSection.Controls%2A&gt;</ph> collection property.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also provides support for mapping tag types to other tag types at run time through the <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.TagMapping%2A&gt;</ph> collection property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Directives specify settings used by the page and user-control compilers when they process ASP.NET Web Forms page (.aspx) and user control (.ascx) files.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.Configuration.PagesSection"&gt;&lt;/xref&gt;</ph> class using default settings.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.%23ctor%2A&gt;</ph> constructor is not intended to be used directly from your code.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by the ASP.NET configuration system.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You obtain an instance of the <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection&gt;</ph> class by using the <ph id="ph2">&lt;xref:System.Configuration.Configuration.GetSection%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating the number of seconds to wait for an asynchronous handler to complete during asynchronous page processing.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is 45 seconds.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.TimeSpan"&gt;&lt;/xref&gt;</ph> value indicating the amount of time in seconds to wait for an asynchronous handler to complete during asynchronous page processing.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether events for ASP.NET pages are automatically connected to event-handling functions.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> is <ph id="ph2">`true`</ph>, ASP.NET does not require that you explicitly bind event handlers to a page event such as <ph id="ph3">&lt;xref:System.Web.UI.Control.Load&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> is <ph id="ph2">`false`</ph>, you must explicitly bind the event to a method.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you have a <ph id="ph1">`Page_Load`</ph> method in the code for a page, the method will be called in response to the <ph id="ph2">&lt;xref:System.Web.UI.Control.Load&gt;</ph> event only if you write code like that in the following example (notice the <ph id="ph3">`Handles`</ph> statement in Visual Basic and the event handler code in C#):</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> is <ph id="ph2">`true`</ph>, handlers are automatically bound to events at run time based on their name and signature.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each event, ASP.NET searches for a method that is named according to the pattern <ph id="ph1">`Page_`</ph><bpt id="p1">*</bpt>eventname<ept id="p1">*</ept>, such as <ph id="ph2">`Page_Load`</ph> or <ph id="ph3">`Page_Init`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASP.NET checks first for an overload that has the typical event-handler signature (that is, it specifies <ph id="ph1">&lt;xref:System.Object&gt;</ph> and <ph id="ph2">&lt;xref:System.EventArgs&gt;</ph> parameters).</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an event handler with this signature is not found, ASP.NET checks for an overload that has no parameters.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> is <ph id="ph2">`false`</ph>, you must explicitly bind event handlers to events, as shown in the preceding example.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the method names do not have to follow a pattern.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`true`</ph> if <ph id="ph2">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> is not specified in the <ph id="ph3">`@ Page`</ph> directive.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Visual Studio automatically includes the attribute when it creates code-behind files.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For ASP.NET pages written in C#, Visual Studio sets the value to <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>For Visual Basic, Visual Studio sets the value to <ph id="ph1">`false`</ph> because handlers are bound to events by using the  keyword, which is inserted automatically by Visual Studio when it generates an event handler.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> to <ph id="ph2">`true`</ph>, you can omit (or remove) the  keyword.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> to <ph id="ph2">`true`</ph> if performance is a key consideration.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>When automatic event wireup is enabled, ASP.NET must make between 15 and 30 tries to match events with methods.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note the following about binding event handlers to events:</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.AutoEventWireup%2A&gt;</ph> to <ph id="ph2">`true`</ph>, make sure that you do not also manually attach page event handlers to events.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do, handlers might be called more than one time.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Automatic binding is performed only for page events, not for events for controls on the page.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an alternative to binding events to handlers, you can override the <ph id="ph1">`On`</ph><bpt id="p1">*</bpt>eventname<ept id="p1">*</ept> methods of the page or of controls.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if events for ASP.NET pages are automatically connected to event-handling functions; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether .aspx pages and .ascx controls use response buffering.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>When response buffering is turned on, the page or control output is buffered until after the entire page or control is processed.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.Buffer%2A&gt;</ph> to <ph id="ph2">`true`</ph> if performance is a key consideration.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if .aspx pages and .ascx controls use response buffering; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>Gets or sets the default algorithm that is used to generate a control's identifier.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.ClientIDMode%2A&gt;</ph> property to set the default value for a whole Web site.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override this value for an individual Web page or for individual controls.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A value that indicates how the value in the <ph id="ph1">&lt;xref href="System.Web.UI.Control.ClientID"&gt;&lt;/xref&gt;</ph> property is generated.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">&lt;xref href="System.Web.UI.ClientIDMode.Predictable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines how .aspx pages and .ascx controls are compiled.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">&lt;xref:System.Web.UI.CompilationMode.Always&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>One of the values for the <ph id="ph1">&lt;xref href="System.Web.Configuration.PagesSection.CompilationMode"&gt;&lt;/xref&gt;</ph> property, which specifies how .aspx pages and .ascx controls are compiled.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the ASP.NET version that any rendered HTML will be compatible with.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is set by the <ph id="ph1">`controlRenderingCompatibilityVersion`</ph> attribute of the <ph id="ph2">`pages`</ph> element in the Web.config file.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is the default value for the <ph id="ph1">&lt;xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how it is used, see the <ph id="ph1">&lt;xref:System.Web.UI.Control.RenderingCompatibility%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The ASP.NET version that any rendered HTML will be compatible with.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>An attempt was made to set this property to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.Web.Configuration.TagPrefixInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.TagPrefixInfo&gt;</ph> objects correspond to the <ph id="ph2">`@ Register`</ph> directive on an ASP.NET page.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`@ Register`</ph> directive allows you to specify the tag prefix for a user control.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.Configuration.TagPrefixCollection"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Web.Configuration.TagPrefixInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether event validation is enabled.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A&gt;</ph> attribute indicates whether event validation should be performed.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>A Web application can optionally disable event validation to revert to .NET Framework version 1.0 behavior.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base control checks this attribute to determine whether it should validate events.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>A derived control does not inherit this base control attribute, and so it is exempt from event validation by default.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>You still instruct ASP.NET to perform event validation on the derived control by adding the <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.EnableEventValidation%2A&gt;</ph> attribute to the derived control itself and setting it to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Event validation reduces the risk of unauthorized postback requests and callbacks.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>It instructs ASP.NET to validate only those events that can be raised in the control during a postback request or callback.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this model, a control registers its events during rendering and then validates the events during the post-back or callback handling.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>All event-driven controls in ASP.NET use this feature by default.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if event validation is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether the session state is enabled, disabled, or read-only.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>One of the values for the <ph id="ph1">&lt;xref href="System.Web.Configuration.PagesSection.EnableSessionState"&gt;&lt;/xref&gt;</ph> property, which specifies whether the session state is enabled, disabled, or read-only.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Web.Configuration.PagesEnableSessionState.True"&gt;&lt;/xref&gt;</ph>, which indicates that session state is enabled.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The value is not a valid <ph id="ph1">&lt;xref href="System.Web.Configuration.PagesEnableSessionState"&gt;&lt;/xref&gt;</ph> enumeration value.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether view state is enabled or disabled.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if view state is enabled; <ph id="ph2">`false`</ph> if view state is disabled.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies whether ASP.NET should run a message authentication code (MAC) on the page's view state when the page is posted back from the client.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>A view-state MAC is an encrypted version of the hidden variable that a page's view state is persisted to when the page is sent to the browser.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">`true`</ph>, the encrypted view state is checked to verify that it has not been tampered with on the client.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute should never be set to <ph id="ph1">`false`</ph> in a production Web site, even if the application or page does not use view state.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The view state MAC helps ensure the security of other ASP.NET functions in addition to the view state.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ASP.NET should run a message authentication code (MAC) on the page's view state when the page is posted back from the client; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>Gets the collection of device tags that ASP.NET should ignore when it renders a page.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>Device tags to ignore are specified as HTML namespace prefixes that should be passed as they are to the browser instead of being processed by ASP.NET.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>An example is the <ph id="ph1">`sys`</ph> prefix that is used for Microsoft Ajax elements.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>The collection of device tags that ASP.NET should ignore.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the page scroll position should be maintained upon returning from a postback from the server.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the page-scroll position should be maintained after postback; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Gets or sets a reference to the master page for the application.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property can be either a relative or an absolute path.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>A reference to the master page for the application.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>Gets or sets the maximum number of characters that a single view-state field can contain.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>Page and control view state is stored in hidden view-state fields when the page or control is rendered.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the length of the data stored exceeds the <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.MaxPageStateFieldLength%2A&gt;</ph> value, then the data is split between multiple view-state fields.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>The maximum number of characters that a single view-state field can contain.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.Web.Configuration.NamespaceInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.TagPrefixInfo&gt;</ph> objects correspond to the <ph id="ph2">`@ Import`</ph> directive on an ASP.NET page.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Import`</ph> directive allows you to specify namespaces that are automatically imported into all the pages of an application.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.Configuration.NamespaceCollection"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Web.Configuration.NamespaceInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies a code-behind class that .aspx pages inherit by default.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A string that specifies a code-behind class that .aspx pages inherit by default.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies the parser filter type.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>A parser filter, which is an instance of the <ph id="ph1">&lt;xref:System.Web.UI.PageParserFilter&gt;</ph> class, is called by the page compilation process before the parsing step to allow for changes to the source code at run time.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>A string that specifies the parser filter type.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether all system-generated hidden fields are rendered at the top of the form.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A&gt;</ph> property to specify that some system-generated hidden fields are rendered at the end of the form.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>In versions of ASP.NET earlier than the .NET Framework 3.5 SP1, ASP.NET renders some hidden fields (for example, <ph id="ph1">`__VIEWSTATE`</ph>) at the top of the form.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other hidden fields (for example, <ph id="ph1">`__EVENTVALIDATION`</ph>) are rendered near the bottom of the form, just before the closing <ph id="ph2">`&lt;/div&gt;`</ph> tag.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, in ASP.NET 3.5 SP1, all system-generated hidden fields are rendered at the top of the page.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>This makes sure that the information in these fields is sent to the server even if a postback is performed before the page has finished loading.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Web.Configuration.PagesSection.RenderAllHiddenFieldsAtTopOfForm%2A&gt;</ph> is set to <ph id="ph2">`false`</ph>, performing a postback before the page has finished loading can cause an "Invalid postback or callback argument" error.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the property name indicates "all hidden fields," user-created hidden fields are not affected by settings for this property.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if system-generated hidden fields are rendered at the top of the form; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true.`</ph></source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether smart navigation is enabled.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>Smart navigation requires Microsoft Internet Explorer 5.5 or greater.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if smart navigation is enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an ASP.NET style sheet theme.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>The name of an ASP.NET style sheet theme.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets a collection of <ph id="ph1">&lt;xref href="System.Web.Configuration.TagMapInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.TagPrefixInfo&gt;</ph> object has no corresponding directive on an ASP.NET page.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.Configuration.TagPrefixInfo&gt;</ph> objects allow you to remap tag type names to other type names at compile time.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.Configuration.TagMapCollection"&gt;&lt;/xref&gt;</ph> of <ph id="ph2">&lt;xref href="System.Web.Configuration.TagMapInfo"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of an ASP.NET page theme.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>The name of an ASP.NET page theme.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies a code-behind class that user controls inherit by default.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>A string that specifies a code-behind file that user controls inherit by default.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that determines whether ASP.NET examines input from the browser for dangerous values.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>For more information, see <bpt id="p1">[</bpt>Script Exploits Overview<ept id="p1">](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)</ept>.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Request validation is performed by comparing all input data to a list of potentially dangerous values.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a match occurs, ASP.NET raises an <ph id="ph1">&lt;xref:System.Web.HttpRequestValidationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if ASP.NET examines input from the browser for dangerous values; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Gets or sets the encryption mode that ASP.NET uses when maintaining <ph id="ph1">`ViewState`</ph> values.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The possible <ph id="ph1">&lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt;</ph> enumeration values are <ph id="ph2">`Always`</ph>, <ph id="ph3">`Auto`</ph>, and <ph id="ph4">`Never`</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value is <ph id="ph1">`Auto`</ph>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Web.UI.Page.ViewStateEncryptionMode%2A&gt;</ph> property is set to <ph id="ph2">`Auto`</ph>, <ph id="ph3">`ViewState`</ph> will be encrypted when a control requests it.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Web.UI.ViewStateEncryptionMode"&gt;&lt;/xref&gt;</ph> enumeration value indicating when the <ph id="ph2">`ViewState`</ph> values are encrypted.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>