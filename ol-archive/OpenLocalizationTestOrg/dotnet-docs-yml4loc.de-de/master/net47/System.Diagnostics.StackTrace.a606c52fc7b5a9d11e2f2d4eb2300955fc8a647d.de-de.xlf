<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5c80cb296625a0b980a8b35fb949ecb05ae66975</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.StackTrace.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">105036d6ed8b95911a6d300de3108eeb426beb95</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">020dd60fdaaa412922c4d5667633cbb90cb3c2d6</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a stack trace, which is an ordered collection of one or more stack frames.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> information will be most informative with Debug build configurations.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, Debug builds include debug symbols, while Release builds do not.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The debug symbols contain most of the file, method name, line number, and column information used in constructing <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> and <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> might not report as many method calls as expected, due to code transformations that occur during optimization.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class from the caller's frame.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this default constructor when you want a complete trace with only summary method information about the call stack.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class from the caller's frame, optionally capturing source information.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class that contains a single frame.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this constructor when you do not want the overhead of a full stack trace.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The frame that the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> object should contain.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class using the provided exception object.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The exception object from which to construct the stack trace.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class from the caller's frame, skipping the specified number of frames.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> is created with the caller's current thread, and does not contain file name, line number, or column information.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack from which to start the trace.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">skipFrames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class, using the provided exception object and optionally capturing source information.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class using the provided exception object and skipping the specified number of frames.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> does not contain file name, line number, or column information.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The exception object from which to construct the stack trace.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack from which to start the trace.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">skipFrames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class from the caller's frame, skipping the specified number of frames and optionally capturing source information.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack from which to start the trace.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">skipFrames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class for a specific thread, optionally capturing source information.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Do not use this constructor overload.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not use this constructor.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is obsolete, and there is no recommended alternative.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> might be blocked.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you suspend a thread while it is executing a class constructor, other threads in the <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> that attempt to use that class are blocked.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>The thread whose stack trace is requested.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The thread <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">targetThread</ph><ept id="p1">&lt;/code&gt;</ept> is not suspended.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.StackTrace"&gt;&lt;/xref&gt;</ph> class using the provided exception object, skipping the specified number of frames and optionally capturing source information.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The resulting stack trace describes the stack at the time of the exception.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the number of frames to skip is greater than or equal to the total number of frames on the call stack at the time the instance is created, the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace&gt;</ph> will contain no frames.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>The exception object from which to construct the stack trace.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The number of frames up the stack from which to start the trace.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to capture the file name, line number, and column number; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The parameter <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">e</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">skipFrames</ph><ept id="p1">&lt;/code&gt;</ept> parameter is negative.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Gets the number of frames in the stack trace.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The number of frames in the stack trace.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>Gets the specified stack frame.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Stack frames are numbered starting at 0, which is the last stack frame pushed.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The index of the stack frame requested.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The specified stack frame.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Returns a copy of all stack frames in the current stack trace.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the returned <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> array to enumerate and examine function calls in the <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>The length of the returned array is equal to the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> array elements are in reverse chronological order.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at array index 0 represents the most recent function call in the stack trace and the last frame pushed onto the call stack.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at array index <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.FrameCount%2A&gt;</ph> minus 1 represents the oldest function call in the stack trace and the first frame pushed onto the call stack.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> method to obtain all stack frames in a stack trace; use the <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> method to obtain a specific stack frame in a stack trace.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> indexes are ordered alike by the two methods.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the <ph id="ph1">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> at index 0 in the array returned by <ph id="ph2">&lt;xref:System.Diagnostics.StackTrace.GetFrames%2A&gt;</ph> is equivalent to the <ph id="ph3">&lt;xref:System.Diagnostics.StackFrame&gt;</ph> returned by <ph id="ph4">&lt;xref:System.Diagnostics.StackTrace.GetFrame%2A&gt;</ph> with an input index of 0.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Diagnostics.StackFrame"&gt;&lt;/xref&gt;</ph> representing the function calls in the stack trace.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>Defines the default for the number of methods to omit from the stack trace.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>This field is constant.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value for the number of methods to skip at the beginning of the stack trace.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this constant is 0.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Builds a readable representation of the stack trace.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A readable representation of the stack trace.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>