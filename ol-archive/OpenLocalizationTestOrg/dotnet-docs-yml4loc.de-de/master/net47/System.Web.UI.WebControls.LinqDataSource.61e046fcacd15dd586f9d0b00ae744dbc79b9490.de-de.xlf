<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e3a1c0344536ecff58c9a511305c8c8d8d2d6497</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Web.UI.WebControls.LinqDataSource.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e5a6ec690ca59179dcd4df1e66b7642fa966416</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5b766ce921276507b940e2609f17d1a1cb0d0363</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this topic:</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Order of Operations<ept id="p1">](#order_of_operations)</ept></source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Ordering Data<ept id="p1">](#ordering_data)</ept></source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Grouping Data<ept id="p1">](#grouping_data)</ept></source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Data Modifications<ept id="p1">](#data_modifications)</ept></source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Evaluating Values at Run Time<ept id="p1">](#evaluating_value_at_run_time)</ept></source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Working with Stored Procedures<ept id="p1">](#working_with_stored_procedures)</ept></source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Introduction</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data object can be an in-memory data collection or an object that represents data from a database.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve or modify the data without having to write SQL commands for each operation.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically generate the data commands.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are retrieving data from an in-memory data collection, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that contains the data collection.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property or field that returns the data collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might have a class named <ph id="ph1">`Person`</ph> that contains a property named <ph id="ph2">`FavoriteCities`</ph> that returns an array of string values.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to <ph id="ph2">`Person`</ph> and set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to <ph id="ph4">`FavoriteCities`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are querying a database, you must first create entity classes that represent the database and its tables.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>You then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that represents the database and set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the database table.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Order of Operations</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control applies data operations in the following order:</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Where (specify which data records to return).</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Order By (sort).</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Group By (aggregate data records that share values).</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Order Groups By (sort grouped data).</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Select (specify which fields or properties to return).</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Auto-sort (sort data records by a property that the user has selected).</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Auto-page (retrieve a subset of data records that were selected by the user).</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add conditions to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter the data records that are returned from a query.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves every record from the data object.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Ordering Data</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify the names of properties from the returned data to sort by.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Grouping Data</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used to consolidate data records that have the same values.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain all unique values in the <ph id="ph3">`Category`</ph> property.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify the properties to use for sorting the grouped data.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property specifies how the individual records within the grouped data are sorted.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves values for all the properties from a data object.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to specify which properties to return if you want to work with a subset of available properties.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>The Select operation is applied after the Where, Order By, and Group By operations.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data Modifications</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify whether data modifications are enabled by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user interface for modifying data from a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control is typically provided through a data-bound control, such as a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to setting <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> to <ph id="ph4">`true`</ph>, the following conditions are required to enable automatic data modifications:</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property cannot be assigned a value.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property cannot be assigned a value.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can restrict which properties are displayed in a data-bound control in two ways.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can either set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties, or you can define the fields for a data-bound control by adding <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> controls.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, it means that automatic update, insert, and delete operations cannot be enabled.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> properties to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This prevents the data-bound control from automatically including buttons for editing and deleting the data.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Evaluating Values at Run Time</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collections.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to specify default values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to examine or modify values before the data operation is executed, you can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>To examine values after the data operation has finished, handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Working with Stored Procedures</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from a stored procedure by creating an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about creating data context methods, see <bpt id="p1">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>Declarative Syntax</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control dynamically creates an Order By clause based on values in the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.OrderByParameters"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates an Order By clause that is based on the values in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Order By clause.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>, because the parser dynamically creates the Order By clause.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is assigned values.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control creates the Order By clause; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control dynamically creates a Where clause based on values defined in the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.WhereParameters"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates the Where clause from the parameters in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each parameter that you add to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection must have its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> property set to a value that matches a property in the data object that is being queried.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The automatically generated Where clause will check whether the value specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection equals the value of the matching property in the data object.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide more than one parameter, the parameters are linked with a logical <ph id="ph1">`AND`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Where clause.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>The automatically generated <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause can test only for equality and can link parameters only with the <ph id="ph2">`AND`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id="ph3">`OR`</ph> operation.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can accomplish these tasks by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`false`</ph> and adding placeholders in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for each parameter in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property, preface each placeholder name with the @ symbol.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, because the parser dynamically creates the Where clause.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is assigned values.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control will create the Where clause; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control supports navigation through sections of the data at run time.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable paging in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves only enough records for one page in the data-bound control.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>It uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph> methods to retrieve the records for the current page.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can page through the data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control supports sorting the data at run time.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control supports two approaches for sorting data.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to enable run-time sorting or you can set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to define the sorting at design time.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable sorting in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is based on the sort expression from a data-bound control.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can programmatically set the order in which data is returned by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to the property or properties used for sorting.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is set to a property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, this determines the final sorting of the data.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can sort the data; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>Occurs after an instance of the context type object is created.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph> event to examine the context type object or examine exceptions that are raised while the object is being created.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>You retrieve the context type object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is associated with this event.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>You retrieve the exception that was raised during the data operation from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is one time when the event is not raised.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object during the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>Occurs before an instance of the context type object is created.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control creates an instance of the type that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control calls the default constructor of the data context object to create an instance of the object.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you must handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event and manually create the data context object.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The context type object is created during select, update, insert, and delete operations.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>There is one time when the event is not raised.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object in an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Occurs before disposing the context type object.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>You handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>The first is a data context class that represents the data source.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The second is a property in the data context class that contains the data.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the data context class and you set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the data collection that contains the data.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when you retrieve data from a database, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that represents the database.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>Also set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the table in the database.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>To generate classes from a database, use the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you retrieve data from an in-memory data collection such as an array, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that contains the array property.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that gets the array.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable automatic update, insert, or delete operations through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the class assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, the property assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>The name of the class to retrieve data from.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>Returns a queryable view.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A queryable view.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSourceView"&gt;&lt;/xref&gt;</ph> class that is associated with this control.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>To provide a custom view, you can override this method in a derived class.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>An object that acts as the interface for data-bound controls.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Performs a delete operation.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method from your code.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a data-bound control, the data-bound control will automatically call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when the user takes action to delete a record.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to create your own process for deleting data.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to delete a record based on an event outside the data-bound control.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve">
          <source>The row key values for the records to be deleted.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve">
          <source>The row values that are evaluated to detect data conflicts.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve">
          <source>The number of records affected by the delete operation.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve">
          <source>Occurs when a delete operation has finished.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the output parameters from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>This property is not used by the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>A collection of parameters.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>Occurs before a delete operation.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control passes a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object to event handlers for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains the data that will be deleted and enables you to cancel the delete operation.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data class throws a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> exception, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains that exception in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event, you must handle the exception in that event handler.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be deleted through the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to delete a data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to delete the data.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include an interface that lets users select a record to delete, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic delete operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if a delete operation is tried.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if automatic delete operations are enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be inserted through the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to insert a new data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to insert the data.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include an interface that lets users insert a new record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic insert operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an insert operation is tried.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if automatic insert operations are enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>Gets or sets the value that indicates whether changes to the data context object are tracked.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property is only used when selecting data from a LINQ To SQL data context object.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are interacting with read-only data, setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property to <ph id="ph2">`false`</ph> improves performance because the data is not cached to determine if it has changed.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, it also disables deferred query execution.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property must be set to <ph id="ph1">`true`</ph> if you want to use deferred query execution.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the data context object is tracked for changes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether data records can be updated through the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to update a data record by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to update the data.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must include an interface that lets users update a record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic update operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an update operation is tried.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if automatic update operations are enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used for consolidating data records that have the same values.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph2">`Name`</ph>, all the records in the query that have the same <ph id="ph3">`Name`</ph> property value are returned as a single consolidated record.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign more than one property to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property by enclosing all the properties in the <ph id="ph2">`new`</ph> function and separating each property by using a comma.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to group by the properties <ph id="ph1">`Name`</ph> and then <ph id="ph2">`Category`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph4">`new(Name, Category)`</ph>.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the property that are used for grouping are returned through a generated property named <ph id="ph1">`Key`</ph>.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>You include the <ph id="ph1">`Key`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve the grouped values.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">`Key`</ph> property to an alias by using the <ph id="ph2">`As`</ph> keyword, but you are not required to use an alias.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to a property named <ph id="ph2">`Category`</ph>.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the consolidated values from the <ph id="ph1">`Category`</ph> property by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph3">`new(Key As ProductCategory)`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can access the individual records in a grouping by including the <ph id="ph1">`It`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`It`</ph> property contains a collection of records that share a value in the grouped property.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is often used with aggregation methods.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the following aggregate methods:</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Group By clause.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Group By clause.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to create the Group By clause at run time.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically you will not use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data based on whether the <ph id="ph2">`LastName`</ph> property in the data records equals a value provided by the user.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return values from a database table grouped by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> to "LastName" without any parameters.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to dynamically group data by a property, create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property as needed.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot assign the name of a property as the value for a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection when you want to add a condition to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property that must be set at run time.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property for that named parameter.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Group By clause, preface each parameter name with the @ symbol.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Group By clause.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Performs an insert operation.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method from your code.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when the user takes action to insert a new record.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when you want to create your own process for inserting data.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The row values to be inserted into the data source.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The number of rows affected by the insert operation.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Occurs when an insert operation has finished.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can retrieve the new values through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object to retrieve the identity property generated by a database for a new data record.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Occurs before an insert operation.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object passed to event handlers for this event contains the new object to insert in the data source.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation error occurs during the insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you must handle the exception in that event handler.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used during an insert operation.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically the values that are needed for an insert operation are passed to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control by the data-bound control.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values that you provide in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection are used only for fields that are defined in the data source but that are not bound in the data control.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control that is bound to the table is bound only to the Name and Address fields.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used only for the PostalCode field.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>They will not be used for the Name and Address field.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is true even if no value is entered for those fields.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the data-bound control autogenerates fields for all fields in the data source, no values from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>The parameters that are used during an insert operation.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Initializes the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The event data.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Web.UI.Control.Unload"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify which properties from the returned data to use for sorting.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property for sorting the data must exist in the original data source, but it does not have to be included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can add a space and <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, or <ph id="ph4">`DESC`</ph> to a property in the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> string in order to specify how the ordered data is returned.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can provide more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property by separating each property by using a comma.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to order by properties named <ph id="ph1">`LastName`</ph> and <ph id="ph2">`FirstName`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to "LastName, FirstName".</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, a data-bound control can pass a sort expression to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control at run time.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will apply the sort expression from the data-bound control after it applies the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the data is returned according to the sort expression from the data-bound control.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Order By clause.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Order By clause.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection to create the Order By clause at run time.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you add parameters to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, each parameter in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection is added to the Order By clause in the sequence that they are specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have to set a value at run time in the Order By clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the fields to use for ordering the data in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return values from a database table ordered by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> to "LastName" without any parameters.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property, but this approach has limited application.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection cannot represent a column name.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set a parameter to a value and then compare that value to values in a property.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>The parameters that are used for creating the Order By clause.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>Gets or sets the fields that are used for ordering grouped data.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify how the groups of data are sorted.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can group by the <ph id="ph1">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id="ph2">`Price`</ph> property.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property only when you have grouped the data.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property without setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> string.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can specify more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>Separate each property by using a comma.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Order Groups By clause.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used to create the Order Groups By clause.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection to create the Order Groups By clause at run time.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add values to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection only when you must set values at run time in the Order Groups By clause.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the fields that are used to order the data by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, when you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection cannot represent a column name; they must represent values.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set a parameter to a value and then compare that value to a property.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Order Groups By clause.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Gets or sets the properties and calculated values that are included in the retrieved data.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves all the properties (data columns) from the data object.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify which properties to retrieve by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the names of the properties that you want to include in the returned data.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you retrieve a subset of properties from the data object, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates a class that contains only the properties that you specify in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class is also created dynamically if you calculate properties that are not properties in the data object.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, the object returned from the query is not an instance of the class that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, you must use the <ph id="ph1">`new`</ph> method in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to indicate that a new class is returned from the query.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return only the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> properties from an object that contains more than these properties, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph4">`new(FirstName, LastName)`</ph>.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will dynamically create the new class that you specified in the <ph id="ph2">`new`</ph> method.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">`As`</ph> keyword to assign an alias to a selected value.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you assign an alias, you must include the aliased properties in the <ph id="ph1">`new`</ph> method.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any data-bound control that binds to the results from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control must refer to the property by the alias.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id="ph3">`SalesRegion`</ph> and <ph id="ph4">`RevenueThousands`</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">`new`</ph> function in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property according to the conditions listed in the following table.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>Select</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use of new</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Example</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single property.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`new`</ph> not needed.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>Multiple properties.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`new`</ph> needed.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Single or multiple properties that have an alias.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`new`</ph> needed.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, manage the display through the data-bound control.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data in the query, you can include aggregate methods in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the following aggregate methods:</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/en-us/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/en-us/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain each unique value in the <ph id="ph3">`Category`</ph> property.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you include the <ph id="ph1">`It`</ph> keyword in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property when you group data, you must assign an alias to the <ph id="ph3">`It`</ph> keyword.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will throw an exception if <ph id="ph2">`It`</ph> does not have an alias.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign an alias to the <ph id="ph1">`Key`</ph> keyword, but this is not required.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Select clause.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source>Occurs when a data retrieval operation has finished.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The object is available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve">
          <source>Occurs before a data-retrieval operation.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event in order to perform the following tasks:</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify parameters for data retrieval.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generate the query programmatically.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>Modify the values for sorting or paging.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>Perform custom sorting or paging.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cancel the data-retrieval operation.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event handler before the query executes, or you can create a new result set and assign that to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, when the column header of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event, you must handle the exception in that event handler.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that are used during a data-retrieval operation.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to create the Select clause at run time.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection when you want to use run-time values in the Select clause.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property in the user's profile.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can then use that property and a value from the data source to calculate a new value.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have to set a value at run time in the Select clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the properties to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> values from a database table, set <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> to "FirstName, LastName" without any parameters.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection, you add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property for the named parameter.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Select clause, preface each parameter name with the @ symbol.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property name.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT">
          <source>To dynamically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the name of a property, create an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property as needed.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>The parameters that are used to create the Select clause.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, when update and delete operations have been enabled, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values for all the records in view state.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores values for all primary keys and all properties not marked with <ph id="ph2">`UpdateCheck.Never`</ph> in the <ph id="ph3">`Column`</ph> attribute.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>You set the <ph id="ph1">`UpdateCheck`</ph> property of the <ph id="ph2">`Column`</ph> attribute in the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the values do not match, the data source record has changed.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can disable storing values in view state by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do this, you must provide your own way to make sure that the data has not changed.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, the original values are not persisted in view state for the data-bound control.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, LINQ to SQL cannot verify the integrity of the data.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the timestamp property in the entity class is set to <ph id="ph1">`IsVersion=true`</ph> and all the properties are set to <ph id="ph2">`UpdateCheck.Never`</ph>.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT">
          <source>This helps reduce the size of view state, and no sensitive data is exposed.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT">
          <source>LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id="p1">](http://msdn.microsoft.com/en-us/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the values will be stored in view state; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the property or field in the data context class that represents a data collection.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that represents the data that you want to retrieve.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are connecting to a database table, the name of the property is usually the same as the name of the table.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you are connecting to an in-memory data collection, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that returns the data collection.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can assign a property that returns any type to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property for retrieval operations.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the object that is represented by the property does not implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will automatically wrap the object in an instance of an <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>To enable automatic update, insert, or delete operations, the class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and the property that is assigned to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>A string that contains the name of the property that contains the data collection.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>Performs an update operation.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method from your code.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when the user takes action to update a record.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when you want to create your own process for updating data.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The row key values for the records to be updated.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The row values to be updated in the data source.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The row values that are evaluated to detect data conflicts.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>The number of records affected by the update operation.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Occurs when an update operation has finished.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve">
          <source>This collection is not used by the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>A collection of parameters.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>Occurs before an update operation.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object that is passed to event handlers contains both the original object and the updated object.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a validation error occurs during the update operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT">
          <source>A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you must handle the exception in that event handler.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to specify the conditions for the record to be returned from a query.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is the same as the syntax for a LINQ Where clause in C#.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>You specify an expression that results in a Boolean value, and if the expression evaluates to <ph id="ph1">`true`</ph> for a given row, the row is included in the result set.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT">
          <source>Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>To specify multiple expressions linked by logical <ph id="ph1">`AND`</ph> or <ph id="ph2">`OR`</ph> operators, you use <ph id="ph3">`&amp;&amp;`</ph> as a logical AND operator and <ph id="ph4">`||`</ph> as a logical OR operator, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this in markup, enclose the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause value in single quotation marks, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to test whether a string is greater than or less than another string, you must use methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class instead of using <ph id="ph2">`&lt;`</ph> or <ph id="ph3">`&gt;`</ph> operators between the column name and the string value.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use other methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to compare strings, see <bpt id="p1">[</bpt>Comparing Strings<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Where clause syntax, see <bpt id="p1">[</bpt>C# Operators<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept> and <bpt id="p2">[</bpt>where clause<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you include a named parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property that acts as a placeholder for the value.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>You then add a parameter that has the matching name to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and define the parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you do not have to include the named parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically generates the Where clause from the parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about how to filter data, see <bpt id="p1">[</bpt>Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls<ept id="p1">](http://msdn.microsoft.com/en-us/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve">
          <source>A string that is used to create the Where clause.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve">
          <source>Gets the collection of parameters that is used to create the Where clause.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to create the Where clause at run time.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection when you want to programmatically set one or more of the conditions in the Where clause.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you might search a database table for records with a last name equal to the value of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, you add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection for the text box value.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you do not have to set a value at run time in the Where clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can define the fields to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, to return values from a database table where <ph id="ph1">`LastName`</ph> equals "Adams" in markup, set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to <ph id="ph3">`'LastName = "Adams"'`</ph> without any parameters.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for that parameter.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the Where clause, preface each parameter name with the @ symbol.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>A collection of the parameters that are used to create the Where clause in the <ph id="ph1">&lt;xref href="System.Web.UI.WebControls.LinqDataSource.Where"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve">
          <source>The type that is associated with the class.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Web.DynamicData.IDynamicDataSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>