<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">905e9181918ae9c07c1357d4ac992690767cedd7</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Forms.DataGridView.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e0a0677652f4500a2ede234b8a84c51fe36b844e</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9a4c62fd66b3926684163a9b247a4cb5a82d450a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Displays data in a customizable grid.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control provides a customizable table for displaying data.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class allows customization of cells, rows, columns, and borders through the use of properties such as <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Basic Formatting and Styling in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/basic-formatting-and-styling-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to display data with or without an underlying data source.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without specifying a data source, you can create columns and rows that contain data and add them directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to access <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> objects and the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A?displayProperty=fullName&gt;</ph> property to read or write cell values directly.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Item%2A&gt;</ph> indexer also provides direct access to cells.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>As an alternative to populating the control manually, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> properties to bind the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to a data source and automatically populate it with data.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Displaying Data in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with very large amounts of data, you can set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to display a subset of the available data.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>Virtual mode requires the implementation of a data cache from which the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is populated.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Data Display Modes in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/data-display-modes-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information about the features available in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, see <bpt id="p1">[</bpt>DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/datagridview-control-windows-forms.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table provides direct links to common tasks.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/fbk67b6z\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Add ToolTips to Individual Cells in a Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/2249cf0a\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Set Font and Color Styles in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/z2akwyy7\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Change the Type of a Windows Forms DataGridView Column Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/053656ss\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/33w255ac\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Set Default Cell Styles and Data Formats for the Windows Forms DataGridView Control Using the Designer<ept id="p1">](http://msdn.microsoft.com/library/95y5fz2x\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Format Data in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/f9x2790s\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Walkthrough: Validating Data in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/ykdxa0bc\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>How to: Customize Data Formatting in the Windows Forms DataGridView Control<ept id="p1">](http://msdn.microsoft.com/library/z1cc356h\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><bpt id="p1">[</bpt>Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls<ept id="p1">](http://msdn.microsoft.com/library/y8c0cxey\(v=vs.110\).aspx)</ept></source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control replaces and adds functionality to the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control of previous versions, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGrid&gt;</ph> control is retained for both backward compatibility and future use if you choose.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Differences Between the Windows Forms DataGridView and DataGrid Controls<ept id="p1">](~/docs/framework/winforms/controls/differences-between-the-windows-forms-datagridview-and-datagrid-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control inherits both the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> properties from <ph id="ph4">&lt;xref:System.Windows.Forms.Control&gt;</ph>, but supports only the <ph id="ph5">&lt;xref:System.Windows.Forms.Control.ContextMenuStrip%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ContextMenu%2A&gt;</ph> property with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control has no effect.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows initial property values for an instance of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial Value</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Notifies the accessible client applications when a new cell becomes the current cell.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method converts the specified row and column indexes into <ph id="ph1">`objectID`</ph> and <ph id="ph2">`childID`</ph> parameters and calls the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.AccessibilityNotifyClients%28System.Windows.Forms.AccessibleEvents%2CSystem.Int32%2CSystem.Int32%29&gt;</ph> method overload twice using the <ph id="ph4">&lt;xref:System.Windows.Forms.AccessibleEvents.Focus&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.AccessibleEvents.Selection&gt;</ph> values of the <ph id="ph6">&lt;xref:System.Windows.Forms.AccessibleEvents&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`objectID`</ph> and <ph id="ph2">`childID`</ph> are determined by numbering only the visible rows and columns in their display order, counting the row or column headers if they are visible, and starting with 1.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if column headers are visible, the <ph id="ph1">`objectID`</ph> for the first visible nonheader row is 2.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> indicating the row and column indexes of the new current cell.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Drawing.Point.X"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">cellAddress</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Drawing.Point.Y"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">cellAddress</ph><ept id="p1">&lt;/code&gt;</ept> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Adjusts the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> for a column header cell of a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that is currently being painted.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control internally calls the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdjustColumnHeaderBorderStyle%2A&gt;</ph> method to determine the appearance of the borders for the column header cells.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control typically uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> property for the <ph id="ph3">`dataGridViewAdvancedBorderStyleInput`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that that represents the column header border style to modify.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that is used to store intermediate changes to the column header border style.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> that is currently being painted is in the first column displayed on the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate that the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> that is currently being painted is in the last column in the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that has the <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridViewColumn.Visible"&gt;&lt;/xref&gt;</ph> property set to <ph id="ph5">`true`</ph>; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the border style for the current column header.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Gets the border style for the upper-left cell in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The upper-left cell is the cell that is shared by the column header row and the row header column.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> gets the value of this property while painting the upper-left cell.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the style of the border of the upper-left cell in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Gets the border style of the cells in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> property to customize the appearance of cells' borders.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the style of the borders using the built-in styles, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the border style of the cells in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Gets the border style of the column header cells in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> property to customize the appearance of column header cells' borders.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the style of the borders using the built-in styles, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the border style of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewColumnHeaderCell"&gt;&lt;/xref&gt;</ph> objects in the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>Gets the border style of the row header cells in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A&gt;</ph> property to customize the appearance of row header cells' borders in a derived <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the style of the borders using the built-in styles, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAdvancedBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the border style of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeaderCell"&gt;&lt;/xref&gt;</ph> objects in the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the option to add rows is displayed to the user.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to data, the user is allowed to add rows if both this property and the data source's <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowNew%2A?displayProperty=fullName&gt;</ph> property are set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the add-row option is displayed to the user; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToAddRows"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user is allowed to delete rows from the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to data, the user is allowed to delete rows if both this property and the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName&gt;</ph> property are set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can delete rows; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether manual column repositioning is enabled.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>When column repositioning is enabled, users can drag a column header to a new position.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that frozen and unfrozen columns form two separate groups; users can reposition columns within a group, but cannot move a column from one group to the other.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can change the column order; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToOrderColumns"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether users can resize columns.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to prevent users from manually changing column widths.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful, for example, with display-only columns where data is loaded once and columns are resized at that time.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about user resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if users can resize columns; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToResizeColumns"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether users can resize rows.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to prevent users from manually changing row heights.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful, for example, with display-only controls where data is loaded once and rows are resized at that time.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about user resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all the rows are resizable; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToResizeRows"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>Gets or sets the default cell style applied to odd-numbered rows of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cells in rows with odd index numbers, the styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> property override the styles specified through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph>, and are overridden by the styles specified through the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=fullName&gt;</ph> and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>When getting this property, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with default values will be created if the property has not already been accessed.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can cause a performance impact when getting this property for many rows.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever possible, use a single <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> to set this property for multiple rows.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to apply to the odd-numbered rows.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether all the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> cells are currently selected.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection does not perform efficiently with large selections.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine whether all the cells in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> have been selected before you access the contents of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> collection, check the return value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AreAllCellsSelected%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, this method can cause rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> performance, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include the rows and columns with <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewBand.Visible"&gt;&lt;/xref&gt;</ph> property values of <ph id="ph3">`false`</ph>; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if all cells (or all visible cells) are selected or if there are no cells (or no visible cells); otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether columns are created automatically when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.DataMember"&gt;&lt;/xref&gt;</ph> properties are set.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Columns are automatically generated when this property is set to <ph id="ph1">`true`</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> properties are set or changed.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Columns can also be automatically generated when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property is changed from <ph id="ph2">`false`</ph> to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property is <ph id="ph1">`true`</ph> and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> changes so there are columns that do not match the columns of the previous <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> value, data in the unmatched columns is discarded.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is ignored if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> properties are not set.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control generates one column for each public property of the objects in the data source.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the bound objects implement the <ph id="ph1">&lt;xref:System.ComponentModel.ICustomTypeDescriptor&gt;</ph> interface, the control generates one column for each property returned by the <ph id="ph2">&lt;xref:System.ComponentModel.ICustomTypeDescriptor.GetProperties%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each column header will contain the value of the property name the column represents.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property but set <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> to <ph id="ph3">`false`</ph>, you must add columns manually.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can bind each added column to the data source by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=fullName&gt;</ph> property to the name of a property exposed by the bound objects.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> in the Windows Forms Designer automatically sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph3">`false`</ph> and generates code to add and bind a column for each property in the data source.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>The code that is generated at design-time is equivalent to the manually added code shown in the following example.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is not the same as the auto-generation of columns at run-time that occurs when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoGenerateColumns%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the columns should be created automatically; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the specified column to fit the contents of all its cells, including the header cell.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when a column resizes.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all columns, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>The index of the column to resize.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the specified column using the specified size mode.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when a column resizes.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all columns, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source>The index of the column to resize.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.None"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the specified column using the specified size mode, optionally calculating the width with the expectation that row heights will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when a column resizes.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column width is adjusted only once per method call; if the contents of the column later change, the column will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all columns, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new width based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`fixedHeight`</ph> is <ph id="ph2">`false`</ph>, the column width will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method next.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve">
          <source>The index of the column to resize.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new width based on the current row heights; <ph id="ph2">`false`</ph> to calculate the width with the expectation that the row heights will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet"&gt;&lt;/xref&gt;</ph>, <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.None"&gt;&lt;/xref&gt;</ph>, or <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.Fill"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the column headers based on changes to the contents of the header in the specified column, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fixedColumnWidth`</ph> or <ph id="ph2">`fixedRowHeadersWidth`</ph> parameters are <ph id="ph3">`false`</ph>, the height of the column headers will be calculated with the expectation that you will call the methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> next.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>The index of the column header whose contents should be used to determine new height.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new height based on the current width of the row headers; <ph id="ph2">`false`</ph> to calculate the height with the expectation that the row headers width will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new height based on the current width of the specified column; <ph id="ph2">`false`</ph> to calculate the height with the expectation that the column width will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the column headers to fit their contents, optionally calculating the height with the expectation that the column and/or row header widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the column headers resize.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fixedColumnsWidth`</ph> or <ph id="ph2">`fixedRowHeadersWidth`</ph> parameters are <ph id="ph3">`false`</ph>, the height of the column headers will be calculated with the expectation that you will call the methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> next.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new height based on the current width of the row headers; <ph id="ph2">`false`</ph> to calculate the height with the expectation that the row headers width will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new height based on the current column widths; <ph id="ph2">`false`</ph> to calculate the height with the expectation that the column widths will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the column headers to fit the contents of the largest column header.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the column headers resize.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>The height of the column headers is adjusted only once per method call; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the column headers based on changes to the contents of the header in the specified column.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the column headers resize if only the contents of the header in the specified column have changed as a result of user edits or changes to a bound data source.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT">
          <source>The height of the column headers is adjusted only once per method call if the content change requires it; if the contents of the column headers later change, the column headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the column headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The index of the column containing the header with the changed content.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve">
          <source>Adjusts the width of all columns to fit the contents of all their cells, including the header cells.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when columns resize.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific column, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the columns to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Adjusts the width of all columns using the specified size mode.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when columns resize.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific column, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the columns to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnsMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>Adjusts the width of all columns using the specified size mode, optionally calculating the widths with the expectation that row heights will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when columns resize.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column widths are adjusted only once per method call; if the contents of the columns later change, the columns will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific column, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the columns to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeColumnsMode%2A&gt;</ph> property or the column <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new widths based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`fixedHeight`</ph> is <ph id="ph2">`false`</ph>, the column widths will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method next.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new widths based on the current row heights; <ph id="ph2">`false`</ph> to calculate the widths with the expectation that the row heights will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeColumnsMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the specified row to fit the contents of all its cells including the header cell.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when a row resizes.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>The index of the row to resize.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the specified row using the specified size mode.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when a row resizes.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The index of the row to resize.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Adjusts the height of the specified row using the specified size mode, optionally calculating the height with the expectation that column widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when a row resizes.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row height is adjusted only once per method call; if the contents of the row later change, the row will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row to automatically resize whenever its contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new height based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`fixedWidth`</ph> is <ph id="ph2">`false`</ph>, the row height will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method next.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>The index of the row to resize.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new height based on the current width of the columns; <ph id="ph2">`false`</ph> to calculate the height with the expectation that the column widths will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode.RowHeader"&gt;&lt;/xref&gt;</ph> and <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the row headers using the specified size mode.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the row headers resize.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT">
          <source>The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The index of the row header with the changed content.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing"&gt;&lt;/xref&gt;</ph></source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the row headers using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the row headers resize.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT">
          <source>The width of the row headers is adjusted only once per method call; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fixedColumnHeadersHeight`</ph> or <ph id="ph2">`fixedRowsHeight`</ph> parameters are <ph id="ph3">`false`</ph>, the width of the row headers will be calculated with the expectation that you will call methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> next.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new width based on the current height of the column headers; <ph id="ph2">`false`</ph> to calculate the width with the expectation that the height of the column headers will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new width based on the current row heights; <ph id="ph2">`false`</ph> to calculate the width with the expectation that the row heights will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source>Adjusts the width of the row headers based on changes to the contents of the header in the specified row and using the specified size mode, optionally calculating the width with the expectation that the row and/or column header widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when the row headers resize if only the contents of the header in the specified row have changed as a result of user edits or changes to a bound data source.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT">
          <source>The width of the row headers is adjusted only once per method call if the content change requires it; if the contents of the row headers later change, the row headers will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the row headers to automatically resize when their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method lets you specify a sizing mode that calculates the new width based on values in a limited set of headers, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fixedColumnHeadersHeight`</ph> or <ph id="ph2">`fixedRowHeight`</ph> parameters are <ph id="ph3">`false`</ph>, the width of the row headers will be calculated with the expectation that you will call methods such as <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> next.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The index of the row containing the header with the changed content.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new width based on the current height of the column headers; <ph id="ph2">`false`</ph> to calculate the width with the expectation that the height of the column headers will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new width based on the current height of the specified row; <ph id="ph2">`false`</ph> to calculate the width with the expectation that the row height will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.DisableResizing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowHeadersWidthSizeMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Adjusts the heights of the rows using the specified size mode value.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when rows resize.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a subset of rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the rows to automatically resize whenever their contents change, use the<ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>Adjusts the heights of the specified rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when rows resize, but you want to resize only a specific subset of rows, such as those within a range of bound records that have been updated.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row heights for the specified rows are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize all rows, use a different overload of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fixedWidth`</ph> parameter is <ph id="ph2">`false`</ph>, the row heights will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method next.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The index of the first row to resize.</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve">
          <source>The number of rows to resize.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new heights based on the current column widths; <ph id="ph2">`false`</ph> to calculate the heights with the expectation that the column widths will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndexStart&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowsCount&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>Adjusts the heights of all rows to fit the contents of all their cells, including the header cells.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when rows resize.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a subset of rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve">
          <source>Adjusts the heights of all rows using the specified size mode, optionally calculating the heights with the expectation that column widths will subsequently be adjusted.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful if you want to control when rows resize.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row heights are adjusted only once per method call; if the contents of the rows later change, the rows will not automatically adjust.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a specific row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>To resize a subset of rows, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%28System.Int32%2CSystem.Int32%2CSystem.Windows.Forms.DataGridViewAutoSizeRowMode%2CSystem.Boolean%29&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the rows to automatically resize whenever their contents change, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoSizeRowsMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload lets you specify a sizing mode that calculates the new heights based on values in a limited set of cells, such as those in displayed rows only.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT">
          <source>This improves performance when the control contains a large number of rows.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT">
          <source>This overload is protected, and is designed to enable you to achieve ideal cell height-to-width ratios in a derived <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`fixedWidth`</ph> parameter is <ph id="ph2">`false`</ph>, the row heights will be calculated with the expectation that you will call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> method next.</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about programmatic resizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to calculate the new heights based on the current column widths; <ph id="ph2">`false`</ph> to calculate the heights with the expectation that the column widths will also be adjusted.</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders"&gt;&lt;/xref&gt;</ph> or <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders"&gt;&lt;/xref&gt;</ph>, and <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersVisible"&gt;&lt;/xref&gt;</ph> is <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> is not a valid <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;autoSizeRowsMode&lt;/code&gt;</ph> has the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this class.</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.AutoSizeMode"&gt;&lt;/xref&gt;</ph> property of a column changes.</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how column widths are determined.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property lets you configure the control so that column widths are automatically adjusted either to fill the control or to fit cell contents.</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT">
          <source>Size adjustments occur in fill mode whenever the width of the control changes.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT">
          <source>In content-based sizing modes, size adjustments occur whenever cell contents change or, if <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> is enabled, whenever row heights change.</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some content-based sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the sizing mode for an individual column, set its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.AutoSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of this property is <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet&gt;</ph>, indicating that the column inherits its behavior and its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode%2A&gt;</ph> property value from the control.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT">
          <source>Columns in fill mode divide the available control width in proportions indicated by their <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.FillWeight%2A&gt;</ph> property values.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The width available for fill mode is determined by subtracting the widths of all other columns from the width of the client area of the control.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this width is smaller than the combined <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.MinimumWidth%2A&gt;</ph> values of all fill-mode columns, the horizontal scroll bar is displayed, all fill-mode columns are shown with their minimum widths, and user column-resizing is disabled.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about column fill mode, see <bpt id="p1">[</bpt>Column Fill Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/column-fill-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only columns with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.Visible%2A&gt;</ph> property value of <ph id="ph2">`true`</ph> are resized automatically, and changing the visibility of a column does not cause resizing to occur.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, when columns are set to automatically resize, the user cannot adjust the column widths with the mouse.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT">
          <source>To adjust column widths programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumn%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumns%2A&gt;</ph> methods or set the column <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.Width%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about content-based automatic sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.ColumnHeader"&gt;&lt;/xref&gt;</ph>, column headers are hidden, and at least one visible column has an <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewColumn.AutoSizeMode"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsMode.Fill"&gt;&lt;/xref&gt;</ph> and at least one visible column with an <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewColumn.AutoSizeMode"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.NotSet"&gt;&lt;/xref&gt;</ph> is frozen.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AutoSizeColumnsMode"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how row heights are determined.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property lets you configure the control so that row heights are automatically adjusted to fit their contents whenever the contents change.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> is enabled, row heights are also adjusted whenever column widths change.</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT">
          <source>Some sizing modes let you limit the size adjustment to the currently displayed rows in order to increase performance.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only rows with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Visible%2A&gt;</ph> property value of <ph id="ph2">`true`</ph> are resized automatically, and changing the visibility of a row does not cause resizing to occur.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT">
          <source>Additionally, when rows are set to automatically resize, the user cannot adjust the row heights with the mouse.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> value of an automatically sized row is recalculated during layout to account for the size of the font that is used.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the correct <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph>, you should retrieve the value in the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Layout&gt;</ph> event instead of in the form's constructor.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT">
          <source>To adjust row heights programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRow%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRows%2A&gt;</ph> methods, or set the row <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRow.Height%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when a row is resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about content-based automatic sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> value indicating the sizing mode.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.None"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders"&gt;&lt;/xref&gt;</ph> and row headers are hidden.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color for the control.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant to this control.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the background color of the portion of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control not occupied by cells, use the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that represents the background color of the control.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultBackColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BackColor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackColorChanged&gt;</ph> event is raised if the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.BackColor%2A&gt;</ph> property is changed programmatically or by user interaction.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Gets or sets the background color of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundColor%2A&gt;</ph> property determines the color of the area of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> that is not filled with cells.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that represents the background color of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Drawing.SystemColors.AppWorkspace"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Drawing.Color.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property has a <ph id="ph1">&lt;xref href="System.Drawing.Color.A"&gt;&lt;/xref&gt;</ph> property value that is less that 255.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BackgroundColor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>Gets or sets the background image displayed in the control.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this control.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Drawing.Image"&gt;&lt;/xref&gt;</ph> that represents the image to display in the background of the control.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BackgroundImage"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>Gets or sets the background image layout as defined in the <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> enumeration.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this control.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout"&gt;&lt;/xref&gt;</ph> value indicating the background image layout.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ImageLayout.Tile"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BackgroundImageLayout"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this event occurs as described, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.BackgroundImageLayout%2A&gt;</ph> property is not relevant for this control.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve">
          <source>Puts the current cell in edit mode.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`false`</ph> if the cell fails to enter edit mode, which can happen for a number of reasons.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`false`</ph> if the current cell is read-only.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also returns <ph id="ph1">`false`</ph> if the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.EditType%2A&gt;</ph> property is <ph id="ph3">`null`</ph> (meaning the cell cannot host an editing control) and the cell type does not implement the <ph id="ph4">&lt;xref:System.Windows.Forms.IDataGridViewEditingCell&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell supports editing, this method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBeginEdit&gt;</ph> event, which can be canceled, and returns <ph id="ph2">`false`</ph> if an event handler cancels the edit.</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the edit is not canceled and the cell can host an editing control, this method initializes the control and displays it.</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the initialization fails, this method returns <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell successfully enters edit mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A&gt;</ph> property returns <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to select all the cell's contents; <ph id="ph2">`false`</ph> to not select any contents.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current cell is already in edit mode or successfully enters edit mode; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CurrentCell"&gt;&lt;/xref&gt;</ph> is not set to a valid cell.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>This method was called in a handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellBeginEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>The type indicated by the cell's <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property does not derive from the <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> type.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve">
          <source>The type indicated by the cell's <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property does not implement the <ph id="ph2">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve">
          <source>Initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve">
          <source>Gets or sets the border style for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property affects the outer border of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the style of the cell borders, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle.FixedSingle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.BorderStyle"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BorderStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve">
          <source>Cancels edit mode for the currently selected cell and discards any changes.</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the cancel was successful; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> property of a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control is <ph id="ph3">`true`</ph> and the cancels edits in a row.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in virtual mode, changes are committed to the data cache at the cell level by default.</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> event can be used when implementing row-level transactions.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ImeMode"&gt;&lt;/xref&gt;</ph> property can be set to an active value, to enable IME support.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if there is an editable cell selected; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>Occurs when edit mode starts for the selected cell.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve">
          <source>Gets the cell border style for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellBorderStyle%2A&gt;</ph> property is set to anything other than <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.Single&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleHorizontal&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.SingleVertical&gt;</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property must be a system color.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set this property to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellBorderStyle.Custom&gt;</ph> value, which is a read-only value indicating that the cell border style has been customized through the use of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedCellBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellBorderStyle"&gt;&lt;/xref&gt;</ph> that represents the border style of the cells contained in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellBorderStyle"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellBorderStyle.Custom"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve">
          <source>Occurs when the border style of a cell changes.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve">
          <source>Occurs when any part of a cell is clicked.</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any part of a cell is clicked, including borders and padding.</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also occurs when the user presses and releases the SPACE key while a button cell or check box cell has focus, and will occur twice for these cell types if the cell is clicked while pressing the SPACE key.</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine when the cell contents are clicked, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event does not receive information about the mouse position.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the event handler needs information about the mouse position, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellMouseClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT">
          <source>For clicks in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName&gt;</ph> event instead.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve">
          <source>Occurs when the content within a cell is clicked.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the cell content is clicked.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also occurs when the user presses and releases the SPACEBAR while a button cell or check box cell has focus, and will occur twice for these cell types if the cell content is clicked while pressing the SPACEBAR.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to detect button clicks for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewButtonCell&gt;</ph> or link clicks for a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewLinkCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>For clicks in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName&gt;</ph> event instead.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve">
          <source>Occurs when the user double-clicks a cell's contents.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ContextMenuStrip"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve">
          <source>Occurs when a cell's shortcut menu is needed.</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a cell.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you want to display a shortcut menu determined by the current state or value of a cell.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph> property is retrieved, either programmatically or when the user right-clicks a cell.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=fullName&gt;</ph>and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A&gt;</ph> properties to determine the state or value of a cell, and use this information to change or modify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is initialized with the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property, which the event value overrides.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> value for multiple cells.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also specify shortcut menus for individual rows rather than individual cells by setting the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property or handling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContextMenuStrip%2A&gt;</ph> property setting overrides the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property setting, and the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> event overrides both the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event and the row <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property setting.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can specify <ph id="ph1">`null`</ph> for a cell shortcut menu to prevent a row shortcut menu from being overridden.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Occurs when the user double-clicks anywhere in a cell.</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>Occurs when edit mode stops for the currently selected cell.</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>Occurs when the current cell changes in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control or when the control receives input focus.</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event may occur twice for a single click if the control does not have input focus and the clicked cell was not previously the current cell.</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ErrorText"&gt;&lt;/xref&gt;</ph> property of a cell changes.</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Occurs when a cell's error text is needed.</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event is useful when you want to determine the error for a cell depending on its value or state.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event and specify error text in the handler, an error glyph appears in the cell unless the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowCellErrors%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph> or the cell is in edit mode.</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A?displayProperty=fullName&gt;</ph> property is retrieved.</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A&gt;</ph> property to determine the state or value of a cell, and use this information to change or modify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs.ErrorText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is initialized with the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> property, which the event value overrides.</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ErrorText%2A&gt;</ph> value for multiple cells.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>Occurs when the contents of a cell need to be formatted for display.</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control will attempt to convert a cell's value into a format suitable for display.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, it will convert a numerical value into a string for display in a text box cell.</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can indicate the formatting convention to use by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by properties such as the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the standard formatting is insufficient, you can customize the formatting by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph>event.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event lets you indicate the exact display value as well as the cell styles, such as background and foreground color, to use for the cell display.</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means you can handle this event for any kind of cell formatting, regardless of whether the cell value itself needs formatting.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event occurs every time each cell is painted, so you should avoid lengthy processing when handling this event.</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event also occurs when the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValue%2A&gt;</ph> is retrieved or its <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.GetFormattedValue%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event, the <ph id="ph2">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName&gt;</ph> property is initialized with the cell value.</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide custom conversion from the cell value to the display value, set the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName&gt;</ph> property to the converted value, ensuring that the new value is of the type specified by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.FormattedValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT">
          <source>To indicate that no further value formatting is necessary, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event handler completes, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName&gt;</ph> is <ph id="ph2">`null`</ph> or is not of the correct type, or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName&gt;</ph> property is <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> is formatted using the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Format%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph9">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the cell style returned by the <ph id="ph10">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=fullName&gt;</ph> property, which is initialized using the cell <ph id="ph11">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.FormattingApplied%2A?displayProperty=fullName&gt;</ph> property, the display properties of the object returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellFormattingEventArgs.CellStyle%2A?displayProperty=fullName&gt;</ph> property are used to render the cell.</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about custom formatting using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event, see <bpt id="p1">[</bpt>How to: Customize Data Formatting in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-customize-data-formatting-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid performance penalties when handling this event, access the cell through the parameters of the event handler rather than accessing the cell directly.</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize the conversion of a formatted, user-specified value into an actual cell value, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Occurs when a cell loses input focus and is no longer the current cell.</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>Occurs whenever the user clicks anywhere on a cell with the mouse.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the user clicks using any of the mouse buttons.</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName&gt;</ph> property to determine which button was clicked.</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT">
          <source>To detect clicks on the contents of a cell, such as a button or link within a cell, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellContentClick&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT">
          <source>The handler for this event receives the column index and row index of the mouse pointer position.</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT">
          <source>For clicks in a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph>, this event occurs before the check box changes value, so if you do not want to calculate the expected value based on the current value, you will typically handle the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event instead.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because that event occurs only when the user-specified value is committed, which typically occurs when focus leaves the cell, you must also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Occurs when a cell within the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is double-clicked.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the user double-clicks using any of the mouse buttons.</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName&gt;</ph> property to determine which button was clicked.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>Occurs when the user presses a mouse button while the mouse pointer is within the boundaries of a cell.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the user presses any of the mouse buttons.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName&gt;</ph> property to determine which button was clicked.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer enters a cell.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer leaves a cell.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve">
          <source>Occurs when the mouse pointer moves over the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve">
          <source>Occurs when the user releases a mouse button while over a cell.</source>
        </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the user releases any of the mouse buttons.</source>
        </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.MouseEventArgs.Button%2A?displayProperty=fullName&gt;</ph> property to determine which button was clicked.</source>
        </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve">
          <source>Occurs when a cell needs to be drawn.</source>
        </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event to customize the appearance of cells in the control.</source>
        </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can paint entire cells yourself, or paint specific parts of cells and use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintBackground%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellPaintingEventArgs.PaintContent%2A?displayProperty=fullName&gt;</ph> methods to paint other parts.</source>
        </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> class to paint standard controls using the current theme.</source>
        </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Rendering Controls with Visual Styles<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, you also have access to a large library of standard images that you can use with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT">
          <source>When handling this event, you should access the cell through the parameters of the event handler, rather than access the cell directly.</source>
        </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve">
          <source>Occurs when a cell leaves edit mode if the cell value has been modified.</source>
        </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control will attempt to convert a user-specified value displayed in a cell to an actual underlying cell value in the type specified by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT">
          <source>This conversion uses the formatting properties of the cell style returned by the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the standard conversion does not meet your needs, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event to provide custom value conversion to the required type.</source>
        </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can enter edit mode using the method specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> property, and can leave edit mode, committing any changes to a cell, by moving to another cell or by pressing ENTER.</source>
        </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pressing ESC will revert any changes to the value before it is committed, and the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event will not occur.</source>
        </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event occurs only if the cell value has actually been modified, even if the final value is the same as the original value.</source>
        </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also occurs when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A&gt;</ph> method is called.</source>
        </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event, you can convert the value yourself or you can customize the default conversion.</source>
        </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can convert the value yourself using the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A&gt;</ph> method with type converters of your choosing.</source>
        </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, you can let the default type converters parse the value, but modify the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the object returned by the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.InheritedCellStyle%2A?displayProperty=fullName&gt;</ph> property, which is initialized using the cell <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you convert the value yourself, replace the initial, formatted value of the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName&gt;</ph> property with the converted value in the type specified by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ValueType%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT">
          <source>To indicate that no further parsing is necessary, set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the event handler completes, if the <ph id="ph1">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A?displayProperty=fullName&gt;</ph> is <ph id="ph2">`null`</ph> or is not of the correct type, or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellParsingEventArgs.ParsingApplied%2A?displayProperty=fullName&gt;</ph> property is <ph id="ph4">`false`</ph>, the <ph id="ph5">&lt;xref:System.Windows.Forms.ConvertEventArgs.Value%2A&gt;</ph> is parsed using the cell <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.ParseFormattedValue%2A&gt;</ph> method with default type converters.</source>
        </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this method parses the value using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> properties of the cell style passed in.</source>
        </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is not equal to <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.NullValue%2A&gt;</ph>, the value is parsed using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.FormatProvider%2A&gt;</ph> property and the type converters passed in.</source>
        </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize the conversion of a cell value into a formatted value for display, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellFormatting&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve">
          <source>Occurs when a cell state changes, such as when the cell loses or gains focus.</source>
        </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.Style"&gt;&lt;/xref&gt;</ph> property of a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> changes.</source>
        </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName&gt;</ph> property is set to a new value or when a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve">
          <source>Occurs when one of the values of a cell style changes.</source>
        </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> event occurs when a property value of a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> object returned by one of the following properties changes:</source>
        </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT">
          <source>If one of these properties is set to a different <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>, however, the corresponding <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph2">`Changed`</ph> event occurs, but the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellStyleContentChanged&gt;</ph> event does not occur.</source>
        </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT">
          <source>For row, column, and cell properties, the name of the <bpt id="p1">*</bpt>PropertyName<ept id="p1">*</ept><ph id="ph1">`Changed`</ph> event begins with "<ph id="ph2">`Row`</ph>", "<ph id="ph3">`Column`</ph>", or "<ph id="ph4">`Cell`</ph>" (for example, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.ToolTipText"&gt;&lt;/xref&gt;</ph> property value changes for a cell in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve">
          <source>Occurs when a cell's ToolTip text is needed.</source>
        </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event, the ToolTip text you specify in the handler is shown whenever the mouse pointer is over a cell and the control <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowCellToolTips%2A&gt;</ph> property value is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event is useful when you want to display ToolTips determined by the current state or value of a cell.</source>
        </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A?displayProperty=fullName&gt;</ph> property is retrieved, either programmatically or when the mouse pointer enters a cell.</source>
        </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex%2A?displayProperty=fullName&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A&gt;</ph> properties to determine the state or value of a cell, and use this information to change or modify the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is initialized with the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property, which the event value overrides.</source>
        </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> value for multiple cells.</source>
        </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve">
          <source>Occurs after the cell has finished validating.</source>
        </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling this event is useful for post-validation processing of the cell value.</source>
        </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve">
          <source>Occurs when a cell loses input focus, enabling content validation.</source>
        </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Canceling this event cancels the changes to the current cell.</source>
        </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this event is canceled in data-bound mode, the new value is not pushed to the underlying data source.</source>
        </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this event is canceled in virtual mode, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event will not be raised.</source>
        </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValidated&gt;</ph> event to perform post-validation processing.</source>
        </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve">
          <source>Occurs when the value of a cell changes.</source>
        </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged?displayProperty=fullName&gt;</ph> event occurs when the user-specified value is committed, which typically occurs when focus leaves the cell.</source>
        </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of check box cells, however, you will typically want to handle the change immediately.</source>
        </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit the change when the cell is clicked, you must handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the handler, if the current cell is a check box cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CommitEdit%2A?displayProperty=fullName&gt;</ph> method and pass in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rows in the control are not automatically sorted when a cell value is changed.</source>
        </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT">
          <source>To sort the control when the user modifies a cell, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control is <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> requires a value for a cell in order to format and display the cell.</source>
        </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event in virtual mode to populate cells with data from a custom data store without causing rows to become unshared.</source>
        </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT">
          <source>To add user-specified values to your custom data store, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control is <ph id="ph3">`true`</ph> and a cell value has changed and requires storage in the underlying data source.</source>
        </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event in virtual mode to update a custom data store with user-specified data.</source>
        </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event to retrieve values from the data store for display in the control.</source>
        </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve">
          <source>Cancels the selection of all currently selected cells except the one indicated, optionally ensuring that the indicated cell is selected.</source>
        </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">`rowIndexException`</ph> value of -1 represents a column header, and a <ph id="ph2">`columnIndexException`</ph> value of -1 represents a row header.</source>
        </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful to clear the current selection without canceling the selection of the cell, row, or column indicated by the exception indexes.</source>
        </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value allows individual cell selection, this method sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Selected%2A&gt;</ph> property of each cell to <ph id="ph3">`false`</ph>, excluding the cell in the row and column specified.</source>
        </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value allows full row or column selection, this method also sets the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property of each row or column to <ph id="ph3">`false`</ph>, excluding the row or column containing the specified cell.</source>
        </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT">
          <source>The excluded cell, row, or column may or may not be in the selected state when this method is called.</source>
        </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method selects it if the <ph id="ph1">`selectExceptionElement`</ph> parameter value is <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the selection mode, the entire row or column may also be selected as a result.</source>
        </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve">
          <source>The column index to exclude.</source>
        </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve">
          <source>The row index to exclude.</source>
        </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to select the excluded cell, row, or column; <ph id="ph2">`false`</ph> to retain its original state.</source>
        </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndexException&lt;/code&gt;</ph> is greater than the highest column index.</source>
        </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndexException&lt;/code&gt;</ph> is less than -1 when <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.SelectionMode"&gt;&lt;/xref&gt;</ph> is <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">&lt;code&gt;columnIndexException&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndexException&lt;/code&gt;</ph> is greater than the highest row index.</source>
        </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndexException&lt;/code&gt;</ph> is less than -1 when <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.SelectionMode"&gt;&lt;/xref&gt;</ph> is <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id="ph4">&lt;code&gt;rowIndexException&lt;/code&gt;</ph> is less than 0.</source>
        </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve">
          <source>Clears the current selection by unselecting all selected cells.</source>
        </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this method is called, each column and row's <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve">
          <source>Gets or sets a value that indicates whether users can copy cell text values to the <ph id="ph1">&lt;xref href="System.Windows.Forms.Clipboard"&gt;&lt;/xref&gt;</ph> and whether row and column header text is included.</source>
        </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control copies the text representation of each selected cell to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is the cell value converted to a string or, for image cells, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewImageCell.Description%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT">
          <source>Values are copied to the Clipboard in <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue&gt;</ph> formats.</source>
        </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT">
          <source>These formats are useful for pasting content into applications such as Notepad, <ph id="ph1">[!INCLUDE[ofprexcel](~/includes/ofprexcel-md.md)]</ph>, and <ph id="ph2">[!INCLUDE[ofprword](~/includes/ofprword-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control copies the cells contained in the smallest rectangle that includes all selected cells.</source>
        </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rows and columns that do not contain any selected cells are not represented in the copied data.</source>
        </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any unselected cells in the remaining rows and columns are represented by blank placeholders.</source>
        </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depending on the copy mode and the selection mode, header values for the copied rows and columns may be copied, as well.</source>
        </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT">
          <source>When users copy content, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control adds a <ph id="ph2">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT">
          <source>This data object is retrieved from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can call this method when you want to programmatically add the data object to the Clipboard.</source>
        </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetClipboardContent%2A&gt;</ph>method retrieves values for individual cells by calling the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override either or both of these methods in derived classes to customize the layout of copied cells or to support additional data formats.</source>
        </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about Clipboard operations and data formats, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewClipboardCopyMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewClipboardCopyMode.EnableWithAutoHeaderText"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewClipboardCopyMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve">
          <source>Occurs when a column is added to the control.</source>
        </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.ContextMenuStrip"&gt;&lt;/xref&gt;</ph> property of a column changes.</source>
        </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of columns displayed in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> property to 0 will remove all columns from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> is reset to a value less than the current value, columns will be removed from the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> is set to a value greater than the current value, columns will be added to the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be used with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property to create a simple <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> for displaying and editing text.</source>
        </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve">
          <source>The number of columns displayed in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than 0.</source>
        </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve">
          <source>When setting this property, the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> property has been set.</source>
        </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.DataPropertyName"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewBand.DefaultCellStyle"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a column is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a column is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve">
          <source>Occurs when the value the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.DisplayIndex"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve">
          <source>Occurs when the user double-clicks a divider between two columns.</source>
        </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a column divider.</source>
        </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can handle this event to programmatically resize columns based only on the content in the rows that are currently visible, avoiding a performance impact with the default behavior when working with a large number of rows.</source>
        </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT">
          <source>The column <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> property does not extend the area in which a user can double-click.</source>
        </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the width of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.</source>
        </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.DividerWidth"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve">
          <source>Occurs when the contents of a column header cell change.</source>
        </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks a column header.</source>
        </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve">
          <source>Occurs when a column header is double-clicked.</source>
        </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve">
          <source>Gets the border style applied to the column headers.</source>
        </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> property is set to anything other than <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property must be a system color.</source>
        </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set this property to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom&gt;</ph> value, which is a read-only value indicating that the border style has been customized through the use of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedColumnHeadersBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" extradata="MT">
          <source>If visual styles are enabled for the application through the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the column headers are painted using the current theme.</source>
        </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle%2A&gt;</ph> property is ignored for all column headers except the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph>, to which the theme is not applied.</source>
        </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderBorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderBorderStyle"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersBorderStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve">
          <source>Gets or sets the default column header style.</source>
        </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by this property has the following initial property values:</source>
        </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`DataGridViewCellStyle`</ph> property</source>
        </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values automatically override the values set through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT">
          <source>To force column headers to inherit the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> values, you must set the values in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> object to the default values indicated for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" extradata="MT">
          <source>If visual styles are enabled and <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, all header cells except the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph> are painted using the current theme and the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> values are ignored.</source>
        </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the default column header style.</source>
        </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve">
          <source>Gets or sets the height, in pixels, of the column headers row</source>
        </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve">
          <source>The height, in pixels, of the row that contains the column headers.</source>
        </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve">
          <source>The default is 23.</source>
        </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than the minimum height of 4 pixels or is greater than the maximum height of 32768 pixels.</source>
        </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersHeight"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the height of the column headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</source>
        </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize&gt;</ph>, the height of the column headers cannot be adjusted by the user.</source>
        </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT">
          <source>To adjust the height of the column headers programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeColumnHeadersHeight%2A&gt;</ph> method or set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeight%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the sizing mode for the row headers, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cell contents to wrap onto multiple lines when the column headers are resized, the cell style in effect for the cell must have a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.WrapMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewTriState.True&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about header sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
        </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
        </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode"&gt;&lt;/xref&gt;</ph> value indicating the mode by which the height of the column headers row can be adjusted.</source>
        </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.EnableResizing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the column header row is displayed.</source>
        </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersVisible%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, a column whose <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.Resizable%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph> can still be resized in the user interface (UI) by clicking with the mouse cursor anywhere along the right border of the column to be resized.</source>
        </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the column headers are displayed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">`false`</ph> and one or more columns have an <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewColumn.InheritedAutoSizeMode"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnMode.ColumnHeader"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.MinimumWidth"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.Name"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve">
          <source>Occurs when a column is removed from the control.</source>
        </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve">
          <source>Gets a collection that contains all the columns in the control.</source>
        </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT">
          <source>By using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection&gt;</ph> returned by this property, you can add columns, remove columns, and obtain a count of the columns contained in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnCollection"&gt;&lt;/xref&gt;</ph> that contains all the columns in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.SortMode"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve">
          <source>Occurs when a column changes state, such as gaining or losing focus.</source>
        </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when the value of one of the following column properties changes for a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn&gt;</ph> in the control:</source>
        </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.ToolTipText"&gt;&lt;/xref&gt;</ph> property value changes for a column in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.Width"&gt;&lt;/xref&gt;</ph> property for a column changes.</source>
        </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve">
          <source>Commits changes in the current cell to the data cache without ending edit mode.</source>
        </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method attempts to convert the formatted, user-specified value to the underlying cell data type.</source>
        </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT">
          <source>To do this, it raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellParsing&gt;</ph> event, which you can handle to customize the type conversion.</source>
        </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, default type converters are used.</source>
        </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversion errors may result in an exception if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event is not handled to prevent it.</source>
        </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is successfully converted, it is committed to the data store, raising the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event for non-data-bound cells when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property value is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the value is successfully committed, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueChanged&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values that specifies the context in which an error can occur.</source>
        </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the changes were committed; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve">
          <source>The cell value could not be committed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve">
          <source>Creates a new accessible object for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataGridViewAccessibleObject"&gt;&lt;/xref&gt;</ph> for the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve">
          <source>Creates and returns a new <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve">
          <source>An empty <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve">
          <source>Creates and returns a new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ControlCollection"&gt;&lt;/xref&gt;</ph> that can be cast to type <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.DataGridViewControlCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> property to initialize its value.</source>
        </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve">
          <source>An empty <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.ControlCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve">
          <source>Creates and returns a new <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve">
          <source>An empty <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve">
          <source>Gets or sets the currently active cell.</source>
        </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you set a cell as the current cell, it will scroll into view if it is not currently displayed.</source>
        </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current cell cannot be a header cell, a disabled cell, or a cell in a hidden row or column.</source>
        </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set this property to <ph id="ph1">`null`</ph> to temporarily remove the focus rectangle, but when the control receives focus and the value of this property is <ph id="ph2">`null`</ph>, it is automatically set to the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.FirstDisplayedCell%2A&gt;</ph>property.</source>
        </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you change the value of this property, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event occurs before the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event handler accessing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property at this time will get its previous value.</source>
        </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> to an external data source, this property is reset to its default value.</source>
        </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> that represents the current cell, or <ph id="ph2">`null`</ph> if there is no current cell.</source>
        </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve">
          <source>The default is the first cell in the first column or <ph id="ph1">`null`</ph> if there are no cells in the control.</source>
        </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve">
          <source>The value of this property cannot be set because changes to the current cell cannot be committed or canceled.</source>
        </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve">
          <source>The specified cell when setting this property is in a hidden row or column.</source>
        </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve">
          <source>Re-entrant calling is only allowed when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is bound to a <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve">
          <source>Re-entrant calling results from a change to the underlying data.</source>
        </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve">
          <source>The specified cell when setting this property is not in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve">
          <source>Gets the row and column indexes of the currently active cell.</source>
        </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to determine the row and column of the current cell without accessing the cell directly.</source>
        </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful to avoid unsharing shared rows.</source>
        </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about row sharing, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Point"&gt;&lt;/xref&gt;</ph> that represents the row and column indexes of the currently active cell.</source>
        </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CurrentCell"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve">
          <source>Occurs when the state of a cell changes in relation to a change in its contents.</source>
        </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cell is marked as modified if its contents have changed but the change has not been saved.</source>
        </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event typically occurs when a cell has been edited but the change has not been committed to the data cache, or when an edit operation is canceled.</source>
        </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve">
          <source>Gets the row containing the current cell.</source>
        </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT">
          <source>To change the current row, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property to a cell in the desired row.</source>
        </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph> that represents the row containing the current cell, or <ph id="ph2">`null`</ph> if there is no current cell.</source>
        </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve">
          <source>Occurs after a data-binding operation has finished.</source>
        </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when the contents of the data source change or when the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Forms.Control.BindingContext%2A&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling this event is useful, for example, to programmatically resize rows and columns based on content updates.</source>
        </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve">
          <source>Occurs when an external data-parsing or validation operation throws an exception, or when an attempt to commit data to a data source fails.</source>
        </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event enables you to handle exceptions thrown in code that is called by the control during data processing operations.</source>
        </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorEventArgs&gt;</ph> object associated with this event normally indicate the cell in which the data error occurred.</source>
        </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the error occurs in an external data source, however, the data source may not provide the column in which the error occurred.</source>
        </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex%2A&gt;</ph> property typically indicates the column of the current cell at the time of the error.</source>
        </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve">
          <source>Gets or sets the name of the list or table in the data source for which the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is displaying data.</source>
        </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is useful when binding to a data source that contains multiple lists or tables.</source>
        </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to set this property when binding to a data source that contains a single list or table.</source>
        </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can bind a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to a <ph id="ph2">&lt;xref:System.Data.DataSet&gt;</ph> that contains a single table without setting this property.</source>
        </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Data.DataSet&gt;</ph> contains multiple tables, however, you must set this property to the name of one of the tables.</source>
        </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>The name of the table or list in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> for which the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is displaying data.</source>
        </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.String.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>An error occurred in the data source and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>Occurs when value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataMember"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>Gets or sets the data source that the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is displaying data for.</source>
        </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class supports the standard Windows Forms data-binding model.</source>
        </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" extradata="MT">
          <source>This means the data source can be of any type that implements one of the following interfaces:</source>
        </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Collections.IList&gt;</ph> interface, including one-dimensional arrays.</source>
        </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface, such as the <ph id="ph2">&lt;xref:System.Data.DataTable&gt;</ph> and <ph id="ph3">&lt;xref:System.Data.DataSet&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingList&gt;</ph> interface, such as the <ph id="ph2">&lt;xref:System.ComponentModel.BindingList%601&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.IBindingListView&gt;</ph> interface, such as the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT">
          <source>For specific examples, see the Example section and the task table at the end of this section.</source>
        </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, you will bind to a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component and bind the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component to another data source or populate it with business objects.</source>
        </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component is the preferred data source because it can bind to a wide variety of data sources and can resolve many data binding issues automatically.</source>
        </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT">
          <source>When binding to a data source that contains multiple lists or tables, you must set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataMember%2A&gt;</ph> property to a string that specifies the list or table to bind to.</source>
        </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT">
          <source>When binding to a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component that contains multiple lists or tables, however, you can set the <ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.DataMember%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph> component instead.</source>
        </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT">
          <source>When binding to an object collection rather than to database data, you will typically set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.DataSourceNullValue%2A&gt;</ph> property of the object returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property to <ph id="ph3">`null`</ph> rather than using the default value of <ph id="ph4">&lt;xref:System.DBNull.Value?displayProperty=fullName&gt;</ph>, which is appropriate for database data.</source>
        </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Displaying Data in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/displaying-data-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table provides direct links to common tasks related to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>Walkthrough: Creating a Master/Detail Form Using Two Windows Forms DataGridView Controls<ept id="p1">](~/docs/framework/winforms/controls/creating-a-master-detail-form-using-two-datagridviews.md)</ept> and <bpt id="p2">[</bpt>How to: Bind Objects to Windows Forms DataGridView Controls<ept id="p2">](~/docs/framework/winforms/controls/how-to-bind-objects-to-windows-forms-datagridview-controls.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>The object that contains data for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> to display.</source>
        </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>An error occurred in the data source and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>Gets or sets the default cell style to be applied to the cells in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> if no other cell style properties are set.</source>
        </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT">
          <source>The styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property affect all cells except when overridden by the styles specified through the following properties:</source>
        </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT">
          <source>When getting this property, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with default values will be created if the property has not already been accessed.</source>
        </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can cause a performance impact when getting this property for many rows.</source>
        </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever possible, use a single <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> to set this property for multiple rows.</source>
        </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to be applied as the default style.</source>
        </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DefaultCellStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any properties of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property are set to new values or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>Gets the default initial size of the control.</source>
        </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Size"&gt;&lt;/xref&gt;</ph> representing the initial size of the control, which is 240 pixels wide by 150 pixels high.</source>
        </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>Occurs when the user enters the row for new records so that it can be populated with default values.</source>
        </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event lets you populate the row for new records when the user enters the row.</source>
        </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initial values for the row come from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.DefaultNewRowValue%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> returned by each column's <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.CellTemplate%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" extradata="MT">
          <source>In data bound mode, all cell values for data bound columns are stored in the external data source.</source>
        </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user enters the row for new records, a new row is created in the data source before the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultValuesNeeded&gt;</ph> event occurs.</source>
        </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you populate the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowEventArgs.Row%2A?displayProperty=fullName&gt;</ph> property in your event handler, the values are added directly to the data source.</source>
        </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT">
          <source>In virtual mode, after this event occurs, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event occurs for each cell in the new row so that you can store the default values in your custom data store.</source>
        </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT">
          <source>Then, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event occurs for each cell in the new row, retrieving the values that you stored in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event, which are then displayed.</source>
        </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>Returns the number of columns displayed to the user.</source>
        </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include partial columns in the displayed column count; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>The number of columns displayed to the user.</source>
        </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>Returns the number of rows displayed to the user.</source>
        </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to include partial rows in the displayed row count; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>The number of rows displayed to the user.</source>
        </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>Gets the rectangle that represents the display area of the control.</source>
        </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DisplayRectangle%2A&gt;</ph> property returns the client rectangle of the display area of the control, not including the area occupied by any scroll bars that are showing.</source>
        </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the display area of the control.</source>
        </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and its child controls and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>Gets the control hosted by the current cell, if a cell with an editing control is in edit mode.</source>
        </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the cell is not in edit mode or the cell type does not accommodate an editing control, this property returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> hosted by the current cell.</source>
        </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>Occurs when a control for editing a cell is showing.</source>
        </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event to perform custom initialization of the editing control when a cell enters edit mode.</source>
        </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize the display characteristics of the control, set the properties of the object returned by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.CellStyle%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT">
          <source>To perform other initialization, cast the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditingControlShowingEventArgs.Control%2A?displayProperty=fullName&gt;</ph> property to the specific control type and access the members directly.</source>
        </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControlShowing&gt;</ph> event to attach event-handlers to the events of the editing control.</source>
        </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control hosts one editing control at a time, and reuses the editing control whenever the cell type does not change between edits.</source>
        </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT">
          <source>When attaching event-handlers to the editing control, you must therefore take precautions to avoid attaching the same handler multiple times.</source>
        </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid this problem, remove the handler from the event before you attach the handler to the event.</source>
        </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will prevent duplication if the handler is already attached to the event, but will have no effect otherwise.</source>
        </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the example code in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewComboBoxEditingControl&gt;</ph> class overview.</source>
        </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>Gets the panel that contains the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.EditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> property, which is <ph id="ph2">`null`</ph> when the current cell is not in edit mode, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingPanel%2A&gt;</ph> property is always available.</source>
        </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.Panel"&gt;&lt;/xref&gt;</ph> that contains the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.EditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how to begin editing a cell.</source>
        </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT">
          <source>All <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewEditMode&gt;</ph> values except for <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewEditMode.EditProgrammatically&gt;</ph> also allow a user to double-click a cell to begin editing it.</source>
        </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewEditMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewEditMode.EditOnKeystrokeOrF2"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewEditMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.EditMode"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether row and column headers use the visual styles of the user's current theme if visual styles are enabled for the application.</source>
        </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can enable visual styles for your application by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Windows.Forms.Application.Run%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, all header cells except the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph> are painted using the current theme.</source>
        </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if visual styles are enabled for the headers; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>The default value is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>Commits and ends the edit operation on the current cell using the default error context.</source>
        </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EndEdit%2A&gt;</ph> overload, passing in a bitwise combination of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Parsing&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewDataErrorContexts.Commit&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEndEdit&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may result in an exception if errors are not handled with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the edit operation is committed and ended; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>The cell value could not be committed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>Commits and ends the edit operation on the current cell using the specified error context.</source>
        </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellEndEdit&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method may result in an exception if errors are not handled with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataError&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorContexts"&gt;&lt;/xref&gt;</ph> values that specifies the context in which an error can occur.</source>
        </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the edit operation is committed and ended; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>The cell value could not be committed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>Gets or sets the first cell currently displayed in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>; typically, this cell is in the upper left corner.</source>
        </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this property to determine which cell is in the first row and column currently displayed in the control.</source>
        </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, this is in the upper left corner, but for right-to-left languages, it is in the upper right corner.</source>
        </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also set this property to scroll the control to the indicated cell.</source>
        </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> currently displayed in the control.</source>
        </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>The specified cell when setting this property is not in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve">
          <source>The specified cell when setting this property has a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.RowIndex"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewCell.ColumnIndex"&gt;&lt;/xref&gt;</ph> property value of -1, indicating that it is a header cell or a shared cell.</source>
        </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>The specified cell when setting this property has a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.Visible"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>Gets the width of the portion of the column that is currently scrolled out of view..</source>
        </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve">
          <source>The width of the portion of the column that is scrolled out of view.</source>
        </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>Gets or sets the index of the column that is the first column displayed on the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>The index of the column that is the first column displayed on the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than 0 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property indicates a column with a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.Visible"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property indicates a column with a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn.Frozen"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>Gets or sets the index of the row that is the first row displayed on the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property raises the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Scroll&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>The index of the row that is the first row displayed on the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property indicates a row with a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.Visible"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property indicates a column with a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.Frozen"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>Gets or sets the font of the text displayed by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property is an ambient property.</source>
        </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
        </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
        </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can base the new font on the existing font.</source>
        </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property as the default value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A&gt;</ph> properties of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> objects returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> value automatically updates the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> properties, changing the font for any cell that inherits the value.</source>
        </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Header cells override the value by default, and you can override the value for specific rows, columns, and cells.</source>
        </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Font"&gt;&lt;/xref&gt;</ph> to apply to the text displayed by the control.</source>
        </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultFont"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.Font"&gt;&lt;/xref&gt;</ph> property value changes.</source>
        </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>Gets or sets the foreground color of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> property is an ambient property.</source>
        </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT">
          <source>An ambient property is a control property that, if not set, is retrieved from the parent control.</source>
        </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, a <ph id="ph1">&lt;xref:System.Windows.Forms.Button&gt;</ph> will have the same <ph id="ph2">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> as its parent <ph id="ph3">&lt;xref:System.Windows.Forms.Form&gt;</ph> by default.</source>
        </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about ambient properties, see the <ph id="ph1">&lt;xref:System.Windows.Forms.AmbientProperties&gt;</ph> class or the <ph id="ph2">&lt;xref:System.Windows.Forms.Control&gt;</ph> class overview.</source>
        </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the <ph id="ph1">&lt;xref:System.Drawing.Font&gt;</ph> is immutable (meaning that you cannot adjust any of its properties), you can only assign the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Font%2A&gt;</ph> property a new <ph id="ph3">&lt;xref:System.Drawing.Font&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, you can base the new font on the existing font.</source>
        </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> property as the default value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> value automatically updates the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property, changing the foreground text color for any cell that inherits the value.</source>
        </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT">
          <source>Header cells override the value by default, and you can override the value for specific rows, columns, and cells.</source>
        </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> that represents the foreground color of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>The default is the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DefaultForeColor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ForeColor"&gt;&lt;/xref&gt;</ph> property value changes.</source>
        </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve">
          <source>Retrieves the specified <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`Int32`</ph> that identifies the <ph id="ph2">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph> to retrieve.</source>
        </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>The specified <ph id="ph1">&lt;xref href="System.Windows.Forms.AccessibleObject"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>Gets the number of cells that satisfy the provided filter.</source>
        </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful to determine the number of cells in a particular state.</source>
        </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the number of selected cells, for example, use this method with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewElementStates?displayProperty=fullName&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is typically more efficient than using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElementStates"&gt;&lt;/xref&gt;</ph> values specifying the cells to count.</source>
        </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>The number of cells that match the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">includeFilter</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;includeFilter&lt;/code&gt;</ph> includes the value <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewElementStates.ResizableSet"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>Returns the rectangle that represents the display area for a cell.</source>
        </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns the entire cell bounds or the displayed portion only.</source>
        </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get the bounds of the cell contents only, use the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ContentBounds%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>The column index for the desired cell.</source>
        </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>The row index for the desired cell.</source>
        </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return the displayed portion of the cell only; <ph id="ph2">`false`</ph> to return the entire cell bounds.</source>
        </trans-unit>
        <trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the display rectangle of the cell.</source>
        </trans-unit>
        <trans-unit id="1179" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than -1 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than -1 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>Retrieves the formatted values that represent the contents of the selected cells for copying to the <ph id="ph1">&lt;xref href="System.Windows.Forms.Clipboard"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method retrieves data that represents the region defined by the selected cells.</source>
        </trans-unit>
        <trans-unit id="1184" translate="yes" xml:space="preserve" extradata="MT">
          <source>This region is the smallest rectangle that includes all of the selected cells.</source>
        </trans-unit>
        <trans-unit id="1185" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value for each selected cell in this region is retrieved by calling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.GetClipboardContent%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1186" translate="yes" xml:space="preserve" extradata="MT">
          <source>Blank placeholder values are used for unselected cells in this region.</source>
        </trans-unit>
        <trans-unit id="1187" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method combines these values into a <ph id="ph1">&lt;xref:System.Windows.Forms.DataObject&gt;</ph> containing several formats for copying to the clipboard.</source>
        </trans-unit>
        <trans-unit id="1188" translate="yes" xml:space="preserve" extradata="MT">
          <source>The supported clipboard formats include <ph id="ph1">&lt;xref:System.Windows.Forms.DataFormats.Text?displayProperty=fullName&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataFormats.UnicodeText?displayProperty=fullName&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataFormats.Html?displayProperty=fullName&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataFormats.CommaSeparatedValue?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Clipboard&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataObject"&gt;&lt;/xref&gt;</ph> that represents the contents of the selected cells.</source>
        </trans-unit>
        <trans-unit id="1191" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ClipboardCopyMode"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewClipboardCopyMode.Disable"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>Returns the rectangle that represents the display area for a column, as determined by the column index.</source>
        </trans-unit>
        <trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>The column index for the desired cell.</source>
        </trans-unit>
        <trans-unit id="1194" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return the column rectangle visible in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> bounds; <ph id="ph3">`false`</ph> to return the entire column rectangle.</source>
        </trans-unit>
        <trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the display rectangle of the column.</source>
        </trans-unit>
        <trans-unit id="1196" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>Returns the rectangle that represents the display area for a row, as determined by the row index.</source>
        </trans-unit>
        <trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>The row index for the desired cell.</source>
        </trans-unit>
        <trans-unit id="1199" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to return the row rectangle visible in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> bounds; <ph id="ph3">`false`</ph> to return the entire row rectangle.</source>
        </trans-unit>
        <trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the display rectangle of the row.</source>
        </trans-unit>
        <trans-unit id="1201" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>Gets or sets the color of the grid lines separating the cells of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1203" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property to any color when you use a single border; with other types of borders, the colors are specified by the operating system.</source>
        </trans-unit>
        <trans-unit id="1204" translate="yes" xml:space="preserve" extradata="MT">
          <source>If visual styles are enabled for the application through the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property is ignored, and the current theme's colors are used.</source>
        </trans-unit>
        <trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Color"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Drawing.SystemColors"&gt;&lt;/xref&gt;</ph> that represents the color of the grid lines.</source>
        </trans-unit>
        <trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Drawing.KnownColor.ControlDarkDark"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1207" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Drawing.Color.Empty"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property has a <ph id="ph1">&lt;xref href="System.Drawing.Color.A"&gt;&lt;/xref&gt;</ph> property value that is less that 255.</source>
        </trans-unit>
        <trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.GridColor"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1211" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1212" translate="yes" xml:space="preserve">
          <source>Returns location information, such as row and column indices, given x- and y-coordinates.</source>
        </trans-unit>
        <trans-unit id="1213" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this method to determine which part of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is located at the specified coordinates.</source>
        </trans-unit>
        <trans-unit id="1214" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can call this method—specifying the coordinates of a mouse click—to determine the row and column indexes of the clicked cell or whether a header cell or scroll bar was clicked.</source>
        </trans-unit>
        <trans-unit id="1215" translate="yes" xml:space="preserve">
          <source>The x-coordinate.</source>
        </trans-unit>
        <trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>The y-coordinate.</source>
        </trans-unit>
        <trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.HitTestInfo"&gt;&lt;/xref&gt;</ph> that contains the location information.</source>
        </trans-unit>
        <trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>Gets the horizontal scroll bar of the control.</source>
        </trans-unit>
        <trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollBar"&gt;&lt;/xref&gt;</ph> representing the horizontal scroll bar.</source>
        </trans-unit>
        <trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of pixels by which the control is scrolled horizontally.</source>
        </trans-unit>
        <trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>The number of pixels by which the control is scrolled horizontally.</source>
        </trans-unit>
        <trans-unit id="1222" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than 0.</source>
        </trans-unit>
        <trans-unit id="1223" translate="yes" xml:space="preserve">
          <source>Invalidates the specified cell of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>, forcing it to be repainted.</source>
        </trans-unit>
        <trans-unit id="1224" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted.</source>
        </trans-unit>
        <trans-unit id="1225" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this method with a custom cell type that changes its appearance as a result of external events.</source>
        </trans-unit>
        <trans-unit id="1226" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> to invalidate.</source>
        </trans-unit>
        <trans-unit id="1228" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dataGridViewCell&lt;/code&gt;</ph> does not belong to the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1229" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dataGridViewCell&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1230" translate="yes" xml:space="preserve">
          <source>Invalidates the cell with the specified row and column indexes, forcing it to be repainted.</source>
        </trans-unit>
        <trans-unit id="1231" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful to force a cell repaint in conditions that would not normally cause a cell to be repainted.</source>
        </trans-unit>
        <trans-unit id="1232" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you can use this method with a custom cell type that changes its appearance as a result of external events.</source>
        </trans-unit>
        <trans-unit id="1233" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1234" translate="yes" xml:space="preserve">
          <source>The column index of the cell to invalidate.</source>
        </trans-unit>
        <trans-unit id="1235" translate="yes" xml:space="preserve">
          <source>The row index of the cell to invalidate.</source>
        </trans-unit>
        <trans-unit id="1236" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than -1 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1237" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1238" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than -1 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1239" translate="yes" xml:space="preserve">
          <source>Invalidates the specified column of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>, forcing it to be repainted.</source>
        </trans-unit>
        <trans-unit id="1240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>The index of the column to invalidate.</source>
        </trans-unit>
        <trans-unit id="1242" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of columns minus 1.</source>
        </trans-unit>
        <trans-unit id="1243" translate="yes" xml:space="preserve">
          <source>Invalidates the specified row of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>, forcing it to be repainted.</source>
        </trans-unit>
        <trans-unit id="1244" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to force a row to repaint itself.</source>
        </trans-unit>
        <trans-unit id="1245" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful in owner-drawing scenarios where you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="1246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about painting and invalidation, see <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Invalidate%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1247" translate="yes" xml:space="preserve">
          <source>The index of the row to invalidate.</source>
        </trans-unit>
        <trans-unit id="1248" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows minus 1.</source>
        </trans-unit>
        <trans-unit id="1249" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current cell has uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="1250" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is not bound to data, the cell edit is considered committed when the user moves to another cell.</source>
        </trans-unit>
        <trans-unit id="1251" translate="yes" xml:space="preserve" extradata="MT">
          <source>If row headers are visible, a pencil glyph is present in the header for the row that contains a cell with uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="1252" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> is <ph id="ph2">`true`</ph> and the current cell hosts an editing control, you can retrieve it through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current cell has uncommitted changes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1254" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the currently active cell is being edited.</source>
        </trans-unit>
        <trans-unit id="1255" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCheckBoxCell&gt;</ph> that has focus is always in edit mode.</source>
        </trans-unit>
        <trans-unit id="1256" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the current cell hosts an editing control and <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellInEditMode%2A&gt;</ph> is <ph id="ph2">`true`</ph>, you can retrieve the editing control through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.EditingControl%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1257" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current cell is being edited; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1258" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the current row has uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="1259" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property returns <ph id="ph1">`true`</ph> when the pencil glyph is displayed in the row.</source>
        </trans-unit>
        <trans-unit id="1260" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A&gt;</ph> property will always equal the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> property, unless the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to a data source that supports editing, or virtual mode has been implemented to use row-level commit scope.</source>
        </trans-unit>
        <trans-unit id="1261" translate="yes" xml:space="preserve" extradata="MT">
          <source>In these cases, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> will evaluate this property at the row level.</source>
        </trans-unit>
        <trans-unit id="1262" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user navigates away from the row, the control commits all row changes.</source>
        </trans-unit>
        <trans-unit id="1263" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can also press CTRL+ENTER to commit row changes without leaving the row.</source>
        </trans-unit>
        <trans-unit id="1264" translate="yes" xml:space="preserve" extradata="MT">
          <source>To commit row changes programmatically, call the form's <ph id="ph1">&lt;xref:System.Windows.Forms.ContainerControl.Validate%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="1265" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your data source is a <ph id="ph1">&lt;xref:System.Windows.Forms.BindingSource&gt;</ph>, you can also call<ph id="ph2">&lt;xref:System.Windows.Forms.BindingSource.EndEdit%2A?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1266" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current row has uncommitted changes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1267" translate="yes" xml:space="preserve">
          <source>Determines whether a character is an input character that the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> recognizes.</source>
        </trans-unit>
        <trans-unit id="1268" translate="yes" xml:space="preserve" extradata="MT">
          <source>A character is recognized as an input character depending on whether the control is in edit mode and whether the current editing control can accept the character.</source>
        </trans-unit>
        <trans-unit id="1269" translate="yes" xml:space="preserve">
          <source>The character to test.</source>
        </trans-unit>
        <trans-unit id="1270" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the character is recognized as an input character; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1271" translate="yes" xml:space="preserve">
          <source>Determines whether the specified key is a regular input key or a special key that requires preprocessing.</source>
        </trans-unit>
        <trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="1273" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified key is a regular input key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>Provides an indexer to get or set the cell located at the intersection of the column and row with the specified indexes.</source>
        </trans-unit>
        <trans-unit id="1275" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indexer is an alternative to accessing cells through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="1276" translate="yes" xml:space="preserve">
          <source>The index of the column containing the cell.</source>
        </trans-unit>
        <trans-unit id="1277" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="1278" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> at the specified location.</source>
        </trans-unit>
        <trans-unit id="1279" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1280" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1281" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1282" translate="yes" xml:space="preserve">
          <source>Provides an indexer to get or set the cell located at the intersection of the row with the specified index and the column with the specified name.</source>
        </trans-unit>
        <trans-unit id="1283" translate="yes" xml:space="preserve" extradata="MT">
          <source>This indexer is an alternative to accessing cells through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Cells%2A&gt;</ph> collection of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="1284" translate="yes" xml:space="preserve">
          <source>The name of the column containing the cell.</source>
        </trans-unit>
        <trans-unit id="1285" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="1286" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell"&gt;&lt;/xref&gt;</ph> at the specified location.</source>
        </trans-unit>
        <trans-unit id="1287" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user is allowed to select more than one cell, row, or column of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> at a time.</source>
        </trans-unit>
        <trans-unit id="1288" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, multiple elements (cells, rows, or columns) can be selected in the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1289" translate="yes" xml:space="preserve" extradata="MT">
          <source>To select multiple elements, the user can hold down the CTRL key while clicking the elements to select.</source>
        </trans-unit>
        <trans-unit id="1290" translate="yes" xml:space="preserve" extradata="MT">
          <source>Consecutive elements can be selected by clicking the first element to select and then, while holding down the SHIFT key, clicking the last element to select.</source>
        </trans-unit>
        <trans-unit id="1291" translate="yes" xml:space="preserve" extradata="MT">
          <source>The selection scope is based on the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1292" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph>, the user can select multiple columns.</source>
        </trans-unit>
        <trans-unit id="1293" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property to allow a user to select multiple elements in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control and perform an operation on all the selected elements.</source>
        </trans-unit>
        <trans-unit id="1294" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, the user could select multiple cells and then right-click a selected cell to display a shortcut menu that displays a set of tasks to perform on the selected cells.</source>
        </trans-unit>
        <trans-unit id="1295" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine which cells, rows, or columns are selected in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, you can access the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1296" translate="yes" xml:space="preserve" extradata="MT">
          <source>To determine the number of selected cells, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.GetCellCount%2A&gt;</ph> method with an argument value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewElementStates?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1297" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A&gt;</ph> method to retrieve the number of selected rows and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnCollection.GetColumnCount%2A&gt;</ph> method to retrieve the number of columns.</source>
        </trans-unit>
        <trans-unit id="1298" translate="yes" xml:space="preserve" extradata="MT">
          <source>These methods are more efficient than accessing the collections directly when working with large amounts of data.</source>
        </trans-unit>
        <trans-unit id="1299" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="1300" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user can select more than one cell, row, or column at a time; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1301" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1302" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.MultiSelect"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1303" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1304" translate="yes" xml:space="preserve">
          <source>Gets the index of the row for new records.</source>
        </trans-unit>
        <trans-unit id="1305" translate="yes" xml:space="preserve" extradata="MT">
          <source>Unless <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the value of this property is equal to the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="1306" translate="yes" xml:space="preserve">
          <source>The index of the row for new records, or -1 if <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToAddRows"&gt;&lt;/xref&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is <ph id="ph3">`true`</ph> and the user navigates to the new row at the bottom of the <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1308" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in virtual mode, this event allows a new entry to be created in the data store for the new row, and it also allows for the row to be populated with default values.</source>
        </trans-unit>
        <trans-unit id="1309" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="1310" translate="yes" xml:space="preserve">
          <source>Notifies the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that the current cell has uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="1311" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to allow custom cell types to notify the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> when they have uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="1312" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to indicate the cell has uncommitted changes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="1313" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToAddRowsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1314" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1315" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1316" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToAddRowsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1317" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1318" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1319" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToDeleteRowsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1321" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1322" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToDeleteRowsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1323" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1324" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1325" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToOrderColumnsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1328" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToOrderColumnsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1329" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToResizeColumnsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1333" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1334" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeColumnsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1336" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1337" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToResizeRowsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1338" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1339" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1340" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAllowUserToResizeRowsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1341" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1344" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1345" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1346" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAlternatingRowsDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1347" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1348" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1349" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AutoGenerateColumnsChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1351" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoGenerateColumnsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1353" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1354" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1355" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AutoSizeColumnModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1356" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1357" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1358" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1359" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1360" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1361" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnModeEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is null.</source>
        </trans-unit>
        <trans-unit id="1362" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AutoSizeColumnsModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1363" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1364" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeColumnsModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1366" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1367" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1368" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="1369" translate="yes" xml:space="preserve">
          <source>The number of entries in the array returned by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeColumnsModeEventArgs.PreviousModes"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is not equal to the number of columns in the control.</source>
        </trans-unit>
        <trans-unit id="1370" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AutoSizeRowsModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1371" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1372" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1373" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnAutoSizeRowsModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1374" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1376" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BackgroundColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1377" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1378" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1379" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBackgroundColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1380" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1381" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.BindingContextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1383" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1384" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1385" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBindingContextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1386" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1387" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1388" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.BorderStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1389" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1390" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1391" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1392" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1393" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1394" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CancelRowEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1395" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1396" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1397" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCancelRowEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1398" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1399" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.QuestionEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1400" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellBeginEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1401" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1402" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see<bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1403" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellBeginEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1405" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1406" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellCancelEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1407" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1408" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellCancelEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1409" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellBorderStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1410" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1411" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1412" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1413" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1415" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1416" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1417" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see<bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1418" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1419" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1420" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1421" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1422" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1423" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1424" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellContentClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1425" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1426" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1427" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1428" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1429" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains information regarding the cell whose content was clicked.</source>
        </trans-unit>
        <trans-unit id="1430" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1431" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1432" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1433" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellContentDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1434" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1435" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1436" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContentDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1437" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1438" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1439" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1440" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1441" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1442" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellContextMenuStripChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1443" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1444" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1445" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1446" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1447" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1448" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1449" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1450" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1451" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellContextMenuStripNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1452" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1453" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1454" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellContextMenuStripNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1455" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1456" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellContextMenuStripNeededEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1457" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1458" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1459" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1460" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1461" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1462" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1463" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1464" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1465" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1466" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1467" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1468" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1469" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellEndEdit"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1470" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1471" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1472" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEndEdit%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1473" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1474" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1475" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1476" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1477" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1478" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellEnter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1479" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1480" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1482" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1483" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1484" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1485" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1486" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1487" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellErrorTextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1490" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellErrorTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1491" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1492" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1493" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than -1 or greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1494" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1495" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than -1 or greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1496" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellErrorTextNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1497" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1498" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1499" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellErrorTextNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1500" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1501" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellErrorTextNeededEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1502" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1503" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1504" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1505" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellFormatting"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1506" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1507" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellFormatting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1509" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1510" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellFormattingEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1511" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellFormattingEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1512" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1513" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellFormattingEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1514" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1515" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1516" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see<bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1517" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1518" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1519" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1520" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1521" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1522" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1523" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1524" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1525" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1526" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1527" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1528" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1529" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1530" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1531" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1532" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1533" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, double-clicking a cell puts the cell in edit mode.</source>
        </trans-unit>
        <trans-unit id="1534" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1535" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1536" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1537" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1538" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1539" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1540" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1541" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1542" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1543" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1544" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1545" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1546" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1547" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1548" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1549" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1550" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1551" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1552" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseEnter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1553" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1554" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see<bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1555" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1556" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1557" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1558" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1559" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1560" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1561" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1562" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1563" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1564" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1565" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1566" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1567" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1568" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1569" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1570" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseMove"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1571" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1572" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1573" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1574" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1575" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1576" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1577" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1578" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1579" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellMouseUp"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1580" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1581" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1582" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1583" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1584" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1585" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1586" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1587" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1588" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellPainting"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1589" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1590" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1591" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellPainting%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1592" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1593" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellPaintingEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1594" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellPaintingEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1595" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1596" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellPaintingEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1597" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellParsing"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1599" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1600" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellParsing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1601" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1602" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellParsingEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1603" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellParsingEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1604" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1605" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellParsingEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1606" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellStateChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1607" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1608" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1609" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1610" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1611" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStateChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1612" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1613" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1614" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1616" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1617" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1618" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1619" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1620" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1621" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellStyleContentChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1622" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1623" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1624" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellStyleContentChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1625" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1626" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyleContentChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1627" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellToolTipTextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1628" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1629" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1630" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellToolTipTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1631" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1632" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the cell.</source>
        </trans-unit>
        <trans-unit id="1633" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1634" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1635" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1636" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellToolTipTextNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1637" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1638" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1639" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellToolTipTextNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1640" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1641" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1642" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1643" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1644" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1645" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellValidated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1646" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1647" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1648" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1649" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1650" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1651" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1652" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1653" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1654" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellValidating"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1655" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1656" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1657" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1658" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1659" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValidatingEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1660" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValidatingEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1661" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1662" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValidatingEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1663" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellValueChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1664" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1665" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1666" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValueChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1667" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1668" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1669" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1670" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1671" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1672" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellValueNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1673" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1674" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1675" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValueNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1676" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1677" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValueEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1678" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than zero or greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1679" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1680" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than zero or greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1681" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CellValuePushed"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1682" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1683" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1684" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCellValuePushed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1685" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1686" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValueEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1687" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValueEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than zero or greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1688" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="1689" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellValueEventArgs.RowIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than zero or greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1690" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnAdded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1691" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1692" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1693" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1694" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1695" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1696" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1697" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnContextMenuStripChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1698" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1699" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1700" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1701" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1702" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1703" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1704" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnDataPropertyNameChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1705" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1706" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1707" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDataPropertyNameChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1708" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1709" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1710" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1711" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnDefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1712" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1713" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1714" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1715" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1716" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1717" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1718" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnDisplayIndexChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1719" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1720" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1721" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDisplayIndexChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1722" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1723" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1724" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1725" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnDividerDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1726" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1727" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1728" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDividerDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1729" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1730" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnDividerDoubleClickEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1731" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnDividerWidthChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1732" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1733" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1734" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnDividerWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1735" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1736" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1737" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1738" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeaderCellChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1739" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1740" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1741" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderCellChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1742" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1743" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1744" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1745" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeaderMouseClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1746" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1747" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1748" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1749" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1750" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1751" translate="yes" xml:space="preserve">
          <source>The value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs.ColumnIndex"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> is less than zero or greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="1752" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeaderMouseDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1753" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1754" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1755" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeaderMouseDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1756" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1757" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the cell and the position of the mouse pointer.</source>
        </trans-unit>
        <trans-unit id="1758" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersBorderStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1759" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1760" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1761" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1762" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1763" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1764" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1765" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1766" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1767" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1768" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1769" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1770" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersHeightChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1771" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1772" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1773" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1774" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1775" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1776" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1777" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1778" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1779" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnHeadersHeightSizeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1780" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1781" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1782" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnMinimumWidthChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1783" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1784" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1785" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnMinimumWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1786" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1787" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1788" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1789" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnNameChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1790" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1791" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1792" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnNameChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1793" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1794" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1795" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1796" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnRemoved"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1797" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1798" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1799" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1800" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1801" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1802" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnSortModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1803" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1804" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1805" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnSortModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1806" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1807" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1808" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1809" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnStateChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1810" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1811" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1812" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1813" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1814" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnStateChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1815" translate="yes" xml:space="preserve">
          <source>The column changed from read-only to read/write, enabling the current cell to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1816" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnToolTipTextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1817" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1818" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1819" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnToolTipTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1820" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1821" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the column.</source>
        </trans-unit>
        <trans-unit id="1822" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1823" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ColumnWidthChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1824" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1825" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1826" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnColumnWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1827" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1828" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1829" translate="yes" xml:space="preserve">
          <source>The column indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumnEventArgs.Column"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="1830" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CurrentCellChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1831" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1832" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1833" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCurrentCellChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1835" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1836" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.CurrentCellDirtyStateChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1837" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1838" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1839" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCurrentCellDirtyStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1840" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1841" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1842" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.CursorChanged"&gt;&lt;/xref&gt;</ph> event and updates the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.UserSetCursor"&gt;&lt;/xref&gt;</ph> property if the cursor was changed in user code.</source>
        </trans-unit>
        <trans-unit id="1843" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control changes the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property value depending on the location of the mouse pointer.</source>
        </trans-unit>
        <trans-unit id="1844" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.UserSetCursor%2A&gt;</ph> property stores the normal value of the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property and ignores the control's changes.</source>
        </trans-unit>
        <trans-unit id="1845" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called when the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.CursorChanged&gt;</ph> event occurs, and it updates the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.UserSetCursor%2A&gt;</ph> property, if necessary, in addition to invoking any event handlers.</source>
        </trans-unit>
        <trans-unit id="1846" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1847" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1848" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnCursorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1849" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1850" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1851" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataBindingComplete"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1852" translate="yes" xml:space="preserve" extradata="MT">
          <source>Binding operations occur when the data changes while a <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager&gt;</ph> is in use.</source>
        </trans-unit>
        <trans-unit id="1853" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Forms.CurrencyManager.ListChanged&gt;</ph> event occurs, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> will update its view and raise the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataBindingComplete&gt;</ph> event when it is finished.</source>
        </trans-unit>
        <trans-unit id="1854" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewBindingCompleteEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1855" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1856" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1857" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1858" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataError%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1859" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1860" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to display an error dialog box if there is no handler for the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1861" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1862" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataMemberChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1863" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1864" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1865" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataMemberChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1866" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1867" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1868" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSourceChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1869" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1870" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1871" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDataSourceChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1872" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1873" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1874" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1876" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1877" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1878" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1879" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1880" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DefaultValuesNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1881" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1882" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1883" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDefaultValuesNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1884" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1885" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1886" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.DoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1887" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1888" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1889" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1890" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1891" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1892" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.EditingControlShowing"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1893" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1894" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1895" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEditingControlShowing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1896" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1897" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewEditingControlShowingEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the editing control.</source>
        </trans-unit>
        <trans-unit id="1898" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.EditModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1899" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.EditModeChanged&gt;</ph> event is raised whenever the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EditMode%2A&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="1900" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1901" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1902" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEditModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1903" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1904" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1905" translate="yes" xml:space="preserve">
          <source>When entering edit mode, the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1906" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.EnabledChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1907" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1908" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Enter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1909" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1910" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1911" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1912" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1913" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1914" translate="yes" xml:space="preserve">
          <source>The control is configured to enter edit mode when it receives focus, but upon entering focus, the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1915" translate="yes" xml:space="preserve">
          <source>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1916" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1917" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.FontChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1918" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to raising the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> event, this method uses the new value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property to update the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.Font%2A&gt;</ph> properties of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> objects returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersDefaultCellStyle%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph>properties.</source>
        </trans-unit>
        <trans-unit id="1919" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1920" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1921" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnFontChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1922" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1923" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1924" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ForeColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1925" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to raising the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.FontChanged&gt;</ph> event, this method uses the new value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ForeColor%2A&gt;</ph> property to update the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> property of <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="1926" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1927" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1928" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnForeColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1929" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1930" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1931" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.GotFocus"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1932" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1933" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.GridColorChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1934" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1935" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1936" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnGridColorChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1937" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1938" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1939" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleCreated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1941" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1942" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnHandleCreated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1943" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1944" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1945" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.HandleDestroyed"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1946" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1947" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1948" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1950" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1951" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1952" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1953" translate="yes" xml:space="preserve">
          <source>This action would cause the control to enter edit mode but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1954" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1955" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyPress"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1956" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1957" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1958" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyPress%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1959" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1960" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyPressEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1961" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.KeyUp"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1962" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1963" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1964" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnKeyUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1965" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1966" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.KeyEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1967" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Layout"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1968" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1969" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1970" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnLayout%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1971" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1972" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.LayoutEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1973" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Leave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1974" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1975" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1976" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1977" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1978" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1979" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.LostFocus"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1980" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1981" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1982" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1983" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1984" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1985" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1986" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1987" translate="yes" xml:space="preserve">
          <source>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1988" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1989" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1990" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1991" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseDown"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="1992" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="1993" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="1994" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseDown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="1995" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="1996" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="1997" translate="yes" xml:space="preserve">
          <source>The control is configured to enter edit mode when it receives focus, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="1998" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="1999" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2000" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2001" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2002" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2003" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2004" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2005" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2006" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2007" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseMove"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2008" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2009" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2010" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseMove%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2011" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2012" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2013" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseUp"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2014" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2015" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2016" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMouseUp%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2017" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2018" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2019" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.MouseWheel"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2020" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.MouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2021" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.MultiSelectChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2022" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2023" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2024" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnMultiSelectChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2025" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2026" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2027" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.NewRowNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2028" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2029" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2030" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnNewRowNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2031" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2032" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2033" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2034" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Paint"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2035" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2036" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2037" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2038" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2039" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.PaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2040" translate="yes" xml:space="preserve">
          <source>Any exceptions that occur during this method are ignored unless they are one of the following:</source>
        </trans-unit>
        <trans-unit id="2041" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ReadOnlyChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2042" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2043" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2044" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnReadOnlyChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2045" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2046" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2047" translate="yes" xml:space="preserve">
          <source>The control changed from read-only to read/write, enabling the current cell to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2048" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Resize"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2049" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2050" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2051" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnResize%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2052" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2053" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2054" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.RightToLeftChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2055" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2056" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowContextMenuStripChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2057" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2058" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2059" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2060" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2061" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2062" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2063" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowContextMenuStripNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2064" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2065" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="2066" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowContextMenuStripNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2067" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2068" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2069" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowDefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2070" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2071" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2072" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2073" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2074" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2075" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2076" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowDirtyStateNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2077" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2078" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2079" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDirtyStateNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2080" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2081" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.QuestionEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2082" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowDividerDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2083" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2084" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2085" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDividerDoubleClick%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2086" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2087" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowDividerDoubleClickEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2088" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowDividerHeightChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2089" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2090" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2091" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowDividerHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2092" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2093" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2094" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2095" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowEnter"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2096" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2097" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="2098" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2099" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2100" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2101" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowErrorTextChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2103" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowErrorTextChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2105" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2106" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2107" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2108" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowErrorTextNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="2111" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowErrorTextNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2112" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2113" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2114" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeaderCellChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2116" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeaderCellChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2118" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2119" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2120" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2121" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeaderMouseClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2122" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the mouse and the header cell that was clicked.</source>
        </trans-unit>
        <trans-unit id="2123" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeaderMouseDoubleClick"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2124" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellMouseEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the mouse and the header cell that was double-clicked.</source>
        </trans-unit>
        <trans-unit id="2125" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersBorderStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersBorderStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2129" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2130" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2131" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2133" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2136" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2137" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersWidthChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2139" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2141" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2142" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2143" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersWidthSizeModeChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2144" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2145" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeadersWidthSizeModeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2147" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeModeEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2149" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeightChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2150" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2151" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2153" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2154" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2155" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2156" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeightInfoNeeded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2158" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2159" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightInfoNeeded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2160" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2161" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeightInfoNeededEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2162" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeightInfoPushed"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2164" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2165" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowHeightInfoPushed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2167" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeightInfoPushedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2168" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowLeave"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowLeave%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2172" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2173" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2174" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowMinimumHeightChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2176" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowMinimumHeightChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2180" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2181" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowPostPaint"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2182" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2183" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2184" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowPostPaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2185" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2186" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowPostPaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2187" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowPrePaint"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2189" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowPrePaint%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2192" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowPrePaintEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2193" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowsAdded"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2195" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsAdded%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2197" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2198" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowsAddedEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the added rows.</source>
        </trans-unit>
        <trans-unit id="2199" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowsDefaultCellStyleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2200" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2201" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2202" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsDefaultCellStyleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2203" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2204" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2205" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowsRemoved"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2206" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2208" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowsRemoved%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2209" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2210" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowsRemovedEventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the deleted rows.</source>
        </trans-unit>
        <trans-unit id="2211" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowStateChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2212" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2213" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2214" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowStateChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2215" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2216" translate="yes" xml:space="preserve">
          <source>The index of the row that is changing state.</source>
        </trans-unit>
        <trans-unit id="2217" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowStateChangedEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2218" translate="yes" xml:space="preserve">
          <source>The row changed from read-only to read/write, enabling the current cell to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2219" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowUnshared"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2221" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowUnshared%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2223" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2224" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2225" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2226" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowValidated"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2227" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2228" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2229" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowValidated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2230" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2232" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowValidating"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2233" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2234" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2235" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnRowValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2236" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2237" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2238" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.Scroll"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2239" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2240" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnScroll%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2243" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2244" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.SelectionChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2245" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2246" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSelectionChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2248" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2249" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains information about the event.</source>
        </trans-unit>
        <trans-unit id="2250" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.SortCompare"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2252" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2253" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSortCompare%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2254" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2255" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSortCompareEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2256" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.Sorted"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2258" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2259" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnSorted%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2260" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2261" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2262" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.UserAddedRow"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2264" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2265" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserAddedRow%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2266" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2267" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2268" translate="yes" xml:space="preserve">
          <source>The row indicated by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs.Row"&gt;&lt;/xref&gt;</ph> property of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">e</ph><ept id="p1">&lt;/code&gt;</ept> does not belong to this <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2269" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.UserDeletedRow"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2270" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2271" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="2272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserDeletedRow%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2273" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2274" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2275" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.UserDeletingRow"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2277" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2278" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnUserDeletingRow%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2279" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2280" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowCancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2281" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Validating"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2282" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to raising the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating&gt;</ph> event, this method ends the current cell edit and validates the cell and row values.</source>
        </trans-unit>
        <trans-unit id="2283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Raising an event invokes the event handler through a delegate.</source>
        </trans-unit>
        <trans-unit id="2284" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: Raising an Event<ept id="p1">](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2)</ept>.</source>
        </trans-unit>
        <trans-unit id="2285" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.OnValidating%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.</source>
        </trans-unit>
        <trans-unit id="2286" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the preferred technique for handling the event in a derived class.</source>
        </trans-unit>
        <trans-unit id="2287" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ComponentModel.CancelEventArgs"&gt;&lt;/xref&gt;</ph> that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2288" translate="yes" xml:space="preserve">
          <source>Validation failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2289" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2290" translate="yes" xml:space="preserve">
          <source>Raises the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.VisibleChanged"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2291" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.EventArgs"&gt;&lt;/xref&gt;</ph> object that contains the event data.</source>
        </trans-unit>
        <trans-unit id="2292" translate="yes" xml:space="preserve">
          <source>This property is not relevant for this control.</source>
        </trans-unit>
        <trans-unit id="2293" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not relevant for this control.</source>
        </trans-unit>
        <trans-unit id="2294" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Padding"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="2295" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.Padding"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Padding%2A&gt;</ph> property is not relevant for this control, although you can change its value and respond to such changes by handling this event.</source>
        </trans-unit>
        <trans-unit id="2297" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2298" translate="yes" xml:space="preserve">
          <source>Paints the background of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2299" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`clipBounds`</ph> parameter represents the area of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> that needs to be repainted.</source>
        </trans-unit>
        <trans-unit id="2300" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if a user covers the entire <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> with another window and then uncovers it, then <ph id="ph2">`clipBounds`</ph> represents the entire <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2301" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a user covers a small area of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> and then uncovers it, then <ph id="ph2">`clipBounds`</ph> represents the small area that was covered.</source>
        </trans-unit>
        <trans-unit id="2302" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Drawing.Graphics"&gt;&lt;/xref&gt;</ph> used to paint the background.</source>
        </trans-unit>
        <trans-unit id="2303" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the area of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> that needs to be painted.</source>
        </trans-unit>
        <trans-unit id="2304" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Drawing.Rectangle"&gt;&lt;/xref&gt;</ph> that represents the area in which cells are drawn.</source>
        </trans-unit>
        <trans-unit id="2305" translate="yes" xml:space="preserve">
          <source>Processes the A key.</source>
        </trans-unit>
        <trans-unit id="2306" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> when the user presses CTRL+A and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2307" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this selects all cells in the control.</source>
        </trans-unit>
        <trans-unit id="2308" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2309" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2310" translate="yes" xml:space="preserve">
          <source>Processes keys used for navigating in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2311" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method calls the key-processing method appropriate to the key pressed (for example, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ProcessF2Key%2A&gt;</ph> method when F2 is pressed) and returns the return value of that method.</source>
        </trans-unit>
        <trans-unit id="2312" translate="yes" xml:space="preserve">
          <source>Contains information about the key that was pressed.</source>
        </trans-unit>
        <trans-unit id="2313" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2314" translate="yes" xml:space="preserve">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2315" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2316" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2317" translate="yes" xml:space="preserve">
          <source>The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2318" translate="yes" xml:space="preserve">
          <source>Processes the DELETE key.</source>
        </trans-unit>
        <trans-unit id="2319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method returns <ph id="ph1">`true`</ph> when the user presses DELETE to delete rows in the control.</source>
        </trans-unit>
        <trans-unit id="2320" translate="yes" xml:space="preserve" extradata="MT">
          <source>The user can delete rows if the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect&gt;</ph> and the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.MultiSelect%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2321" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is bound to data, the <ph id="ph2">&lt;xref:System.ComponentModel.IBindingList.AllowRemove%2A?displayProperty=fullName&gt;</ph> property of the data source must also be set to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2322" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2323" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2324" translate="yes" xml:space="preserve">
          <source>The DELETE key would delete one or more rows, but an error in the data source prevents the deletion and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2325" translate="yes" xml:space="preserve">
          <source>Processes keys, such as the TAB, ESCAPE, ENTER, and ARROW keys, used to control dialog boxes.</source>
        </trans-unit>
        <trans-unit id="2326" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called in edit mode to handle keyboard input that is not handled by the hosted editing control.</source>
        </trans-unit>
        <trans-unit id="2327" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a key press is determined to not be an input key, it will be sent to the base class for processing.</source>
        </trans-unit>
        <trans-unit id="2328" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2329" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2330" translate="yes" xml:space="preserve">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2331" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2332" translate="yes" xml:space="preserve">
          <source>Processes the DOWN ARROW key.</source>
        </trans-unit>
        <trans-unit id="2333" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2334" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2335" translate="yes" xml:space="preserve">
          <source>The DOWN ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2336" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2337" translate="yes" xml:space="preserve">
          <source>Processes the END key.</source>
        </trans-unit>
        <trans-unit id="2338" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2340" translate="yes" xml:space="preserve">
          <source>The END key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2341" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2342" translate="yes" xml:space="preserve">
          <source>Processes the ENTER key.</source>
        </trans-unit>
        <trans-unit id="2343" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2345" translate="yes" xml:space="preserve">
          <source>The ENTER key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2346" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2347" translate="yes" xml:space="preserve">
          <source>Processes the ESC key.</source>
        </trans-unit>
        <trans-unit id="2348" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2349" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2350" translate="yes" xml:space="preserve">
          <source>Processes the F2 key.</source>
        </trans-unit>
        <trans-unit id="2351" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2352" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2353" translate="yes" xml:space="preserve">
          <source>The F2 key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2354" translate="yes" xml:space="preserve">
          <source>The F2 key would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2355" translate="yes" xml:space="preserve">
          <source>Processes the HOME key.</source>
        </trans-unit>
        <trans-unit id="2356" translate="yes" xml:space="preserve">
          <source>The key that was pressed.</source>
        </trans-unit>
        <trans-unit id="2357" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2358" translate="yes" xml:space="preserve">
          <source>The HOME key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2359" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2360" translate="yes" xml:space="preserve">
          <source>Processes the INSERT key.</source>
        </trans-unit>
        <trans-unit id="2361" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="2362" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2363" translate="yes" xml:space="preserve">
          <source>Processes a key message and generates the appropriate control events.</source>
        </trans-unit>
        <trans-unit id="2364" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A?displayProperty=fullName&gt;</ph> method on the base class.</source>
        </trans-unit>
        <trans-unit id="2365" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="2366" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2367" translate="yes" xml:space="preserve">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2368" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2369" translate="yes" xml:space="preserve">
          <source>Previews a keyboard message.</source>
        </trans-unit>
        <trans-unit id="2370" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.ProcessKeyPreview%2A?displayProperty=fullName&gt;</ph> method on the base class.</source>
        </trans-unit>
        <trans-unit id="2371" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="2372" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2373" translate="yes" xml:space="preserve">
          <source>The key pressed would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2374" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2375" translate="yes" xml:space="preserve">
          <source>Processes the LEFT ARROW key.</source>
        </trans-unit>
        <trans-unit id="2376" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2377" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2378" translate="yes" xml:space="preserve">
          <source>The LEFT ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2379" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2380" translate="yes" xml:space="preserve">
          <source>Processes the PAGE DOWN key.</source>
        </trans-unit>
        <trans-unit id="2381" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2382" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2383" translate="yes" xml:space="preserve">
          <source>The PAGE DOWN key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2384" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2385" translate="yes" xml:space="preserve">
          <source>Processes the PAGE UP key.</source>
        </trans-unit>
        <trans-unit id="2386" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2387" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2388" translate="yes" xml:space="preserve">
          <source>The PAGE UP key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2389" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2390" translate="yes" xml:space="preserve">
          <source>Processes the RIGHT ARROW key.</source>
        </trans-unit>
        <trans-unit id="2391" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2392" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2393" translate="yes" xml:space="preserve">
          <source>The RIGHT ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2394" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2395" translate="yes" xml:space="preserve">
          <source>Processes the SPACEBAR.</source>
        </trans-unit>
        <trans-unit id="2396" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key to process.</source>
        </trans-unit>
        <trans-unit id="2397" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2398" translate="yes" xml:space="preserve">
          <source>Processes the TAB key.</source>
        </trans-unit>
        <trans-unit id="2399" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2400" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2401" translate="yes" xml:space="preserve">
          <source>The TAB key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2402" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2403" translate="yes" xml:space="preserve">
          <source>Processes the UP ARROW key.</source>
        </trans-unit>
        <trans-unit id="2404" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2405" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2406" translate="yes" xml:space="preserve">
          <source>The UP ARROW key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the new current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2407" translate="yes" xml:space="preserve">
          <source>This action would commit a cell value or enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2408" translate="yes" xml:space="preserve">
          <source>Processes the 0 key.</source>
        </trans-unit>
        <trans-unit id="2409" translate="yes" xml:space="preserve">
          <source>A bitwise combination of <ph id="ph1">&lt;xref href="System.Windows.Forms.Keys"&gt;&lt;/xref&gt;</ph> values that represents the key or keys to process.</source>
        </trans-unit>
        <trans-unit id="2410" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the key was processed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2411" translate="yes" xml:space="preserve">
          <source>The 0 key would cause the control to enter edit mode, but the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property of the current cell does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2412" translate="yes" xml:space="preserve">
          <source>This action would cause the control to enter edit mode, but an error in the data source prevents the action and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2413" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the user can edit the cells of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2414" translate="yes" xml:space="preserve" extradata="MT">
          <source>A cell is read-only if the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ReadOnly%2A&gt;</ph> property is <ph id="ph2">`true`</ph> for the cell, the cell's row, the cell's column, or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2415" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the user cannot edit the cells of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2416" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2417" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">`true`</ph>, the current cell is in edit mode, and the current cell contains changes that cannot be committed.</source>
        </trans-unit>
        <trans-unit id="2418" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property would cause the control to enter edit mode, but initialization of the editing cell value failed and either there is no handler for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event or the handler has set the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewDataErrorEventArgs.ThrowException"&gt;&lt;/xref&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2419" translate="yes" xml:space="preserve">
          <source>The exception object can typically be cast to type <ph id="ph1">&lt;xref href="System.FormatException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2420" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.ReadOnly"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2421" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2422" translate="yes" xml:space="preserve">
          <source>Refreshes the value of the current cell with the underlying cell value when the cell is in edit mode, discarding any previous value.</source>
        </trans-unit>
        <trans-unit id="2423" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method to force a cell to update its display value in edit mode.</source>
        </trans-unit>
        <trans-unit id="2424" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when an external process modifies the cell value and you want to notify the user of the change, even when a user-specified change is lost as a result.</source>
        </trans-unit>
        <trans-unit id="2425" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if successful; <ph id="ph2">`false`</ph> if a <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridView.DataError"&gt;&lt;/xref&gt;</ph> event occurred.</source>
        </trans-unit>
        <trans-unit id="2426" translate="yes" xml:space="preserve">
          <source>Resets the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.Text"&gt;&lt;/xref&gt;</ph> property to its default value.</source>
        </trans-unit>
        <trans-unit id="2427" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although this method behaves as described, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Text%2A&gt;</ph> property is not relevant for this control.</source>
        </trans-unit>
        <trans-unit id="2428" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.ContextMenuStrip"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2429" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2430" translate="yes" xml:space="preserve">
          <source>Occurs when a row's shortcut menu is needed.</source>
        </trans-unit>
        <trans-unit id="2431" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2432" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event is useful when you want to display a shortcut menu determined by a row's current state or the values it contains.</source>
        </trans-unit>
        <trans-unit id="2433" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event, the shortcut menu that you specify in the handler is shown whenever the user right-clicks a row unless the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellContextMenuStripNeeded&gt;</ph> overrides the shortcut menu for the specific cell that was clicked.</source>
        </trans-unit>
        <trans-unit id="2434" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph> property is retrieved, either programmatically or when the user right-clicks a row.</source>
        </trans-unit>
        <trans-unit id="2435" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.RowIndex%2A?displayProperty=fullName&gt;</ph> property to determine the state of a row or the values it contains, and use this information to change or modify the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowContextMenuStripNeededEventArgs.ContextMenuStrip%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2436" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is initialized with the value of the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> property, which the event value overrides.</source>
        </trans-unit>
        <trans-unit id="2437" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowContextMenuStripNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ContextMenuStrip%2A&gt;</ph> value for multiple rows.</source>
        </trans-unit>
        <trans-unit id="2438" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2439" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2440" translate="yes" xml:space="preserve">
          <source>Gets or sets the number of rows displayed in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2441" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> is set to a value less than the current value, rows will be removed from the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2442" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> is set to a value greater than the current value, rows will be added to the end of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2443" translate="yes" xml:space="preserve" extradata="MT">
          <source>The additional rows are based on the row specified in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2444" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property to 0, all rows will be removed from the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2445" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is equivalent to calling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2446" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> is <ph id="ph2">`true`</ph>, you cannot set <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> to 0.</source>
        </trans-unit>
        <trans-unit id="2447" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A?displayProperty=fullName&gt;</ph> method to remove all rows except the row for new records.</source>
        </trans-unit>
        <trans-unit id="2448" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.Clear%2A&gt;</ph> has the same result as setting <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> to 1 in this case, but is much faster.</source>
        </trans-unit>
        <trans-unit id="2449" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property can be used with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ColumnCount%2A&gt;</ph> property to create a simple <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> for displaying and editing text.</source>
        </trans-unit>
        <trans-unit id="2450" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowCount%2A&gt;</ph> property to a value greater than 0 for a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control without columns, a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> is added automatically.</source>
        </trans-unit>
        <trans-unit id="2451" translate="yes" xml:space="preserve">
          <source>The number of rows to display in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2452" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than 0.</source>
        </trans-unit>
        <trans-unit id="2453" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2454" translate="yes" xml:space="preserve">
          <source>The specified value is less than 1 and <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.AllowUserToAddRows"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2455" translate="yes" xml:space="preserve">
          <source>When setting this property, the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> property is set.</source>
        </trans-unit>
        <trans-unit id="2456" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewBand.DefaultCellStyle"&gt;&lt;/xref&gt;</ph> property for a row changes.</source>
        </trans-unit>
        <trans-unit id="2457" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when any property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a row is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.DefaultCellStyle%2A&gt;</ph> property for a row is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="2458" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2459" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> property of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control is <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> needs to determine whether the current row has uncommitted changes.</source>
        </trans-unit>
        <trans-unit id="2460" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, this event sets the <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph> if any cells in the current row have been modified.</source>
        </trans-unit>
        <trans-unit id="2461" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CancelRowEdit&gt;</ph> event to occur when the user reverts edits to a row.</source>
        </trans-unit>
        <trans-unit id="2462" translate="yes" xml:space="preserve" extradata="MT">
          <source>Users can revert edits to a row by pressing ESC twice when a cell is in edit mode or once outside of edit mode.</source>
        </trans-unit>
        <trans-unit id="2463" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can be used for customizing commit scope in virtual mode by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.QuestionEventArgs.Response%2A?displayProperty=fullName&gt;</ph> property to the correct value depending on the chosen commit scope.</source>
        </trans-unit>
        <trans-unit id="2464" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2465" translate="yes" xml:space="preserve">
          <source>Occurs when the user double-clicks the divider between two rows.</source>
        </trans-unit>
        <trans-unit id="2466" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to customize the automatic sizing behavior that occurs when a user double-clicks a row divider.</source>
        </trans-unit>
        <trans-unit id="2467" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DividerWidth%2A&gt;</ph> property does not extend the area in which a user can double-click.</source>
        </trans-unit>
        <trans-unit id="2468" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the height of a divider has been increased through the use of this property, this event occurs when the user double-clicks the boundary between the divider and the adjacent column.</source>
        </trans-unit>
        <trans-unit id="2469" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2470" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.DividerHeight"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2471" translate="yes" xml:space="preserve" extradata="MT">
          <source>The divider height is modified by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.DividerHeight%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2472" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2473" translate="yes" xml:space="preserve">
          <source>Occurs when a row receives input focus but before it becomes the current row.</source>
        </trans-unit>
        <trans-unit id="2474" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is initially loaded, as well as when the user selects a row other than the current row.</source>
        </trans-unit>
        <trans-unit id="2475" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs before the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentRow%2A&gt;</ph> property is updated.</source>
        </trans-unit>
        <trans-unit id="2476" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the index of the newly-entered row, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellEventArgs.RowIndex%2A?displayProperty=fullName&gt;</ph> property within the event handler.</source>
        </trans-unit>
        <trans-unit id="2477" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2478" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.ErrorText"&gt;&lt;/xref&gt;</ph> property of a row changes.</source>
        </trans-unit>
        <trans-unit id="2479" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2480" translate="yes" xml:space="preserve">
          <source>Occurs when a row's error text is needed.</source>
        </trans-unit>
        <trans-unit id="2481" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event occurs only when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is set or its <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph5">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2482" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event is useful when you want to determine the error for a row depending on its state and the values it contains.</source>
        </trans-unit>
        <trans-unit id="2483" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event and specify error text in the handler, an error glyph appears in the row header unless the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.ShowRowErrors%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2484" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user moves the mouse pointer over the error glyph, the error text appears in a ToolTip.</source>
        </trans-unit>
        <trans-unit id="2485" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event also occurs whenever the value of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A?displayProperty=fullName&gt;</ph> property is retrieved.</source>
        </trans-unit>
        <trans-unit id="2486" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.RowIndex%2A?displayProperty=fullName&gt;</ph> property to determine the state of a row or the values it contains, and use this information to change or modify the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowErrorTextNeededEventArgs.ErrorText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2487" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is initialized with the value of the row <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> property, which the event value overrides.</source>
        </trans-unit>
        <trans-unit id="2488" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event when working with large amounts of data to avoid the performance penalties of setting the row <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> value for multiple rows.</source>
        </trans-unit>
        <trans-unit id="2489" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2490" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2491" translate="yes" xml:space="preserve">
          <source>Occurs when the user changes the contents of a row header cell.</source>
        </trans-unit>
        <trans-unit id="2492" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2493" translate="yes" xml:space="preserve">
          <source>Occurs when the user clicks within the boundaries of a row header.</source>
        </trans-unit>
        <trans-unit id="2494" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2495" translate="yes" xml:space="preserve">
          <source>Occurs when a row header is double-clicked.</source>
        </trans-unit>
        <trans-unit id="2496" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2497" translate="yes" xml:space="preserve">
          <source>Gets or sets the border style of the row header cells.</source>
        </trans-unit>
        <trans-unit id="2498" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> property is set to anything other than <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Single&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.GridColor%2A&gt;</ph> property must be a system color.</source>
        </trans-unit>
        <trans-unit id="2499" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot set this property to the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom&gt;</ph> value, which is a read-only value indicating that the border style has been customized through the use of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.AdvancedRowHeadersBorderStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2500" translate="yes" xml:space="preserve" extradata="MT">
          <source>If visual styles are enabled for the application through the <ph id="ph1">&lt;xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=fullName&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.EnableHeadersVisualStyles%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the row headers are painted using the current theme.</source>
        </trans-unit>
        <trans-unit id="2501" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersBorderStyle%2A&gt;</ph> property is ignored for all row headers except the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.TopLeftHeaderCell%2A&gt;</ph>, to which the theme is not applied.</source>
        </trans-unit>
        <trans-unit id="2502" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderBorderStyle"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="2503" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderBorderStyle"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="2504" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderBorderStyle.Custom"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2505" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersBorderStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2506" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2507" translate="yes" xml:space="preserve">
          <source>Gets or sets the default style applied to the row header cells.</source>
        </trans-unit>
        <trans-unit id="2508" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by this property has the following initial property values.</source>
        </trans-unit>
        <trans-unit id="2509" translate="yes" xml:space="preserve" extradata="MT">
          <source>DataGridViewCellStyle property</source>
        </trans-unit>
        <trans-unit id="2510" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default value</source>
        </trans-unit>
        <trans-unit id="2511" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Control%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2512" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.WindowText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2513" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.Highlight%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2514" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Drawing.SystemBrushes.HighlightText%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2515" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Font%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2516" translate="yes" xml:space="preserve" extradata="MT">
          <source>These values automatically override the values set through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2517" translate="yes" xml:space="preserve" extradata="MT">
          <source>To force row headers to inherit the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> values, you must set the values in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> object to the default values indicated for the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="2518" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about cell style inheritance, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2519" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> that represents the default style applied to the row header cells.</source>
        </trans-unit>
        <trans-unit id="2520" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2521" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when a property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="2522" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Events<ept id="p1">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.</source>
        </trans-unit>
        <trans-unit id="2523" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the column that contains row headers is displayed.</source>
        </trans-unit>
        <trans-unit id="2524" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersVisible%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, a row whose <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewBand.Resizable%2A&gt;</ph> property is set to <ph id="ph4">`true`</ph> can still be resized in the user interface (UI) by clicking the mouse cursor anywhere along the bottom border of the row to be resized.</source>
        </trans-unit>
        <trans-unit id="2525" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the column that contains row headers is displayed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2526" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2527" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">`false`</ph> and the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.AutoSizeRowsMode"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.AllHeaders"&gt;&lt;/xref&gt;</ph> or <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridViewAutoSizeRowsMode.DisplayedHeaders"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2528" translate="yes" xml:space="preserve">
          <source>Gets or sets the width, in pixels, of the column that contains the row headers.</source>
        </trans-unit>
        <trans-unit id="2529" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> property can be used to resize the row header column to a specified width.</source>
        </trans-unit>
        <trans-unit id="2530" translate="yes" xml:space="preserve" extradata="MT">
          <source>To adjust the width of this column to fit the contents of the row header cells, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="2531" translate="yes" xml:space="preserve">
          <source>The width, in pixels, of the column that contains row headers.</source>
        </trans-unit>
        <trans-unit id="2532" translate="yes" xml:space="preserve">
          <source>The default is 43.</source>
        </trans-unit>
        <trans-unit id="2533" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is less than the minimum width of 4 pixels or is greater than the maximum width of 32768 pixels.</source>
        </trans-unit>
        <trans-unit id="2534" translate="yes" xml:space="preserve">
          <source>Occurs when value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersWidth"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2535" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2536" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the width of the row headers is adjustable and whether it can be adjusted by the user or is automatically adjusted to fit the contents of the headers.</source>
        </trans-unit>
        <trans-unit id="2537" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this property is set to an automatic sizing mode, the width of the row headers cannot be adjusted by the user.</source>
        </trans-unit>
        <trans-unit id="2538" translate="yes" xml:space="preserve" extradata="MT">
          <source>To adjust the height of the row headers programmatically, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.AutoResizeRowHeadersWidth%2A&gt;</ph> method or set the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeadersWidth%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2539" translate="yes" xml:space="preserve" extradata="MT">
          <source>To set the sizing mode for the column headers, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeadersHeightSizeMode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2540" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about header sizing, see <bpt id="p1">[</bpt>Sizing Options in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/sizing-options-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2541" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control does not support double buffering.</source>
        </trans-unit>
        <trans-unit id="2542" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.Control.DoubleBuffered%2A&gt;</ph> is set to <ph id="ph2">`true`</ph> in a derived <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, users will not receive visual feedback when resizing rows, columns, or headers or when reordering columns.</source>
        </trans-unit>
        <trans-unit id="2543" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> value indicating the mode by which the width of the row headers can be adjusted.</source>
        </trans-unit>
        <trans-unit id="2544" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode.EnableResizing"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2545" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="2546" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowHeadersWidthSizeMode"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2547" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2548" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.Height"&gt;&lt;/xref&gt;</ph> property for a row changes.</source>
        </trans-unit>
        <trans-unit id="2549" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2550" translate="yes" xml:space="preserve">
          <source>Occurs when information about row height is requested.</source>
        </trans-unit>
        <trans-unit id="2551" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is useful for preserving custom row heights after a sorting operation.</source>
        </trans-unit>
        <trans-unit id="2552" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is necessary because sorting operations are normally handled by the data source, which does not keep track of the correspondence between rows of data and rows in the control.</source>
        </trans-unit>
        <trans-unit id="2553" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property has been set or when the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2554" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the latter case, you provide your own data store and sorting operations.</source>
        </trans-unit>
        <trans-unit id="2555" translate="yes" xml:space="preserve" extradata="MT">
          <source>Handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event to store updated height information when the user changes a row height.</source>
        </trans-unit>
        <trans-unit id="2556" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> to retrieve the stored height information when the control needs it.</source>
        </trans-unit>
        <trans-unit id="2557" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2558" translate="yes" xml:space="preserve">
          <source>Occurs when the user changes the height of a row.</source>
        </trans-unit>
        <trans-unit id="2559" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> or the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is set to a value other than <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2560" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is used to track and store row height information so that it can be restored after a sorting operation.</source>
        </trans-unit>
        <trans-unit id="2561" translate="yes" xml:space="preserve" extradata="MT">
          <source>To restore height information, handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2562" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that this event occurs only when the user changes the height of a row.</source>
        </trans-unit>
        <trans-unit id="2563" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you change the height of a row programmatically, you must store the new height information at the same time.</source>
        </trans-unit>
        <trans-unit id="2564" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2565" translate="yes" xml:space="preserve">
          <source>Occurs when a row loses input focus and is no longer the current row.</source>
        </trans-unit>
        <trans-unit id="2566" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2567" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow.MinimumHeight"&gt;&lt;/xref&gt;</ph> property for a row changes.</source>
        </trans-unit>
        <trans-unit id="2568" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2569" translate="yes" xml:space="preserve">
          <source>Occurs after a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph> is painted.</source>
        </trans-unit>
        <trans-unit id="2570" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event alone or in combination with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPrePaint&gt;</ph> event to customize the appearance of rows in the control.</source>
        </trans-unit>
        <trans-unit id="2571" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowPostPaintEventArgs&gt;</ph> class to paint other parts:</source>
        </trans-unit>
        <trans-unit id="2572" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> class to paint standard controls using the current theme.</source>
        </trans-unit>
        <trans-unit id="2573" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Rendering Controls with Visual Styles<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2574" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, you also have access to a large library of standard images that you can use with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2575" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2576" translate="yes" xml:space="preserve">
          <source>Occurs before a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph> is painted</source>
        </trans-unit>
        <trans-unit id="2577" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can handle this event alone or in combination with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowPostPaint&gt;</ph> event to customize the appearance of rows in the control.</source>
        </trans-unit>
        <trans-unit id="2578" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can paint entire rows yourself, or paint specific parts of rows and use the following methods of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowPrePaintEventArgs&gt;</ph> class to paint other parts:</source>
        </trans-unit>
        <trans-unit id="2579" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.VisualStyles.VisualStyleRenderer&gt;</ph> class to paint standard controls using the current theme.</source>
        </trans-unit>
        <trans-unit id="2580" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Rendering Controls with Visual Styles<ept id="p1">](~/docs/framework/winforms/controls/rendering-controls-with-visual-styles.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2581" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you are using <ph id="ph1">[!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]</ph>, you also have access to a large library of standard images that you can use with the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2582" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2583" translate="yes" xml:space="preserve">
          <source>Gets a collection that contains all the rows in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2584" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to manually populate a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control instead of binding it to a data source.</source>
        </trans-unit>
        <trans-unit id="2585" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows you how to manually add and insert rows.</source>
        </trans-unit>
        <trans-unit id="2586" translate="yes" xml:space="preserve" extradata="MT">
          <source>This example assumes that you have added four <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewTextBoxColumn&gt;</ph> instances to the control's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Columns%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2587" translate="yes" xml:space="preserve" extradata="MT">
          <source>For a detailed example that programmatically populates an unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, see the Example section.</source>
        </trans-unit>
        <trans-unit id="2588" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rows include style information in addition to cell values.</source>
        </trans-unit>
        <trans-unit id="2589" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, you might want to add or insert rows based on existing rows that you have already styled.</source>
        </trans-unit>
        <trans-unit id="2590" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopy%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.AddCopies%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopy%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.InsertCopies%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2591" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to modify the values in the control or to remove rows.</source>
        </trans-unit>
        <trans-unit id="2592" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can modify values or remove rows regardless of whether the control is bound to an external data source.</source>
        </trans-unit>
        <trans-unit id="2593" translate="yes" xml:space="preserve" extradata="MT">
          <source>If there is a data source, the changes are made directly to the data source.</source>
        </trans-unit>
        <trans-unit id="2594" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may still need to push the data source updates to a remote database, however.</source>
        </trans-unit>
        <trans-unit id="2595" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Bind Data to the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-bind-data-to-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2596" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows you how to modify cell values programmatically.</source>
        </trans-unit>
        <trans-unit id="2597" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition to the standard collection capabilities, you can use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection to retrieve information about rows.</source>
        </trans-unit>
        <trans-unit id="2598" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowState%2A&gt;</ph> method to determine the state of a particular row.</source>
        </trans-unit>
        <trans-unit id="2599" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowCount%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetRowsHeight%2A&gt;</ph> methods to determine the number of rows or the combined height of rows in a particular state.</source>
        </trans-unit>
        <trans-unit id="2600" translate="yes" xml:space="preserve" extradata="MT">
          <source>To retrieve the index of a row with a particular state, use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetFirstRow%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetLastRow%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetNextRow%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewRowCollection.GetPreviousRow%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="2601" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following example shows you how to retrieve the index of the first selected row, and then use it to programmatically delete the row.</source>
        </trans-unit>
        <trans-unit id="2602" translate="yes" xml:space="preserve" extradata="MT">
          <source>To improve performance, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowCollection&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> property can include shared and unshared rows.</source>
        </trans-unit>
        <trans-unit id="2603" translate="yes" xml:space="preserve" extradata="MT">
          <source>Shared rows share memory to reduce the cost of a large record set.</source>
        </trans-unit>
        <trans-unit id="2604" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your record set is very large, you should be careful to keep the rows shared as much as possible when accessing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2605" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2606" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRowCollection"&gt;&lt;/xref&gt;</ph> that contains all the rows in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2607" translate="yes" xml:space="preserve">
          <source>Occurs after a new row is added to the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2608" translate="yes" xml:space="preserve" extradata="MT">
          <source>Rows in the control are not automatically sorted when new rows are added.</source>
        </trans-unit>
        <trans-unit id="2609" translate="yes" xml:space="preserve" extradata="MT">
          <source>To sort new rows into their correct position, call the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method in a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowsAdded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2610" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the user adds a new row using the row for new records, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A?displayProperty=fullName&gt;</ph> value in the handler for this event is equal to the index of the new location of the row for new records, which is one greater than the row just added.</source>
        </trans-unit>
        <trans-unit id="2611" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you add rows programmatically, however, the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowsAddedEventArgs.RowIndex%2A&gt;</ph> value is the index of the first row added.</source>
        </trans-unit>
        <trans-unit id="2612" translate="yes" xml:space="preserve" extradata="MT">
          <source>In virtual mode, this event occurs before the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event and can be used to create new records in your data store that you can then populate in the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2613" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2614" translate="yes" xml:space="preserve">
          <source>Gets or sets the default style applied to the row cells of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control displays its cells using the styles indicated by the cell <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.InheritedStyle%2A&gt;</ph> property, which inherits styles from other properties of type <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2616" translate="yes" xml:space="preserve" extradata="MT">
          <source>For cells in all rows, excluding header cells, the styles specified through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> property override the styles specified through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.DefaultCellStyle%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumn.DefaultCellStyle%2A?displayProperty=fullName&gt;</ph> properties, and are overridden by the styles specified through the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.AlternatingRowsDefaultCellStyle%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridViewRow.DefaultCellStyle%2A?displayProperty=fullName&gt;</ph>, and <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCell.Style%2A?displayProperty=fullName&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="2617" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Cell Styles in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/cell-styles-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2618" translate="yes" xml:space="preserve" extradata="MT">
          <source>When getting this property, a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with default values will be created if the property has not already been accessed.</source>
        </trans-unit>
        <trans-unit id="2619" translate="yes" xml:space="preserve" extradata="MT">
          <source>This can cause a performance impact when getting this property for many rows.</source>
        </trans-unit>
        <trans-unit id="2620" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whenever possible, use a single <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> to set this property for multiple rows.</source>
        </trans-unit>
        <trans-unit id="2621" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Best Practices for Scaling the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/best-practices-for-scaling-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2622" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCellStyle"&gt;&lt;/xref&gt;</ph> to apply to the row cells of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2623" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.RowsDefaultCellStyle"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs when a property of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> property is set to a new value or when the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.RowsDefaultCellStyle%2A&gt;</ph> property is set to a new <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewCellStyle&gt;</ph> with at least one property value different than the previous cell style object.</source>
        </trans-unit>
        <trans-unit id="2625" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2626" translate="yes" xml:space="preserve">
          <source>Occurs when a row or rows are deleted from the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2627" translate="yes" xml:space="preserve" extradata="MT">
          <source>When rows are deleted from a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control, the index numbers of subsequent rows are lowered to compensate.</source>
        </trans-unit>
        <trans-unit id="2628" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2629" translate="yes" xml:space="preserve">
          <source>Occurs when a row changes state, such as losing or gaining input focus.</source>
        </trans-unit>
        <trans-unit id="2630" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2631" translate="yes" xml:space="preserve">
          <source>Gets or sets the row that represents the template for all the rows in the control.</source>
        </trans-unit>
        <trans-unit id="2632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sometimes you want greater control over the appearance of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> rows than what is provided by the various <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> cell style properties.</source>
        </trans-unit>
        <trans-unit id="2633" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowTemplate%2A&gt;</ph> property lets you create and initialize a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> for use as a template by all rows, including the row for new records if <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.AllowUserToAddRows%2A&gt;</ph> is <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2634" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you are setting default values for properties such as row height.</source>
        </trans-unit>
        <trans-unit id="2635" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, you may want to increase the default row height in order to provide extra room beneath ordinary cell content for displaying content that spans multiple columns.</source>
        </trans-unit>
        <trans-unit id="2636" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting the row template is necessary when external data is displayed using custom types derived from the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="2637" translate="yes" xml:space="preserve" extradata="MT">
          <source>With unbound <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> controls, you can programmatically populate the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection with instances of your custom row type.</source>
        </trans-unit>
        <trans-unit id="2638" translate="yes" xml:space="preserve" extradata="MT">
          <source>When displaying external data, however, the rows are generated automatically, but they are based on the row template, which you can set to an instance of your custom row type.</source>
        </trans-unit>
        <trans-unit id="2639" translate="yes" xml:space="preserve" extradata="MT">
          <source>If this property has not been set the first time you retrieve its value, a new <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow&gt;</ph> is created and returned.</source>
        </trans-unit>
        <trans-unit id="2640" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph> representing the row template.</source>
        </trans-unit>
        <trans-unit id="2641" translate="yes" xml:space="preserve">
          <source>The specified row when setting this property has its <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewElement.DataGridView"&gt;&lt;/xref&gt;</ph> property set.</source>
        </trans-unit>
        <trans-unit id="2642" translate="yes" xml:space="preserve">
          <source>Occurs when a row's state changes from shared to unshared.</source>
        </trans-unit>
        <trans-unit id="2643" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event during development and testing to help identify code that causes rows to change from a shared to an unshared state.</source>
        </trans-unit>
        <trans-unit id="2644" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when scaling the control to display large amounts of data.</source>
        </trans-unit>
        <trans-unit id="2645" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2646" translate="yes" xml:space="preserve">
          <source>Occurs after a row has finished validating.</source>
        </trans-unit>
        <trans-unit id="2647" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is analogous to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validated&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2648" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to perform post-processing on a row of values.</source>
        </trans-unit>
        <trans-unit id="2649" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2650" translate="yes" xml:space="preserve">
          <source>Occurs when a row is validating.</source>
        </trans-unit>
        <trans-unit id="2651" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is analogous to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=fullName&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2652" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this event to perform validation on all the values of a row.</source>
        </trans-unit>
        <trans-unit id="2653" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row does not pass validation, set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2654" translate="yes" xml:space="preserve" extradata="MT">
          <source>Canceling this event prevents the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowValidated&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Validating?displayProperty=fullName&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Validated?displayProperty=fullName&gt;</ph> events from occurring, and also prevents the user from leaving the invalid row and prevents the row from being saved to an external data source in data bound mode.</source>
        </trans-unit>
        <trans-unit id="2655" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2656" translate="yes" xml:space="preserve">
          <source>Occurs when the user scrolls through the control contents.</source>
        </trans-unit>
        <trans-unit id="2657" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2658" translate="yes" xml:space="preserve">
          <source>Gets or sets the type of scroll bars to display for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2659" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value of this property, scroll bars are shown only when they are needed.</source>
        </trans-unit>
        <trans-unit id="2660" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to prevent scroll bars from appearing.</source>
        </trans-unit>
        <trans-unit id="2661" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful, for example, when you want to provide an alternative user interface (UI) for scrolling.</source>
        </trans-unit>
        <trans-unit id="2662" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollBars"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="2663" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollBars.Both"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2664" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollBars"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="2665" translate="yes" xml:space="preserve">
          <source>The value of this property cannot be set because the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> is unable to scroll due to a cell change that cannot be committed or canceled.</source>
        </trans-unit>
        <trans-unit id="2666" translate="yes" xml:space="preserve">
          <source>Selects all the cells in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2667" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in column-selection mode and this method is called, each column's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, and each row's <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2668" translate="yes" xml:space="preserve" extradata="MT">
          <source>Conversely, when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is in row-selection mode and this method is called, each row's <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>, and each column's <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridViewBand.Selected%2A&gt;</ph> property is set to <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2669" translate="yes" xml:space="preserve">
          <source>Gets the collection of cells selected by the user.</source>
        </trans-unit>
        <trans-unit id="2670" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectedCells%2A&gt;</ph> property is always populated regardless of the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="2671" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains a read-only snapshot of the selection at the time it is referenced.</source>
        </trans-unit>
        <trans-unit id="2672" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you hold onto a copy of this collection, it may differ from the actual, subsequent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> state in which the user may have changed the selection.</source>
        </trans-unit>
        <trans-unit id="2673" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should not operate on a copy of the collection.</source>
        </trans-unit>
        <trans-unit id="2674" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectedCellCollection"&gt;&lt;/xref&gt;</ph> that represents the cells selected by the user.</source>
        </trans-unit>
        <trans-unit id="2675" translate="yes" xml:space="preserve">
          <source>Gets the collection of columns selected by the user.</source>
        </trans-unit>
        <trans-unit id="2676" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode?displayProperty=fullName&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedColumns%2A&gt;</ph> property to be populated with selected columns.</source>
        </trans-unit>
        <trans-unit id="2677" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains a read-only snapshot of the selection at the time it is referenced.</source>
        </trans-unit>
        <trans-unit id="2678" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you hold onto a copy of this collection, it may differ from the actual, subsequent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> state in which the user may have changed the selection.</source>
        </trans-unit>
        <trans-unit id="2679" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you should not operate on a copy of the collection.</source>
        </trans-unit>
        <trans-unit id="2680" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectedColumnCollection"&gt;&lt;/xref&gt;</ph> that represents the columns selected by the user.</source>
        </trans-unit>
        <trans-unit id="2681" translate="yes" xml:space="preserve">
          <source>Gets the collection of rows selected by the user.</source>
        </trans-unit>
        <trans-unit id="2682" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property must be set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.FullRowSelect&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect&gt;</ph> for the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SelectedRows%2A&gt;</ph> property to be populated with selected rows.</source>
        </trans-unit>
        <trans-unit id="2683" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property contains a read-only snapshot of the selection at the time it is referenced.</source>
        </trans-unit>
        <trans-unit id="2684" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you hold onto a copy of this collection, it may differ from the actual, subsequent <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> state in which the user may have changed the selection.</source>
        </trans-unit>
        <trans-unit id="2685" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should therefore not operate on a copy of the collection.</source>
        </trans-unit>
        <trans-unit id="2686" translate="yes" xml:space="preserve" extradata="MT">
          <source>To programmatically select a row, set its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.Selected%2A&gt;</ph>property to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2687" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectedRowCollection"&gt;&lt;/xref&gt;</ph> that contains the rows selected by the user.</source>
        </trans-unit>
        <trans-unit id="2688" translate="yes" xml:space="preserve">
          <source>Occurs when the current selection changes.</source>
        </trans-unit>
        <trans-unit id="2689" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs whenever cells are selected or the selection is canceled, whether programmatically or by user action.</source>
        </trans-unit>
        <trans-unit id="2690" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, this event is useful when you want display the sum of the currently selected cells.</source>
        </trans-unit>
        <trans-unit id="2691" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you change the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event occurs before the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCellChanged&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2692" translate="yes" xml:space="preserve" extradata="MT">
          <source>Any <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionChanged&gt;</ph> event handler accessing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property at this time will get its previous value.</source>
        </trans-unit>
        <trans-unit id="2693" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2694" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating how the cells of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> can be selected.</source>
        </trans-unit>
        <trans-unit id="2695" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property clears the current selection.</source>
        </trans-unit>
        <trans-unit id="2696" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="2697" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode.RowHeaderSelect"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2698" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is not a valid <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode"&gt;&lt;/xref&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="2699" translate="yes" xml:space="preserve">
          <source>The specified value when setting this property is <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode.FullColumnSelect"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewSelectionMode.ColumnHeaderSelect"&gt;&lt;/xref&gt;</ph> and the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewColumn.SortMode"&gt;&lt;/xref&gt;</ph> property of one or more columns is set to <ph id="ph4">&lt;xref href="System.Windows.Forms.DataGridViewColumnSortMode.Automatic"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2700" translate="yes" xml:space="preserve">
          <source>This member overrides <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2701" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Left"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="2702" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Top"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="2703" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Width"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="2704" translate="yes" xml:space="preserve">
          <source>The new <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Height"&gt;&lt;/xref&gt;</ph> property value of the control.</source>
        </trans-unit>
        <trans-unit id="2705" translate="yes" xml:space="preserve">
          <source>A bitwise combination of the <ph id="ph1">&lt;xref href="System.Windows.Forms.BoundsSpecified"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="2706" translate="yes" xml:space="preserve">
          <source>One or both of the width or height values exceeds the maximum value of 8,388,607.</source>
        </trans-unit>
        <trans-unit id="2707" translate="yes" xml:space="preserve">
          <source>Sets the currently active cell.</source>
        </trans-unit>
        <trans-unit id="2708" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the current cell.</source>
        </trans-unit>
        <trans-unit id="2709" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method changes the current cell without changing the selection and optionally without validating the previous cell or changing the selection anchor cell.</source>
        </trans-unit>
        <trans-unit id="2710" translate="yes" xml:space="preserve" extradata="MT">
          <source>The anchor cell is the first cell of a block of multiple cells that the user can select by holding down the SHIFT key and clicking the last cell of the block.</source>
        </trans-unit>
        <trans-unit id="2711" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`rowIndex`</ph> and <ph id="ph2">`columnIndex`</ph> are both -1, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property returns <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2712" translate="yes" xml:space="preserve">
          <source>The index of the column containing the cell.</source>
        </trans-unit>
        <trans-unit id="2713" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="2714" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to make the new current cell the anchor cell for a subsequent multicell selection using the SHIFT key; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2715" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to validate the value in the old current cell and cancel the change if validation fails; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2716" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current cell is being set as a result of a mouse click; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2717" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the current cell was successfully set; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2718" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1, and <ph id="ph2">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not -1.</source>
        </trans-unit>
        <trans-unit id="2719" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2720" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1, and <ph id="ph2">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is not -1.</source>
        </trans-unit>
        <trans-unit id="2721" translate="yes" xml:space="preserve">
          <source>The specified cell has a <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.Visible"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2722" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2723" translate="yes" xml:space="preserve">
          <source>This method was called for a reason other than the underlying data source being reset, and another thread is currently executing this method.</source>
        </trans-unit>
        <trans-unit id="2724" translate="yes" xml:space="preserve">
          <source>The new current cell tried to enter edit mode, but its <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewCell.EditType"&gt;&lt;/xref&gt;</ph> property does not indicate a class that derives from <ph id="ph2">&lt;xref href="System.Windows.Forms.Control"&gt;&lt;/xref&gt;</ph> and implements <ph id="ph3">&lt;xref href="System.Windows.Forms.IDataGridViewEditingControl"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2725" translate="yes" xml:space="preserve">
          <source>Changes the selection state of the cell with the specified row and column indexes.</source>
        </trans-unit>
        <trans-unit id="2726" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the selection state of a cell.</source>
        </trans-unit>
        <trans-unit id="2727" translate="yes" xml:space="preserve" extradata="MT">
          <source>The selection state changes without regard to the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value, and without changing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="2728" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you want to implement your own selection modes.</source>
        </trans-unit>
        <trans-unit id="2729" translate="yes" xml:space="preserve">
          <source>The index of the column containing the cell.</source>
        </trans-unit>
        <trans-unit id="2730" translate="yes" xml:space="preserve">
          <source>The index of the row containing the cell.</source>
        </trans-unit>
        <trans-unit id="2731" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to select the cell; <ph id="ph2">`false`</ph> to cancel the selection of the cell.</source>
        </trans-unit>
        <trans-unit id="2732" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2733" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2734" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2735" translate="yes" xml:space="preserve">
          <source>Changes the selection state of the column with the specified index.</source>
        </trans-unit>
        <trans-unit id="2736" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the selection state of a column.</source>
        </trans-unit>
        <trans-unit id="2737" translate="yes" xml:space="preserve" extradata="MT">
          <source>The selection state changes without regard to the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value, and without changing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="2738" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you want to implement your own selection modes.</source>
        </trans-unit>
        <trans-unit id="2739" translate="yes" xml:space="preserve">
          <source>The index of the column.</source>
        </trans-unit>
        <trans-unit id="2740" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to select the column; <ph id="ph2">`false`</ph> to cancel the selection of the column.</source>
        </trans-unit>
        <trans-unit id="2741" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2742" translate="yes" xml:space="preserve">
          <source>Changes the selection state of the row with the specified index.</source>
        </trans-unit>
        <trans-unit id="2743" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control uses this method whenever it changes the selection state of a row.</source>
        </trans-unit>
        <trans-unit id="2744" translate="yes" xml:space="preserve" extradata="MT">
          <source>The selection state changes without regard to the current <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SelectionMode%2A&gt;</ph> property value, and without changing the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="2745" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is useful when you want to implement your own selection modes.</source>
        </trans-unit>
        <trans-unit id="2746" translate="yes" xml:space="preserve">
          <source>The index of the row.</source>
        </trans-unit>
        <trans-unit id="2747" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to select the row; <ph id="ph2">`false`</ph> to cancel the selection of the row.</source>
        </trans-unit>
        <trans-unit id="2748" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2749" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to show cell errors.</source>
        </trans-unit>
        <trans-unit id="2750" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if a red glyph will appear in a cell that fails validation; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2751" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2752" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether or not ToolTips will show when the mouse pointer pauses on a cell.</source>
        </trans-unit>
        <trans-unit id="2753" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value of this property is <ph id="ph1">`true`</ph> and the mouse pointer is over a cell, the cell displays a ToolTip when one of the following conditions is met:</source>
        </trans-unit>
        <trans-unit id="2754" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is not <ph id="ph2">`null`</ph> or the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph4">`true`</ph>, and a handler for the <ph id="ph5">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event sets the <ph id="ph6">&lt;xref:System.Windows.Forms.DataGridViewCellToolTipTextNeededEventArgs.ToolTipText%2A?displayProperty=fullName&gt;</ph> property to a value other than <ph id="ph7">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2755" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property of the cell has a value other than <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2756" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property has no effect when there is a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellToolTipTextNeeded&gt;</ph> event handler because getting the value of the property automatically raises the event and returns the ToolTip text specified in the event handler.</source>
        </trans-unit>
        <trans-unit id="2757" translate="yes" xml:space="preserve" extradata="MT">
          <source>The cell value is truncated in the cell display.</source>
        </trans-unit>
        <trans-unit id="2758" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the value of the cell <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.ToolTipText%2A&gt;</ph> property value is <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=fullName&gt;</ph>, the full value of the truncated cell value is displayed in the ToolTip.</source>
        </trans-unit>
        <trans-unit id="2759" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if cell ToolTips are enabled; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2760" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether or not the editing glyph is visible in the row header of the cell being edited.</source>
        </trans-unit>
        <trans-unit id="2761" translate="yes" xml:space="preserve" extradata="MT">
          <source>The row header will display an editing glyph that looks like a pencil when the current cell is in edit mode and the user has made changes to the cell.</source>
        </trans-unit>
        <trans-unit id="2762" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editing glyph is colored by using the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCellStyle.ForeColor%2A&gt;</ph> property of the row header cell.</source>
        </trans-unit>
        <trans-unit id="2763" translate="yes" xml:space="preserve" extradata="MT">
          <source>The glyph is not rendered if there is not enough space to display it completely.</source>
        </trans-unit>
        <trans-unit id="2764" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the row header cell has its <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A&gt;</ph> property set, the glyph is removed if there is not enough room for both the text and glyph.</source>
        </trans-unit>
        <trans-unit id="2765" translate="yes" xml:space="preserve" extradata="MT">
          <source>The display of the editing glyph is controlled by the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentRowDirty%2A&gt;</ph> property in virtual mode.</source>
        </trans-unit>
        <trans-unit id="2766" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, it is controlled by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.IsCurrentCellDirty%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2767" translate="yes" xml:space="preserve" extradata="MT">
          <source>The standard glyph is not publicly exposed.</source>
        </trans-unit>
        <trans-unit id="2768" translate="yes" xml:space="preserve" extradata="MT">
          <source>To customize the glyph, you can create a custom <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeaderCell&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="2769" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the editing glyph is visible; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2770" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2771" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether row headers will display error glyphs for each row that contains a data entry error.</source>
        </trans-unit>
        <trans-unit id="2772" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> property indicates if there is an error in one of the cells in a row.</source>
        </trans-unit>
        <trans-unit id="2773" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRow.ErrorText%2A&gt;</ph> is set to a value other than <ph id="ph2">&lt;xref:System.String.Empty&gt;</ph>, then an error glyph (<bpt id="p1">![</bpt>ErrorProvider icon<ept id="p1">]</ept><bpt id="p2">(~/add/media/vberrorprovidericon.gif "</bpt>ErrorProvider icon<ept id="p2">")</ept>) is shown in the row header.</source>
        </trans-unit>
        <trans-unit id="2774" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default width of the row header includes enough room to display the error glyph, whether or not the glyph is displayed.</source>
        </trans-unit>
        <trans-unit id="2775" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the row header size is adjusted so that there is not enough space to display the glyph completely, the glyph is not rendered.</source>
        </trans-unit>
        <trans-unit id="2776" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because row headers can display both text and glyphs, header content is displayed by priority, as follows:</source>
        </trans-unit>
        <trans-unit id="2777" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text displayed in the row header cell.</source>
        </trans-unit>
        <trans-unit id="2778" translate="yes" xml:space="preserve" extradata="MT">
          <source>The editing glyph.</source>
        </trans-unit>
        <trans-unit id="2779" translate="yes" xml:space="preserve" extradata="MT">
          <source>The error glyph.</source>
        </trans-unit>
        <trans-unit id="2780" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if the row width is decreased, the error glyph disappears first, then the standard glyph, then text.</source>
        </trans-unit>
        <trans-unit id="2781" translate="yes" xml:space="preserve" extradata="MT">
          <source>Advanced users can customize the error glyph by developing a custom <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewRowHeaderCell&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="2782" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewRow"&gt;&lt;/xref&gt;</ph> indicates there is an error; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2783" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2784" translate="yes" xml:space="preserve">
          <source>Sorts the contents of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control using an implementation of the <ph id="ph2">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="2785" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method allows advanced customization of the sorting feature of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="2786" translate="yes" xml:space="preserve" extradata="MT">
          <source>In order to implement a highly customized sorting operation, you can write an event handler for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.ColumnHeaderMouseClick&gt;</ph> event and call this method with an instance of a class that implements the <ph id="ph2">&lt;xref:System.Collections.IComparer?displayProperty=fullName&gt;</ph> interface as a parameter.</source>
        </trans-unit>
        <trans-unit id="2787" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this case, you will typically set the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A?displayProperty=fullName&gt;</ph> property to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName&gt;</ph> to disable automatic sorting and to leave room for a sorting glyph.</source>
        </trans-unit>
        <trans-unit id="2788" translate="yes" xml:space="preserve" extradata="MT">
          <source>When sorting by columns set to programmatic sort mode, you must display the sorting glyph yourself by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2789" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method works only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is not set.</source>
        </trans-unit>
        <trans-unit id="2790" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you bind the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to an external data source, you must use the sorting operations provided by that data source.</source>
        </trans-unit>
        <trans-unit id="2791" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you provide your own data source by implementing virtual mode, you must also handle the sorting operations yourself.</source>
        </trans-unit>
        <trans-unit id="2792" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method automatically sets the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CurrentCell%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2793" translate="yes" xml:space="preserve">
          <source>An implementation of <ph id="ph1">&lt;xref href="System.Collections.IComparer"&gt;&lt;/xref&gt;</ph> that performs the custom sorting operation.</source>
        </trans-unit>
        <trans-unit id="2794" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;comparer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2795" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> is set to <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2796" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2797" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> is not <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2798" translate="yes" xml:space="preserve">
          <source>Sorts the contents of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control in ascending or descending order based on the contents of the specified column.</source>
        </trans-unit>
        <trans-unit id="2799" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method sorts the contents of the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> by comparing values in the specified column.</source>
        </trans-unit>
        <trans-unit id="2800" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, the sort operation will use the <ph id="ph1">&lt;xref:System.Collections.Comparer.Compare%2A&gt;</ph> method to compare pairs of cells in the column using the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewCell.Value%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2801" translate="yes" xml:space="preserve" extradata="MT">
          <source>For columns with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName&gt;</ph>, the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> properties are set automatically and the appropriate sorting glyph is displayed.</source>
        </trans-unit>
        <trans-unit id="2802" translate="yes" xml:space="preserve" extradata="MT">
          <source>For columns with the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property set to <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName&gt;</ph>, you must display the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2803" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can customize the sorting operation used by this method by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2804" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property has not been set.</source>
        </trans-unit>
        <trans-unit id="2805" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property has been set, this method works for data-bound columns only.</source>
        </trans-unit>
        <trans-unit id="2806" translate="yes" xml:space="preserve" extradata="MT">
          <source>Data-bound columns have had their <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.DataPropertyName%2A?displayProperty=fullName&gt;</ph> property set.</source>
        </trans-unit>
        <trans-unit id="2807" translate="yes" xml:space="preserve" extradata="MT">
          <source>This causes the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.IsDataBound%2A?displayProperty=fullName&gt;</ph> property to return <ph id="ph2">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2808" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control contains both bound and unbound columns, you must implement virtual mode to maintain the values of the unbound columns when the control is sorted by a bound column.</source>
        </trans-unit>
        <trans-unit id="2809" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can do this by setting the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and handling the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2810" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the column is editable, you should also handle the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2811" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about virtual mode, see <bpt id="p1">[</bpt>How to: Implement Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2812" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sorting by unbound columns when the control is data-bound is not supported.</source>
        </trans-unit>
        <trans-unit id="2813" translate="yes" xml:space="preserve">
          <source>The column by which to sort the contents of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2814" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.ComponentModel.ListSortDirection"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="2815" translate="yes" xml:space="preserve">
          <source>The specified column is not part of this <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2816" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2817" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> property has been set and the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridViewColumn.IsDataBound"&gt;&lt;/xref&gt;</ph> property of the specified column returns <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2818" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;dataGridViewColumn&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2819" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.VirtualMode"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the <ph id="ph3">&lt;xref href="System.Windows.Forms.DataGridViewColumn.IsDataBound"&gt;&lt;/xref&gt;</ph> property of the specified column returns <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2820" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2821" translate="yes" xml:space="preserve">
          <source>The object specified by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> property does not implement the <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingList"&gt;&lt;/xref&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="2822" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2823" translate="yes" xml:space="preserve">
          <source>The object specified by the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.DataSource"&gt;&lt;/xref&gt;</ph> property has a <ph id="ph2">&lt;xref href="System.ComponentModel.IBindingList.SupportsSorting"&gt;&lt;/xref&gt;</ph> property value of <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2824" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> compares two cell values to perform a sort operation.</source>
        </trans-unit>
        <trans-unit id="2825" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event occurs only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.DataSource%2A&gt;</ph> property is not set and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property value is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2826" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event compares pairs of cells in the column being sorted.</source>
        </trans-unit>
        <trans-unit id="2827" translate="yes" xml:space="preserve" extradata="MT">
          <source>It occurs only when the user clicks the header of a column with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic&gt;</ph>, or when you call the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Sort%28System.Windows.Forms.DataGridViewColumn%2CSystem.ComponentModel.ListSortDirection%29&gt;</ph> overload.</source>
        </trans-unit>
        <trans-unit id="2828" translate="yes" xml:space="preserve" extradata="MT">
          <source>When this event occurs for a column with a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic&gt;</ph>, you must display the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2829" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use this event to sort rows using the cell values in one column or in multiple columns.</source>
        </trans-unit>
        <trans-unit id="2830" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.CellValue2%2A&gt;</ph> properties to compare cell values in the column specified in the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.Column%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2831" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex1%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewSortCompareEventArgs.RowIndex2%2A&gt;</ph> properties to access values in other columns through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.Rows%2A&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2832" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2833" translate="yes" xml:space="preserve">
          <source>Occurs when the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control completes a sorting operation.</source>
        </trans-unit>
        <trans-unit id="2834" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event does not occur when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> and the control is sorted by an unbound column.</source>
        </trans-unit>
        <trans-unit id="2835" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2836" translate="yes" xml:space="preserve">
          <source>Gets the column by which the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> contents are currently sorted.</source>
        </trans-unit>
        <trans-unit id="2837" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> is not sorted, this property will return <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="2838" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the column indicated by this property has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName&gt;</ph>, it will display a sorting glyph based on the value of the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView.SortOrder%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2839" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the column has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode?displayProperty=fullName&gt;</ph>, you must display the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2840" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is not meaningful when you sort the control using custom sorting.</source>
        </trans-unit>
        <trans-unit id="2841" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about custom sorting, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%28System.Collections.IComparer%29&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2842" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewColumn"&gt;&lt;/xref&gt;</ph> by which the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> contents are currently sorted.</source>
        </trans-unit>
        <trans-unit id="2843" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the items in the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control are sorted in ascending or descending order, or are not sorted.</source>
        </trans-unit>
        <trans-unit id="2844" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is used to determine which sorting glyph appears when the column specified by the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.SortedColumn%2A&gt;</ph> property has a <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Automatic&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2845" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the column has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.Programmatic&gt;</ph>, you must display and hide the sorting glyph yourself through the <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridViewColumnHeaderCell.SortGlyphDirection%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2846" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the column has a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewColumn.SortMode%2A&gt;</ph> property value of <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridViewColumnSortMode.NotSortable&gt;</ph>, you can display the sorting glyph, but space is not reserved for it if the column is automatically resized.</source>
        </trans-unit>
        <trans-unit id="2847" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property is not meaningful when you sort the control using custom sorting.</source>
        </trans-unit>
        <trans-unit id="2848" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about custom sorting, see the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Sort%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.SortCompare&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2849" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Windows.Forms.SortOrder"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="2850" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether the TAB key moves the focus to the next control in the tab order rather than moving focus to the next cell in the control.</source>
        </trans-unit>
        <trans-unit id="2851" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property to <ph id="ph1">`false`</ph> allows the TAB key to move the focus through the grid of cells.</source>
        </trans-unit>
        <trans-unit id="2852" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes how the cell focus changes when the given TAB key combinations are pressed.</source>
        </trans-unit>
        <trans-unit id="2853" translate="yes" xml:space="preserve" extradata="MT">
          <source>Key combination</source>
        </trans-unit>
        <trans-unit id="2854" translate="yes" xml:space="preserve" extradata="MT">
          <source>Result</source>
        </trans-unit>
        <trans-unit id="2855" translate="yes" xml:space="preserve" extradata="MT">
          <source>TAB</source>
        </trans-unit>
        <trans-unit id="2856" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.StandardTab%2A&gt;</ph> property is <ph id="ph2">`false`</ph>, the focus moves to the next cell in the row.</source>
        </trans-unit>
        <trans-unit id="2857" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the focus is in the last cell in the row, the focus moves to the first cell in the next row.</source>
        </trans-unit>
        <trans-unit id="2858" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the focus is in the last cell in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, the focus moves to the next control in the tab order.</source>
        </trans-unit>
        <trans-unit id="2859" translate="yes" xml:space="preserve" extradata="MT">
          <source>SHIFT+TAB</source>
        </trans-unit>
        <trans-unit id="2860" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.StandardTab%2A&gt;</ph> is <ph id="ph2">`false`</ph>, the focus moves to the previous cell in the row.</source>
        </trans-unit>
        <trans-unit id="2861" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the focus is in the first cell in the row, the focus moves to the last cell in the previous row.</source>
        </trans-unit>
        <trans-unit id="2862" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the focus is in the first cell in the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph>, the focus moves to the previous control in the tab order.</source>
        </trans-unit>
        <trans-unit id="2863" translate="yes" xml:space="preserve" extradata="MT">
          <source>CTRL+TAB</source>
        </trans-unit>
        <trans-unit id="2864" translate="yes" xml:space="preserve" extradata="MT">
          <source>The focus moves to the next control in the tab order.</source>
        </trans-unit>
        <trans-unit id="2865" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the TAB key moves the focus to the next control in the tab order; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2866" translate="yes" xml:space="preserve">
          <source>Occurs when the control style changes.</source>
        </trans-unit>
        <trans-unit id="2867" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is not relevant to this control.</source>
        </trans-unit>
        <trans-unit id="2868" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2869" translate="yes" xml:space="preserve">
          <source>Gets or sets the text associated with the control.</source>
        </trans-unit>
        <trans-unit id="2870" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is not meaningful for this control.</source>
        </trans-unit>
        <trans-unit id="2871" translate="yes" xml:space="preserve">
          <source>The text associated with the control.</source>
        </trans-unit>
        <trans-unit id="2872" translate="yes" xml:space="preserve">
          <source>Occurs when the value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView.Text"&gt;&lt;/xref&gt;</ph> property changes.</source>
        </trans-unit>
        <trans-unit id="2873" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.Text%2A&gt;</ph> property is not meaningful for this control, its value can be changed, thereby causing this event to occur.</source>
        </trans-unit>
        <trans-unit id="2874" translate="yes" xml:space="preserve">
          <source>Gets or sets the header cell located in the upper left corner of the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2875" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property allows you to set a value for the cell, associate a shortcut menu with it, or perform any other operations you can perform on a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridViewHeaderCell&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2876" translate="yes" xml:space="preserve" extradata="MT">
          <source>In applications designed for use with right-to-left languages, the cell represented by this property is typically in the upper-right corner.</source>
        </trans-unit>
        <trans-unit id="2877" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridViewHeaderCell"&gt;&lt;/xref&gt;</ph> located at the upper left corner of the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2878" translate="yes" xml:space="preserve">
          <source>Forces the cell at the specified location to update its error text.</source>
        </trans-unit>
        <trans-unit id="2879" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when you maintain cell error text yourself by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2880" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method when you change the stored error text for the specified cell.</source>
        </trans-unit>
        <trans-unit id="2881" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will invalidate the cell, forcing the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated error text through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.CellErrorTextNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2882" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can use this method to update errors for header cells, column header cells do not display error glyphs.</source>
        </trans-unit>
        <trans-unit id="2883" translate="yes" xml:space="preserve">
          <source>The column index of the cell to update, or -1 to indicate a row header cell.</source>
        </trans-unit>
        <trans-unit id="2884" translate="yes" xml:space="preserve">
          <source>The row index of the cell to update, or -1 to indicate a column header cell.</source>
        </trans-unit>
        <trans-unit id="2885" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than -1 or greater than the number of columns in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2886" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2887" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than -1 or greater than the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2888" translate="yes" xml:space="preserve">
          <source>Forces the control to update its display of the cell at the specified location based on its new value, applying any automatic sizing modes currently in effect.</source>
        </trans-unit>
        <trans-unit id="2889" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method when you maintain cell values in virtual mode and you update a value in your custom data cache outside of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValuePushed&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2890" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invalidates the cell, forcing the control to retrieve the new value through the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event handler and apply any automatic sizing modes that are in effect.</source>
        </trans-unit>
        <trans-unit id="2891" translate="yes" xml:space="preserve">
          <source>The zero-based column index of the cell with the new value.</source>
        </trans-unit>
        <trans-unit id="2892" translate="yes" xml:space="preserve">
          <source>The zero-based row index of the cell with the new value.</source>
        </trans-unit>
        <trans-unit id="2893" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;columnIndex&lt;/code&gt;</ph> is less than zero or greater than the number of columns in the control minus one.</source>
        </trans-unit>
        <trans-unit id="2894" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2895" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than zero or greater than the number of rows in the control minus one.</source>
        </trans-unit>
        <trans-unit id="2896" translate="yes" xml:space="preserve">
          <source>Forces the row at the given row index to update its error text.</source>
        </trans-unit>
        <trans-unit id="2897" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful when you maintain row error text yourself by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2898" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method when you change the stored error text for the specified row.</source>
        </trans-unit>
        <trans-unit id="2899" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will force the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated text through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2900" translate="yes" xml:space="preserve">
          <source>The zero-based index of the row to update.</source>
        </trans-unit>
        <trans-unit id="2901" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2902" translate="yes" xml:space="preserve">
          <source>Forces the rows in the given range to update their error text.</source>
        </trans-unit>
        <trans-unit id="2903" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful when you maintain row error text yourself by handling the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="2904" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method when you change the stored error text for the specified rows.</source>
        </trans-unit>
        <trans-unit id="2905" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will force the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated text through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowErrorTextNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2906" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first row in the set of rows to update.</source>
        </trans-unit>
        <trans-unit id="2907" translate="yes" xml:space="preserve">
          <source>The zero-based index of the last row in the set of rows to update.</source>
        </trans-unit>
        <trans-unit id="2908" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndexStart&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2909" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2910" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndexEnd&lt;/code&gt;</ph> is not in the valid range of 0 to the number of rows in the control minus 1.</source>
        </trans-unit>
        <trans-unit id="2911" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2912" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndexEnd&lt;/code&gt;</ph> is less than <ph id="ph2">&lt;code&gt;rowIndexStart&lt;/code&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2913" translate="yes" xml:space="preserve">
          <source>Forces the specified row or rows to update their height information.</source>
        </trans-unit>
        <trans-unit id="2914" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is useful when you maintain row heights yourself using handlers for the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> events.</source>
        </trans-unit>
        <trans-unit id="2915" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method whenever you change the stored row heights outside of a <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoPushed&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2916" translate="yes" xml:space="preserve" extradata="MT">
          <source>This will force the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control to retrieve the updated height information through the <ph id="ph2">&lt;xref:System.Windows.Forms.DataGridView.RowHeightInfoNeeded&gt;</ph> event handler.</source>
        </trans-unit>
        <trans-unit id="2917" translate="yes" xml:space="preserve">
          <source>The zero-based index of the first row to update.</source>
        </trans-unit>
        <trans-unit id="2918" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to update the specified row and all subsequent rows.</source>
        </trans-unit>
        <trans-unit id="2919" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than 0 and <ph id="ph2">&lt;code&gt;updateToEnd&lt;/code&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="2920" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2921" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is less than -1 and <ph id="ph2">&lt;code&gt;updateToEnd&lt;/code&gt;</ph> is <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2922" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="2923" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;rowIndex&lt;/code&gt;</ph> is greater than the highest row index in the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView.Rows"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="2924" translate="yes" xml:space="preserve">
          <source>Occurs when the user has finished adding a row to the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2925" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2926" translate="yes" xml:space="preserve">
          <source>Occurs when the user has finished deleting a row from the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2927" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2928" translate="yes" xml:space="preserve">
          <source>Occurs when the user deletes a row from the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2929" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event can be canceled to prevent a row deletion from being completed.</source>
        </trans-unit>
        <trans-unit id="2930" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
        </trans-unit>
        <trans-unit id="2931" translate="yes" xml:space="preserve">
          <source>Gets the default or user-specified value of the <ph id="ph1">&lt;xref href="System.Windows.Forms.Control.Cursor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2932" translate="yes" xml:space="preserve" extradata="MT">
          <source>Although you can set the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property, its value can change depending on the location of the mouse pointer.</source>
        </trans-unit>
        <trans-unit id="2933" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property to retrieve the value of the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Cursor%2A&gt;</ph> property in its normal state, which is either its default value, or a value specified in code.</source>
        </trans-unit>
        <trans-unit id="2934" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Cursor"&gt;&lt;/xref&gt;</ph> representing the normal value of the <ph id="ph2">&lt;xref href="System.Windows.Forms.Control.Cursor"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="2935" translate="yes" xml:space="preserve">
          <source>Gets the vertical scroll bar of the control.</source>
        </trans-unit>
        <trans-unit id="2936" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.ScrollBar"&gt;&lt;/xref&gt;</ph> representing the vertical scroll bar.</source>
        </trans-unit>
        <trans-unit id="2937" translate="yes" xml:space="preserve">
          <source>Gets the number of pixels by which the control is scrolled vertically.</source>
        </trans-unit>
        <trans-unit id="2938" translate="yes" xml:space="preserve">
          <source>The number of pixels by which the control is scrolled vertically.</source>
        </trans-unit>
        <trans-unit id="2939" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether you have provided your own data-management operations for the <ph id="ph1">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> control.</source>
        </trans-unit>
        <trans-unit id="2940" translate="yes" xml:space="preserve" extradata="MT">
          <source>Virtual mode is designed for use with very large stores of data.</source>
        </trans-unit>
        <trans-unit id="2941" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView.VirtualMode%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you create a <ph id="ph3">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> with a set number of rows and columns and then handle the <ph id="ph4">&lt;xref:System.Windows.Forms.DataGridView.CellValueNeeded&gt;</ph> event to populate the cells.</source>
        </trans-unit>
        <trans-unit id="2942" translate="yes" xml:space="preserve" extradata="MT">
          <source>Virtual mode requires implementation of an underlying data cache to handle the population, editing, and deletion of <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> cells based on actions of the user.</source>
        </trans-unit>
        <trans-unit id="2943" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about implementing virtual mode, see <bpt id="p1">[</bpt>How to: Implement Virtual Mode in the Windows Forms DataGridView Control<ept id="p1">](~/docs/framework/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="2944" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must use virtual mode to maintain the values of unbound columns when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> control is in bound mode.</source>
        </trans-unit>
        <trans-unit id="2945" translate="yes" xml:space="preserve" extradata="MT">
          <source>Sorting by unbound columns in bound mode is not supported.</source>
        </trans-unit>
        <trans-unit id="2946" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <ph id="ph2">&lt;xref href="System.Windows.Forms.DataGridView"&gt;&lt;/xref&gt;</ph> uses data-management operations that you provide; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2947" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="2948" translate="yes" xml:space="preserve">
          <source>Processes window messages.</source>
        </trans-unit>
        <trans-unit id="2949" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=fullName&gt;</ph> method on the base class.</source>
        </trans-unit>
        <trans-unit id="2950" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Windows.Forms.Message"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.</source>
        </trans-unit>
        <trans-unit id="2951" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.ComponentModel.ISupportInitialize.BeginInit"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2952" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="2953" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="2954" translate="yes" xml:space="preserve">
          <source>This method has already been called for this control.</source>
        </trans-unit>
        <trans-unit id="2955" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.ComponentModel.ISupportInitialize.EndInit"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="2956" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="2957" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Windows.Forms.DataGridView&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.ISupportInitialize&gt;</ph> instance.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>