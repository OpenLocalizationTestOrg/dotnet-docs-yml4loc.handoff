<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0c1bbdd86216401df866b5a5ba22fbb6e7aa39e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.AggregateException.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">154a175856bc43dbe438365261be2b857ee63924</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6008e64e721e39670934f27fb8226854bb761c98</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents one or more errors that occur during application execution.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> is used to consolidate multiple failures into a single, throwable exception object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is used extensively in the <bpt id="p1">[</bpt>Task Parallel Library (TPL)<ept id="p1">](~/docs/standard/parallel-programming/task-parallel-library-tpl.md)</ept> and <bpt id="p2">[</bpt>Parallel LINQ (PLINQ)<ept id="p2">](~/docs/standard/parallel-programming/parallel-linq-plinq.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>For additional information, see the <bpt id="p1">[</bpt>Aggregating Exceptions<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=259617)</ept> entry in the .NET Matters blog.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>For an example, see <bpt id="p1">[</bpt>NIB: How to: Handle Exceptions Thrown by Tasks<ept id="p1">](http://msdn.microsoft.com/en-us/d6c47ec8-9de9-4880-beb3-ff19ae51565d)</ept> and <bpt id="p2">[</bpt>How to: Handle Exceptions in a PLINQ Query<ept id="p2">](~/docs/standard/parallel-programming/how-to-handle-exceptions-in-a-plinq-query.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with a system-supplied message that describes the error.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "DefaultMessageDisplayedByParameterlessCtorWriterMustSupply" This message takes into account the current system culture.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InsufficientMemoryException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The localized error message string.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>The exceptions that are the cause of the current exception.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> is null.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with references to the inner exceptions that are the cause of this exception.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The exceptions that are the cause of the current exception.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> is null.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with a specified message that describes the error.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The message that describes the exception.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with serialized data.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>The contextual information about the source or destination.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The exception could not be deserialized correctly.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The error message that explains the reason for the exception.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The exceptions that are the cause of the current exception.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> is null.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Property</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The error message string specified in <ph id="ph1">`message`</ph>.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The message that describes the exception.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>The exception that is the cause of the current exception.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerException</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not <ph id="ph2">`null`</ph>, the current exception is raised in a <ph id="ph3">`catch`</ph> block that handles the inner exception.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerException</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with a specified error message and references to the inner exceptions that are the cause of this exception.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The error message that explains the reason for the exception.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The exceptions that are the cause of the current exception.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">innerExceptions</ph><ept id="p1">&lt;/code&gt;</ept> is null.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>Flattens an <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> instances into a single, new instance.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a task has an attached child task that throws an exception, that exception is wrapped in an <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exception before it is propagated to the parent task, which wraps that exception in its own <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception before it propagates it back to the calling thread.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>In such cases, the <ph id="ph1">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> exception that is caught by the <ph id="ph3">&lt;xref:System.Threading.Tasks.Task.Wait%2A?displayProperty=fullName&gt;</ph>, <ph id="ph4">&lt;xref:System.Threading.Tasks.Task%601.Wait%2A?displayProperty=fullName&gt;</ph>, <ph id="ph5">&lt;xref:System.Threading.Tasks.Task.WaitAny%2A?displayProperty=fullName&gt;</ph> or <ph id="ph6">&lt;xref:System.Threading.Tasks.Task.WaitAll%2A?displayProperty=fullName&gt;</ph> method contains one or more <ph id="ph7">&lt;xref:System.AggregateException&gt;</ph> instances, not the original exceptions that caused the fault.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>To avoid having to iterate over nested <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions, you can use the <ph id="ph2">&lt;xref:System.AggregateException.Flatten%2A&gt;</ph> method to remove all the nested <ph id="ph3">&lt;xref:System.AggregateException&gt;</ph> exceptions, so that the <ph id="ph4">&lt;xref:System.AggregateException.InnerExceptions%2A&gt;</ph> property of the returned <ph id="ph5">&lt;xref:System.AggregateException&gt;</ph> object contains the original exceptions.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method recursively flattens all instances of  <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> exceptions that are inner exceptions of the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance .</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>The inner exceptions returned in the new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> are the union of all the inner exceptions from exception tree rooted at the current <ph id="ph2">&lt;xref:System.AggregateException&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>A new, flattened <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> that is the root cause of this exception.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>Returns the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> that is the root cause of this exception.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> class with serialized data.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/framework/serialization/xml-and-soap-serialization.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The object that holds the serialized object data.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The contextual information about the source or destination.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">info</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Invokes a handler on each <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> contained by this <ph id="ph2">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Each invocation of the <ph id="ph1">`predicate`</ph> returns true or false to indicate whether the <ph id="ph2">&lt;xref:System.Exception&gt;</ph> was handled.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>After all invocations, if any exceptions went unhandled, all unhandled exceptions will be put into a new <ph id="ph1">&lt;xref:System.AggregateException&gt;</ph> which will be thrown.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the <ph id="ph1">&lt;xref:System.AggregateException.Handle%2A&gt;</ph> method simply returns.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>If any invocations of the <ph id="ph1">`predicate`</ph> throws an exception, it will halt the processing of any more exceptions and immediately propagate the thrown exception as-is.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The predicate to execute for each exception.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>The predicate accepts as an argument the <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> to be processed and returns a Boolean to indicate whether the exception was handled.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">predicate</ph><ept id="p1">&lt;/code&gt;</ept> argument is null.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>An exception contained by this <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph> was not handled.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>Gets a read-only collection of the <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> instances that caused the current exception.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>Returns a read-only collection of the <ph id="ph1">&lt;xref href="System.Exception"&gt;&lt;/xref&gt;</ph> instances that caused the current exception.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>Creates and returns a string representation of the current <ph id="ph1">&lt;xref href="System.AggregateException"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A string representation of the current exception.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>