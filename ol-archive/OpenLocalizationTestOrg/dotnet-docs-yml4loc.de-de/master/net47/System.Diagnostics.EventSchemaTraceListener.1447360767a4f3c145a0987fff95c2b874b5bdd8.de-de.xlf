<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2c81b576088b5801ec37b02006ab8a3f5560de3e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Diagnostics.EventSchemaTraceListener.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80a667bc7f128a16ab12d94aad8a4be1f38afecb</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">53015a661d06acc649b7b6f3a6c438b7d117bf34</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Directs tracing or debugging output of end-to-end events to an XML-encoded, schema-compliant log file.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class provides tracing of end-to-end schema-compliant events.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use end-to-end tracing for a system that has heterogeneous components that cross thread, <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph>, process, and computer boundaries.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>A standardized event schema (see <bpt id="p1">[</bpt>Event Representation for Event Consumers<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=78955)</ept>) has been defined to enable tracing across these boundaries.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The schema enables the addition of custom, schema-compliant elements.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use the <bpt id="p1">[</bpt>Service Trace Viewer Tool (SvcTraceViewer.exe)<ept id="p1">](http://go.microsoft.com/fwlink/p/?LinkId=240129)</ept> to display the event data.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> is tuned for logging performance with implicit support for lock-free tracing.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class converts tracing and debugging information into an XML-encoded text stream.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The description of the XML output is shown in the tables later in this section.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can enable or disable an <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object through the application configuration file, and then use the configured <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object in your application.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternately, you can create an <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object in your code.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend that you enable trace listeners through the application configuration file.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about the use of configuration files for tracing and debugging, see <bpt id="p1">[</bpt>Trace and Debug Settings Schema<ept id="p1">](http://msdn.microsoft.com/library/277ca5f6-e1c4-41b6-a47f-3a67ce5b94ac)</ept>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>To configure an <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> object, modify the configuration file that corresponds to the name of your application.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>In this file, you can add, remove, or set the properties for a listener.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The configuration file should be formatted as follows:</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class inherits the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property from the base class <ph id="ph3">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.TraceListener.Filter%2A&gt;</ph> property allows for an additional level of trace output filtering at the listener.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a filter is present, the <ph id="ph1">`Trace`</ph> methods of the trace listener call the <ph id="ph2">&lt;xref:System.Diagnostics.TraceFilter.ShouldTrace%2A&gt;</ph> method of the filter to determine whether to emit the trace.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an attempt is made to write to a file that is being used or is unavailable, a GUID suffix is automatically added to the file name.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Listener methods are intended to be called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call the listener methods directly from application code.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> listener is primarily intended for use by the <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the elements and attributes of the XML output.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attributes</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Output</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notes</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Callstack&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special characters such as &gt; or &lt; are replaced with escape sequences.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>See the escaped character translation table in the next table.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element represents the value of the <ph id="ph1">&lt;xref:System.Environment.MachineName%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`ActivityID`</ph> is not specified, the default is an empty GUID.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on the presence of the <ph id="ph1">`relatedActivityId`</ph> parameter in the <ph id="ph2">`Trace`</ph> method call.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`RelatedActivityID`</ph> attribute corresponds to the <ph id="ph2">`relatedActivityId`</ph> parameter of the <ph id="ph3">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element represents parameter input (<ph id="ph1">`data`</ph>).</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>One element is provided for each data object.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of event logs, the <ph id="ph1">`Data`</ph> element contains escaped XML data.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>In the case of data logs, the <ph id="ph1">`Data`</ph> element contains unescaped data.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The data log output uses the <ph id="ph1">`ToString`</ph> method of the passed-in data objects.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element contains a trace event.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>Present for event logs.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element represents parameter input (<ph id="ph1">`message`</ph>, <ph id="ph2">`args`</ph>).</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>It contains <ph id="ph1">`Data`</ph> elements with escaped XML data that is created by calling the <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element represents parameter input (<ph id="ph1">`id`</ph>).</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.ProcessId&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ProcessID`</ph> attribute is specified in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>On the Microsoft Windows 98 and Windows Millenium Edition operating systems, if <ph id="ph1">`ProcessID`</ph> is larger than 2,147,483,647, it is a positive representation of a negative number and should be converted to obtain the correct process identifier.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>Present when <ph id="ph1">`ProcessID`</ph> is present.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ThreadID`</ph> attribute is specified in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element represents parameter input (the numeric value of <ph id="ph1">`eventType`</ph>).</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameter values that are larger than 255 are output as a level 8, which represents <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType?displayProperty=fullName&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>Trace event types <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Critical&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Error&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Warning&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph>, and <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType.Verbose&gt;</ph> are output as levels 1, 2, 4, 8, and 10, respectively.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.LogicalOperationStack&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Only one logical operation can exist.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, the values are written as <ph id="ph1">`LogicalOperation`</ph> nodes under the <ph id="ph2">`LogicalOperationStack`</ph> element.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>Present when <ph id="ph1">`Level`</ph> is greater than 255.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element represents Trace event types that have numeric values greater than 255.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Diagnostics.TraceEventType.Start&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Stop&gt;</ph>, <ph id="ph3">&lt;xref:System.Diagnostics.TraceEventType.Suspend&gt;</ph>, <ph id="ph4">&lt;xref:System.Diagnostics.TraceEventType.Resume&gt;</ph>, or <ph id="ph5">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph> are output as levels 1, 2, 4, 8, and 10, respectively.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always empty.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>This attribute represents a resource string for the event type.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is always "en-EN<ph id="ph1">\\</ph>".</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always present.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.DateTime&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>The time is the value of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache.DateTime%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is expressed as Coordinated Universal Time</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>Depends on the presence of the <ph id="ph1">&lt;xref:System.Diagnostics.TraceOptions.Timestamp&gt;</ph> flag in the <ph id="ph2">&lt;xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element is specified in the <ph id="ph1">&lt;xref:System.Diagnostics.TraceEventCache&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>None</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>Present for data logs.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>This element contains <ph id="ph1">`Data`</ph> elements with unescaped, user-provided data from a <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the characters that are escaped in the XML output.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>Escaping occurs in all the elements and attributes except for the <ph id="ph1">`UserData`</ph> element, which contains user-provided, unescaped data.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`UserData`</ph> element is a result of calls to the <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceData%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>Escaped character</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>"</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xD</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>xD;</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>0xA</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&amp;</ph><ph id="ph2">\#</ph>xA;</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener"&gt;&lt;/xref&gt;</ph> class, using the specified file as the recipient of debugging and tracing output.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>By default, one file of unrestricted size is logged.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>The path for the log file.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener"&gt;&lt;/xref&gt;</ph> class with the specified name, using the specified file as the recipient of debugging and tracing output.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>The path for the log file.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>The name of the listener.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener"&gt;&lt;/xref&gt;</ph> class with the specified name and specified buffer size, using the specified file as the recipient of debugging and tracing output.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> should be a multiple of 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The path for the log file.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>The name of the listener.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source>The size of the output buffer, in bytes.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener"&gt;&lt;/xref&gt;</ph> class with the specified name and specified buffer size, using the specified file with the specified log retention policy as the recipient of the debugging and tracing output.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> should be a multiple of 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The path for the log file.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve">
          <source>The name of the listener.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve">
          <source>The size of the output buffer, in bytes.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceLogRetentionOption"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener"&gt;&lt;/xref&gt;</ph> class with the specified name and specified buffer size, using the specified file with the specified log retention policy and maximum size as the recipient of the debugging and tracing output.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> and <ph id="ph2">`maximumFileSize`</ph> should be multiples of 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`maximumFileSize`</ph> is not an absolute value, it is a threshold which can be exceeded up to the size of the last message.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve">
          <source>The path for the log file.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The name of the listener.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The size of the output buffer, in bytes.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceLogRetentionOption"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>The maximum file size, in bytes.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maximumFileSize&lt;/code&gt;</ph> is a negative number.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener"&gt;&lt;/xref&gt;</ph> class with the specified name and specified buffer size, using the specified file with the specified log retention policy, maximum size, and file count as the recipient of the debugging and tracing output.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>For performance considerations, <ph id="ph1">`bufferSize`</ph> and <ph id="ph2">`maximumFileSize`</ph> should be multiples of 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`maximumFileSize`</ph> is not an absolute value; it is a threshold that can be exceeded up to the size of the last message.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>The path for the log file.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>The name of the listener.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>The size of the output buffer, in bytes.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceLogRetentionOption"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>The maximum file size, in bytes.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve">
          <source>The maximum number of output log files.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maximumNumberOfFiles&lt;/code&gt;</ph> is less than 2, and <ph id="ph2">&lt;code&gt;logRetentionOption&lt;/code&gt;</ph> is <ph id="ph3">&lt;xref href="System.Diagnostics.TraceLogRetentionOption.LimitedCircularFiles"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>Gets the size of the output buffer.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property value is set by the <ph id="ph1">`bufferSize`</ph> parameter in the constructor.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT">
          <source>For performance reasons, the buffer size should be set to a multiple of 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT">
          <source>We recommend either the default size of 32*1024 bytes or 64<ph id="ph1">\*</ph>1024 bytes for best performance.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source>The size of the output buffer, in bytes.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Closes the log file for this listener so that it no longer receives tracing or debugging output.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve">
          <source>Writes error information, including a basic error message and a detailed error message, to the log file.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>The basic error message to write.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>The detailed error message to append to the basic error message.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>Causes buffered data to be written to the log for this listener.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>Gets the custom XML configuration attributes that the trace listener supports.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>The custom attributes that are returned by this method can be used in the XML configuration file to control the behavior of an instance of the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using any other attribute causes a configuration exception.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.GetSupportedAttributes%2A&gt;</ph> method for the <ph id="ph2">&lt;xref:System.Diagnostics.EventSchemaTraceListener&gt;</ph> returns the following string array values: "bufferSize", "logRetentionOption", "maximumFileSize", and "maximumNumberOfFiles".</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.String"&gt;&lt;/xref&gt;</ph> array that contains the XML configuration attributes recognized by this listener.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the trace listener is thread safe.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>Always returns <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source>Gets the maximum size of the log file.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property value is set by the <ph id="ph1">`maximumFileSize`</ph> parameter in the constructor or the <ph id="ph2">`maximumFileSize`</ph> attribute in the configuration file.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>For performance reasons, you should set the maximum file size to a multiple of 1024 bytes.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> property value is not an absolute; it is a threshold that can be exceeded up to the size of the last message.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the possible and default values for file size that are associated with each trace log retention option.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values marked as N/A indicate that the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumFileSize%2A&gt;</ph> property is not checked for that <ph id="ph2">&lt;xref:System.Diagnostics.TraceLogRetentionOption&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceLogRetentionOption</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Maximum file size</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default file size</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;0</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>4 KB</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;0</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>4 KB</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;0</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>4 KB</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;0</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>4 KB</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve">
          <source>The maximum file size, in bytes.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>Gets the maximum number of log files.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The property value is set by the <ph id="ph1">`maximumNumberOfFiles`</ph> parameter in the constructor or the <ph id="ph2">`maximumNumberOfFiles`</ph> attribute in the configuration file.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table shows the possible and default values for file size and file count that are associated with each trace log retention option.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>The values marked as N/A indicate that the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.MaximumNumberOfFiles%2A&gt;</ph> property is not checked for that <ph id="ph2">&lt;xref:System.Diagnostics.TraceLogRetentionOption&gt;</ph> value.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>TraceLogRetentionOption</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>Maximum number of files</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Default number of files</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>N/A</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>-1</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;0</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>1</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>&gt;1</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>2</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve">
          <source>The maximum number of log files, determined by the value of the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener.TraceLogRetentionOption"&gt;&lt;/xref&gt;</ph> property for the file.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve">
          <source>Writes trace information, a single data object, and event information to the log file.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`data`</ph> parameter is written as a <ph id="ph2">`Data`</ph> node in the <ph id="ph3">`UserData`</ph> element.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ToString`</ph> method of the data object is used to convert the object to a string.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly by application code.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The source name.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>A data object to emit.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Writes trace information, multiple data objects, and event information to the log file.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>The objects in the <ph id="ph1">`data`</ph> parameter array are written as <ph id="ph2">`Data`</ph> nodes in the <ph id="ph3">`UserData`</ph> element.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`ToString`</ph> method of each data object is used to convert the object to a string.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly by application code.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The source name.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>An array of data objects to emit.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>Writes trace information, a message, and event information to the log file.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> parameter is written as a <ph id="ph2">`Data`</ph> node in the <ph id="ph3">`EventData`</ph> element.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly by application code.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>The source name.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve">
          <source>The message to write.</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>Writes trace information, a formatted message, and event information to the log file.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`eventType`</ph>, and <ph id="ph4">`id`</ph> parameters are used in the header and footer of the trace.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method is called and the <ph id="ph2">`format`</ph> string and <ph id="ph3">`args`</ph> array are passed in as parameters.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method formats the <ph id="ph1">`args`</ph> object array and writes the formatted array as the <ph id="ph2">`Data`</ph> node in the <ph id="ph3">`EventData`</ph> element.</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly by application code.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The source name.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>A format string that contains zero or more format items that correspond to objects in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">args</ph><ept id="p1">&lt;/code&gt;</ept> array.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>An object array that contains zero or more objects to format.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets the trace log retention option for the file.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Diagnostics.TraceLogRetentionOption"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The default is <ph id="ph1">&lt;xref href="System.Diagnostics.TraceLogRetentionOption.SingleFileUnboundedSize"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Writes trace information, including the identity of a related activity, a message, and event information, to the log file.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> method is used to correlate related traces.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`eventCache`</ph>, <ph id="ph2">`source`</ph>, <ph id="ph3">`id`</ph>, and <ph id="ph4">`relatedActivityId`</ph> parameters are used in the header and footer of the trace.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`id`</ph> parameter is converted to an unsigned integer before it is written.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, a negative <ph id="ph1">`id`</ph> value is written as a large positive integer.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`message`</ph> parameter is written as the <ph id="ph2">`Data`</ph> element.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Guid.ToString%28System.String%29?displayProperty=fullName&gt;</ph> method is called to convert the <ph id="ph2">`relatedActivityId`</ph> value to a "B" formatted string, which appears in the header.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`Opcode`</ph> element in the footer identifies the trace event type as a <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Transfer&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceTransfer%2A&gt;</ph> method should not be called by application code.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is intended to be used by a <ph id="ph1">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> object to emit the trace information for its <ph id="ph2">&lt;xref:System.Diagnostics.TraceSource.TraceTransfer%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Diagnostics.TraceEventCache"&gt;&lt;/xref&gt;</ph> that contains the current process ID, thread ID, and stack trace information.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The source name.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>A numeric identifier for the event.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>A trace message to write.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Guid"&gt;&lt;/xref&gt;</ph> structure that identifies a related activity.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>Writes a message to the log file without providing any additional context information.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> method is called to log the message as an <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly by application code.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The message to write.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Writes a message followed by the current line terminator to the log file without providing any additional context information.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.TraceEvent%2A&gt;</ph> method is called to log the message as an <ph id="ph2">&lt;xref:System.Diagnostics.TraceEventType.Information&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is not intended to be called directly by application code.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is called by methods of the <ph id="ph1">&lt;xref:System.Diagnostics.Debug&gt;</ph>, <ph id="ph2">&lt;xref:System.Diagnostics.Trace&gt;</ph>, and <ph id="ph3">&lt;xref:System.Diagnostics.TraceSource&gt;</ph> classes to write trace data.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The message to write.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>Gets or sets the underlying text writer that writes to the log file.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attempt to use the set accessor for the <ph id="ph1">&lt;xref:System.Diagnostics.EventSchemaTraceListener.Writer%2A&gt;</ph> property raises a <ph id="ph2">&lt;xref:System.NotSupportedException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.IO.TextWriter"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>An attempt was made to assign a value to the <ph id="ph1">&lt;xref href="System.Diagnostics.EventSchemaTraceListener.Writer"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>