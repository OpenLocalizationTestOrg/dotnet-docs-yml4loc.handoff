<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a0cf9f65884894fdf79d071ec2d88bdc287b2a74</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.IdentityModel.Tokens.BinaryKeyIdentifierClause.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">47a1e055406193505ffb5f38e4c21796e14cab78</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">744183c2a9ec0f93cbbdfa442ae750c464d6a6f2</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a base class for key identifier clauses that are based upon binary data.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Typically, the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>These references typically affirm the authenticity of the issued security token.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;&lt;/xref&gt;</ph> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>Sets the value of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to clone the array passed into the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">identificationData</ph><ept id="p1">&lt;/code&gt;</ept> parameter; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;&lt;/xref&gt;</ph> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`derivationNonce`</ph> and <ph id="ph2">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value passed into the <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the <ph id="ph3">`identificationData`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The key identifier clause type.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Sets the value of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Sets the binary data that is returned by the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to clone the array passed into the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">identificationData</ph><ept id="p1">&lt;/code&gt;</ept> parameter; otherwise, <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that contains the nonce that was used to create a derived key.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Sets the value that is returned by the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The size of the derived key.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Sets the value of the <ph id="ph1">&lt;xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength"&gt;&lt;/xref&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Gets the binary data that represents the key identifier.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>Regardless of the value passed into the constructor's <ph id="ph1">`cloneBuffer`</ph> parameter, the <ph id="ph2">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph3">`identificationData`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Gets the binary data that represents the key identifier.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The array returned by the <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> method is a clone of the constructor's <ph id="ph2">`identificationData`</ph> parameter when the value passed into the <ph id="ph3">`cloneBuffer`</ph> is <ph id="ph4">`true`</ph>; otherwise it is same array.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id="ph2">`identificationData`</ph> parameter.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the binary data for the current instance matches the specified binary data.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> to compare to.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">data</ph><ept id="p1">&lt;/code&gt;</ept> is equivalent to the binary data returned by the <ph id="ph3">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer"&gt;&lt;/xref&gt;</ph> method; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">clause</ph><ept id="p1">&lt;/code&gt;</ept> is of type <ph id="ph3">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause"&gt;&lt;/xref&gt;</ph> and the binary data returned by the <ph id="ph4">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer"&gt;&lt;/xref&gt;</ph> method is identical for the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph5">clause</ph><ept id="p2">&lt;/code&gt;</ept> parameter and the current instance; otherwise, <ph id="ph6">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Byte"&gt;&lt;/xref&gt;</ph> to compare to.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The index in the array at which the comparison starts.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the binary data in the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">data</ph><ept id="p1">&lt;/code&gt;</ept> parameter starting at the index specified in the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">offset</ph><ept id="p2">&lt;/code&gt;</ept> parameter is equivalent to the binary data returned by the <ph id="ph4">&lt;xref href="System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer"&gt;&lt;/xref&gt;</ph> method (starting at index zero); otherwise, <ph id="ph5">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>