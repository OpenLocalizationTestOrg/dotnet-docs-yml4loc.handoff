<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">364e89e3a67a32d7d9999d6e588fe7566712c285</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ComponentModel.Design.DesignSurfaceManager.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">00ab8ad173d37b44cf1b02a15562d2dc757db73b</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9b1bcbd53b77c8fe3c31aafd1daee63204ae333</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Manages a collection of <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurface"&gt;&lt;/xref&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class is designed to be a container of <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> objects.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It provides common services that handle event routing between designers, property windows, and other global objects.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Using <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> is optional, but it is recommended if you intend to have several designer windows.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides several design-time services automatically.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can override each of these services by replacing them in the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>To replace a service, override the constructor, call base, and make any changes through the protected <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>All services added to the service container that implement the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface are disposed when the design surface manager is disposed.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> class provides the <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface as the default service.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> provides a global eventing mechanism for designer events.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>With this mechanism, an application is informed when a designer becomes active.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The service provides a collection of designers and a single place where global objects, such as the Properties window, can monitor selection change events.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>A parent service provider.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Service requests are forwarded to this provider if they cannot be resolved by the design surface manager.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>Gets or sets the active designer.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.ActiveDesignSurface%2A&gt;</ph> property should be set by the designer's user interface whenever a designer becomes the active window.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation of this property works with the default implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface to notify interested parties that a new designer is now active.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you provide your own implementation of <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, you should override this property to notify your service appropriately.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property can be set to <ph id="ph1">`null`</ph>, indicating that no designer is active.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The active designer.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Occurs when the currently active designer changes.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Creates an instance of a design surface.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>A new design surface instance.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Creates an instance of a design surface.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to conveniently add additional per-designer services, use the <ph id="ph1">`parentProvider`</ph> parameter to provide a service provider for this design surface.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method creates a merged service provider that can satisfy service requests from both the given service provider as well as the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> itself.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method then passes this service provider into the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>After <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> returns the design surface, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method tries to obtain the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is present, and if it is the instance of the service that <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> provided by default, the <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> method raises the <ph id="ph3">&lt;xref:System.ComponentModel.Design.IDesignerEventService.DesignerCreated&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>A parent service provider.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>A new merged service provider will be created that will first ask this provider for a service, and then delegate any failures to the design surface manager object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>This merged provider will be passed into the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore(System.IServiceProvider)"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new design surface instance.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;parentProvider&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Implementation that creates the design surface.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurfaceCore%2A&gt;</ph> method is called by both <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.CreateDesignSurface%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is the implementation that actually creates the design surface.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default implementation just returns a new <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>You may override this method to provide a custom object that derives from the <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurface&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>A service provider to pass to the design surface.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>This is either an instance of <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;&lt;/xref&gt;</ph> or an object that implements <ph id="ph2">&lt;xref href="System.IServiceProvider"&gt;&lt;/xref&gt;</ph>, and represents a merge between the service provider of the <ph id="ph3">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;&lt;/xref&gt;</ph> class and an externally passed provider.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>A new design surface instance.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Occurs when a designer is created.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>Occurs when a designer is disposed.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Gets a collection of design surfaces.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.DesignSurfaces%2A&gt;</ph> property is implemented directly on top of <ph id="ph2">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph>, so if you provide your own implementation of that service, this property uses your implementation.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>A collection of design surfaces that are currently hosted by the design surface manager.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Releases the resources used by the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method destroys the design surface manager.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also disposes the service container, which causes all services that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>The public <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph> method follows the standard <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling this method destroys the design surface manager.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also disposes the service container, which causes all services that implement <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> to also be disposed.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>The protected version of this method is <ph id="ph1">`virtual`</ph> and follows the normal <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> pattern.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> does not have any native code to clean up, it does not have a finalizer that calls <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to call <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.Dispose%2A&gt;</ph>, you must add a finalizer yourself.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager&gt;</ph> references.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to release both managed and unmanaged resources; <ph id="ph2">`false`</ph> to release only unmanaged resources.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>Gets a service in the design surface manager’s service container.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Design.DesignSurfaceManager.GetService%2A&gt;</ph> method forwards to any service provider that was given to the design surface manager at construction time.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>The service type to retrieve.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An object that implements, or is a derived class of, the given service type; otherwise, <ph id="ph1">`null`</ph> if the service does not exist in the service container.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>Occurs when the global selection changes.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>This event is raised when the active designer's selection of component set changes.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is mapped through the <ph id="ph1">&lt;xref:System.ComponentModel.Design.IDesignerEventService&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>Gets the design surface manager's <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The design surface manager's <ph id="ph1">&lt;xref href="System.ComponentModel.Design.DesignSurfaceManager.ServiceContainer"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>