<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4e9c235f6a3019d53ee45c9ae8d13891c7b726f8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.GCHandle.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7e4b9ce644c11531442351bf6d22f4e0755092ca</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d7177306e742693d5b9a141f1e4930fc94af3e7a</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides a way to access a managed object from unmanaged memory.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> structure is used with the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandleType&gt;</ph> enumeration to create a handle corresponding to any managed object.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>This handle can be one of four types: <ph id="ph1">`Weak`</ph>, <ph id="ph2">`WeakTrackResurrection`</ph>, <ph id="ph3">`Normal`</ph>, or <ph id="ph4">`Pinned`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the handle has been allocated, you can use it to prevent the managed object from being collected by the garbage collector when an unmanaged client holds the only reference.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Without such a handle, the object can be collected by the garbage collector before completing its work on behalf of the unmanaged client.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also use <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> to create a pinned object that returns a memory address to prevent the garbage collector from moving the object in memory.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the handle goes out of scope you must explicitly release it by calling the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A&gt;</ph> method; otherwise, memory leaks may occur.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>When you free a pinned handle, the associated object will be unpinned and will become eligible for garbage collection, if there are no other references to it.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>Retrieves the address of an object in a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandleType.Pinned"&gt;&lt;/xref&gt;</ph> handle.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is used to get a stable pointer to the object.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pinning an object prevents the garbage collector from moving it around in memory, thereby reducing the efficiency of the garbage collector.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>The address of the pinned object as an <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The handle is any type other than <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandleType.Pinned"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Allocates a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandleType.Normal"&gt;&lt;/xref&gt;</ph> handle for the specified object.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandleType.Normal&gt;</ph> handles are opaque, which means that you cannot resolve the address of the object it contains through the handle.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The object that uses the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> that protects the object from garbage collection.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> must be released with <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle.Free"&gt;&lt;/xref&gt;</ph> when it is no longer needed.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An instance with nonprimitive (non-blittable) members cannot be pinned.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>Allocates a handle of the specified type for the specified object.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The object that uses the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandleType"&gt;&lt;/xref&gt;</ph> values, indicating the type of <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> to create.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> of the specified type.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> must be released with <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle.Free"&gt;&lt;/xref&gt;</ph> when it is no longer needed.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An instance with nonprimitive (non-blittable) members cannot be pinned.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object is equal to the current <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>Two <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> objects are equal if they point to the same memory handle.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object to compare with the current <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the specified <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object is equal to the current <ph id="ph3">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Releases a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The caller must ensure that for a given handle, <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Free%2A&gt;</ph> is called only once.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The handle was freed or never initialized.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Returns a new <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object created from a handle to a managed object.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph> handle to a managed object to create a <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object from.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A new <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object that corresponds to the value parameter.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>The value of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">value</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">&lt;xref href="System.IntPtr.Zero"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Returns an identifier for the current <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.GetHashCode%2A&gt;</ph> method returns an integer representation of the internal memory handle encapsulated by the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> structure.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>An identifier for the current <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the handle is allocated.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this property when using <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandleType.Weak&gt;</ph> handles to determine if the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.GCHandle&gt;</ph> is still available.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the garbage collector collects the object, the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandleType.Weak&gt;</ph> handle can still be resurrected in the finalizer.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>In that case, the handle is not allocated (it is lost when the garbage collector attempts to collect the object), even though the target object is valid.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the handle is allocated; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> objects are equal.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Equals%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">b</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">a</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">a</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">b</ph><ept id="p2">&lt;/code&gt;</ept> parameters are equal; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>Returns a value indicating whether two <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> objects are not equal.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Runtime.InteropServices.GCHandle.Compare%28System.Runtime.InteropServices.GCHandle%2CSystem.Runtime.InteropServices.GCHandle%29?displayProperty=fullName&gt;</ph></source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">b</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object to compare with the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">a</ph><ept id="p1">&lt;/code&gt;</ept> parameter.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">a</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">b</ph><ept id="p2">&lt;/code&gt;</ept> parameters are not equal; otherwise, <ph id="ph4">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Gets or sets the object this handle represents.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The object this handle represents.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The handle was freed, or never initialized.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>Returns the internal integer representation of a <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object to retrieve an internal integer representation from.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.IntPtr"&gt;&lt;/xref&gt;</ph> object that represents a <ph id="ph2">&lt;xref href="System.Runtime.InteropServices.GCHandle"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>