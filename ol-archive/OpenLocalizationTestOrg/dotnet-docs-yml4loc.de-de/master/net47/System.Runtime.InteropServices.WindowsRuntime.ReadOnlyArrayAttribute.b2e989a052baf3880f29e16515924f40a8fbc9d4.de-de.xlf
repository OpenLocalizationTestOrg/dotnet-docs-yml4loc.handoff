<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c42d40a96be711cc4c2452502d7878dc279a7abd</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bc3549eeb104b0f25a25b46a099f0252f05cb278</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">09d6db33603cd60cb7e978ecf122d892d6684189</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>When applied to an array parameter in a Windows Runtime component, specifies that the contents of the array that is passed to that parameter are used only for input.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>The caller expects the array to be unchanged by the call.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an array parameter in your <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component is passed by value (<ph id="ph2">`ByVal`</ph> in Visual Basic), you must apply one of the following attributes to it:</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute&gt;</ph> attribute if you intend the contents of the array to be used for input only.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute&gt;</ph> attribute if you intend the contents of the array to be used for output only (that is, the method sets the contents of the array but does not read them).</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying both attributes to a parameter causes an error.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, including the standard pattern for making changes to an array, see <bpt id="p1">[</bpt>Passing arrays to a Windows Runtime component<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=251026)</ept> in the Windows Dev Center.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>Parameters that have the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute&gt;</ph>attribute behave differently depending on whether the caller is written in native code or managed code.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caller is native code (JavaScript or <ph id="ph1">[!INCLUDE[cppwrt](~/includes/cppwrt-md.md)]</ph>), the array is copied when the call crosses the application binary interface (ABI) boundary.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Elements are converted if necessary.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, any accidental changes the method makes to an input-only array are not visible to the caller.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the caller is managed code, the array is not copied.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>The original array is available to the called method, as it would be in any method call in the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>Array contents are mutable in .NET Framework code, so any changes the method makes to the array are visible to the caller.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is important to remember because it affects unit tests written for a <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> component.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the tests are written in managed code, the contents of an array will appear to be mutable during testing.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying this attribute to a parameter that has the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.InAttribute&gt;</ph> or <ph id="ph2">&lt;xref:System.Runtime.InteropServices.OutAttribute&gt;</ph> attribute causes an error when the module is exported.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Applying the attribute to an <ph id="ph1">`out`</ph> parameter also causes an error.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>