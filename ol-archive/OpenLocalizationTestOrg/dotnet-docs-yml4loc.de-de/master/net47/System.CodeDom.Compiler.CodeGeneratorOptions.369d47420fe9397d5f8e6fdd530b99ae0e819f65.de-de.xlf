<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">728d615d6eff7ef1623557c8e39939e709b8665e</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.CodeDom.Compiler.CodeGeneratorOptions.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ce50807b59d38a428a49f8588c734e14dd1d4020</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fecbb68c4529c6b8e8d7ff7ce870d578401d3404</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a set of options used by a code generator.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions&gt;</ph> is passed to the code generation methods of an <ph id="ph2">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation to specify options used during code generation.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions.IndentString%2A&gt;</ph> property specifies the string to use for each spacing indentation.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions.BracingStyle%2A&gt;</ph> property specifies the placement style for braces indicating the boundaries of code blocks.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions.ElseOnClosing%2A&gt;</ph> property specifies whether to append an <ph id="ph2">`else`</ph>, <ph id="ph3">`catch`</ph>, or <ph id="ph4">`finally`</ph> block, including brackets, at the closing line of each <ph id="ph5">`if`</ph> or <ph id="ph6">`try`</ph> block.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions.BlankLinesBetweenMembers%2A&gt;</ph> property specifies whether to insert blank lines between members.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.CodeDom.Compiler.ICodeGenerator&gt;</ph> implementation can provide custom code generation options which you can set or pass data to using the <ph id="ph2">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions.Item%2A&gt;</ph> dictionary indexer, which a code generator can search through to locate additional code generation options.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class contains a link demand and an inheritance demand at the class level that applies to all members.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.Security.SecurityException&gt;</ph> is thrown when either the immediate caller or the derived class does not have full-trust permission.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>For details about security demands, see <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> and <bpt id="p2">[</bpt>Inheritance Demands<ept id="p2">](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)</ept>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.CodeDom.Compiler.CodeGeneratorOptions"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to insert blank lines between members.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if blank lines should be inserted; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>By default, the value of this property is <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Gets or sets the style to use for bracing.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of this property is <ph id="ph1">`Block`</ph>, which indicates that code should be generated so that braces start on the same line as the statement or declaration that they are associated with.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>A property value of <ph id="ph1">`C`</ph> indicates that braces start on the line following the statement or declaration that they are associated with.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>A string containing the bracing style to use.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to append an <ph id="ph1">`else`</ph>, <ph id="ph2">`catch`</ph>, or <ph id="ph3">`finally`</ph> block, including brackets, at the closing line of each previous <ph id="ph4">`if`</ph> or <ph id="ph5">`try`</ph> block.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if an else should be appended; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The default value of this property is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Gets or sets the string to use for indentations.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default value of this property is "/----/" (four spaces).</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>A string containing the characters to use for indentations.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Gets or sets the object at the specified index.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>This dictionary provides an extensibility mechanism for developers to provide data for custom features of a code generator.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>A code generator must implement such features and support checking the dictionary for this to be useful.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The name associated with the object to retrieve.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>The object associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If no object associated with the specified name exists in the collection, <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Gets or sets a value indicating whether to generate members in the order in which they occur in member collections.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>The default generates members by their type, for example; field, member, constructor, or property.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>A code generator can use the <ph id="ph1">&lt;xref:System.CodeDom.Compiler.CodeGeneratorOptions.VerbatimOrder%2A&gt;</ph> property to inject #region blocks into code, thus changing the order.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to generate the members in the order in which they occur in the member collection; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>The default value of this property is <ph id="ph1">`false`</ph>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>