<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1430f58ab8853981dc27a37eee581e463ba7a63b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Runtime.Serialization.FormatterServices.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">681e67a7ecc333a1b1f24ddfe47a03d1b2d18430</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a30eaa152a97165314be44263b02983fd6305f06</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides static methods to aid with the implementation of a <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatter"&gt;&lt;/xref&gt;</ph> for serialization.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Determines whether the specified <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> can be deserialized with the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.TypeFilterLevel"&gt;&lt;/xref&gt;</ph> property set to <ph id="ph3">`Low`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to determine whether a specified type can be deserialized when the <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel&gt;</ph> property is set to <ph id="ph2">`Low`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>.NET Framework remoting provides two levels of automatic deserialization, <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> deserialization level supports automatic deserialization of all types that remoting supports in all situations.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about the.NET Framework remoting types that <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Low&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.Formatters.TypeFilterLevel.Full&gt;</ph> support, see <bpt id="p1">[</bpt>&amp;#91;<ph id="ph3">\&lt;</ph>topic://cpconAutomaticDeserializationInNETRemoting&gt;&amp;#93;<ept id="p1">](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)</ept>.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> to check for the ability to deserialize.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Runtime.Serialization.Formatters.TypeFilterLevel"&gt;&lt;/xref&gt;</ph> property value.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">t</ph><ept id="p1">&lt;/code&gt;</ept> parameter is an advanced type and cannot be deserialized when the <ph id="ph2">&lt;xref href="System.Runtime.Serialization.Formatters.TypeFilterLevel"&gt;&lt;/xref&gt;</ph> property is set to <ph id="ph3">`Low`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Extracts the data from the specified object and returns it as an array of objects.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>For each supplied member of the <ph id="ph1">`members`</ph> array the <ph id="ph2">&lt;xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A&gt;</ph> method extracts the value associated with the <ph id="ph3">`obj`</ph> object, and returns it.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The length of the returned array is the same as the length of the <ph id="ph1">`members`</ph> array.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The object to write to the formatter.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The members to extract from the object.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that contains data stored in <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">members</ph><ept id="p1">&lt;/code&gt;</ept> and associated with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">obj</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept> or <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">members</ph><ept id="p2">&lt;/code&gt;</ept> parameter is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">members</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">members</ph><ept id="p1">&lt;/code&gt;</ept> does not represent a field.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the specified object type.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> should only be used for deserialization when the user intends to immediately populate all fields.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> converts all class level <bpt id="p1">[</bpt>Link Demands<ept id="p1">](~/docs/framework/misc/link-demands.md)</ept> to <bpt id="p2">[</bpt>Demands<ept id="p2">](http://msdn.microsoft.com/en-us/e5283e28-2366-4519-b27d-ef5c1ddc1f48)</ept> to ensure that all direct and indirect callers have the permissions that the demand specifies.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A&gt;</ph> to increase the level of security when deserializing from a partially trusted source.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>For better performance in full trust scenarios, use <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The type of object to create.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A zeroed object of the specified type.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is not a valid common language runtime type.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Gets all the serializable members for a class of the specified <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be included, properties must have both a getter and a setter.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class that implements the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>The type being serialized.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> of the non-transient, non-static members.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>Gets all the serializable members for a class of the specified <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> and in the provided <ph id="ph2">&lt;xref href="System.Runtime.Serialization.StreamingContext"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Generally, the serializable members of a class are the non-transient, non-static members such as fields and properties.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>To be included, properties must have both a getter and a setter.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>A class that implements <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> or has a serialization surrogate does not have to serialize all these members, or can serialize additional members.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>Currently, you do not need to do anything different unless <ph id="ph1">`context`</ph> has the <ph id="ph2">&lt;xref:System.Runtime.Serialization.StreamingContextStates&gt;</ph> value <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContextStates.Clone&gt;</ph> set.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The type being serialized or cloned.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The context where the serialization occurs.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>An array of type <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> of the non-transient, non-static members.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>Returns a serialization surrogate for the specified <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>The specified surrogate.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Runtime.Serialization.ISerializationSurrogate"&gt;&lt;/xref&gt;</ph> for the specified <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">innerSurrogate</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>Looks up the <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the specified object in the provided <ph id="ph2">&lt;xref href="System.Reflection.Assembly"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>The assembly where you want to look up the object.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>The name of the object.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Type"&gt;&lt;/xref&gt;</ph> of the named object.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">assem</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>Creates a new instance of the specified object type.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the new instance of the object is initialized to zero and no constructors are run, the object might not represent a state that is regarded as valid by that object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>The current method should only be used for deserialization when the user intends to immediately populate all fields.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>It does not create an uninitialized string, since creating an empty instance of an immutable type serves no purpose.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A&gt;</ph> method to create instances of types that derive from the <ph id="ph2">&lt;xref:System.ContextBoundObject&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>The type of object to create.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>A zeroed object of the specified type.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">type</ph><ept id="p1">&lt;/code&gt;</ept> parameter is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>Populates the specified object with values for each field drawn from the data array of objects.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an element in <ph id="ph1">`data`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">&lt;xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A&gt;</ph> does not write anything to that field.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>The object to populate.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Reflection.MemberInfo"&gt;&lt;/xref&gt;</ph> that describes which fields and properties to populate.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="System.Object"&gt;&lt;/xref&gt;</ph> that specifies the values for each field and property to populate.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>The newly populated object.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">obj</ph><ept id="p1">&lt;/code&gt;</ept>, <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">members</ph><ept id="p2">&lt;/code&gt;</ept>, or <bpt id="p3">&lt;code&gt;</bpt><ph id="ph3">data</ph><ept id="p3">&lt;/code&gt;</ept> parameter is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">members</ph><ept id="p1">&lt;/code&gt;</ept> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>The length of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">members</ph><ept id="p1">&lt;/code&gt;</ept> does not match the length of <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">data</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>An element of <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">members</ph><ept id="p1">&lt;/code&gt;</ept> is not an instance of <ph id="ph2">&lt;xref href="System.Reflection.FieldInfo"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>The caller does not have the required permission.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>