<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">86895ab077ad320b103c2fecb9f2ec7a64696cb1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.VisualBasic.Compatibility.VB6.IAccessor.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5ce93cbb5a341d5bbc3abbd0f94bb778c2f65c01</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">71057b8a96e70028e5b556118decb3c54cab95d0</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides an implementation of the OLE DB <ph id="ph1">`IAccessor`</ph> interface for use by applications upgraded from Visual Basic 6.0.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functions and objects in the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6&gt;</ph> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are necessary only when the Visual Basic 6.0 code model differs significantly from the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Adds a reference count to an existing accessor.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functions and objects in the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6&gt;</ph> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are necessary only when the Visual Basic 6.0 code model differs significantly from the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>The handle of the accessor for which to increment the reference count.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>A pointer to memory in which to return the reference count of the accessor handle.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">cRefCount</ph><ept id="p1">&lt;/code&gt;</ept> is a null pointer, no reference count is returned.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Creates an accessor from a set of bindings.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functions and objects in the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6&gt;</ph> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are necessary only when the Visual Basic 6.0 code model differs significantly from the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>A bitmask that describes the properties of the accessor and how it can be used.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The number of bindings in the accessor.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>An array of <ph id="ph1">&lt;xref href="Microsoft.VisualBasic.Compatibility.VB6.DBBINDING"&gt;&lt;/xref&gt;</ph> structures.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The number of bytes allocated for a single set of parameters or criteria values in the consumer's buffer.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A pointer to memory in which to return the handle of the created accessor.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>A pointer to an array of <ph id="ph1">`DBBINDSTATUS`</ph> values.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Returns the bindings in an accessor.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functions and objects in the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6&gt;</ph> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are necessary only when the Visual Basic 6.0 code model differs significantly from the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The handle of the accessor for which to return the bindings.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>A pointer to memory in which to return a bitmask that describes the properties of the accessor and how it is intended to be used.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>A pointer to memory in which to return the number of bindings in the accessor.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>A pointer to memory in which to return an array of <ph id="ph1">`DBBINDSTATUS`</ph> structures.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Releases an accessor.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Functions and objects in the <ph id="ph1">&lt;xref:Microsoft.VisualBasic.Compatibility.VB6&gt;</ph> namespace are provided for use by the tools for upgrading from Visual Basic 6.0 to <ph id="ph2">[!INCLUDE[vbprvb](~/includes/vbprvb-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, these functions and objects duplicate functionality that you can find in other namespaces in the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>They are necessary only when the Visual Basic 6.0 code model differs significantly from the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> implementation.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>The handle of the accessor to release.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>A pointer to memory in which to return the remaining reference count of the accessor handle.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>