<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="de-de">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e18486552d7e02676e4c8d0b216e02204e0bb3af</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.AccessControl.AceEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0624c30940832c4f52fb33229f7f15d661bf0775</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">91ff8873d9044ca3863c0a7512e963690770a0a7</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the ability to iterate through the access control entries (ACEs) in an access control list (ACL).</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Gets the current element in the <ph id="ph1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>This property gets the type-friendly version of the object.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>The current element in the <ph id="ph1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Advances the enumerator to the next element of the <ph id="ph1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a call to the <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> method, an enumerator is positioned before the first element of the collection, and the first call to the <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> method moves the enumerator over the first element of the collection.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the end of the collection is passed, subsequent calls to <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> return <ph id="ph2">`false`</ph> until <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">`false`</ph> if the enumerator has passed the end of the collection.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Sets the enumerator to its initial position, which is before the first element in the <ph id="ph1">&lt;xref href="System.Security.AccessControl.GenericAce"&gt;&lt;/xref&gt;</ph> collection.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If , such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated and the next call to the <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> method or the <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> method throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph></source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>Gets the current element in the collection.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>After an enumerator is created or after a call to the <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> method, you must call the <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>; otherwise, <ph id="ph4">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> is undefined.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> also throws an exception if the last call to <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph3">`false`</ph>, which indicates the end of the collection.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> does not move the position of the enumerator, and consecutive calls to <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> return the same object until either <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes, such as adding, modifying, or deleting elements, are made to the collection, the enumerator is irrecoverably invalidated, and the next call to <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between <ph id="ph1">&lt;xref:System.Security.AccessControl.AceEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.AccessControl.AceEnumerator.System%23Collections%23IEnumerator%23Current%2A&gt;</ph> returns the element that it is set to, even if the enumerator is already invalidated.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Returns the current element in the collection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The collection was modified after the enumerator was created.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>