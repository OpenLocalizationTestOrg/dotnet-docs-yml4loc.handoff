### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualC.StlClr.GenericPair`2
  commentId: T:Microsoft.VisualC.StlClr.GenericPair`2
  id: GenericPair`2
  children:
  - Microsoft.VisualC.StlClr.GenericPair`2.#ctor
  - Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair)
  - Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)
  - Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)
  - Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)
  - Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)
  - Microsoft.VisualC.StlClr.GenericPair`2.first
  - Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair)
  - Microsoft.VisualC.StlClr.GenericPair`2.second
  - Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair)
  langs:
  - csharp
  name: GenericPair<TValue1,TValue2>
  nameWithType: GenericPair<TValue1,TValue2>
  fullName: Microsoft.VisualC.StlClr.GenericPair<TValue1,TValue2>
  type: Class
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Describes an object that wraps a pair of values.
  remarks: For more information, see [pair (STL/CLR)](http://msdn.microsoft.com/library/3326b4d9-a52a-49e5-8103-9aa5e8b352de).
  syntax:
    content: public class GenericPair<TValue1,TValue2>
    typeParameters:
    - id: TValue1
      description: Type of the first value in the pair.
    - id: TValue2
      description: Type of the second value in the pair.
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor
  id: '#ctor'
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: GenericPair<TValue1,TValue2>()
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>()
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>()
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Constructs a new <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object with default values for <xref href="Microsoft.VisualC.StlClr.GenericPair`2.first"></xref> and <xref href="Microsoft.VisualC.StlClr.GenericPair`2.second"></xref>.
  remarks: For more information, see [pair::pair (STL/CLR)](http://msdn.microsoft.com/library/188035f3-bd37-4b46-96dd-5ceb9a16df79).
  syntax:
    content: >-
      [System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]

      public GenericPair ();
    parameters: []
  overload: Microsoft.VisualC.StlClr.GenericPair`2.#ctor*
  exceptions: []
  attributes:
  - type: System.Runtime.TargetedPatchingOptOutAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: '#ctor(Microsoft.VisualC.StlClr.GenericPair)'
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: GenericPair<TValue1,TValue2>(GenericPair)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(GenericPair)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(GenericPair)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public GenericPair (Microsoft.VisualC.StlClr.GenericPair _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.GenericPair
      description: ''
  overload: Microsoft.VisualC.StlClr.GenericPair`2.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)
  id: '#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)'
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: GenericPair<TValue1,TValue2>(KeyValuePair<TValue1,TValue2>)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(KeyValuePair<TValue1,TValue2>)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(KeyValuePair<TValue1,TValue2>)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Constructs a new <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object from an existing <xref href="System.Collections.Generic.KeyValuePair`2"></xref> object.
  remarks: For more information, see [pair::pair (STL/CLR)](http://msdn.microsoft.com/library/188035f3-bd37-4b46-96dd-5ceb9a16df79).
  syntax:
    content: public GenericPair (ref System.Collections.Generic.KeyValuePair<TValue1,TValue2> _Right);
    parameters:
    - id: _Right
      type: System.Collections.Generic.KeyValuePair{TValue1,TValue2}
      description: The <xref href="System.Collections.Generic.KeyValuePair`2"></xref> object to be copied into the new <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object.
  overload: Microsoft.VisualC.StlClr.GenericPair`2.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)
  id: '#ctor(`0)'
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: GenericPair<TValue1,TValue2>(TValue1)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Constructs a new <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object and assigns its first value to the specified value.
  remarks: For more information, see [pair::pair (STL/CLR)](http://msdn.microsoft.com/library/188035f3-bd37-4b46-96dd-5ceb9a16df79).
  syntax:
    content: public GenericPair (TValue1 _Val1);
    parameters:
    - id: _Val1
      type: TValue1
      description: The value to store in <xref href="Microsoft.VisualC.StlClr.GenericPair`2.first"></xref>. The <xref href="Microsoft.VisualC.StlClr.GenericPair`2.second"></xref> value is assigned the default value for its type.
  overload: Microsoft.VisualC.StlClr.GenericPair`2.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: GenericPair<TValue1,TValue2>(TValue1, TValue2)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1, TValue2)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1, TValue2)
  type: Constructor
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Constructs a new <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object with the two values specified.
  remarks: For more information, see [pair::pair (STL/CLR)](http://msdn.microsoft.com/library/188035f3-bd37-4b46-96dd-5ceb9a16df79).
  syntax:
    content: public GenericPair (TValue1 _Val1, TValue2 _Val2);
    parameters:
    - id: _Val1
      type: TValue1
      description: The value to store in <xref href="Microsoft.VisualC.StlClr.GenericPair`2.first"></xref>.
    - id: _Val2
      type: TValue2
      description: The value to store in <xref href="Microsoft.VisualC.StlClr.GenericPair`2.second"></xref>.
  overload: Microsoft.VisualC.StlClr.GenericPair`2.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)
  id: Equals(System.Object)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: GenericPair<TValue1,TValue2>.Equals(Object)
  fullName: GenericPair<TValue1,TValue2>.Equals(Object)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: Determines if two <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> objects are equal.
  remarks: For more information, see [operator== (pair) (STL/CLR)](http://msdn.microsoft.com/library/2b4879a1-f326-4fb3-b113-bd8d457f9802).
  syntax:
    content: public override bool Equals (object _Right_arg);
    parameters:
    - id: _Right_arg
      type: System.Object
      description: The <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object to compare with the current <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object.
    return:
      type: System.Boolean
      description: '`true` if the two <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> objects are equal; otherwise, `false`.'
  overload: Microsoft.VisualC.StlClr.GenericPair`2.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.first
  commentId: F:Microsoft.VisualC.StlClr.GenericPair`2.first
  id: first
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: first
  nameWithType: GenericPair<TValue1,TValue2>.first
  fullName: GenericPair<TValue1,TValue2>.first
  type: Field
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: The first wrapped value of the <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object.
  remarks: For more information, see [pair::first (STL/CLR)](http://msdn.microsoft.com/library/0dd2278f-adf9-46df-8ac8-7e8e1a2ef52e).
  syntax:
    content: public TValue1 first;
    return:
      type: TValue1
      description: ''
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: op_Assign(Microsoft.VisualC.StlClr.GenericPair)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: op_Assign(GenericPair)
  nameWithType: GenericPair<TValue1,TValue2>.op_Assign(GenericPair)
  fullName: GenericPair<TValue1,TValue2>.op_Assign(GenericPair)
  type: Operator
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public Microsoft.VisualC.StlClr.GenericPair op_Assign (Microsoft.VisualC.StlClr.GenericPair _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.GenericPair
      description: ''
    return:
      type: Microsoft.VisualC.StlClr.GenericPair
      description: ''
  overload: Microsoft.VisualC.StlClr.GenericPair`2.op_Assign*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
- uid: Microsoft.VisualC.StlClr.GenericPair`2.second
  commentId: F:Microsoft.VisualC.StlClr.GenericPair`2.second
  id: second
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: second
  nameWithType: GenericPair<TValue1,TValue2>.second
  fullName: GenericPair<TValue1,TValue2>.second
  type: Field
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  summary: The second wrapped value of the <xref href="Microsoft.VisualC.StlClr.GenericPair`2"></xref> object.
  remarks: For more information, see [pair::second (STL/CLR)](http://msdn.microsoft.com/library/f30d3d1f-c7be-45d2-92ff-6861b96a92ff).
  syntax:
    content: public TValue2 second;
    return:
      type: TValue2
      description: ''
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
  ms.author: mblome
  manager: ghogen
- uid: Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair)
  commentId: M:Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair{`0,`1}|System.Runtime.CompilerServices.IsImplicitlyDereferenced)
  id: swap(Microsoft.VisualC.StlClr.GenericPair)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  langs:
  - csharp
  name: swap(GenericPair)
  nameWithType: GenericPair<TValue1,TValue2>.swap(GenericPair)
  fullName: GenericPair<TValue1,TValue2>.swap(GenericPair)
  type: Method
  assemblies:
  - Microsoft.VisualC.STLCLR
  namespace: Microsoft.VisualC.StlClr
  syntax:
    content: public void swap (Microsoft.VisualC.StlClr.GenericPair _Right);
    parameters:
    - id: _Right
      type: Microsoft.VisualC.StlClr.GenericPair
      description: ''
  overload: Microsoft.VisualC.StlClr.GenericPair`2.swap*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: GenericPair<TValue1,TValue2>()
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>()
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>()
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(Microsoft.VisualC.StlClr.GenericPair)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: GenericPair<TValue1,TValue2>(GenericPair)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(GenericPair)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(GenericPair)
- uid: Microsoft.VisualC.StlClr.GenericPair
  parent: Microsoft.VisualC.StlClr
  isExternal: true
  name: GenericPair
  nameWithType: GenericPair
  fullName: Microsoft.VisualC.StlClr.GenericPair
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(System.Collections.Generic.KeyValuePair{`0,`1}@)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: GenericPair<TValue1,TValue2>(KeyValuePair<TValue1,TValue2>)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(KeyValuePair<TValue1,TValue2>)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(KeyValuePair<TValue1,TValue2>)
- uid: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey,TValue>
  nameWithType: KeyValuePair<TKey,TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>
- uid: TValue1
  name: TValue1
  nameWithType: TValue1
  fullName: TValue1
- uid: TValue2
  name: TValue2
  nameWithType: TValue2
  fullName: TValue2
- uid: System.Collections.Generic.KeyValuePair{TValue1,TValue2}
  parent: System.Collections.Generic
  isExternal: false
  name: KeyValuePair<TValue1,TValue2>
  nameWithType: KeyValuePair<TValue1,TValue2>
  fullName: System.Collections.Generic.KeyValuePair<TValue1,TValue2>
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
  - name: <
    nameWithType: <
    fullName: <
  - uid: TValue1
    name: TValue1
    nameWithType: TValue1
    fullName: TValue1
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: TValue2
    name: TValue2
    nameWithType: TValue2
    fullName: TValue2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: GenericPair<TValue1,TValue2>(TValue1)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1)
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor(`0,`1)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: GenericPair<TValue1,TValue2>(TValue1, TValue2)
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1, TValue2)
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>(TValue1, TValue2)
- uid: Microsoft.VisualC.StlClr.GenericPair`2.Equals(System.Object)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: Equals(Object)
  nameWithType: GenericPair<TValue1,TValue2>.Equals(Object)
  fullName: GenericPair<TValue1,TValue2>.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualC.StlClr.GenericPair`2.first
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: first
  nameWithType: GenericPair<TValue1,TValue2>.first
  fullName: GenericPair<TValue1,TValue2>.first
- uid: Microsoft.VisualC.StlClr.GenericPair`2.op_Assign(Microsoft.VisualC.StlClr.GenericPair)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: op_Assign(GenericPair)
  nameWithType: GenericPair<TValue1,TValue2>.op_Assign(GenericPair)
  fullName: GenericPair<TValue1,TValue2>.op_Assign(GenericPair)
- uid: Microsoft.VisualC.StlClr.GenericPair`2.second
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: second
  nameWithType: GenericPair<TValue1,TValue2>.second
  fullName: GenericPair<TValue1,TValue2>.second
- uid: Microsoft.VisualC.StlClr.GenericPair`2.swap(Microsoft.VisualC.StlClr.GenericPair)
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: swap(GenericPair)
  nameWithType: GenericPair<TValue1,TValue2>.swap(GenericPair)
  fullName: GenericPair<TValue1,TValue2>.swap(GenericPair)
- uid: Microsoft.VisualC.StlClr.GenericPair`2.#ctor*
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: GenericPair<TValue1,TValue2>
  nameWithType: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>
  fullName: GenericPair<TValue1,TValue2>.GenericPair<TValue1,TValue2>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
- uid: Microsoft.VisualC.StlClr.GenericPair`2.Equals*
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: Equals
  nameWithType: GenericPair<TValue1,TValue2>.Equals
  fullName: GenericPair<TValue1,TValue2>.Equals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
- uid: Microsoft.VisualC.StlClr.GenericPair`2.op_Assign*
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: op_Assign
  nameWithType: GenericPair<TValue1,TValue2>.op_Assign
  fullName: GenericPair<TValue1,TValue2>.op_Assign
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
- uid: Microsoft.VisualC.StlClr.GenericPair`2.swap*
  parent: Microsoft.VisualC.StlClr.GenericPair`2
  isExternal: false
  name: swap
  nameWithType: GenericPair<TValue1,TValue2>.swap
  fullName: GenericPair<TValue1,TValue2>.swap
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualC.StlClr/GenericPair`2.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
