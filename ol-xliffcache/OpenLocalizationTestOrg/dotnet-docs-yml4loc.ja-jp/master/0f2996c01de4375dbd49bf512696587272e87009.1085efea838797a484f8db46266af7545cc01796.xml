{"nodes":[{"content":"Represents an open connection to a data source.","nodes":[{"pos":[0,47],"content":"Represents an open connection to a data source.","nodes":[{"content":"Represents an open connection to a data source.","pos":[0,47]}]}],"pos":[2057,2105],"yaml":true},{"content":"An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source. With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available.  \n  \n When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values. For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor.  \n  \n You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.  \n  \n If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OleDb.OleDbConnection> object within a `Using` statement.  \n  \n> [!NOTE]\n>  To deploy high-performance applications, you must use connection pooling. When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically. For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  \n  \n If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed. However, the user can reopen the connection and continue.  \n  \n An application that creates an instance of the <xref:System.Data.OleDb.OleDbConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. <xref:System.Data.OleDb.OleDbConnection> makes security demands using the <xref:System.Data.OleDb.OleDbPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.OleDb.OleDbPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the computer, user, and enterprise levels. For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  \n  \n For more information about handling warning and informational messages from the data server, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).  \n  \n> [!NOTE]\n>  The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider. Only properties that can be passed in the connection string for the OLE DB provider are supported.","nodes":[{"pos":[0,368],"content":"An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source. With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available.","nodes":[{"content":"An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source. With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available.","pos":[0,368],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object represents a unique connection to a data source.","pos":[0,99],"source":"An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source."},{"content":"With a client/server database system, it is equivalent to a network connection to the server.","pos":[100,193]},{"content":"Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object may not be available.","pos":[194,368],"source":" Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available."}]}]},{"pos":[375,585],"content":"When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values. For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor.","nodes":[{"content":"When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values. For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor.","pos":[0,210],"nodes":[{"content":"When you create an instance of <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, all properties are set to their initial values.","pos":[0,120],"source":"When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values."},{"content":"For a list of these values, see the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> constructor.","pos":[121,210],"source":" For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor."}]}]},{"pos":[592,845],"content":"You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.","nodes":[{"content":"You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.","pos":[0,253],"nodes":[{"content":"You can open more than one DataReader on a single <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.","pos":[0,91],"source":"You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>."},{"content":"If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.","pos":[92,253]}]}]},{"pos":[852,1157],"content":"If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OleDb.OleDbConnection> object within a `Using` statement.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> goes out of scope, it is not closed.","pos":[0,84],"source":"If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed."},{"content":"Therefore, you must explicitly close the connection by calling <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept>, or by using the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object within a <ph id=\"ph3\">`Using`</ph> statement.","pos":[85,305],"source":" Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OleDb.OleDbConnection> object within a `Using` statement."}]},{"pos":[1165,1634],"content":"[!NOTE]\n To deploy high-performance applications, you must use connection pooling. When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically. For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).","leadings":["","> "],"nodes":[{"content":" To deploy high-performance applications, you must use connection pooling. When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically. For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).","pos":[8,467],"nodes":[{"content":"To deploy high-performance applications, you must use connection pooling.","pos":[1,74]},{"content":"When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically.","pos":[75,226]},{"content":"For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see <bpt id=\"p1\">[</bpt>OLE DB, ODBC, and Oracle Connection Pooling<ept id=\"p1\">](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)</ept>.","pos":[227,459],"source":" For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md)."}]}]},{"pos":[1641,1950],"content":"If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed. However, the user can reopen the connection and continue.","nodes":[{"content":"If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed. However, the user can reopen the connection and continue.","pos":[0,309],"nodes":[{"content":"If a fatal <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbException&gt;</ph> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbCommand&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> might be closed.","pos":[0,251],"source":"If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed."},{"content":"However, the user can reopen the connection and continue.","pos":[252,309]}]}]},{"pos":[1957,2795],"content":"An application that creates an instance of the <xref:System.Data.OleDb.OleDbConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. <xref:System.Data.OleDb.OleDbConnection> makes security demands using the <xref:System.Data.OleDb.OleDbPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.OleDb.OleDbPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the computer, user, and enterprise levels. For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).","nodes":[{"content":"An application that creates an instance of the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands.","pos":[0,235],"source":"An application that creates an instance of the <xref:System.Data.OleDb.OleDbConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands."},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> makes security demands using the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbPermission&gt;</ph> object.","pos":[236,358],"source":" <xref:System.Data.OleDb.OleDbConnection> makes security demands using the <xref:System.Data.OleDb.OleDbPermission> object."},{"content":"Users can verify that their code has sufficient permissions by using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbPermissionAttribute&gt;</ph> object.","pos":[359,489],"source":" Users can verify that their code has sufficient permissions by using the <xref:System.Data.OleDb.OleDbPermissionAttribute> object."},{"content":"Users and administrators can also use the <bpt id=\"p1\">[</bpt>Caspol.exe (Code Access Security Policy Tool)<ept id=\"p1\">](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md)</ept> to modify security policy at the computer, user, and enterprise levels.","pos":[490,722],"source":" Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the computer, user, and enterprise levels."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Code Access Security and ADO.NET<ept id=\"p1\">](~/docs/framework/data/adonet/code-access-security.md)</ept>.","pos":[723,838],"source":" For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md)."}]},{"pos":[2802,2970],"content":"For more information about handling warning and informational messages from the data server, see <bpt id=\"p1\">[</bpt>Connection Events<ept id=\"p1\">](~/docs/framework/data/adonet/connection-events.md)</ept>.","source":"For more information about handling warning and informational messages from the data server, see [Connection Events](~/docs/framework/data/adonet/connection-events.md)."},{"pos":[2978,3229],"content":"[!NOTE]\n The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider. Only properties that can be passed in the connection string for the OLE DB provider are supported.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider. Only properties that can be passed in the connection string for the OLE DB provider are supported.","pos":[8,249],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object does not support setting or retrieving dynamic properties specific to an OLE DB provider.","pos":[1,142],"source":" The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider."},{"content":"Only properties that can be passed in the connection string for the OLE DB provider are supported.","pos":[143,241]}]}]}],"pos":[2116,5366],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> class.","nodes":[{"pos":[0,95],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> class."}],"pos":[8415,8511],"yaml":true},{"content":"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|empty string (\"\")|  \n|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  \n|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|empty string (\"\")|  \n|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|empty string (\"\")|  \n  \n You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.","nodes":[{"pos":[0,284],"content":"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.","nodes":[{"content":"When a new instance of <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.","pos":[0,284],"source":"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property."}]},{"pos":[291,301],"content":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[302,315],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[361,421],"content":"<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>","nodes":[]},{"pos":[422,439],"content":"empty string (\"\")","nodes":[{"content":"empty string (\"\")","pos":[0,17]}]},{"pos":[444,505],"content":"<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>","nodes":[]},{"pos":[506,508],"content":"15","nodes":[{"content":"15","pos":[0,2]}]},{"pos":[513,565],"content":"<xref:System.Data.OleDb.OleDbConnection.Database%2A>","nodes":[]},{"pos":[566,583],"content":"empty string (\"\")","nodes":[{"content":"empty string (\"\")","pos":[0,17]}]},{"pos":[588,642],"content":"<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>","nodes":[]},{"pos":[643,660],"content":"empty string (\"\")","nodes":[{"content":"empty string (\"\")","pos":[0,17]}]},{"pos":[668,802],"content":"You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.","nodes":[{"content":"You can change the value for these properties only by using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.","pos":[0,134],"source":"You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property."}]}],"pos":[8522,9342],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> class with the specified connection string.","nodes":[{"pos":[0,132],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> class with the specified connection string.","source":"Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> class with the specified connection string."}],"pos":[11008,11141],"yaml":true},{"content":"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.  \n  \n|Properties|Initial value|  \n|----------------|-------------------|  \n|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  \n|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  \n|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|empty string (\"\")|  \n|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|empty string (\"\")|  \n  \n You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.","nodes":[{"pos":[0,284],"content":"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.","nodes":[{"content":"When a new instance of <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.","pos":[0,284],"source":"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property."}]},{"pos":[291,301],"content":"Properties","nodes":[{"content":"Properties","pos":[0,10]}]},{"pos":[302,315],"content":"Initial value","nodes":[{"content":"Initial value","pos":[0,13]}]},{"pos":[361,421],"content":"<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>","nodes":[]},{"pos":[445,506],"content":"<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>","nodes":[]},{"pos":[507,509],"content":"15","nodes":[{"content":"15","pos":[0,2]}]},{"pos":[514,566],"content":"<xref:System.Data.OleDb.OleDbConnection.Database%2A>","nodes":[]},{"pos":[567,584],"content":"empty string (\"\")","nodes":[{"content":"empty string (\"\")","pos":[0,17]}]},{"pos":[589,643],"content":"<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>","nodes":[]},{"pos":[644,661],"content":"empty string (\"\")","nodes":[{"content":"empty string (\"\")","pos":[0,17]}]},{"pos":[669,803],"content":"You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.","nodes":[{"content":"You can change the value for these properties only by using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property.","pos":[0,134],"source":"You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property."}]}],"pos":[11152,11971],"yaml":true,"extradata":"MT"},{"content":"The connection used to open the database.","nodes":[{"pos":[0,41],"content":"The connection used to open the database.","nodes":[{"content":"The connection used to open the database.","pos":[0,41]}]}],"pos":[12633,12675],"yaml":true},{"content":"Starts a database transaction with the current <xref href=\"System.Data.IsolationLevel\"></xref> value.","nodes":[{"pos":[0,101],"content":"Starts a database transaction with the current <ph id=\"ph1\">&lt;xref href=\"System.Data.IsolationLevel\"&gt;&lt;/xref&gt;</ph> value.","source":"Starts a database transaction with the current <xref href=\"System.Data.IsolationLevel\"></xref> value."}],"pos":[15169,15271],"yaml":true},{"content":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","nodes":[{"pos":[0,385],"content":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","nodes":[{"content":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[0,385],"nodes":[{"content":"You must explicitly commit or roll back the transaction using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbTransaction.Commit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbTransaction.Rollback%2A&gt;</ph> method.","pos":[0,182],"source":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method."},{"content":"To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[183,385]}]}]}],"pos":[15282,15668],"yaml":true,"extradata":"MT"},{"content":"An object representing the new transaction.","nodes":[{"pos":[0,43],"content":"An object representing the new transaction.","nodes":[{"content":"An object representing the new transaction.","pos":[0,43]}]}],"pos":[16609,16653],"yaml":true},{"content":"Parallel transactions are not supported.","nodes":[{"pos":[0,40],"content":"Parallel transactions are not supported.","nodes":[{"content":"Parallel transactions are not supported.","pos":[0,40]}]}],"pos":[16841,16882],"yaml":true},{"content":"Starts a database transaction with the specified isolation level.","nodes":[{"pos":[0,65],"content":"Starts a database transaction with the specified isolation level.","nodes":[{"content":"Starts a database transaction with the specified isolation level.","pos":[0,65]}]}],"pos":[18004,18070],"yaml":true},{"content":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.  \n  \n> [!NOTE]\n>  If you do not specify an isolation level, the default isolation level for the underlying provider is used. To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter.","nodes":[{"pos":[0,385],"content":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","nodes":[{"content":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[0,385],"nodes":[{"content":"You must explicitly commit or roll back the transaction using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbTransaction.Commit%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbTransaction.Rollback%2A&gt;</ph> method.","pos":[0,182],"source":"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method."},{"content":"To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.","pos":[183,385]}]}]},{"pos":[393,678],"content":"[!NOTE]\n If you do not specify an isolation level, the default isolation level for the underlying provider is used. To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter.","leadings":["","> "],"nodes":[{"content":" If you do not specify an isolation level, the default isolation level for the underlying provider is used. To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter.","pos":[8,283],"nodes":[{"content":"If you do not specify an isolation level, the default isolation level for the underlying provider is used.","pos":[1,107]},{"content":"To specify an isolation level with the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A&gt;</ph> method, use the overload that takes the <ph id=\"ph2\">`isolationLevel`</ph> parameter.","pos":[108,275],"source":" To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter."}]}]}],"pos":[18081,18765],"yaml":true,"extradata":"MT"},{"content":"The isolation level under which the transaction should run.","nodes":[{"pos":[0,59],"content":"The isolation level under which the transaction should run.","nodes":[{"content":"The isolation level under which the transaction should run.","pos":[0,59]}]}],"pos":[19755,19815],"yaml":true},{"content":"An object representing the new transaction.","nodes":[{"pos":[0,43],"content":"An object representing the new transaction.","nodes":[{"content":"An object representing the new transaction.","pos":[0,43]}]}],"pos":[19893,19937],"yaml":true},{"content":"Parallel transactions are not supported.","nodes":[{"pos":[0,40],"content":"Parallel transactions are not supported.","nodes":[{"content":"Parallel transactions are not supported.","pos":[0,40]}]}],"pos":[20125,20166],"yaml":true},{"content":"Changes the current database for an open <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.","nodes":[{"pos":[0,96],"content":"Changes the current database for an open <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph>.","source":"Changes the current database for an open <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>."}],"pos":[21213,21310],"yaml":true},{"content":"The value supplied in the `database` parameter must be a valid database name. The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters.","nodes":[{"pos":[0,188],"content":"The value supplied in the `database` parameter must be a valid database name. The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters.","nodes":[{"content":"The value supplied in the <ph id=\"ph1\">`database`</ph> parameter must be a valid database name.","pos":[0,77],"source":"The value supplied in the `database` parameter must be a valid database name."},{"content":"The <ph id=\"ph1\">`database`</ph> parameter cannot contain a null value, an empty string, or a string with only blank characters.","pos":[78,188],"source":" The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters."}]}],"pos":[21321,21510],"yaml":true,"extradata":"MT"},{"content":"The database name.","nodes":[{"pos":[0,18],"content":"The database name.","nodes":[{"content":"The database name.","pos":[0,18]}]}],"pos":[22167,22186],"yaml":true},{"content":"The database name is not valid.","nodes":[{"pos":[0,31],"content":"The database name is not valid.","nodes":[{"content":"The database name is not valid.","pos":[0,31]}]}],"pos":[22356,22388],"yaml":true},{"content":"The connection is not open.","nodes":[{"pos":[0,27],"content":"The connection is not open.","nodes":[{"content":"The connection is not open.","pos":[0,27]}]}],"pos":[22498,22526],"yaml":true},{"content":"Cannot change the database.","nodes":[{"pos":[0,27],"content":"Cannot change the database.","nodes":[{"content":"Cannot change the database.","pos":[0,27]}]}],"pos":[22636,22664],"yaml":true},{"content":"Closes the connection to the data source.","nodes":[{"pos":[0,41],"content":"Closes the connection to the data source.","nodes":[{"content":"Closes the connection to the data source.","pos":[0,41]}]}],"pos":[23594,23636],"yaml":true},{"content":"The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.  \n  \n An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time. No exception is generated.  \n  \n> [!CAUTION]\n>  Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).","nodes":[{"pos":[0,434],"content":"The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.","nodes":[{"content":"The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.","pos":[0,434],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> method rolls back any pending transactions.","pos":[0,97],"source":"The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions."},{"content":"It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled.","pos":[98,213]},{"content":"If <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> is called while handling a <ph id=\"ph2\">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> event, no additional <ph id=\"ph3\">&lt;xref:System.Data.Common.DbConnection.StateChange&gt;</ph> events are fired.","pos":[214,434],"source":" If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired."}]}]},{"pos":[441,561],"content":"An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time. No exception is generated.","nodes":[{"content":"An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time. No exception is generated.","pos":[0,120],"nodes":[{"content":"An application can call <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> more than one time.","pos":[0,93],"source":"An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time."},{"content":"No exception is generated.","pos":[94,120]}]}]},{"pos":[569,1144],"content":"[!CAUTION]\n Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).","leadings":["","> "],"nodes":[{"content":" Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).","pos":[11,573],"nodes":[{"content":"Do not call <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept> on an <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, an <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbDataReader&gt;</ph>, or any other managed object in the <ph id=\"ph4\">`Finalize`</ph> method of your class.","pos":[1,238],"source":" Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class."},{"content":"In a finalizer, you should only release unmanaged resources that your class owns directly.","pos":[239,329]},{"content":"If your class does not own any unmanaged resources, do not include a <ph id=\"ph1\">`Finalize`</ph> method in your class definition.","pos":[330,442],"source":" If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Garbage Collection<ept id=\"p1\">](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)</ept>.","pos":[443,562],"source":" For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9)."}]}]}],"pos":[23647,24799],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the string used to open a database.","nodes":[{"pos":[0,48],"content":"Gets or sets the string used to open a database.","nodes":[{"content":"Gets or sets the string used to open a database.","pos":[0,48]}]}],"pos":[25934,25983],"yaml":true},{"content":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> is designed to match OLE DB connection string format as closely as possible with the following exceptions:  \n  \n-   The \"Provider = `value` \" clause is required. However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.  \n  \n-   Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.  \n  \n You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources. The following example illustrates several possible connection strings.  \n  \n```  \n\"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes\"  \n  \n\"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\bin\\LocalAccess40.mdb\"  \n  \n\"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI\"  \n```  \n  \n If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  \n  \n For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  \n  \n The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  \n  \n Resetting the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)  \n  \n A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.  \n  \n> [!CAUTION]\n>  It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  \n  \n The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  \n  \n To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value.  \n  \n To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  \n  \n```  \n\"key==word=value\"  \n```  \n  \n the keyword is \"key=word\" and the value is \"value\".  \n  \n If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  \n  \n Keywords are not case sensitive.  \n  \n> [!CAUTION]\n>  You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter.","nodes":[{"pos":[0,171],"content":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> is designed to match OLE DB connection string format as closely as possible with the following exceptions:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> is designed to match OLE DB connection string format as closely as possible with the following exceptions:","pos":[0,171],"source":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> is designed to match OLE DB connection string format as closely as possible with the following exceptions:"}]},{"pos":[181,513],"content":"The \"Provider = `value` \" clause is required. However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.","nodes":[{"content":"The \"Provider = <ph id=\"ph1\">`value`</ph> \" clause is required.","pos":[0,45],"source":"The \"Provider = `value` \" clause is required."},{"content":"However, you cannot use \"Provider = MSDASQL\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL).","pos":[46,199]},{"content":"To access ODBC data sources, use the <ph id=\"ph1\">&lt;xref:System.Data.Odbc.OdbcConnection&gt;</ph> object that is in the <ph id=\"ph2\">&lt;xref:System.Data.Odbc&gt;</ph> namespace.","pos":[200,332],"source":" To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace."}]},{"pos":[523,1098],"content":"Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.","nodes":[{"content":"Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>, minus security information if <ph id=\"ph2\">`Persist Security Info`</ph> is set to <ph id=\"ph3\">`false`</ph> (default).","pos":[0,231],"source":"Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus security information if `Persist Security Info` is set to `false` (default)."},{"content":"The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the <ph id=\"ph1\">`Persist Security Info`</ph> keyword to <ph id=\"ph2\">`true`</ph> (not recommended).","pos":[232,418],"source":" The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended)."},{"content":"To maintain a high level of security, it is strongly recommended that you use the <ph id=\"ph1\">`Integrated Security`</ph> keyword with <ph id=\"ph2\">`Persist Security Info`</ph> set to <ph id=\"ph3\">`false`</ph>.","pos":[419,575],"source":" To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`."}]},{"pos":[1105,1302],"content":"You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources. The following example illustrates several possible connection strings.","nodes":[{"content":"You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources. The following example illustrates several possible connection strings.","pos":[0,197],"nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property to connect to a variety of data sources.","pos":[0,126],"source":"You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources."},{"content":"The following example illustrates several possible connection strings.","pos":[127,197]}]}]},{"pos":[1568,1713],"content":"If the <ph id=\"ph1\">`Data Source`</ph> keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.","source":"If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available."},{"pos":[1720,1883],"content":"For more information about connection strings, see <bpt id=\"p1\">[</bpt>Using Connection String Keywords with SQL Server Native Client<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=126696)</ept>.","source":"For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696)."},{"pos":[1890,2404],"content":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.","nodes":[{"content":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.","pos":[0,514],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> property can be set only when the connection is closed.","pos":[0,120],"source":"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed."},{"content":"Many of the connection string values have corresponding read-only properties.","pos":[121,198]},{"content":"When the connection string is set, these properties are updated, except when an error is detected.","pos":[199,297]},{"content":"In this case, none of the properties are updated.","pos":[298,347]},{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> properties return only those settings that are contained in the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph>.","pos":[348,514],"source":" <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>."}]}]},{"pos":[2411,2995],"content":"Resetting the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)","nodes":[{"content":"Resetting the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> on a closed connection resets all connection string values and related properties.","pos":[0,157],"source":"Resetting the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> on a closed connection resets all connection string values and related properties."},{"content":"This includes the password.","pos":[158,185]},{"content":"For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Database%2A&gt;</ph> property is no longer set to AdventureWorks.","pos":[186,491],"source":" For example, if you set a connection string that includes \"Initial Catalog= AdventureWorks\", and then reset the connection string to \"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks."},{"content":"(The Initial Catalog value of the connection string corresponds to the <ph id=\"ph1\">`Database`</ph> property.)","pos":[492,584],"source":" (The Initial Catalog value of the connection string corresponds to the `Database` property.)"}]},{"pos":[3002,3514],"content":"A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.","nodes":[{"content":"A preliminary validation of the connection string is performed when the property is set.","pos":[0,88]},{"content":"If values for the <ph id=\"ph1\">`Provider`</ph>, <ph id=\"ph2\">`Connect Timeout`</ph>, <ph id=\"ph3\">`Persist Security Info`</ph>, or <ph id=\"ph4\">`OLE DB Services`</ph> are included in the string, these values are checked.","pos":[89,237],"source":" If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked."},{"content":"When an application calls the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Open%2A&gt;</ph> method, the connection string is fully validated.","pos":[238,366],"source":" When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated."},{"content":"If the connection string contains invalid or unsupported properties, a run-time exception, such as <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph>, is generated.","pos":[367,512],"source":" If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated."}]},{"pos":[3522,3909],"content":"[!CAUTION]\n It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.","leadings":["","> "],"nodes":[{"content":" It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.","pos":[11,385],"nodes":[{"content":"It is possible to supply connection information for an <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> in a Universal Data Link (UDL) file; however you should avoid doing so.","pos":[1,168],"source":" It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so."},{"content":"UDL files are not encrypted and expose connection string information in clear text.","pos":[169,252]},{"content":"Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.","pos":[253,374]}]}]},{"pos":[3916,4719],"content":"The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.","nodes":[{"content":"The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.","pos":[0,803],"nodes":[{"content":"The basic format of a connection string includes a series of keyword/value pairs separated by semicolons.","pos":[0,105]},{"content":"The equal sign (=) connects each keyword and its value.","pos":[106,161]},{"content":"To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks.","pos":[162,310]},{"content":"If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks.","pos":[311,432]},{"content":"The single quotation mark is also useful if the value starts with a double-quote character.","pos":[433,524]},{"content":"Conversely, the double quotation mark can be used if the value starts with a single quotation mark.","pos":[525,624]},{"content":"If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.","pos":[625,803]}]}]},{"pos":[4726,5316],"content":"To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value.","nodes":[{"content":"To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks.","pos":[0,147]},{"content":"Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks.","pos":[148,274]},{"content":"However, spaces within a string literal keyword or value are preserved.","pos":[275,346]},{"content":"Single or double quotation marks may be used within a connection string without using delimiters (for example, <ph id=\"ph1\">`Data Source= my'Server`</ph> or <ph id=\"ph2\">`Data Source= my\"Server`</ph>) unless a quotation-mark character is the first or last character in the value.","pos":[347,590],"source":" Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\"Server`) unless a quotation-mark character is the first or last character in the value."}]},{"pos":[5323,5468],"content":"To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string","nodes":[{"content":"To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string","pos":[0,145],"nodes":[{"content":"To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign.","pos":[0,94]},{"content":"For example, in the hypothetical connection string","pos":[95,145]}]}]},{"pos":[5510,5561],"content":"the keyword is \"key=word\" and the value is \"value\".","nodes":[{"content":"the keyword is \"key=word\" and the value is \"value\".","pos":[0,51]}]},{"pos":[5568,5712],"content":"If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.","nodes":[{"content":"If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.","pos":[0,144]}]},{"pos":[5719,5751],"content":"Keywords are not case sensitive.","nodes":[{"content":"Keywords are not case sensitive.","pos":[0,32]}]},{"pos":[5759,6535],"content":"[!CAUTION]\n You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter.","leadings":["","> "],"nodes":[{"content":" You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter.","pos":[11,774],"nodes":[{"content":"You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string.","pos":[1,205]},{"content":"The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \"validpassword;database= somedb\" in an attempt to attach to a different database.","pos":[206,438]},{"content":"If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of <ph id=\"ph1\">`Persist Security Info= false`</ph> does not affect the <ph id=\"ph2\">`Extended Properties`</ph> parameter.","pos":[439,763],"source":" If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter."}]}]}],"pos":[25994,32603],"yaml":true,"extradata":"MT"},{"content":"The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection. The default value is an empty string.","nodes":[{"pos":[0,176],"content":"The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection. The default value is an empty string.","nodes":[{"content":"The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection. The default value is an empty string.","pos":[0,176],"nodes":[{"content":"The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection.","pos":[0,138]},{"content":"The default value is an empty string.","pos":[139,176]}]}]}],"pos":[33324,33501],"yaml":true},{"content":"An invalid connection string argument has been supplied or a required connection string argument has not been supplied.","nodes":[{"pos":[0,119],"content":"An invalid connection string argument has been supplied or a required connection string argument has not been supplied.","nodes":[{"content":"An invalid connection string argument has been supplied or a required connection string argument has not been supplied.","pos":[0,119]}]}],"pos":[33673,33793],"yaml":true},{"content":"Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","nodes":[{"pos":[0,116],"content":"Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","nodes":[{"content":"Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.","pos":[0,116]}]}],"pos":[34863,34980],"yaml":true},{"content":"A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> because an attempt to connect will wait indefinitely.","nodes":[{"pos":[0,174],"content":"A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> because an attempt to connect will wait indefinitely.","nodes":[{"content":"A value of 0 indicates no limit, and should be avoided in a <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A&gt;</ph> because an attempt to connect will wait indefinitely.","pos":[0,174],"source":"A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> because an attempt to connect will wait indefinitely."}]}],"pos":[34991,35166],"yaml":true,"extradata":"MT"},{"content":"The time in seconds to wait for a connection to open. The default value is 15 seconds.","nodes":[{"pos":[0,86],"content":"The time in seconds to wait for a connection to open. The default value is 15 seconds.","nodes":[{"content":"The time in seconds to wait for a connection to open. The default value is 15 seconds.","pos":[0,86],"nodes":[{"content":"The time in seconds to wait for a connection to open.","pos":[0,53]},{"content":"The default value is 15 seconds.","pos":[54,86]}]}]}],"pos":[35844,35931],"yaml":true},{"content":"The value set is less than 0.","nodes":[{"pos":[0,29],"content":"The value set is less than 0.","nodes":[{"content":"The value set is less than 0.","pos":[0,29]}]}],"pos":[36104,36134],"yaml":true},{"content":"Creates and returns an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object associated with the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.","nodes":[{"pos":[0,157],"content":"Creates and returns an <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;&lt;/xref&gt;</ph> object associated with the <ph id=\"ph2\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph>.","source":"Creates and returns an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object associated with the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>."}],"pos":[37129,37287],"yaml":true},{"content":"An <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object.","nodes":[{"pos":[0,62],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbCommand\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object."}],"pos":[37459,37522],"yaml":true},{"content":"Gets the name of the current database or the database to be used after a connection is opened.","nodes":[{"pos":[0,94],"content":"Gets the name of the current database or the database to be used after a connection is opened.","nodes":[{"content":"Gets the name of the current database or the database to be used after a connection is opened.","pos":[0,94]}]}],"pos":[39690,39785],"yaml":true},{"content":"The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically. If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.","nodes":[{"pos":[0,293],"content":"The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically. If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.","nodes":[{"content":"The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically. If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.","pos":[0,293],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Database%2A&gt;</ph> property updates dynamically.","pos":[0,86],"source":"The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically."},{"content":"If you change the current database using a SQL statement or the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A&gt;</ph> method, an informational message is sent and the property is updated automatically.","pos":[87,293],"source":" If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically."}]}]}],"pos":[39796,40090],"yaml":true,"extradata":"MT"},{"content":"The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.","nodes":[{"pos":[0,139],"content":"The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.","nodes":[{"content":"The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.","pos":[0,139],"nodes":[{"content":"The name of the current database or the name of the database to be used after a connection is opened.","pos":[0,101]},{"content":"The default value is an empty string.","pos":[102,139]}]}]}],"pos":[40716,40856],"yaml":true},{"content":"Gets the server name or file name of the data source.","nodes":[{"pos":[0,53],"content":"Gets the server name or file name of the data source.","nodes":[{"content":"Gets the server name or file name of the data source.","pos":[0,53]}]}],"pos":[41902,41956],"yaml":true},{"content":"If the connection to the database is closed, the `DataSource` property returns whatever is contained in `ConnectionString` for the data source keyword. If the connection is open and the `ConnectionString` data source keyword's value starts with \"&#124;datadirectory&#124;\", the property returns whatever is contained in `ConnectionString` for the data source keyword only. If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE,` and if that is empty, the native provider’s `DBPROP_DATASOURCENAME` is returned.","nodes":[{"pos":[0,584],"content":"If the connection to the database is closed, the `DataSource` property returns whatever is contained in `ConnectionString` for the data source keyword. If the connection is open and the `ConnectionString` data source keyword's value starts with \"&#124;datadirectory&#124;\", the property returns whatever is contained in `ConnectionString` for the data source keyword only. If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE,` and if that is empty, the native provider’s `DBPROP_DATASOURCENAME` is returned.","nodes":[{"content":"If the connection to the database is closed, the <ph id=\"ph1\">`DataSource`</ph> property returns whatever is contained in <ph id=\"ph2\">`ConnectionString`</ph> for the data source keyword.","pos":[0,151],"source":"If the connection to the database is closed, the `DataSource` property returns whatever is contained in `ConnectionString` for the data source keyword."},{"content":"If the connection is open and the <ph id=\"ph1\">`ConnectionString`</ph> data source keyword's value starts with \"&amp;#124;datadirectory&amp;#124;\", the property returns whatever is contained in <ph id=\"ph2\">`ConnectionString`</ph> for the data source keyword only.","pos":[152,372],"source":" If the connection is open and the `ConnectionString` data source keyword's value starts with \"&#124;datadirectory&#124;\", the property returns whatever is contained in `ConnectionString` for the data source keyword only."},{"content":"If the connection to the database is open, the property returns what the native provider returns for the <ph id=\"ph1\">`DBPROP_INIT_DATASOURCE,`</ph> and if that is empty, the native provider’s <ph id=\"ph2\">`DBPROP_DATASOURCENAME`</ph> is returned.","pos":[373,584],"source":" If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE,` and if that is empty, the native provider’s `DBPROP_DATASOURCENAME` is returned."}]}],"pos":[41967,42552],"yaml":true,"extradata":"MT"},{"content":"The server name or file name of the data source. The default value is an empty string.","nodes":[{"pos":[0,86],"content":"The server name or file name of the data source. The default value is an empty string.","nodes":[{"content":"The server name or file name of the data source. The default value is an empty string.","pos":[0,86],"nodes":[{"content":"The server name or file name of the data source.","pos":[0,48]},{"content":"The default value is an empty string.","pos":[49,86]}]}]}],"pos":[43244,43331],"yaml":true},{"content":"Enlists in the specified transaction as a distributed transaction.","nodes":[{"pos":[0,66],"content":"Enlists in the specified transaction as a distributed transaction.","nodes":[{"content":"Enlists in the specified transaction as a distributed transaction.","pos":[0,66]}]}],"pos":[45827,45894],"yaml":true},{"content":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose. For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).  \n  \n You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).  \n  \n <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDbClient.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.","nodes":[{"pos":[0,571],"content":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose. For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).","nodes":[{"content":"New in ADO.NET 2.0 is support for using the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.","pos":[0,150],"source":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction."},{"content":"Because it enlists a connection in a <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id=\"p1\">**</bpt>EnlistTransaction<ept id=\"p1\">**</ept> takes advantage of functionality available in the <ph id=\"ph2\">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id=\"p2\">**</bpt>EnlistDistributedTransaction<ept id=\"p2\">**</ept> for this purpose.","pos":[151,459],"source":" Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Distributed Transactions<ept id=\"p1\">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.","pos":[460,571],"source":" For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md)."}]},{"pos":[578,1107],"content":"You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).","nodes":[{"content":"You can continue to enlist in an existing distributed transaction using the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A&gt;</ph> method if auto-enlistment is disabled.","pos":[0,187],"source":"You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled."},{"content":"Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back.","pos":[188,386]},{"content":"For more information about distributed transactions, see <bpt id=\"p1\">[</bpt>Distributed Transactions<ept id=\"p1\">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.","pos":[387,529],"source":" For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md)."}]},{"pos":[1114,1946],"content":"<xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDbClient.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.","nodes":[{"content":"<xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDbClient.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.","pos":[0,832],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A&gt;</ph> returns an exception if the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> has already started a transaction using <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A&gt;</ph>.","pos":[0,243],"source":"<xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>."},{"content":"However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <ph id=\"ph1\">&lt;xref:System.Data.OleDbClient.OleDbCommand&gt;</ph> object), <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A&gt;</ph> rolls back the local transaction and enlists in the existing distributed transaction as requested.","pos":[244,625],"source":" However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDbClient.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested."},{"content":"You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A&gt;</ph>.","pos":[626,832],"source":" You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>."}]}]}],"pos":[45905,47858],"yaml":true,"extradata":"MT"},{"content":"A reference to an existing <xref href=\"System.EnterpriseServices.ITransaction\"></xref> in which to enlist.","nodes":[{"pos":[0,106],"content":"A reference to an existing <ph id=\"ph1\">&lt;xref href=\"System.EnterpriseServices.ITransaction\"&gt;&lt;/xref&gt;</ph> in which to enlist.","source":"A reference to an existing <xref href=\"System.EnterpriseServices.ITransaction\"></xref> in which to enlist."}],"pos":[48084,48191],"yaml":true},{"content":"Enlists in the specified transaction as a distributed transaction.","nodes":[{"pos":[0,66],"content":"Enlists in the specified transaction as a distributed transaction.","nodes":[{"content":"Enlists in the specified transaction as a distributed transaction.","pos":[0,66]}]}],"pos":[49418,49485],"yaml":true},{"content":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a <xref:System.EnterpriseServices.ITransaction> object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).","nodes":[{"pos":[0,850],"content":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a <xref:System.EnterpriseServices.ITransaction> object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).","nodes":[{"content":"New in ADO.NET 2.0 is support for using the <ph id=\"ph1\">&lt;xref:System.Data.Common.DbConnection.EnlistTransaction%2A&gt;</ph> method to enlist in a distributed transaction.","pos":[0,150],"source":"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction."},{"content":"Because it enlists a connection in a <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> instance, <bpt id=\"p1\">**</bpt>EnlistTransaction<ept id=\"p1\">**</ept> takes advantage of functionality available in the <ph id=\"ph2\">&lt;xref:System.Transactions&gt;</ph> namespace for managing distributed transactions, making it preferable to <bpt id=\"p2\">**</bpt>EnlistDistributedTransaction<ept id=\"p2\">**</ept>, which uses a <ph id=\"ph3\">&lt;xref:System.EnterpriseServices.ITransaction&gt;</ph> object.","pos":[151,509],"source":" Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a <xref:System.EnterpriseServices.ITransaction> object."},{"content":"It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes.","pos":[510,707]},{"content":"For more information about distributed transactions, see <bpt id=\"p1\">[</bpt>Distributed Transactions<ept id=\"p1\">](~/docs/framework/data/adonet/distributed-transactions.md)</ept>.","pos":[708,850],"source":" For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md)."}]}],"pos":[49496,50349],"yaml":true,"extradata":"MT"},{"content":"A reference to an existing <xref href=\"System.Transactions.Transaction\"></xref> in which to enlist.","nodes":[{"pos":[0,99],"content":"A reference to an existing <ph id=\"ph1\">&lt;xref href=\"System.Transactions.Transaction\"&gt;&lt;/xref&gt;</ph> in which to enlist.","source":"A reference to an existing <xref href=\"System.Transactions.Transaction\"></xref> in which to enlist."}],"pos":[50559,50659],"yaml":true},{"content":"Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.","nodes":[{"pos":[0,118],"content":"Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.","nodes":[{"content":"Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.","pos":[0,118]}]}],"pos":[51884,52003],"yaml":true},{"content":"The schema table is returned as a <xref:System.Data.DataTable> that has the same format as the OLE DB schema rowset specified by the `schema` parameter. Use the `restrictions` parameter to filter the rows to be returned in the <xref:System.Data.DataTable> (for example, by specifying restrictions for table name, type, owner, or schema). When you pass values in the array, include empty strings or nulls for array elements that do not contain values. If you pass an empty array to `restrictions`, all rows (one for each table) are returned in default order. Values in the array correspond to the order of the columns in the source table and <xref:System.Data.DataTable>. Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset. For example, the first element in the restrictions array is compared to first column in the rowset. If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <xref:System.Data.DataTable>.  \n  \n The <xref:System.Data.OleDb.OleDbConnection> method calls the underlying OLE DB **IDBSchemaRowset::GetRowset** method using standard common language runtime conversion rules. For more information, see [COM Data Types](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061).  \n  \n You can retrieve information about literals by using <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. This provides information equivalent to calling the OLE DB **IDBInfo::GetLiteralInfo** interface, or the ADO **Connection.OpenSchema** method with the `adSchemaDBInfoLiterals` constant.","nodes":[{"pos":[0,1064],"content":"The schema table is returned as a <xref:System.Data.DataTable> that has the same format as the OLE DB schema rowset specified by the `schema` parameter. Use the `restrictions` parameter to filter the rows to be returned in the <xref:System.Data.DataTable> (for example, by specifying restrictions for table name, type, owner, or schema). When you pass values in the array, include empty strings or nulls for array elements that do not contain values. If you pass an empty array to `restrictions`, all rows (one for each table) are returned in default order. Values in the array correspond to the order of the columns in the source table and <xref:System.Data.DataTable>. Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset. For example, the first element in the restrictions array is compared to first column in the rowset. If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <xref:System.Data.DataTable>.","nodes":[{"content":"The schema table is returned as a <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph> that has the same format as the OLE DB schema rowset specified by the <ph id=\"ph2\">`schema`</ph> parameter.","pos":[0,152],"source":"The schema table is returned as a <xref:System.Data.DataTable> that has the same format as the OLE DB schema rowset specified by the `schema` parameter."},{"content":"Use the <ph id=\"ph1\">`restrictions`</ph> parameter to filter the rows to be returned in the <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> (for example, by specifying restrictions for table name, type, owner, or schema).","pos":[153,337],"source":" Use the `restrictions` parameter to filter the rows to be returned in the <xref:System.Data.DataTable> (for example, by specifying restrictions for table name, type, owner, or schema)."},{"content":"When you pass values in the array, include empty strings or nulls for array elements that do not contain values.","pos":[338,450]},{"content":"If you pass an empty array to <ph id=\"ph1\">`restrictions`</ph>, all rows (one for each table) are returned in default order.","pos":[451,557],"source":" If you pass an empty array to `restrictions`, all rows (one for each table) are returned in default order."},{"content":"Values in the array correspond to the order of the columns in the source table and <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[558,670],"source":" Values in the array correspond to the order of the columns in the source table and <xref:System.Data.DataTable>."},{"content":"Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset.","pos":[671,788]},{"content":"For example, the first element in the restrictions array is compared to first column in the rowset.","pos":[789,888]},{"content":"If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <ph id=\"ph1\">&lt;xref:System.Data.DataTable&gt;</ph>.","pos":[889,1064],"source":" If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <xref:System.Data.DataTable>."}]},{"pos":[1071,1359],"content":"The <xref:System.Data.OleDb.OleDbConnection> method calls the underlying OLE DB **IDBSchemaRowset::GetRowset** method using standard common language runtime conversion rules. For more information, see [COM Data Types](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> method calls the underlying OLE DB <bpt id=\"p1\">**</bpt>IDBSchemaRowset::GetRowset<ept id=\"p1\">**</ept> method using standard common language runtime conversion rules.","pos":[0,174],"source":"The <xref:System.Data.OleDb.OleDbConnection> method calls the underlying OLE DB **IDBSchemaRowset::GetRowset** method using standard common language runtime conversion rules."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>COM Data Types<ept id=\"p1\">](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)</ept>.","pos":[175,288],"source":" For more information, see [COM Data Types](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061)."}]},{"pos":[1366,1661],"content":"You can retrieve information about literals by using <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. This provides information equivalent to calling the OLE DB **IDBInfo::GetLiteralInfo** interface, or the ADO **Connection.OpenSchema** method with the `adSchemaDBInfoLiterals` constant.","nodes":[{"content":"You can retrieve information about literals by using <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals&gt;</ph>.","pos":[0,109],"source":"You can retrieve information about literals by using <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>."},{"content":"This provides information equivalent to calling the OLE DB <bpt id=\"p1\">**</bpt>IDBInfo::GetLiteralInfo<ept id=\"p1\">**</ept> interface, or the ADO <bpt id=\"p2\">**</bpt>Connection.OpenSchema<ept id=\"p2\">**</ept> method with the <ph id=\"ph1\">`adSchemaDBInfoLiterals`</ph> constant.","pos":[110,295],"source":" This provides information equivalent to calling the OLE DB **IDBInfo::GetLiteralInfo** interface, or the ADO **Connection.OpenSchema** method with the `adSchemaDBInfoLiterals` constant."}]}],"pos":[52014,53682],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Data.OleDb.OleDbSchemaGuid\"></xref> values that specifies the schema table to return.","nodes":[{"pos":[0,115],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbSchemaGuid\"&gt;&lt;/xref&gt;</ph> values that specifies the schema table to return.","source":"One of the <xref href=\"System.Data.OleDb.OleDbSchemaGuid\"></xref> values that specifies the schema table to return."}],"pos":[54357,54473],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.","nodes":[{"pos":[0,285],"content":"An <xref href=\"System.Object\"></xref> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> array of restriction values.","pos":[0,66],"source":"An <xref href=\"System.Object\"></xref> array of restriction values."},{"content":"These are applied in the order of the restriction columns.","pos":[67,125]},{"content":"That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.","pos":[126,285]}]}],"pos":[54543,54829],"yaml":true},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that contains the requested schema information.","nodes":[{"pos":[0,92],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that contains the requested schema information.","source":"A <xref href=\"System.Data.DataTable\"></xref> that contains the requested schema information."}],"pos":[54894,54987],"yaml":true},{"content":"The specified set of restrictions is invalid.","nodes":[{"pos":[0,45],"content":"The specified set of restrictions is invalid.","nodes":[{"content":"The specified set of restrictions is invalid.","pos":[0,45]}]}],"pos":[55178,55224],"yaml":true},{"content":"The <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> is closed.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> is closed.","source":"The <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> is closed."}],"pos":[55334,55404],"yaml":true},{"content":"The specified schema rowset is not supported by the OLE DB provider.  \n  \n -or-  \n  \n The <code>schema</code> parameter contains a value of <xref href=\"System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals\"></xref> and the <code>restrictions</code> parameter contains one or more restrictions.","nodes":[{"pos":[0,68],"content":"The specified schema rowset is not supported by the OLE DB provider.","nodes":[{"content":"The specified schema rowset is not supported by the OLE DB provider.","pos":[0,68]}]},{"pos":[75,79],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[86,288],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">schema</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter contains a value of <ph id=\"ph2\">&lt;xref href=\"System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals\"&gt;&lt;/xref&gt;</ph> and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">restrictions</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter contains one or more restrictions.","source":"The <code>schema</code> parameter contains a value of <xref href=\"System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals\"></xref> and the <code>restrictions</code> parameter contains one or more restrictions."}],"pos":[55498,55795],"yaml":true},{"content":"Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.","nodes":[{"pos":[0,110],"content":"Returns schema information for the data source of this <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>."}],"pos":[56749,56860],"yaml":true},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.","nodes":[{"pos":[0,78],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that contains schema information.","source":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information."}],"pos":[57019,57098],"yaml":true},{"content":"Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> using the specified string for the schema name.","nodes":[{"pos":[0,157],"content":"Returns schema information for the data source of this <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name.","source":"Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> using the specified string for the schema name."}],"pos":[58189,58347],"yaml":true},{"content":"When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.","nodes":[{"pos":[0,165],"content":"When <ph id=\"ph1\">`collectionName`</ph> is specified as null, the <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> will contain information about all the metadata that is available, and its restrictions.","source":"When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions."}],"pos":[58358,58524],"yaml":true,"extradata":"MT"},{"content":"Specifies the name of the schema to return.","nodes":[{"pos":[0,43],"content":"Specifies the name of the schema to return.","nodes":[{"content":"Specifies the name of the schema to return.","pos":[0,43]}]}],"pos":[58706,58750],"yaml":true},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.","nodes":[{"pos":[0,78],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that contains schema information.","source":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information."}],"pos":[58815,58894],"yaml":true},{"content":"Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> using the specified string for the schema name and the specified string array for the restriction values.","nodes":[{"pos":[0,215],"content":"Returns schema information for the data source of this <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> using the specified string for the schema name and the specified string array for the restriction values.","source":"Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> using the specified string for the schema name and the specified string array for the restriction values."}],"pos":[60063,60279],"yaml":true},{"content":"When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.  \n  \n The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.  \n  \n An example of this is the \"Tables\" collection. If the \"Tables\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \"Carl,\" you must pass in the following values (at a minimum): null, \"Carl\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\"\") is considered to be the value for the specified parameter.","nodes":[{"pos":[0,165],"content":"When <ph id=\"ph1\">`collectionName`</ph> is specified as null, the <ph id=\"ph2\">&lt;xref:System.Data.DataTable&gt;</ph> will contain information about all the metadata that is available, and its restrictions.","source":"When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions."},{"pos":[172,560],"content":"The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.","nodes":[{"content":"The <ph id=\"ph1\">`restrictionValues`</ph> parameter can supply <bpt id=\"p1\">*</bpt><ph id=\"ph2\">n</ph><ept id=\"p1\">*</ept> depth of values which are specified by the restrictions collection for a specific collection.","pos":[0,142],"source":"The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection."},{"content":"In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.","pos":[143,388]}]},{"pos":[567,1148],"content":"An example of this is the \"Tables\" collection. If the \"Tables\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \"Carl,\" you must pass in the following values (at a minimum): null, \"Carl\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\"\") is considered to be the value for the specified parameter.","nodes":[{"content":"An example of this is the \"Tables\" collection. If the \"Tables\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \"Carl,\" you must pass in the following values (at a minimum): null, \"Carl\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\"\") is considered to be the value for the specified parameter.","pos":[0,581],"nodes":[{"content":"An example of this is the \"Tables\" collection.","pos":[0,46]},{"content":"If the \"Tables\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \"Carl,\" you must pass in the following values (at a minimum): null, \"Carl\".","pos":[47,274]},{"content":"If a restriction value is not passed in, the default values are used for that restriction.","pos":[275,365]},{"content":"This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value.","pos":[366,486]},{"content":"In that case, the empty string (\"\") is considered to be the value for the specified parameter.","pos":[487,581]}]}]}],"pos":[60290,61455],"yaml":true,"extradata":"MT"},{"content":"Specifies the name of the schema to return.","nodes":[{"pos":[0,43],"content":"Specifies the name of the schema to return.","nodes":[{"content":"Specifies the name of the schema to return.","pos":[0,43]}]}],"pos":[61665,61709],"yaml":true},{"content":"Specifies a set of restriction values for the requested schema.","nodes":[{"pos":[0,63],"content":"Specifies a set of restriction values for the requested schema.","nodes":[{"content":"Specifies a set of restriction values for the requested schema.","pos":[0,63]}]}],"pos":[61784,61848],"yaml":true},{"content":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.","nodes":[{"pos":[0,78],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Data.DataTable\"&gt;&lt;/xref&gt;</ph> that contains schema information.","source":"A <xref href=\"System.Data.DataTable\"></xref> that contains schema information."}],"pos":[61913,61992],"yaml":true},{"content":"Occurs when the provider sends a warning or an informational message.","nodes":[{"pos":[0,69],"content":"Occurs when the provider sends a warning or an informational message.","nodes":[{"content":"Occurs when the provider sends a warning or an informational message.","pos":[0,69]}]}],"pos":[63025,63095],"yaml":true},{"content":"Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegate to listen to this event.  \n  \n The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source. Low severity messages are those that do not cause an exception. For Microsoft SQL Server, this includes error messages that have a severity of 10 or less  \n  \n For more information and an example, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).","nodes":[{"pos":[0,187],"content":"Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegate to listen to this event.","nodes":[{"content":"Clients that want to process warnings or informational messages sent by the server should create an <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbInfoMessageEventHandler&gt;</ph> delegate to listen to this event.","pos":[0,187],"source":"Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegate to listen to this event."}]},{"pos":[194,484],"content":"The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source. Low severity messages are those that do not cause an exception. For Microsoft SQL Server, this includes error messages that have a severity of 10 or less","nodes":[{"content":"The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source. Low severity messages are those that do not cause an exception. For Microsoft SQL Server, this includes error messages that have a severity of 10 or less","pos":[0,290],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.InfoMessage&gt;</ph> event occurs when a message with low severity is returned from the data source.","pos":[0,136],"source":"The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source."},{"content":"Low severity messages are those that do not cause an exception.","pos":[137,200]},{"content":"For Microsoft SQL Server, this includes error messages that have a severity of 10 or less","pos":[201,290]}]}]},{"pos":[491,603],"content":"For more information and an example, see <bpt id=\"p1\">[</bpt>Connection Events<ept id=\"p1\">](~/docs/framework/data/adonet/connection-events.md)</ept>.","source":"For more information and an example, see [Connection Events](~/docs/framework/data/adonet/connection-events.md)."}],"pos":[63106,63716],"yaml":true,"extradata":"MT"},{"content":"Opens a database connection with the property settings specified by the <xref href=\"System.Data.OleDb.OleDbConnection.ConnectionString\"></xref>.","nodes":[{"pos":[0,144],"content":"Opens a database connection with the property settings specified by the <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection.ConnectionString\"&gt;&lt;/xref&gt;</ph>.","source":"Opens a database connection with the property settings specified by the <xref href=\"System.Data.OleDb.OleDbConnection.ConnectionString\"></xref>."}],"pos":[64846,64991],"yaml":true},{"content":"The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source. You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.  \n  \n> [!NOTE]\n>  If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement.","nodes":[{"pos":[0,444],"content":"The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source. You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.","nodes":[{"content":"The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source. You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.","pos":[0,444],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> draws an open connection from the connection pool if one is available.","pos":[0,115],"source":"The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available."},{"content":"Otherwise, it establishes a new connection to the data source.","pos":[116,178]},{"content":"You can open more than one DataReader on a single <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>.","pos":[179,270],"source":" You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>."},{"content":"If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.","pos":[271,444]}]}]},{"pos":[452,728],"content":"[!NOTE]\n If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement.","leadings":["","> "],"nodes":[{"content":" If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement.","pos":[8,274],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> goes out of scope, it is not closed.","pos":[1,85],"source":" If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed."},{"content":"Therefore, you must explicitly close the connection by calling <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> or <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept>, or using the connection within a <ph id=\"ph2\">`Using`</ph> statement.","pos":[86,266],"source":" Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement."}]}]}],"pos":[65002,65736],"yaml":true,"extradata":"MT"},{"content":"The connection is already open.","nodes":[{"pos":[0,31],"content":"The connection is already open.","nodes":[{"content":"The connection is already open.","pos":[0,31]}]}],"pos":[65984,66016],"yaml":true},{"content":"A connection-level error occurred while opening the connection.","nodes":[{"pos":[0,63],"content":"A connection-level error occurred while opening the connection.","nodes":[{"content":"A connection-level error occurred while opening the connection.","pos":[0,63]}]}],"pos":[66126,66190],"yaml":true},{"content":"Gets the name of the OLE DB provider specified in the \"Provider= \" clause of the connection string.","nodes":[{"pos":[0,99],"content":"Gets the name of the OLE DB provider specified in the \"Provider= \" clause of the connection string.","nodes":[{"content":"Gets the name of the OLE DB provider specified in the \"Provider= \" clause of the connection string.","pos":[0,99]}]}],"pos":[67134,67234],"yaml":true},{"content":"The name of the provider as specified in the \"Provider= \" clause of the connection string. The default value is an empty string.","nodes":[{"pos":[0,128],"content":"The name of the provider as specified in the \"Provider= \" clause of the connection string. The default value is an empty string.","nodes":[{"content":"The name of the provider as specified in the \"Provider= \" clause of the connection string. The default value is an empty string.","pos":[0,128],"nodes":[{"content":"The name of the provider as specified in the \"Provider= \" clause of the connection string.","pos":[0,90]},{"content":"The default value is an empty string.","pos":[91,128]}]}]}],"pos":[67921,68050],"yaml":true},{"content":"Indicates that the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> object pool can be released when the last underlying connection is released.","nodes":[{"pos":[0,150],"content":"Indicates that the <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> object pool can be released when the last underlying connection is released.","source":"Indicates that the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> object pool can be released when the last underlying connection is released."}],"pos":[69190,69341],"yaml":true},{"content":"`ReleaseObjectPool` can be called to free resources that would otherwise be reserved for pooled <xref:System.Data.OleDb.OleDbConnection> objects. You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active. Note that calling the method alone does not actually release the active connections that exist in the pool.  \n  \n The following must occur before the pool is finally disposed:  \n  \n1.  Call <xref:System.Data.OleDb.OleDbConnection.Close%2A> to return the connection object to the pool.  \n  \n2.  Allow each connection object to time out of the pool.  \n  \n3.  Call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  \n  \n4.  Invoke garbage collection.  \n  \n Conversely, if you call <xref:System.Data.OleDb.OleDbConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, the resources reserved for the pooled objects will remain available.","nodes":[{"pos":[0,438],"content":"`ReleaseObjectPool` can be called to free resources that would otherwise be reserved for pooled <xref:System.Data.OleDb.OleDbConnection> objects. You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active. Note that calling the method alone does not actually release the active connections that exist in the pool.","nodes":[{"content":"<ph id=\"ph1\">`ReleaseObjectPool`</ph> can be called to free resources that would otherwise be reserved for pooled <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> objects.","pos":[0,145],"source":"`ReleaseObjectPool` can be called to free resources that would otherwise be reserved for pooled <xref:System.Data.OleDb.OleDbConnection> objects."},{"content":"You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active.","pos":[146,330]},{"content":"Note that calling the method alone does not actually release the active connections that exist in the pool.","pos":[331,438]}]},{"pos":[445,506],"content":"The following must occur before the pool is finally disposed:","nodes":[{"content":"The following must occur before the pool is finally disposed:","pos":[0,61]}]},{"pos":[516,615],"content":"Call <xref:System.Data.OleDb.OleDbConnection.Close%2A> to return the connection object to the pool.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> to return the connection object to the pool.","pos":[0,99],"source":"Call <xref:System.Data.OleDb.OleDbConnection.Close%2A> to return the connection object to the pool."}]},{"pos":[625,678],"content":"Allow each connection object to time out of the pool.","nodes":[{"content":"Allow each connection object to time out of the pool.","pos":[0,53]}]},{"pos":[688,755],"content":"Call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.","nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A&gt;</ph>.","pos":[0,67],"source":"Call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>."}]},{"pos":[765,791],"content":"Invoke garbage collection.","nodes":[{"content":"Invoke garbage collection.","pos":[0,26]}]},{"pos":[798,1077],"content":"Conversely, if you call <xref:System.Data.OleDb.OleDbConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, the resources reserved for the pooled objects will remain available.","nodes":[{"content":"Conversely, if you call <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> on all active connections, and invoke garbage collection, but do not call <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A&gt;</ph>, the resources reserved for the pooled objects will remain available.","pos":[0,279],"source":"Conversely, if you call <xref:System.Data.OleDb.OleDbConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, the resources reserved for the pooled objects will remain available."}]}],"pos":[69352,70444],"yaml":true,"extradata":"MT"},{"content":"Updates the <xref href=\"System.Data.OleDb.OleDbConnection.State\"></xref> property of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> object.","nodes":[{"pos":[0,151],"content":"Updates the <ph id=\"ph1\">&lt;xref href=\"System.Data.OleDb.OleDbConnection.State\"&gt;&lt;/xref&gt;</ph> property of the <ph id=\"ph2\">&lt;xref href=\"System.Data.OleDb.OleDbConnection\"&gt;&lt;/xref&gt;</ph> object.","source":"Updates the <xref href=\"System.Data.OleDb.OleDbConnection.State\"></xref> property of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> object."}],"pos":[72182,72334],"yaml":true},{"content":"Some OLE DB providers can check the current state of the connection. For example, if the database server has recycled since you opened your <xref:System.Data.OleDb.OleDbConnection>, the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will continue to return `Open`. If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method and then checking the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will tell you that the connection is no longer open. The <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method relies on functionality in the OLE DB Provider to verify the current state of the connection. To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.","nodes":[{"pos":[0,897],"content":"Some OLE DB providers can check the current state of the connection. For example, if the database server has recycled since you opened your <xref:System.Data.OleDb.OleDbConnection>, the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will continue to return `Open`. If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method and then checking the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will tell you that the connection is no longer open. The <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method relies on functionality in the OLE DB Provider to verify the current state of the connection. To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.","nodes":[{"content":"Some OLE DB providers can check the current state of the connection.","pos":[0,68]},{"content":"For example, if the database server has recycled since you opened your <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph> property will continue to return <ph id=\"ph3\">`Open`</ph>.","pos":[69,276],"source":" For example, if the database server has recycled since you opened your <xref:System.Data.OleDb.OleDbConnection>, the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will continue to return `Open`."},{"content":"If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ResetState%2A&gt;</ph> method and then checking the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph> property will tell you that the connection is no longer open.","pos":[277,592],"source":" If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method and then checking the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will tell you that the connection is no longer open."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ResetState%2A&gt;</ph> method relies on functionality in the OLE DB Provider to verify the current state of the connection.","pos":[593,752],"source":" The <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method relies on functionality in the OLE DB Provider to verify the current state of the connection."},{"content":"To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.","pos":[753,897]}]}],"pos":[72345,73243],"yaml":true,"extradata":"MT"},{"content":"Gets a string that contains the version of the server to which the client is connected.","nodes":[{"pos":[0,87],"content":"Gets a string that contains the version of the server to which the client is connected.","nodes":[{"content":"Gets a string that contains the version of the server to which the client is connected.","pos":[0,87]}]}],"pos":[74378,74466],"yaml":true},{"content":"The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property. If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned.  \n  \n The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The provider must render the product version in this form but can also append the product-specific version—for example, \"04.01.0000 Rdb 4.1\". The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits.","nodes":[{"pos":[0,256],"content":"The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property. If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned.","nodes":[{"content":"The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property. If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned.","pos":[0,256],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A&gt;</ph> property maps to the OLE DB DBPROP_DBMSVER property.","pos":[0,114],"source":"The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A&gt;</ph> is not supported by the underlying OLE DB provider, an empty string is returned.","pos":[115,256],"source":" If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned."}]}]},{"pos":[263,714],"content":"The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The provider must render the product version in this form but can also append the product-specific version—for example, \"04.01.0000 Rdb 4.1\". The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits.","nodes":[{"content":"The version is of the form <bpt id=\"p1\">*</bpt>##.##.####<ept id=\"p1\">*</ept>, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version.","pos":[0,183],"source":"The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version."},{"content":"The provider must render the product version in this form but can also append the product-specific version—for example, \"04.01.0000 Rdb 4.1\".","pos":[184,325]},{"content":"The string is of the form <bpt id=\"p1\">*</bpt>major.minor.build<ept id=\"p1\">*</ept>, where major and minor are exactly two digits and build is exactly four digits.","pos":[326,451],"source":" The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits."}]}],"pos":[74477,75198],"yaml":true,"extradata":"MT"},{"content":"The version of the connected server.","nodes":[{"pos":[0,36],"content":"The version of the connected server.","nodes":[{"content":"The version of the connected server.","pos":[0,36]}]}],"pos":[75849,75886],"yaml":true},{"content":"The connection is closed.","nodes":[{"pos":[0,25],"content":"The connection is closed.","nodes":[{"content":"The connection is closed.","pos":[0,25]}]}],"pos":[76071,76097],"yaml":true},{"content":"Gets the current state of the connection.","nodes":[{"pos":[0,41],"content":"Gets the current state of the connection.","nodes":[{"content":"Gets the current state of the connection.","pos":[0,41]}]}],"pos":[77023,77065],"yaml":true},{"content":"The following are allowed state changes:  \n  \n-   From `Closed` to `Open`, using the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method of the <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n-   From `Open` to `Closed`, using either the <xref:System.Data.OleDb.OleDbConnection.Close%2A> method or the **Dispose** method of the <xref:System.Data.OleDb.OleDbConnection> object.  \n  \n> [!NOTE]\n>  In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection. With the release of the .NET Framework 2.0, this is no longer an issue.","nodes":[{"pos":[0,40],"content":"The following are allowed state changes:","nodes":[{"content":"The following are allowed state changes:","pos":[0,40]}]},{"pos":[50,196],"content":"From <ph id=\"ph1\">`Closed`</ph> to <ph id=\"ph2\">`Open`</ph>, using the <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbConnection.Open%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.","source":"From `Closed` to `Open`, using the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method of the <xref:System.Data.OleDb.OleDbConnection> object."},{"pos":[206,386],"content":"From <ph id=\"ph1\">`Open`</ph> to <ph id=\"ph2\">`Closed`</ph>, using either the <ph id=\"ph3\">&lt;xref:System.Data.OleDb.OleDbConnection.Close%2A&gt;</ph> method or the <bpt id=\"p1\">**</bpt>Dispose<ept id=\"p1\">**</ept> method of the <ph id=\"ph4\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> object.","source":"From `Open` to `Closed`, using either the <xref:System.Data.OleDb.OleDbConnection.Close%2A> method or the **Dispose** method of the <xref:System.Data.OleDb.OleDbConnection> object."},{"pos":[394,724],"content":"[!NOTE]\n In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection. With the release of the .NET Framework 2.0, this is no longer an issue.","leadings":["","> "],"nodes":[{"content":" In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection. With the release of the .NET Framework 2.0, this is no longer an issue.","pos":[8,328],"nodes":[{"content":"In previous version of the .NET Framework, calling the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection.State%2A&gt;</ph> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection.","pos":[1,248],"source":" In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection."},{"content":"With the release of the .NET Framework 2.0, this is no longer an issue.","pos":[249,320]}]}]}],"pos":[77076,77810],"yaml":true,"extradata":"MT"},{"content":"A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values. The default is Closed.","nodes":[{"pos":[0,108],"content":"A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values. The default is Closed.","nodes":[{"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Data.ConnectionState\"&gt;&lt;/xref&gt;</ph> values.","pos":[0,85],"source":"A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values."},{"content":"The default is Closed.","pos":[86,108]}]}],"pos":[78020,78129],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.ICloneable.Clone\"></xref>.","nodes":[{"pos":[0,83],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.ICloneable.Clone\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.ICloneable.Clone\"></xref>."}],"pos":[79295,79379],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface.","nodes":[{"pos":[0,188],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface.","pos":[0,188],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbConnection&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.ICloneable&gt;</ph> interface.","pos":[60,188],"source":" It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface."}]}]}],"pos":[79390,79579],"yaml":true,"extradata":"MT"},{"content":"A new <xref href=\"System.Object\"></xref> that is a copy of this instance.","nodes":[{"pos":[0,73],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is a copy of this instance.","source":"A new <xref href=\"System.Object\"></xref> that is a copy of this instance."}],"pos":[79706,79780],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.OleDb.OleDbConnection\n  commentId: T:System.Data.OleDb.OleDbConnection\n  id: OleDbConnection\n  children:\n  - System.Data.OleDb.OleDbConnection.#ctor\n  - System.Data.OleDb.OleDbConnection.#ctor(System.String)\n  - System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  - System.Data.OleDb.OleDbConnection.BeginTransaction\n  - System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)\n  - System.Data.OleDb.OleDbConnection.Close\n  - System.Data.OleDb.OleDbConnection.ConnectionString\n  - System.Data.OleDb.OleDbConnection.ConnectionTimeout\n  - System.Data.OleDb.OleDbConnection.CreateCommand\n  - System.Data.OleDb.OleDbConnection.CreateDbCommand\n  - System.Data.OleDb.OleDbConnection.Database\n  - System.Data.OleDb.OleDbConnection.DataSource\n  - System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)\n  - System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  - System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)\n  - System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])\n  - System.Data.OleDb.OleDbConnection.GetSchema\n  - System.Data.OleDb.OleDbConnection.GetSchema(System.String)\n  - System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])\n  - System.Data.OleDb.OleDbConnection.InfoMessage\n  - System.Data.OleDb.OleDbConnection.Open\n  - System.Data.OleDb.OleDbConnection.Provider\n  - System.Data.OleDb.OleDbConnection.ReleaseObjectPool\n  - System.Data.OleDb.OleDbConnection.ResetState\n  - System.Data.OleDb.OleDbConnection.ServerVersion\n  - System.Data.OleDb.OleDbConnection.State\n  - System.Data.OleDb.OleDbConnection.System#ICloneable#Clone\n  langs:\n  - csharp\n  name: OleDbConnection\n  nameWithType: OleDbConnection\n  fullName: System.Data.OleDb.OleDbConnection\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Represents an open connection to a data source.\n  remarks: \"An <xref:System.Data.OleDb.OleDbConnection> object represents a unique connection to a data source. With a client/server database system, it is equivalent to a network connection to the server. Depending on the functionality supported by the native OLE DB provider, some methods or properties of an <xref:System.Data.OleDb.OleDbConnection> object may not be available.  \\n  \\n When you create an instance of <xref:System.Data.OleDb.OleDbConnection>, all properties are set to their initial values. For a list of these values, see the <xref:System.Data.OleDb.OleDbConnection> constructor.  \\n  \\n You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLE DB provider you use does not support more than one DataReader on a single connection, the provider implicitly opens an additional connection for each.  \\n  \\n If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or by using the <xref:System.Data.OleDb.OleDbConnection> object within a `Using` statement.  \\n  \\n> [!NOTE]\\n>  To deploy high-performance applications, you must use connection pooling. When you use the .NET Framework Data Provider for OLE DB, you do not have to enable connection pooling because the provider manages this automatically. For more information about how to use connection pooling with the .NET Framework Data Provider for OLE DB, see [OLE DB, ODBC, and Oracle Connection Pooling](~/docs/framework/data/adonet/ole-db-odbc-and-oracle-connection-pooling.md).  \\n  \\n If a fatal <xref:System.Data.OleDb.OleDbException> (for example, a SQL Server severity level of 20 or greater) is generated by the method executing an <xref:System.Data.OleDb.OleDbCommand>, the <xref:System.Data.OleDb.OleDbConnection> might be closed. However, the user can reopen the connection and continue.  \\n  \\n An application that creates an instance of the <xref:System.Data.OleDb.OleDbConnection> object can require all direct and indirect callers to have sufficient permission to the code by setting declarative or imperative security demands. <xref:System.Data.OleDb.OleDbConnection> makes security demands using the <xref:System.Data.OleDb.OleDbPermission> object. Users can verify that their code has sufficient permissions by using the <xref:System.Data.OleDb.OleDbPermissionAttribute> object. Users and administrators can also use the [Caspol.exe (Code Access Security Policy Tool)](~/docs/framework/tools/caspol-exe-code-access-security-policy-tool.md) to modify security policy at the computer, user, and enterprise levels. For more information, see [Code Access Security and ADO.NET](~/docs/framework/data/adonet/code-access-security.md).  \\n  \\n For more information about handling warning and informational messages from the data server, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).  \\n  \\n> [!NOTE]\\n>  The <xref:System.Data.OleDb.OleDbConnection> object does not support setting or retrieving dynamic properties specific to an OLE DB provider. Only properties that can be passed in the connection string for the OLE DB provider are supported.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbCommand> and an <xref:System.Data.OleDb.OleDbConnection>. The <xref:System.Data.OleDb.OleDbConnection> is opened and set as the <xref:System.Data.OleDb.OleDbCommand.Connection%2A> for the <xref:System.Data.OleDb.OleDbCommand>. The example then calls <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> and closes the connection. To accomplish this, <xref:System.Data.OleDb.OleDbCommand.ExecuteNonQuery%2A> is passed a connection string and a query string that is an SQL INSERT statement.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public sealed class OleDbConnection : System.Data.Common.DbConnection, ICloneable, IDisposable'\n  inheritance:\n  - System.Object\n  - System.Data.Common.DbConnection\n  implements:\n  - System.ICloneable\n  - System.IDisposable\n  inheritedMembers:\n  - System.Data.Common.DbConnection.DbProviderFactory\n  - System.Data.Common.DbConnection.Dispose\n  - System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)\n  - System.Data.Common.DbConnection.OpenAsync\n  - System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)\n  - System.Data.Common.DbConnection.StateChange\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)\n  - System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.#ctor\n  commentId: M:System.Data.OleDb.OleDbConnection.#ctor\n  id: '#ctor'\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: OleDbConnection()\n  nameWithType: OleDbConnection.OleDbConnection()\n  fullName: OleDbConnection.OleDbConnection()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> class.\n  remarks: \"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|empty string (\\\"\\\")|  \\n|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  \\n|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|empty string (\\\"\\\")|  \\n|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|empty string (\\\"\\\")|  \\n  \\n You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.\"\n  example:\n  - \"The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection Example/VB/source.vb#1)]\"\n  syntax:\n    content: public OleDbConnection ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbConnection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)\n  commentId: M:System.Data.OleDb.OleDbConnection.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: OleDbConnection(String)\n  nameWithType: OleDbConnection.OleDbConnection(String)\n  fullName: OleDbConnection.OleDbConnection(String)\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Initializes a new instance of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> class with the specified connection string.\n  remarks: \"When a new instance of <xref:System.Data.OleDb.OleDbConnection> is created, the read/write properties are set to the following initial values unless they are specifically set using their associated keywords in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.  \\n  \\n|Properties|Initial value|  \\n|----------------|-------------------|  \\n|<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>|`connectionString`|  \\n|<xref:System.Data.OleDb.OleDbConnection.ConnectionTimeout%2A>|15|  \\n|<xref:System.Data.OleDb.OleDbConnection.Database%2A>|empty string (\\\"\\\")|  \\n|<xref:System.Data.OleDb.OleDbConnection.DataSource%2A>|empty string (\\\"\\\")|  \\n  \\n You can change the value for these properties only by using the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property.\"\n  example:\n  - \"The following example creates and opens an <xref:System.Data.OleDb.OleDbConnection>.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.OleDbConnection1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.OleDbConnection1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public OleDbConnection (string connectionString);\n    parameters:\n    - id: connectionString\n      type: System.String\n      description: The connection used to open the database.\n  overload: System.Data.OleDb.OleDbConnection.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  commentId: M:System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  id: BeginDbTransaction(System.Data.IsolationLevel)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: BeginDbTransaction(IsolationLevel)\n  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)\n  fullName: OleDbConnection.BeginDbTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbTransaction BeginDbTransaction (System.Data.IsolationLevel isolationLevel);\n    parameters:\n    - id: isolationLevel\n      type: System.Data.IsolationLevel\n      description: ''\n    return:\n      type: System.Data.Common.DbTransaction\n      description: ''\n  overload: System.Data.OleDb.OleDbConnection.BeginDbTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.BeginTransaction\n  commentId: M:System.Data.OleDb.OleDbConnection.BeginTransaction\n  id: BeginTransaction\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: BeginTransaction()\n  nameWithType: OleDbConnection.BeginTransaction()\n  fullName: OleDbConnection.BeginTransaction()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Starts a database transaction with the current <xref href=\"System.Data.IsolationLevel\"></xref> value.\n  remarks: You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.OleDb.OleDbTransaction BeginTransaction ();\n    parameters: []\n    return:\n      type: System.Data.OleDb.OleDbTransaction\n      description: An object representing the new transaction.\n  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Parallel transactions are not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  commentId: M:System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  id: BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)\n  fullName: OleDbConnection.BeginTransaction(IsolationLevel)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Starts a database transaction with the specified isolation level.\n  remarks: \"You must explicitly commit or roll back the transaction using the <xref:System.Data.OleDb.OleDbTransaction.Commit%2A> or <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> method. To make sure that the .NET Framework Data Provider for OLE DB transaction management model performs correctly, avoid using other transaction management models, such as those provided by the data source.  \\n  \\n> [!NOTE]\\n>  If you do not specify an isolation level, the default isolation level for the underlying provider is used. To specify an isolation level with the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A> method, use the overload that takes the `isolationLevel` parameter.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and an <xref:System.Data.OleDb.OleDbTransaction>. It also demonstrates how to use the <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>, a <xref:System.Data.OleDb.OleDbTransaction.Commit%2A>, and <xref:System.Data.OleDb.OleDbTransaction.Rollback%2A> methods.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.BeginTransaction1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.BeginTransaction1 Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.OleDb.OleDbTransaction BeginTransaction (System.Data.IsolationLevel isolationLevel);\n    parameters:\n    - id: isolationLevel\n      type: System.Data.IsolationLevel\n      description: The isolation level under which the transaction should run.\n    return:\n      type: System.Data.OleDb.OleDbTransaction\n      description: An object representing the new transaction.\n  overload: System.Data.OleDb.OleDbConnection.BeginTransaction*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Parallel transactions are not supported.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)\n  commentId: M:System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)\n  id: ChangeDatabase(System.String)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ChangeDatabase(String)\n  nameWithType: OleDbConnection.ChangeDatabase(String)\n  fullName: OleDbConnection.ChangeDatabase(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Changes the current database for an open <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.\n  remarks: The value supplied in the `database` parameter must be a valid database name. The `database` parameter cannot contain a null value, an empty string, or a string with only blank characters.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#2)]\\n [!code-vb[Classic WebData OleDbConnection.Database Example#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#2)]\"\n  syntax:\n    content: public override void ChangeDatabase (string value);\n    parameters:\n    - id: value\n      type: System.String\n      description: The database name.\n  overload: System.Data.OleDb.OleDbConnection.ChangeDatabase*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The database name is not valid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection is not open.\n  - type: System.Data.OleDb.OleDbException\n    commentId: T:System.Data.OleDb.OleDbException\n    description: Cannot change the database.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.Close\n  commentId: M:System.Data.OleDb.OleDbConnection.Close\n  id: Close\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: OleDbConnection.Close()\n  fullName: OleDbConnection.Close()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Closes the connection to the data source.\n  remarks: \"The <xref:System.Data.OleDb.OleDbConnection.Close%2A> method rolls back any pending transactions. It then releases the connection to the connection pool, or closes the connection if connection pooling is disabled. If <xref:System.Data.OleDb.OleDbConnection.Close%2A> is called while handling a <xref:System.Data.Common.DbConnection.StateChange> event, no additional <xref:System.Data.Common.DbConnection.StateChange> events are fired.  \\n  \\n An application can call <xref:System.Data.OleDb.OleDbConnection.Close%2A> more than one time. No exception is generated.  \\n  \\n> [!CAUTION]\\n>  Do not call <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose** on an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbDataReader>, or any other managed object in the `Finalize` method of your class. In a finalizer, you should only release unmanaged resources that your class owns directly. If your class does not own any unmanaged resources, do not include a `Finalize` method in your class definition. For more information, see [Garbage Collection](http://msdn.microsoft.com/library/22b6cb97-0c80-4eeb-a2cf-5ed7655e37f9).\"\n  syntax:\n    content: public override void Close ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbConnection.Close*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.ConnectionString\n  commentId: P:System.Data.OleDb.OleDbConnection.ConnectionString\n  id: ConnectionString\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ConnectionString\n  nameWithType: OleDbConnection.ConnectionString\n  fullName: OleDbConnection.ConnectionString\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets or sets the string used to open a database.\n  remarks: \"The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> is designed to match OLE DB connection string format as closely as possible with the following exceptions:  \\n  \\n-   The \\\"Provider = `value` \\\" clause is required. However, you cannot use \\\"Provider = MSDASQL\\\" because the .NET Framework Data Provider for OLE DB does not support the OLE DB Provider for ODBC (MSDASQL). To access ODBC data sources, use the <xref:System.Data.Odbc.OdbcConnection> object that is in the <xref:System.Data.Odbc> namespace.  \\n  \\n-   Unlike ODBC or ADO, the connection string that is returned is the same as the user-set <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>, minus security information if `Persist Security Info` is set to `false` (default). The .NET Framework Data Provider for OLE DB does not persist or return the password in a connection string unless you set the `Persist Security Info` keyword to `true` (not recommended). To maintain a high level of security, it is strongly recommended that you use the `Integrated Security` keyword with `Persist Security Info` set to `false`.  \\n  \\n You can use the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property to connect to a variety of data sources. The following example illustrates several possible connection strings.  \\n  \\n```  \\n\\\"Provider=MSDAORA; Data Source=ORACLE8i7;Persist Security Info=False;Integrated Security=Yes\\\"  \\n  \\n\\\"Provider=Microsoft.Jet.OLEDB.4.0; Data Source=c:\\\\bin\\\\LocalAccess40.mdb\\\"  \\n  \\n\\\"Provider=SQLOLEDB;Data Source=(local);Integrated Security=SSPI\\\"  \\n```  \\n  \\n If the `Data Source` keyword is not specified in the connection string, the provider will try to connect to the local server if one is available.  \\n  \\n For more information about connection strings, see [Using Connection String Keywords with SQL Server Native Client](http://go.microsoft.com/fwlink/?LinkId=126696).  \\n  \\n The <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property can be set only when the connection is closed. Many of the connection string values have corresponding read-only properties. When the connection string is set, these properties are updated, except when an error is detected. In this case, none of the properties are updated. <xref:System.Data.OleDb.OleDbConnection> properties return only those settings that are contained in the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>.  \\n  \\n Resetting the <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> on a closed connection resets all connection string values and related properties. This includes the password. For example, if you set a connection string that includes \\\"Initial Catalog= AdventureWorks\\\", and then reset the connection string to \\\"Provider= SQLOLEDB;Data Source= MySQLServer;IntegratedSecurity=SSPI\\\", the <xref:System.Data.OleDb.OleDbConnection.Database%2A> property is no longer set to AdventureWorks. (The Initial Catalog value of the connection string corresponds to the `Database` property.)  \\n  \\n A preliminary validation of the connection string is performed when the property is set. If values for the `Provider`, `Connect Timeout`, `Persist Security Info`, or `OLE DB Services` are included in the string, these values are checked. When an application calls the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method, the connection string is fully validated. If the connection string contains invalid or unsupported properties, a run-time exception, such as <xref:System.ArgumentException>, is generated.  \\n  \\n> [!CAUTION]\\n>  It is possible to supply connection information for an <xref:System.Data.OleDb.OleDbConnection> in a Universal Data Link (UDL) file; however you should avoid doing so. UDL files are not encrypted and expose connection string information in clear text. Because a UDL file is an external file-based resource to your application, it cannot be secured using the .NET Framework.  \\n  \\n The basic format of a connection string includes a series of keyword/value pairs separated by semicolons. The equal sign (=) connects each keyword and its value. To include values that contain a semicolon, single-quote character, or double-quote character, the value must be enclosed in double quotation marks. If the value contains both a semicolon and a double-quote character, the value can be enclosed in single quotation marks. The single quotation mark is also useful if the value starts with a double-quote character. Conversely, the double quotation mark can be used if the value starts with a single quotation mark. If the value contains both single-quote and double-quote characters, the quotation-mark character used to enclose the value must be doubled every time it occurs within the value.  \\n  \\n To include preceding or trailing spaces in the string value, the value must be enclosed in either single quotation marks or double quotation marks. Any leading or trailing spaces around integer, Boolean, or enumerated values are ignored, even if enclosed in quotation marks. However, spaces within a string literal keyword or value are preserved. Single or double quotation marks may be used within a connection string without using delimiters (for example, `Data Source= my'Server` or `Data Source= my\\\"Server`) unless a quotation-mark character is the first or last character in the value.  \\n  \\n To include an equal sign (=) in a keyword or value, it must be preceded by another equal sign. For example, in the hypothetical connection string  \\n  \\n```  \\n\\\"key==word=value\\\"  \\n```  \\n  \\n the keyword is \\\"key=word\\\" and the value is \\\"value\\\".  \\n  \\n If a specific keyword in a keyword=value pair occurs multiple times in a connection string, the last occurrence listed is used in the value set.  \\n  \\n Keywords are not case sensitive.  \\n  \\n> [!CAUTION]\\n>  You should use caution when constructing a connection string based on user input, for example, when retrieving user ID and password information from a dialog box and appending it to the connection string. The application should make sure that a user cannot embed additional connection-string parameters in these values, for example, entering a password as \\\"validpassword;database= somedb\\\" in an attempt to attach to a different database. If you use the Extended Properties connection string parameter for OLE DB connections, avoid passing user IDs and passwords because you should avoid storing user IDs and passwords in clear text if you can, and because the default setting of `Persist Security Info= false` does not affect the `Extended Properties` parameter.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.SettingsBindable(true)]\n\n      public override string ConnectionString { get; set; }\n    return:\n      type: System.String\n      description: The OLE DB provider connection string that includes the data source name, and other parameters needed to establish the initial connection. The default value is an empty string.\n  overload: System.Data.OleDb.OleDbConnection.ConnectionString*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An invalid connection string argument has been supplied or a required connection string argument has not been supplied.\n  attributes:\n  - type: System.ComponentModel.SettingsBindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout\n  commentId: P:System.Data.OleDb.OleDbConnection.ConnectionTimeout\n  id: ConnectionTimeout\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ConnectionTimeout\n  nameWithType: OleDbConnection.ConnectionTimeout\n  fullName: OleDbConnection.ConnectionTimeout\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the time to wait while trying to establish a connection before terminating the attempt and generating an error.\n  remarks: A value of 0 indicates no limit, and should be avoided in a <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> because an attempt to connect will wait indefinitely.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and sets some of its properties in the connection string.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.ConnectionTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ConnectionTimeout Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override int ConnectionTimeout { get; }\n    return:\n      type: System.Int32\n      description: The time in seconds to wait for a connection to open. The default value is 15 seconds.\n  overload: System.Data.OleDb.OleDbConnection.ConnectionTimeout*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value set is less than 0.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.CreateCommand\n  commentId: M:System.Data.OleDb.OleDbConnection.CreateCommand\n  id: CreateCommand\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: CreateCommand()\n  nameWithType: OleDbConnection.CreateCommand()\n  fullName: OleDbConnection.CreateCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Creates and returns an <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object associated with the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.\n  syntax:\n    content: public System.Data.OleDb.OleDbCommand CreateCommand ();\n    parameters: []\n    return:\n      type: System.Data.OleDb.OleDbCommand\n      description: An <xref href=\"System.Data.OleDb.OleDbCommand\"></xref> object.\n  overload: System.Data.OleDb.OleDbConnection.CreateCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand\n  commentId: M:System.Data.OleDb.OleDbConnection.CreateDbCommand\n  id: CreateDbCommand\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: CreateDbCommand()\n  nameWithType: OleDbConnection.CreateDbCommand()\n  fullName: OleDbConnection.CreateDbCommand()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override System.Data.Common.DbCommand CreateDbCommand ();\n    parameters: []\n    return:\n      type: System.Data.Common.DbCommand\n      description: ''\n  overload: System.Data.OleDb.OleDbConnection.CreateDbCommand*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.Database\n  commentId: P:System.Data.OleDb.OleDbConnection.Database\n  id: Database\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: Database\n  nameWithType: OleDbConnection.Database\n  fullName: OleDbConnection.Database\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the name of the current database or the database to be used after a connection is opened.\n  remarks: The <xref:System.Data.OleDb.OleDbConnection.Database%2A> property updates dynamically. If you change the current database using a SQL statement or the <xref:System.Data.OleDb.OleDbConnection.ChangeDatabase%2A> method, an informational message is sent and the property is updated automatically.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.Database Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Database Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string Database { get; }\n    return:\n      type: System.String\n      description: The name of the current database or the name of the database to be used after a connection is opened. The default value is an empty string.\n  overload: System.Data.OleDb.OleDbConnection.Database*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.DataSource\n  commentId: P:System.Data.OleDb.OleDbConnection.DataSource\n  id: DataSource\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: DataSource\n  nameWithType: OleDbConnection.DataSource\n  fullName: OleDbConnection.DataSource\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the server name or file name of the data source.\n  remarks: If the connection to the database is closed, the `DataSource` property returns whatever is contained in `ConnectionString` for the data source keyword. If the connection is open and the `ConnectionString` data source keyword's value starts with \"&#124;datadirectory&#124;\", the property returns whatever is contained in `ConnectionString` for the data source keyword only. If the connection to the database is open, the property returns what the native provider returns for the `DBPROP_INIT_DATASOURCE,` and if that is empty, the native provider’s `DBPROP_DATASOURCENAME` is returned.\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.DataSource Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public override string DataSource { get; }\n    return:\n      type: System.String\n      description: The server name or file name of the data source. The default value is an empty string.\n  overload: System.Data.OleDb.OleDbConnection.DataSource*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)\n  commentId: M:System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: OleDbConnection.Dispose(Boolean)\n  fullName: OleDbConnection.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: ''\n  overload: System.Data.OleDb.OleDbConnection.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  commentId: M:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  id: EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: EnlistDistributedTransaction(ITransaction)\n  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)\n  fullName: OleDbConnection.EnlistDistributedTransaction(ITransaction)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Enlists in the specified transaction as a distributed transaction.\n  remarks: \"New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction** for this purpose. For more information, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).  \\n  \\n You can continue to enlist in an existing distributed transaction using the <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> method if auto-enlistment is disabled. Enlisting in an existing distributed transaction makes sure that, if the transaction is committed or rolled back, modifications made by the code at the data source are also committed or rolled back. For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).  \\n  \\n <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> returns an exception if the <xref:System.Data.OleDb.OleDbConnection> has already started a transaction using <xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>. However, if the transaction is a local transaction started at the data source (for example, by explicitly executing the BEGIN TRANSACTION statement using an <xref:System.Data.OleDbClient.OleDbCommand> object), <xref:System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction%2A> rolls back the local transaction and enlists in the existing distributed transaction as requested. You will not receive notice that the local transaction was rolled back, and are responsible for managing any local transactions not started using<xref:System.Data.OleDb.OleDbConnection.BeginTransaction%2A>.\"\n  syntax:\n    content: public void EnlistDistributedTransaction (System.EnterpriseServices.ITransaction transaction);\n    parameters:\n    - id: transaction\n      type: System.EnterpriseServices.ITransaction\n      description: A reference to an existing <xref href=\"System.EnterpriseServices.ITransaction\"></xref> in which to enlist.\n  overload: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)\n  commentId: M:System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)\n  id: EnlistTransaction(System.Transactions.Transaction)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: EnlistTransaction(Transaction)\n  nameWithType: OleDbConnection.EnlistTransaction(Transaction)\n  fullName: OleDbConnection.EnlistTransaction(Transaction)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Enlists in the specified transaction as a distributed transaction.\n  remarks: 'New in ADO.NET 2.0 is support for using the <xref:System.Data.Common.DbConnection.EnlistTransaction%2A> method to enlist in a distributed transaction. Because it enlists a connection in a <xref:System.Transactions.Transaction> instance, **EnlistTransaction** takes advantage of functionality available in the <xref:System.Transactions> namespace for managing distributed transactions, making it preferable to **EnlistDistributedTransaction**, which uses a <xref:System.EnterpriseServices.ITransaction> object. It also has slightly different semantics: once a connection is explicitly enlisted on a transaction, it cannot be unenlisted or enlisted in another transaction until the first transaction finishes. For more information about distributed transactions, see [Distributed Transactions](~/docs/framework/data/adonet/distributed-transactions.md).'\n  syntax:\n    content: public override void EnlistTransaction (System.Transactions.Transaction transaction);\n    parameters:\n    - id: transaction\n      type: System.Transactions.Transaction\n      description: A reference to an existing <xref href=\"System.Transactions.Transaction\"></xref> in which to enlist.\n  overload: System.Data.OleDb.OleDbConnection.EnlistTransaction*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])\n  commentId: M:System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])\n  id: GetOleDbSchemaTable(System.Guid,System.Object[])\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: GetOleDbSchemaTable(Guid, Object[])\n  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid, Object[])\n  fullName: OleDbConnection.GetOleDbSchemaTable(Guid, Object[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns schema information from a data source as indicated by a GUID, and after it applies the specified restrictions.\n  remarks: \"The schema table is returned as a <xref:System.Data.DataTable> that has the same format as the OLE DB schema rowset specified by the `schema` parameter. Use the `restrictions` parameter to filter the rows to be returned in the <xref:System.Data.DataTable> (for example, by specifying restrictions for table name, type, owner, or schema). When you pass values in the array, include empty strings or nulls for array elements that do not contain values. If you pass an empty array to `restrictions`, all rows (one for each table) are returned in default order. Values in the array correspond to the order of the columns in the source table and <xref:System.Data.DataTable>. Each element in the restrictions array is compared with the content of the corresponding column in the schema rowset. For example, the first element in the restrictions array is compared to first column in the rowset. If a restriction element is not null, only rows from the schema rowset that exactly match the value of the restriction are added to the resulting <xref:System.Data.DataTable>.  \\n  \\n The <xref:System.Data.OleDb.OleDbConnection> method calls the underlying OLE DB **IDBSchemaRowset::GetRowset** method using standard common language runtime conversion rules. For more information, see [COM Data Types](http://msdn.microsoft.com/en-us/f93ae35d-a416-4218-8700-c8218cc90061).  \\n  \\n You can retrieve information about literals by using <xref:System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals>. This provides information equivalent to calling the OLE DB **IDBInfo::GetLiteralInfo** interface, or the ADO **Connection.OpenSchema** method with the `adSchemaDBInfoLiterals` constant.\"\n  example:\n  - \"The following sample returns a list of tables in a database.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.GetOleDbSchemaTable Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.GetOleDbSchemaTable Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Data.DataTable GetOleDbSchemaTable (Guid schema, object[] restrictions);\n    parameters:\n    - id: schema\n      type: System.Guid\n      description: One of the <xref href=\"System.Data.OleDb.OleDbSchemaGuid\"></xref> values that specifies the schema table to return.\n    - id: restrictions\n      type: System.Object[]\n      description: An <xref href=\"System.Object\"></xref> array of restriction values. These are applied in the order of the restriction columns. That is, the first restriction value applies to the first restriction column, the second restriction value applies to the second restriction column, and so on.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains the requested schema information.\n  overload: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*\n  exceptions:\n  - type: System.Data.OleDb.OleDbException\n    commentId: T:System.Data.OleDb.OleDbException\n    description: The specified set of restrictions is invalid.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> is closed.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The specified schema rowset is not supported by the OLE DB provider.  \\n  \\n -or-  \\n  \\n The <code>schema</code> parameter contains a value of <xref href=\\\"System.Data.OleDb.OleDbSchemaGuid.DbInfoLiterals\\\"></xref> and the <code>restrictions</code> parameter contains one or more restrictions.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.GetSchema\n  commentId: M:System.Data.OleDb.OleDbConnection.GetSchema\n  id: GetSchema\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: GetSchema()\n  nameWithType: OleDbConnection.GetSchema()\n  fullName: OleDbConnection.GetSchema()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref>.\n  syntax:\n    content: public override System.Data.DataTable GetSchema ();\n    parameters: []\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.\n  overload: System.Data.OleDb.OleDbConnection.GetSchema*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)\n  commentId: M:System.Data.OleDb.OleDbConnection.GetSchema(System.String)\n  id: GetSchema(System.String)\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: GetSchema(String)\n  nameWithType: OleDbConnection.GetSchema(String)\n  fullName: OleDbConnection.GetSchema(String)\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> using the specified string for the schema name.\n  remarks: When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.\n  syntax:\n    content: public override System.Data.DataTable GetSchema (string collectionName);\n    parameters:\n    - id: collectionName\n      type: System.String\n      description: Specifies the name of the schema to return.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.\n  overload: System.Data.OleDb.OleDbConnection.GetSchema*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])\n  commentId: M:System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])\n  id: GetSchema(System.String,System.String[])\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: GetSchema(String, String[])\n  nameWithType: OleDbConnection.GetSchema(String, String[])\n  fullName: OleDbConnection.GetSchema(String, String[])\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Returns schema information for the data source of this <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> using the specified string for the schema name and the specified string array for the restriction values.\n  remarks: \"When `collectionName` is specified as null, the <xref:System.Data.DataTable> will contain information about all the metadata that is available, and its restrictions.  \\n  \\n The `restrictionValues` parameter can supply *n* depth of values which are specified by the restrictions collection for a specific collection. In order to set values on a given restriction, and not set the values of other restrictions, you need to set the preceding restrictions to null and then put the appropriate value in for the restriction that you would like to specify a value for.  \\n  \\n An example of this is the \\\"Tables\\\" collection. If the \\\"Tables\\\" collection has three restrictions (database, owner, and table name), and you want to get back only the tables associated with the owner \\\"Carl,\\\" you must pass in the following values (at a minimum): null, \\\"Carl\\\". If a restriction value is not passed in, the default values are used for that restriction. This is the same mapping as passing in null, which is different from passing in an empty string for the parameter value. In that case, the empty string (\\\"\\\") is considered to be the value for the specified parameter.\"\n  syntax:\n    content: public override System.Data.DataTable GetSchema (string collectionName, string[] restrictionValues);\n    parameters:\n    - id: collectionName\n      type: System.String\n      description: Specifies the name of the schema to return.\n    - id: restrictionValues\n      type: System.String[]\n      description: Specifies a set of restriction values for the requested schema.\n    return:\n      type: System.Data.DataTable\n      description: A <xref href=\"System.Data.DataTable\"></xref> that contains schema information.\n  overload: System.Data.OleDb.OleDbConnection.GetSchema*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.InfoMessage\n  commentId: E:System.Data.OleDb.OleDbConnection.InfoMessage\n  id: InfoMessage\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: InfoMessage\n  nameWithType: OleDbConnection.InfoMessage\n  fullName: OleDbConnection.InfoMessage\n  type: Event\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Occurs when the provider sends a warning or an informational message.\n  remarks: \"Clients that want to process warnings or informational messages sent by the server should create an <xref:System.Data.OleDb.OleDbInfoMessageEventHandler> delegate to listen to this event.  \\n  \\n The <xref:System.Data.OleDb.OleDbConnection.InfoMessage> event occurs when a message with low severity is returned from the data source. Low severity messages are those that do not cause an exception. For Microsoft SQL Server, this includes error messages that have a severity of 10 or less  \\n  \\n For more information and an example, see [Connection Events](~/docs/framework/data/adonet/connection-events.md).\"\n  syntax:\n    content: public event System.Data.OleDb.OleDbInfoMessageEventHandler InfoMessage;\n    return:\n      type: System.Data.OleDb.OleDbInfoMessageEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.Open\n  commentId: M:System.Data.OleDb.OleDbConnection.Open\n  id: Open\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: Open()\n  nameWithType: OleDbConnection.Open()\n  fullName: OleDbConnection.Open()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Opens a database connection with the property settings specified by the <xref href=\"System.Data.OleDb.OleDbConnection.ConnectionString\"></xref>.\n  remarks: \"The <xref:System.Data.OleDb.OleDbConnection> draws an open connection from the connection pool if one is available. Otherwise, it establishes a new connection to the data source. You can open more than one DataReader on a single <xref:System.Data.OleDb.OleDbConnection>. If the OLEDB provider you use does not support more than one active DataReader on a single connection, the OLEDB provider implicitly opens an additional connection for each.  \\n  \\n> [!NOTE]\\n>  If the <xref:System.Data.OleDb.OleDbConnection> goes out of scope, it is not closed. Therefore, you must explicitly close the connection by calling <xref:System.Data.OleDb.OleDbConnection.Close%2A> or **Dispose**, or using the connection within a `Using` statement.\"\n  syntax:\n    content: public override void Open ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbConnection.Open*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection is already open.\n  - type: System.Data.OleDb.OleDbException\n    commentId: T:System.Data.OleDb.OleDbException\n    description: A connection-level error occurred while opening the connection.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.Provider\n  commentId: P:System.Data.OleDb.OleDbConnection.Provider\n  id: Provider\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: Provider\n  nameWithType: OleDbConnection.Provider\n  fullName: OleDbConnection.Provider\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the name of the OLE DB provider specified in the \"Provider= \" clause of the connection string.\n  remarks: ''\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.Provider Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.Provider Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public string Provider { get; }\n    return:\n      type: System.String\n      description: The name of the provider as specified in the \"Provider= \" clause of the connection string. The default value is an empty string.\n  overload: System.Data.OleDb.OleDbConnection.Provider*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool\n  commentId: M:System.Data.OleDb.OleDbConnection.ReleaseObjectPool\n  id: ReleaseObjectPool\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ReleaseObjectPool()\n  nameWithType: OleDbConnection.ReleaseObjectPool()\n  fullName: OleDbConnection.ReleaseObjectPool()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Indicates that the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> object pool can be released when the last underlying connection is released.\n  remarks: \"`ReleaseObjectPool` can be called to free resources that would otherwise be reserved for pooled <xref:System.Data.OleDb.OleDbConnection> objects. You might want to call this method if, for example, the connection object will not be used again for the amount of time that OLE DB services ordinarily keeps pooled connections active. Note that calling the method alone does not actually release the active connections that exist in the pool.  \\n  \\n The following must occur before the pool is finally disposed:  \\n  \\n1.  Call <xref:System.Data.OleDb.OleDbConnection.Close%2A> to return the connection object to the pool.  \\n  \\n2.  Allow each connection object to time out of the pool.  \\n  \\n3.  Call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>.  \\n  \\n4.  Invoke garbage collection.  \\n  \\n Conversely, if you call <xref:System.Data.OleDb.OleDbConnection.Close%2A> on all active connections, and invoke garbage collection, but do not call <xref:System.Data.OleDb.OleDbConnection.ReleaseObjectPool%2A>, the resources reserved for the pooled objects will remain available.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection>, opens it, displays some of its properties, closes the connection, and releases the object pool to conserve resources.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.ReleaseObjectPool Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ReleaseObjectPool Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static void ReleaseObjectPool ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.ResetState\n  commentId: M:System.Data.OleDb.OleDbConnection.ResetState\n  id: ResetState\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ResetState()\n  nameWithType: OleDbConnection.ResetState()\n  fullName: OleDbConnection.ResetState()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Updates the <xref href=\"System.Data.OleDb.OleDbConnection.State\"></xref> property of the <xref href=\"System.Data.OleDb.OleDbConnection\"></xref> object.\n  remarks: Some OLE DB providers can check the current state of the connection. For example, if the database server has recycled since you opened your <xref:System.Data.OleDb.OleDbConnection>, the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will continue to return `Open`. If you are working with an OLE DB Provider that supports polling for this information on a live connection, calling the <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method and then checking the <xref:System.Data.OleDb.OleDbConnection.State%2A> property will tell you that the connection is no longer open. The <xref:System.Data.OleDb.OleDbConnection.ResetState%2A> method relies on functionality in the OLE DB Provider to verify the current state of the connection. To determine if your OLE DB Provider supports this functionality, check the provider's documentation for information on DBPROP_CONNECTIONSTATUS.\n  syntax:\n    content: public void ResetState ();\n    parameters: []\n  overload: System.Data.OleDb.OleDbConnection.ResetState*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.ServerVersion\n  commentId: P:System.Data.OleDb.OleDbConnection.ServerVersion\n  id: ServerVersion\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ServerVersion\n  nameWithType: OleDbConnection.ServerVersion\n  fullName: OleDbConnection.ServerVersion\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets a string that contains the version of the server to which the client is connected.\n  remarks: \"The <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> property maps to the OLE DB DBPROP_DBMSVER property. If <xref:System.Data.OleDb.OleDbConnection.ServerVersion%2A> is not supported by the underlying OLE DB provider, an empty string is returned.  \\n  \\n The version is of the form *##.##.####*, where the first two digits are the major version, the next two digits are the minor version, and the last four digits are the release version. The provider must render the product version in this form but can also append the product-specific version—for example, \\\"04.01.0000 Rdb 4.1\\\". The string is of the form *major.minor.build*, where major and minor are exactly two digits and build is exactly four digits.\"\n  example:\n  - \"The following example creates an <xref:System.Data.OleDb.OleDbConnection> and displays some of its read-only properties.  \\n  \\n [!code-csharp[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData OleDbConnection.ServerVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbConnection.ServerVersion Example/VB/source.vb#1)]\"\n  syntax:\n    content: public override string ServerVersion { get; }\n    return:\n      type: System.String\n      description: The version of the connected server.\n  overload: System.Data.OleDb.OleDbConnection.ServerVersion*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection is closed.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.State\n  commentId: P:System.Data.OleDb.OleDbConnection.State\n  id: State\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: State\n  nameWithType: OleDbConnection.State\n  fullName: OleDbConnection.State\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: Gets the current state of the connection.\n  remarks: \"The following are allowed state changes:  \\n  \\n-   From `Closed` to `Open`, using the <xref:System.Data.OleDb.OleDbConnection.Open%2A> method of the <xref:System.Data.OleDb.OleDbConnection> object.  \\n  \\n-   From `Open` to `Closed`, using either the <xref:System.Data.OleDb.OleDbConnection.Close%2A> method or the **Dispose** method of the <xref:System.Data.OleDb.OleDbConnection> object.  \\n  \\n> [!NOTE]\\n>  In previous version of the .NET Framework, calling the <xref:System.Data.OleDb.OleDbConnection.State%2A> property increased application overhead because each call caused a call to the OLE DB DBPROP_CONNECTIONSTATUS property for an open connection. With the release of the .NET Framework 2.0, this is no longer an issue.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public override System.Data.ConnectionState State { get; }\n    return:\n      type: System.Data.ConnectionState\n      description: A bitwise combination of the <xref href=\"System.Data.ConnectionState\"></xref> values. The default is Closed.\n  overload: System.Data.OleDb.OleDbConnection.State*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone\n  commentId: M:System.Data.OleDb.OleDbConnection.System#ICloneable#Clone\n  id: System#ICloneable#Clone\n  isEii: true\n  parent: System.Data.OleDb.OleDbConnection\n  langs:\n  - csharp\n  name: ICloneable.Clone()\n  nameWithType: OleDbConnection.ICloneable.Clone()\n  fullName: OleDbConnection.ICloneable.Clone()\n  type: Method\n  assemblies:\n  - System.Data\n  namespace: System.Data.OleDb\n  summary: For a description of this member, see <xref href=\"System.ICloneable.Clone\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Data.OleDb.OleDbConnection> instance is cast to an <xref:System.ICloneable> interface.\n  syntax:\n    content: object ICloneable.Clone ();\n    parameters: []\n    return:\n      type: System.Object\n      description: A new <xref href=\"System.Object\"></xref> that is a copy of this instance.\n  overload: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Data.Common.DbConnection\n  parent: System.Data.Common\n  isExternal: false\n  name: DbConnection\n  nameWithType: DbConnection\n  fullName: System.Data.Common.DbConnection\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Data.OleDb.OleDbException\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbException\n  nameWithType: OleDbException\n  fullName: System.Data.OleDb.OleDbException\n- uid: System.Data.OleDb.OleDbConnection.#ctor\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: OleDbConnection()\n  nameWithType: OleDbConnection.OleDbConnection()\n  fullName: OleDbConnection.OleDbConnection()\n- uid: System.Data.OleDb.OleDbConnection.#ctor(System.String)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: OleDbConnection(String)\n  nameWithType: OleDbConnection.OleDbConnection(String)\n  fullName: OleDbConnection.OleDbConnection(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction(System.Data.IsolationLevel)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: BeginDbTransaction(IsolationLevel)\n  nameWithType: OleDbConnection.BeginDbTransaction(IsolationLevel)\n  fullName: OleDbConnection.BeginDbTransaction(IsolationLevel)\n- uid: System.Data.Common.DbTransaction\n  parent: System.Data.Common\n  isExternal: false\n  name: DbTransaction\n  nameWithType: DbTransaction\n  fullName: System.Data.Common.DbTransaction\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Data.IsolationLevel\n- uid: System.Data.OleDb.OleDbConnection.BeginTransaction\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: BeginTransaction()\n  nameWithType: OleDbConnection.BeginTransaction()\n  fullName: OleDbConnection.BeginTransaction()\n- uid: System.Data.OleDb.OleDbTransaction\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbTransaction\n  nameWithType: OleDbTransaction\n  fullName: System.Data.OleDb.OleDbTransaction\n- uid: System.Data.OleDb.OleDbConnection.BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: BeginTransaction(IsolationLevel)\n  nameWithType: OleDbConnection.BeginTransaction(IsolationLevel)\n  fullName: OleDbConnection.BeginTransaction(IsolationLevel)\n- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase(System.String)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ChangeDatabase(String)\n  nameWithType: OleDbConnection.ChangeDatabase(String)\n  fullName: OleDbConnection.ChangeDatabase(String)\n- uid: System.Data.OleDb.OleDbConnection.Close\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Close()\n  nameWithType: OleDbConnection.Close()\n  fullName: OleDbConnection.Close()\n- uid: System.Data.OleDb.OleDbConnection.ConnectionString\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: OleDbConnection.ConnectionString\n  fullName: OleDbConnection.ConnectionString\n- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: OleDbConnection.ConnectionTimeout\n  fullName: OleDbConnection.ConnectionTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Data.OleDb.OleDbConnection.CreateCommand\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: CreateCommand()\n  nameWithType: OleDbConnection.CreateCommand()\n  fullName: OleDbConnection.CreateCommand()\n- uid: System.Data.OleDb.OleDbCommand\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbCommand\n  nameWithType: OleDbCommand\n  fullName: System.Data.OleDb.OleDbCommand\n- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: CreateDbCommand()\n  nameWithType: OleDbConnection.CreateDbCommand()\n  fullName: OleDbConnection.CreateDbCommand()\n- uid: System.Data.Common.DbCommand\n  parent: System.Data.Common\n  isExternal: false\n  name: DbCommand\n  nameWithType: DbCommand\n  fullName: System.Data.Common.DbCommand\n- uid: System.Data.OleDb.OleDbConnection.Database\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Database\n  nameWithType: OleDbConnection.Database\n  fullName: OleDbConnection.Database\n- uid: System.Data.OleDb.OleDbConnection.DataSource\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: DataSource\n  nameWithType: OleDbConnection.DataSource\n  fullName: OleDbConnection.DataSource\n- uid: System.Data.OleDb.OleDbConnection.Dispose(System.Boolean)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: OleDbConnection.Dispose(Boolean)\n  fullName: OleDbConnection.Dispose(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction(System.EnterpriseServices.ITransaction)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: EnlistDistributedTransaction(ITransaction)\n  nameWithType: OleDbConnection.EnlistDistributedTransaction(ITransaction)\n  fullName: OleDbConnection.EnlistDistributedTransaction(ITransaction)\n- uid: System.EnterpriseServices.ITransaction\n  parent: System.EnterpriseServices\n  isExternal: true\n  name: ITransaction\n  nameWithType: ITransaction\n  fullName: System.EnterpriseServices.ITransaction\n- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction(System.Transactions.Transaction)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: EnlistTransaction(Transaction)\n  nameWithType: OleDbConnection.EnlistTransaction(Transaction)\n  fullName: OleDbConnection.EnlistTransaction(Transaction)\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable(System.Guid,System.Object[])\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: GetOleDbSchemaTable(Guid, Object[])\n  nameWithType: OleDbConnection.GetOleDbSchemaTable(Guid, Object[])\n  fullName: OleDbConnection.GetOleDbSchemaTable(Guid, Object[])\n- uid: System.Data.DataTable\n  parent: System.Data\n  isExternal: false\n  name: DataTable\n  nameWithType: DataTable\n  fullName: System.Data.DataTable\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Object\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Object[]\n  parent: System\n  isExternal: false\n  name: Object[]\n  nameWithType: Object[]\n  fullName: System.Object[]\n  spec.csharp:\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OleDb.OleDbConnection.GetSchema\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: GetSchema()\n  nameWithType: OleDbConnection.GetSchema()\n  fullName: OleDbConnection.GetSchema()\n- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String)\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: GetSchema(String)\n  nameWithType: OleDbConnection.GetSchema(String)\n  fullName: OleDbConnection.GetSchema(String)\n- uid: System.Data.OleDb.OleDbConnection.GetSchema(System.String,System.String[])\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: GetSchema(String, String[])\n  nameWithType: OleDbConnection.GetSchema(String, String[])\n  fullName: OleDbConnection.GetSchema(String, String[])\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Data.OleDb.OleDbConnection.InfoMessage\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: InfoMessage\n  nameWithType: OleDbConnection.InfoMessage\n  fullName: OleDbConnection.InfoMessage\n- uid: System.Data.OleDb.OleDbInfoMessageEventHandler\n  parent: System.Data.OleDb\n  isExternal: false\n  name: OleDbInfoMessageEventHandler\n  nameWithType: OleDbInfoMessageEventHandler\n  fullName: System.Data.OleDb.OleDbInfoMessageEventHandler\n- uid: System.Data.OleDb.OleDbConnection.Open\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Open()\n  nameWithType: OleDbConnection.Open()\n  fullName: OleDbConnection.Open()\n- uid: System.Data.OleDb.OleDbConnection.Provider\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Provider\n  nameWithType: OleDbConnection.Provider\n  fullName: OleDbConnection.Provider\n- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ReleaseObjectPool()\n  nameWithType: OleDbConnection.ReleaseObjectPool()\n  fullName: OleDbConnection.ReleaseObjectPool()\n- uid: System.Data.OleDb.OleDbConnection.ResetState\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ResetState()\n  nameWithType: OleDbConnection.ResetState()\n  fullName: OleDbConnection.ResetState()\n- uid: System.Data.OleDb.OleDbConnection.ServerVersion\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ServerVersion\n  nameWithType: OleDbConnection.ServerVersion\n  fullName: OleDbConnection.ServerVersion\n- uid: System.Data.OleDb.OleDbConnection.State\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: State\n  nameWithType: OleDbConnection.State\n  fullName: OleDbConnection.State\n- uid: System.Data.ConnectionState\n  parent: System.Data\n  isExternal: false\n  name: ConnectionState\n  nameWithType: ConnectionState\n  fullName: System.Data.ConnectionState\n- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ICloneable.Clone()\n  nameWithType: OleDbConnection.ICloneable.Clone()\n  fullName: OleDbConnection.ICloneable.Clone()\n- uid: System.Data.OleDb.OleDbConnection.#ctor*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: OleDbConnection\n  nameWithType: OleDbConnection.OleDbConnection\n  fullName: OleDbConnection.OleDbConnection\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.BeginDbTransaction*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: BeginDbTransaction\n  nameWithType: OleDbConnection.BeginDbTransaction\n  fullName: OleDbConnection.BeginDbTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.BeginTransaction*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: BeginTransaction\n  nameWithType: OleDbConnection.BeginTransaction\n  fullName: OleDbConnection.BeginTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.ChangeDatabase*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ChangeDatabase\n  nameWithType: OleDbConnection.ChangeDatabase\n  fullName: OleDbConnection.ChangeDatabase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.Close*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Close\n  nameWithType: OleDbConnection.Close\n  fullName: OleDbConnection.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.ConnectionString*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ConnectionString\n  nameWithType: OleDbConnection.ConnectionString\n  fullName: OleDbConnection.ConnectionString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.ConnectionTimeout*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ConnectionTimeout\n  nameWithType: OleDbConnection.ConnectionTimeout\n  fullName: OleDbConnection.ConnectionTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.CreateCommand*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: CreateCommand\n  nameWithType: OleDbConnection.CreateCommand\n  fullName: OleDbConnection.CreateCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.CreateDbCommand*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: CreateDbCommand\n  nameWithType: OleDbConnection.CreateDbCommand\n  fullName: OleDbConnection.CreateDbCommand\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.Database*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Database\n  nameWithType: OleDbConnection.Database\n  fullName: OleDbConnection.Database\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.DataSource*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: DataSource\n  nameWithType: OleDbConnection.DataSource\n  fullName: OleDbConnection.DataSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.Dispose*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Dispose\n  nameWithType: OleDbConnection.Dispose\n  fullName: OleDbConnection.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.EnlistDistributedTransaction*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: EnlistDistributedTransaction\n  nameWithType: OleDbConnection.EnlistDistributedTransaction\n  fullName: OleDbConnection.EnlistDistributedTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.EnlistTransaction*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: EnlistTransaction\n  nameWithType: OleDbConnection.EnlistTransaction\n  fullName: OleDbConnection.EnlistTransaction\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.GetOleDbSchemaTable*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: GetOleDbSchemaTable\n  nameWithType: OleDbConnection.GetOleDbSchemaTable\n  fullName: OleDbConnection.GetOleDbSchemaTable\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.GetSchema*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: GetSchema\n  nameWithType: OleDbConnection.GetSchema\n  fullName: OleDbConnection.GetSchema\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.Open*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Open\n  nameWithType: OleDbConnection.Open\n  fullName: OleDbConnection.Open\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.Provider*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: Provider\n  nameWithType: OleDbConnection.Provider\n  fullName: OleDbConnection.Provider\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.ReleaseObjectPool*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ReleaseObjectPool\n  nameWithType: OleDbConnection.ReleaseObjectPool\n  fullName: OleDbConnection.ReleaseObjectPool\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.ResetState*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ResetState\n  nameWithType: OleDbConnection.ResetState\n  fullName: OleDbConnection.ResetState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.ServerVersion*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: ServerVersion\n  nameWithType: OleDbConnection.ServerVersion\n  fullName: OleDbConnection.ServerVersion\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.State*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: State\n  nameWithType: OleDbConnection.State\n  fullName: OleDbConnection.State\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Data.OleDb.OleDbConnection.System#ICloneable#Clone*\n  parent: System.Data.OleDb.OleDbConnection\n  isExternal: false\n  name: System.ICloneable.Clone\n  nameWithType: OleDbConnection.System.ICloneable.Clone\n  fullName: OleDbConnection.System.ICloneable.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.OleDb/OleDbConnection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Data.Common.DbConnection.DbProviderFactory\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: DbProviderFactory\n  nameWithType: DbConnection.DbProviderFactory\n  fullName: DbConnection.DbProviderFactory\n- uid: System.Data.Common.DbConnection.Dispose\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: Dispose()\n  nameWithType: DbConnection.Dispose()\n  fullName: DbConnection.Dispose()\n- uid: System.Data.Common.DbConnection.OnStateChange(System.Data.StateChangeEventArgs)\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: OnStateChange(StateChangeEventArgs)\n  nameWithType: DbConnection.OnStateChange(StateChangeEventArgs)\n  fullName: DbConnection.OnStateChange(StateChangeEventArgs)\n- uid: System.Data.Common.DbConnection.OpenAsync\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: OpenAsync()\n  nameWithType: DbConnection.OpenAsync()\n  fullName: DbConnection.OpenAsync()\n- uid: System.Data.Common.DbConnection.OpenAsync(System.Threading.CancellationToken)\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: OpenAsync(CancellationToken)\n  nameWithType: DbConnection.OpenAsync(CancellationToken)\n  fullName: DbConnection.OpenAsync(CancellationToken)\n- uid: System.Data.Common.DbConnection.StateChange\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: StateChange\n  nameWithType: DbConnection.StateChange\n  fullName: DbConnection.StateChange\n- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction(System.Data.IsolationLevel)\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: IDbConnection.BeginTransaction(IsolationLevel)\n  nameWithType: DbConnection.IDbConnection.BeginTransaction(IsolationLevel)\n  fullName: DbConnection.IDbConnection.BeginTransaction(IsolationLevel)\n- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#BeginTransaction\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: IDbConnection.BeginTransaction()\n  nameWithType: DbConnection.IDbConnection.BeginTransaction()\n  fullName: DbConnection.IDbConnection.BeginTransaction()\n- uid: System.Data.Common.DbConnection.System#Data#IDbConnection#CreateCommand\n  parent: System.Data.Common.DbConnection\n  isExternal: false\n  name: IDbConnection.CreateCommand()\n  nameWithType: DbConnection.IDbConnection.CreateCommand()\n  fullName: DbConnection.IDbConnection.CreateCommand()\n- uid: System.ICloneable\n  parent: System\n  isExternal: false\n  name: ICloneable\n  nameWithType: ICloneable\n  fullName: System.ICloneable\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}