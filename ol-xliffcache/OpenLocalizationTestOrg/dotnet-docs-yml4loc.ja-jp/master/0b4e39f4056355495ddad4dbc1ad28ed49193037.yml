### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SecurityToken
  commentId: T:System.IdentityModel.Tokens.SecurityToken
  id: SecurityToken
  children:
  - System.IdentityModel.Tokens.SecurityToken.#ctor
  - System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  - System.IdentityModel.Tokens.SecurityToken.Id
  - System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  - System.IdentityModel.Tokens.SecurityToken.ValidFrom
  - System.IdentityModel.Tokens.SecurityToken.ValidTo
  langs:
  - csharp
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
  type: Class
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Represents a base class used to implement all security tokens.
  remarks: "Use a security token to provide authentication credentials or to protect a message.  \n  \n A security token can be used to provide authentication credentials, cryptographic key material, or, in the case of a security token issued by a security token service (STS), a collection of claims about a subject. All security tokens derive from the <xref:System.IdentityModel.Tokens.SecurityToken> class.  \n  \n Beginning with .NET 4.5, Windows Identity Foundation (WIF) has been fully integrated into the .NET Framework and the classes exposed by WIF are the preferred method of handling security tokens in your code. In WIF, security tokens are serialized and deserialized to and from their XML representation and are validated by using classes derived from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> base class. Validating a token involves not just ensuring that the token is valid, but also returning a <xref:System.Security.Claims.ClaimsIdentity> instance from the token that can be used in making authentication and authorization decisions. The <xref:System.Security.Claims.ClaimsIdentity> is constructed by the token handlerâ€™s implementation of the <xref:System.IdentityModel.Tokens.SecurityTokenHandler.ValidateToken%2A> method from the claims contained in the token as well as from claims that are intrinsic to the token type itself.  \n  \n WIF ships with support for the following types of security tokens:  \n  \n-   <xref:System.IdentityModel.Tokens.Saml2SecurityToken>: Represents a security token that is based upon a SAML 2.0 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  \n  \n-   <xref:System.IdentityModel.Tokens.SamlSecurityToken>:  Represents a security token that is based upon a SAML 1.1 Assertion. This token type is typically issued by a security token service in response to a WS-Trust or WS-Federation security token request (RST).  \n  \n-   <xref:System.IdentityModel.Tokens.KerberosRequestorSecurityToken> and <xref:System.IdentityModel.Tokens.KerberosReceiverSecurityToken>: Represents a security token that is based upon a Kerberos ticket that is received or sent in a SOAP message  \n  \n-   <xref:System.IdentityModel.Tokens.RsaSecurityToken>: Represents a security token that is based upon key that is created using the RSA algorithm.  \n  \n-   <xref:System.IdentityModel.Tokens.SessionSecurityToken>: Represents a security token that contains information about a session.  \n  \n-   <xref:System.IdentityModel.Tokens.UserNameSecurityToken>: Represents a security token that is based on a username and password.  \n  \n-   <xref:System.IdentityModel.Tokens.WindowsSecurityToken>: Represents a security token that is based on the identity of a Windows domain or user account.  \n  \n-   <xref:System.IdentityModel.Tokens.X509SecurityToken>: Represents a security token that is based on an X.509 certificate.  \n  \n-   <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>: Represents a security token that is based upon an X.509 certificate that is mapped to a Windows domain user or local computer user account.  \n  \n Two other security token classes, <xref:System.IdentityModel.Tokens.GenericXmlSecurityToken> and <xref:System.IdentityModel.Tokens.EncryptedSecurityToken>, can be used to help handle general cases.  \n  \n Broadly speaking security tokens fall into three major categories:  \n  \n-   Tokens that carry or reference cryptographic key material. For example the <xref:System.IdentityModel.Tokens.RsaSecurityToken> and <xref:System.IdentityModel.Tokens.X509SecurityToken> types are often used for this purpose.  \n  \n-   Tokens that represent credentials for users that have already been authenticated. For example, the <xref:System.IdentityModel.Tokens.UserNameSecurityToken>, <xref:System.IdentityModel.Tokens.WindowsSecurityToken>, and, in the case of a user authenticated using a certificate, the <xref:System.IdentityModel.Tokens.X509SecurityToken> types.  \n  \n-   Tokens that are issued by a security token service (STS) in response to a security token request using either the WS-Trust or WS-Federation protocol. These are typically returned in a `wst:RequestSecurityTokenResponse` XML fragment. The <xref:System.IdentityModel.Tokens.Saml2SecurityToken> and <xref:System.IdentityModel.Tokens.SamlSecurityToken> types are most often used to represent these tokens.  \n  \n A special token type, the <xref:System.IdentityModel.Tokens.SessionSecurityToken>, contains information necessary to recreate a principal when using sessions in active or passive scenarios.  \n  \n To add functionality to existing token types you can derive from the specific type and its associated token handler to support any new elements that you add to the token. To add support for new token types, you can derive directly from the <xref:System.IdentityModel.Tokens.SecurityToken> class. When you do this, you will also need to create a token handler class by deriving from the <xref:System.IdentityModel.Tokens.SecurityTokenHandler> class. Depending on how your token is to be used, you may also need to create a custom token resolver by deriving from the <xref:System.IdentityModel.Tokens.IssuerTokenResolver> class as well as one or more custom key identifier clause types by deriving from the <xref:System.IdentityModel.Tokens.SecurityKeyIdentifierClause> class."
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the implementation of the `SimpleWebToken` class. This class extends <xref:System.IdentityModel.Tokens.SecurityToken>.  \n  \n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-csharp[WifCustomTokenST#2](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#2)]"
  syntax:
    content: public abstract class SecurityToken
  inheritance:
  - System.Object
  derivedClasses:
  - System.IdentityModel.Tokens.EncryptedSecurityToken
  - System.IdentityModel.Tokens.GenericXmlSecurityToken
  - System.IdentityModel.Tokens.KerberosRequestorSecurityToken
  - System.IdentityModel.Tokens.RsaSecurityToken
  - System.IdentityModel.Tokens.Saml2SecurityToken
  - System.IdentityModel.Tokens.SamlSecurityToken
  - System.IdentityModel.Tokens.SessionSecurityToken
  - System.IdentityModel.Tokens.UserNameSecurityToken
  - System.IdentityModel.Tokens.WindowsSecurityToken
  - System.IdentityModel.Tokens.X509SecurityToken
  - System.ServiceModel.Security.Tokens.BinarySecretSecurityToken
  - System.ServiceModel.Security.Tokens.SecurityContextSecurityToken
  - System.ServiceModel.Security.Tokens.SspiSecurityToken
  - System.ServiceModel.Security.Tokens.WrappedKeySecurityToken
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor
  commentId: M:System.IdentityModel.Tokens.SecurityToken.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: SecurityToken()
  nameWithType: SecurityToken.SecurityToken()
  fullName: SecurityToken.SecurityToken()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Called by constructors in derived classes to initialize the <xref href="System.IdentityModel.Tokens.SecurityToken"></xref> class.
  syntax:
    content: protected SecurityToken ();
    parameters: []
  overload: System.IdentityModel.Tokens.SecurityToken.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  commentId: M:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  id: CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: CanCreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>()
  fullName: SecurityToken.CanCreateKeyIdentifierClause<T>()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether this security token is capable of creating the specified key identifier.
  remarks: "Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.  \n  \n The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>."
  syntax:
    content: 'public virtual bool CanCreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    typeParameters:
    - id: T
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"></xref> that specifies the key identifier to create.
    return:
      type: System.Boolean
      description: '`true` when <code>T</code> is of type <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"></xref>; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  commentId: M:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  id: CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: CreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>()
  fullName: SecurityToken.CreateKeyIdentifierClause<T>()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Creates the specified key identifier clause.
  remarks: "Use the <xref:System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause%2A> method to determine whether a security token can create a specific key identifier. To create the key identifier call the <xref:System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause%2A> method.  \n  \n The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>. If a key identifier clause of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause> cannot be created, a <xref:System.NotSupportedException> is thrown."
  syntax:
    content: 'public virtual T CreateKeyIdentifierClause<T> () where T : System.IdentityModel.Tokens.SecurityKeyIdentifierClause;'
    parameters: []
    typeParameters:
    - id: T
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"></xref> that specifies the key identifier to create.
    return:
      type: T
      description: A <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"></xref> that is a key identifier clause for the security token.
  overload: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.Id
  commentId: P:System.IdentityModel.Tokens.SecurityToken.Id
  id: Id
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: Id
  nameWithType: SecurityToken.Id
  fullName: SecurityToken.Id
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a unique identifier of the security token.
  remarks: Typically, when a security token is serialized into XML, the `Id` attribute for the security token is set to the value of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.Id%2A> property.  \n  \n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \n[!code-csharp[WifCustomTokenST#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#4)]"
  syntax:
    content: public abstract string Id { get; }
    return:
      type: System.String
      description: The unique identifier of the security token.
  overload: System.IdentityModel.Tokens.SecurityToken.Id*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  commentId: M:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Returns a value that indicates whether the key identifier for this instance can be resolved to the specified key identifier.
  remarks: The default implementation supports key identifier clauses of type <xref:System.IdentityModel.Tokens.LocalIdKeyIdentifierClause>
  syntax:
    content: public virtual bool MatchesKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: ''
    return:
      type: System.Boolean
      description: '`true` if <code>skiClause</code> is a <xref href="System.IdentityModel.Tokens.SecurityKeyIdentifierClause"></xref> and it has the same unique identifier as the <xref href="System.IdentityModel.Tokens.SecurityToken.Id"></xref> property; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  commentId: M:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  id: ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the key for the specified key identifier clause.
  remarks: "The <xref:System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause%2A> method calls the <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> to first determine whether the specified key identifier clause is the same as this instance.  \n  \n The default implementation returns the first element of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> collection if the collection is not empty and if <xref:System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause%2A> returns `true`; otherwise, it returns `null`."
  syntax:
    content: public virtual System.IdentityModel.Tokens.SecurityKey ResolveKeyIdentifierClause (System.IdentityModel.Tokens.SecurityKeyIdentifierClause skiClause);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: ''
    return:
      type: System.IdentityModel.Tokens.SecurityKey
      description: A <xref href="System.IdentityModel.Tokens.SecurityKey"></xref> that represents the key.
  overload: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  commentId: P:System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  id: SecurityKeys
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: SecurityToken.SecurityKeys
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the cryptographic keys associated with the security token.
  remarks: Use the <xref:System.IdentityModel.Tokens.SamlSecurityToken.SecurityKeys%2A> property to set the cryptographic keys for this security token to protect tokens or a SOAP message. The keys can be used, among other things, to digitally sign or encrypt either tokens or SOAP messages.
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.SecurityKeys%2A> property.  \n  \n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \n[!code-csharp[WifCustomTokenST#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#5)]"
  syntax:
    content: public abstract System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey> SecurityKeys { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
      description: A <xref href="System.Collections.ObjectModel.ReadOnlyCollection`1"></xref> of type <xref href="System.IdentityModel.Tokens.SecurityKey"></xref> that contains the set of keys associated with the security token.
  overload: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  commentId: P:System.IdentityModel.Tokens.SecurityToken.ValidFrom
  id: ValidFrom
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: SecurityToken.ValidFrom
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the first instant in time at which this security token is valid.
  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> property.  \n  \n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \n[!code-csharp[WifCustomTokenST#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#6)]  \n[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]"
  syntax:
    content: public abstract DateTime ValidFrom { get; }
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> that represents the instant in time at which this security token is first valid.
  overload: System.IdentityModel.Tokens.SecurityToken.ValidFrom*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo
  commentId: P:System.IdentityModel.Tokens.SecurityToken.ValidTo
  id: ValidTo
  parent: System.IdentityModel.Tokens.SecurityToken
  langs:
  - csharp
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: SecurityToken.ValidTo
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the last instant in time at which this security token is valid.
  remarks: Use the <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties to determine the time period in which a <xref:System.IdentityModel.Tokens.SecurityToken> token is valid. The <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> and <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> properties represent the first and last instants in time in which the security token is valid, respectively.
  example:
  - "The code examples that are used in the <xref:System.IdentityModel.Tokens.SecurityToken> topics are taken from the `Custom Token` sample. This sample provides custom classes that enable processing of Simple Web Tokens (SWT). It includes an implementation of a `SimpleWebToken` class and a `SimpleWebTokenHandler` class, as well as other classes that support SWT tokens. For information about this sample and other samples available for WIF and about where to download them, see [WIF Code Sample Index](~/docs/framework/security/wif-code-sample-index.md). The following code shows the override of the <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> property.  \n  \n [!code-csharp[WifCustomTokenST#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtokenconstants.cs#1)]  \n[!code-csharp[WifCustomTokenST#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#3)]  \n[!code-csharp[WifCustomTokenST#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#7)]  \n[!code-csharp[WifCustomTokenST#8](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokenst/cs/simplewebtoken/simplewebtoken.cs#8)]"
  syntax:
    content: public abstract DateTime ValidTo { get; }
    return:
      type: System.DateTime
      description: A <xref href="System.DateTime"></xref> that represents the last instant in time at which this security token is valid.
  overload: System.IdentityModel.Tokens.SecurityToken.ValidTo*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityToken()
  nameWithType: SecurityToken.SecurityToken()
  fullName: SecurityToken.SecurityToken()
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>()
  fullName: SecurityToken.CanCreateKeyIdentifierClause<T>()
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>()
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>()
  fullName: SecurityToken.CreateKeyIdentifierClause<T>()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.IdentityModel.Tokens.SecurityToken.Id
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityToken.Id
  fullName: SecurityToken.Id
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: SecurityToken.MatchesKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  nameWithType: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
  fullName: SecurityToken.ResolveKeyIdentifierClause(SecurityKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: SecurityToken.SecurityKeys
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  nameWithType: ReadOnlyCollection<T>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityKey}
  parent: System.Collections.ObjectModel
  isExternal: false
  name: ReadOnlyCollection<SecurityKey>
  nameWithType: ReadOnlyCollection<SecurityKey>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Tokens.SecurityKey>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SecurityKey
    name: SecurityKey
    nameWithType: SecurityKey
    fullName: System.IdentityModel.Tokens.SecurityKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: SecurityToken.ValidFrom
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: SecurityToken.ValidTo
- uid: System.IdentityModel.Tokens.SecurityToken.#ctor*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken.SecurityToken
  fullName: SecurityToken.SecurityToken
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.CanCreateKeyIdentifierClause``1*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CanCreateKeyIdentifierClause<T>
  nameWithType: SecurityToken.CanCreateKeyIdentifierClause<T>
  fullName: SecurityToken.CanCreateKeyIdentifierClause<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.CreateKeyIdentifierClause``1*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: CreateKeyIdentifierClause<T>
  nameWithType: SecurityToken.CreateKeyIdentifierClause<T>
  fullName: SecurityToken.CreateKeyIdentifierClause<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.Id*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: Id
  nameWithType: SecurityToken.Id
  fullName: SecurityToken.Id
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.MatchesKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: MatchesKeyIdentifierClause
  nameWithType: SecurityToken.MatchesKeyIdentifierClause
  fullName: SecurityToken.MatchesKeyIdentifierClause
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.ResolveKeyIdentifierClause*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ResolveKeyIdentifierClause
  nameWithType: SecurityToken.ResolveKeyIdentifierClause
  fullName: SecurityToken.ResolveKeyIdentifierClause
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.SecurityKeys*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: SecurityKeys
  nameWithType: SecurityToken.SecurityKeys
  fullName: SecurityToken.SecurityKeys
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.ValidFrom*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidFrom
  nameWithType: SecurityToken.ValidFrom
  fullName: SecurityToken.ValidFrom
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.IdentityModel.Tokens.SecurityToken.ValidTo*
  parent: System.IdentityModel.Tokens.SecurityToken
  isExternal: false
  name: ValidTo
  nameWithType: SecurityToken.ValidTo
  fullName: SecurityToken.ValidTo
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/SecurityToken.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
