{"nodes":[{"content":"Resolves external XML resources named by a Uniform Resource Identifier (URI).","nodes":[{"pos":[0,77],"content":"Resolves external XML resources named by a Uniform Resource Identifier (URI).","nodes":[{"content":"Resolves external XML resources named by a Uniform Resource Identifier (URI).","pos":[0,77]}]}],"pos":[714,792],"yaml":true},{"content":"The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas. It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.  \n  \n <xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type. The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.  \n  \n The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:  \n  \n-   <xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=fullName> class. For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page.  \n  \n-   <xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access. For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.  \n  \n You can create and specify your own resolver. If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.  \n  \n You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method.  \n  \n If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName> property to specify the necessary credentials.  \n  \n## Supplying authentication credentials  \n The file that contains the XML data to read may have a restricted access policy. If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials. If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`.  \n  \n For example, assume that credentials are needed when requesting data from the web for authentication purposes. Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials. The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.  \n  \n [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]\n [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]\n [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  \n  \n You can supply different credentials for different URIs and add them to a cache. These credentials are used to check authentication for the different URIs regardless of the original source of the XML. The following example shows how to add credentials to a cache.  \n  \n [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]\n [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  \n  \n## Security considerations  \n Consider the following items when working with the <xref:System.Xml.XmlResolver> class.  \n  \n-   <xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials. You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.  \n  \n-   If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property. The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.  \n  \n-   If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method. Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.  \n  \n-   Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.","nodes":[{"pos":[0,308],"content":"The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas. It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.","nodes":[{"content":"The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas. It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.","pos":[0,308],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas.","pos":[0,145],"source":"The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas."},{"content":"It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.","pos":[146,308]}]}]},{"pos":[315,662],"content":"<xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type. The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.","nodes":[{"content":"<xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type. The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.","pos":[0,347],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type.","pos":[0,254],"source":"<xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type."},{"content":"The object that calls <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> has the task of interpreting the stream.","pos":[255,347],"source":" The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream."}]}]},{"pos":[669,782],"content":"The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Xml&gt;</ph> namespace includes two concrete implementations of the <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver&gt;</ph> class:","pos":[0,113],"source":"The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:"}]},{"pos":[792,1150],"content":"<xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=fullName> class. For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> is the default resolver for all classes in the <ph id=\"ph2\">&lt;xref:System.Xml&gt;</ph> namespace.","pos":[0,108],"source":"<xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace."},{"content":"It supports the <ph id=\"ph1\">`file://`</ph> and <ph id=\"ph2\">`http://`</ph> protocols and requests from the <ph id=\"ph3\">&lt;xref:System.Net.WebRequest?displayProperty=fullName&gt;</ph> class.","pos":[109,241],"source":" It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=fullName> class."},{"content":"For examples of extending the class to improve performance, see the <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> reference page.","pos":[242,358],"source":" For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page."}]},{"pos":[1160,1443],"content":"<xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access. For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.","nodes":[{"content":"<xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access. For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.","pos":[0,283],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> helps secure another <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver&gt;</ph> object by wrapping the object object and restricting the resources that it can access.","pos":[0,173],"source":"<xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Xml.XmlSecureResolver&gt;</ph> can prohibit access to specific Internet sites or zones.","pos":[174,283],"source":" For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones."}]}]},{"pos":[1450,1613],"content":"You can create and specify your own resolver. If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.","nodes":[{"content":"You can create and specify your own resolver. If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.","pos":[0,163],"nodes":[{"content":"You can create and specify your own resolver.","pos":[0,45]},{"content":"If you don't specify a resolver, the reader uses a default <ph id=\"ph1\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with no user credentials.","pos":[46,163],"source":" If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials."}]}]},{"pos":[1620,1884],"content":"You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method.","nodes":[{"content":"You specify the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> to use by setting the <ph id=\"ph2\">&lt;xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName&gt;</ph> property and passing the <ph id=\"ph3\">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object to the <ph id=\"ph4\">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> method.","pos":[0,264],"source":"You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method."}]},{"pos":[1891,2087],"content":"If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName> property to specify the necessary credentials.","nodes":[{"content":"If the resource is stored on a system that requires authentication, you use the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName&gt;</ph> property to specify the necessary credentials.","pos":[0,196],"source":"If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName> property to specify the necessary credentials."}]},{"pos":[2096,2132],"content":"Supplying authentication credentials","linkify":"Supplying authentication credentials","nodes":[{"content":"Supplying authentication credentials","pos":[0,36]}]},{"pos":[2136,2480],"content":"The file that contains the XML data to read may have a restricted access policy. If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials. If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`.","nodes":[{"content":"The file that contains the XML data to read may have a restricted access policy.","pos":[0,80]},{"content":"If authentication is required to access a network resource, use the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property to specify the necessary credentials.","pos":[81,240],"source":" If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property is not set, credentials are set to <ph id=\"ph2\">`null`</ph>.","pos":[241,344],"source":" If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`."}]},{"pos":[2487,2949],"content":"For example, assume that credentials are needed when requesting data from the web for authentication purposes. Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials. The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.","nodes":[{"content":"For example, assume that credentials are needed when requesting data from the web for authentication purposes. Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials. The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.","pos":[0,462],"nodes":[{"content":"For example, assume that credentials are needed when requesting data from the web for authentication purposes.","pos":[0,110]},{"content":"Unless the web virtual directory allows anonymous access, you must set the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.Credentials%2A&gt;</ph> property to supply credentials.","pos":[111,262],"source":" Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials."},{"content":"The following example creates an <ph id=\"ph1\">&lt;xref:System.Xml.XmlReader&gt;</ph> object that uses an <ph id=\"ph2\">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> with default credentials to access the http://localhost/bookstore/inventory.xml site.","pos":[263,462],"source":" The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site."}]}]},{"pos":[2956,3370],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>XmlReaderSettings.cctor#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>XmlReaderSettings.cctor#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>XmlReaderSettings.cctor#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]\n [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]\n [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]"},{"pos":[3377,3640],"content":"You can supply different credentials for different URIs and add them to a cache. These credentials are used to check authentication for the different URIs regardless of the original source of the XML. The following example shows how to add credentials to a cache.","nodes":[{"content":"You can supply different credentials for different URIs and add them to a cache. These credentials are used to check authentication for the different URIs regardless of the original source of the XML. The following example shows how to add credentials to a cache.","pos":[0,263],"nodes":[{"content":"You can supply different credentials for different URIs and add them to a cache.","pos":[0,80]},{"content":"These credentials are used to check authentication for the different URIs regardless of the original source of the XML.","pos":[81,200]},{"content":"The following example shows how to add credentials to a cache.","pos":[201,263]}]}]},{"pos":[3647,3922],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>XslCompiledTransform.Load#11<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>XslCompiledTransform.Load#11<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]\n [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]"},{"pos":[3931,3954],"content":"Security considerations","linkify":"Security considerations","nodes":[{"content":"Security considerations","pos":[0,23]}]},{"pos":[3958,4045],"content":"Consider the following items when working with the <xref:System.Xml.XmlResolver> class.","nodes":[{"content":"Consider the following items when working with the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> class.","pos":[0,87],"source":"Consider the following items when working with the <xref:System.Xml.XmlResolver> class."}]},{"pos":[4055,4313],"content":"<xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials. You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.","nodes":[{"content":"<xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials. You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.","pos":[0,258],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects can contain sensitive information such as user credentials.","pos":[0,97],"source":"<xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials."},{"content":"You should be careful when caching <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects and should not pass the <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver&gt;</ph> object to an untrusted component.","pos":[98,258],"source":" You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component."}]}]},{"pos":[4323,4619],"content":"If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property. The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.","nodes":[{"content":"If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property. The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.","pos":[0,296],"nodes":[{"content":"If you are designing a class property that uses the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> class, the property should be defined as a write-only property.","pos":[0,145],"source":"If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property."},{"content":"The property can be used to specify the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> to use, but it cannot be used to return an <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver&gt;</ph> object.","pos":[146,296],"source":" The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object."}]}]},{"pos":[4629,5112],"content":"If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method. Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.","nodes":[{"content":"If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method. Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.","pos":[0,483],"nodes":[{"content":"If your application accepts <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> objects from untrusted code, you cannot assume that the URI passed into the <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method will be the same as that returned by the <ph id=\"ph3\">&lt;xref:System.Xml.XmlResolver.ResolveUri%2A&gt;</ph> method.","pos":[0,276],"source":"If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method."},{"content":"Classes derived from the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> class can override the <ph id=\"ph2\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method and return data that is different than what was contained in the original URI.","pos":[277,483],"source":" Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI."}]}]},{"pos":[5122,5513],"content":"Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.","nodes":[{"content":"Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.","pos":[0,391],"nodes":[{"content":"Your application can mitigate memory denial of service threats to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.","pos":[0,231],"source":"Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read."},{"content":"This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method.","pos":[232,391],"source":" This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method."}]}]}],"pos":[803,6358],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Xml.XmlResolver\"></xref> class.","nodes":[{"pos":[0,84],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Xml.XmlResolver\"></xref> class."}],"pos":[8444,8529],"yaml":true},{"content":"This constructor is called by derived class constructors to initialize state in this type.","nodes":[{"pos":[0,90],"content":"This constructor is called by derived class constructors to initialize state in this type.","nodes":[{"content":"This constructor is called by derived class constructors to initialize state in this type.","pos":[0,90]}]}],"pos":[8540,8631],"yaml":true,"extradata":"MT"},{"content":"When overridden in a derived class, sets the credentials used to authenticate web requests.","nodes":[{"pos":[0,91],"content":"When overridden in a derived class, sets the credentials used to authenticate web requests.","nodes":[{"content":"When overridden in a derived class, sets the credentials used to authenticate web requests.","pos":[0,91]}]}],"pos":[9858,9950],"yaml":true},{"content":"If the virtual directory does not require authentication, this property doesn't have to be set. Otherwise, the credentials of the user must be supplied.  \n  \n The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object.  \n  \n```  \nNetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);  \nXmlUrlResolver resolver = new XmlUrlResolver();  \nresolver.Credentials = nc;  \n```  \n  \n You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.  \n  \n```  \nNetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   \nCredentialCache myCache = new CredentialCache();   \nmyCache.Add(new Uri(\"http://www.contoso.com/\"), \"Basic\", myCred);   \nmyCache.Add(new Uri(\"http://app.contoso.com/\"), \"Basic\", myCred);  \nXmlUrlResolver resolver = new XmlUrlResolver();  \nresolver.Credentials = myCache;  \n```","nodes":[{"pos":[0,152],"content":"If the virtual directory does not require authentication, this property doesn't have to be set. Otherwise, the credentials of the user must be supplied.","nodes":[{"content":"If the virtual directory does not require authentication, this property doesn't have to be set. Otherwise, the credentials of the user must be supplied.","pos":[0,152],"nodes":[{"content":"If the virtual directory does not require authentication, this property doesn't have to be set.","pos":[0,95]},{"content":"Otherwise, the credentials of the user must be supplied.","pos":[96,152]}]}]},{"pos":[159,242],"content":"The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object.","nodes":[{"content":"The following C# code sets credentials on the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver&gt;</ph> object.","pos":[0,83],"source":"The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object."}]},{"pos":[431,637],"content":"You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.","nodes":[{"content":"You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.","pos":[0,206],"nodes":[{"content":"You can associate different credentials with different URIs and add them to a cache.","pos":[0,84]},{"content":"You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.","pos":[85,206]}]}]}],"pos":[9961,11009],"yaml":true,"extradata":"MT"},{"content":"The credentials to be used to authenticate web requests. If this property is not set, the value defaults to `null`; that is, the `XmlResolver` has no user credentials.","nodes":[{"pos":[0,167],"content":"The credentials to be used to authenticate web requests. If this property is not set, the value defaults to `null`; that is, the `XmlResolver` has no user credentials.","nodes":[{"content":"The credentials to be used to authenticate web requests.","pos":[0,56]},{"content":"If this property is not set, the value defaults to <ph id=\"ph1\">`null`</ph>; that is, the <ph id=\"ph2\">`XmlResolver`</ph> has no user credentials.","pos":[57,167],"source":" If this property is not set, the value defaults to `null`; that is, the `XmlResolver` has no user credentials."}]}],"pos":[11291,11459],"yaml":true},{"content":"When overridden in a derived class, maps a URI to an object that contains the actual resource.","nodes":[{"pos":[0,94],"content":"When overridden in a derived class, maps a URI to an object that contains the actual resource.","nodes":[{"content":"When overridden in a derived class, maps a URI to an object that contains the actual resource.","pos":[0,94]}]}],"pos":[12781,12876],"yaml":true},{"content":"This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents. The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=fullName>.  \n  \n For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.  \n  \n> [!IMPORTANT]\n>  Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.","nodes":[{"pos":[0,273],"content":"This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents. The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=fullName>.","nodes":[{"content":"This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents. The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=fullName>.","pos":[0,273],"nodes":[{"content":"This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents.","pos":[0,132]},{"content":"The type of object returned is negotiable; however, the implementation must always support <ph id=\"ph1\">&lt;xref:System.IO.Stream?displayProperty=fullName&gt;</ph>.","pos":[133,273],"source":" The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=fullName>."}]}]},{"pos":[280,377],"content":"For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.","nodes":[{"content":"For the asynchronous version of this method, see <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.GetEntityAsync%2A&gt;</ph>.","pos":[0,97],"source":"For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>."}]},{"pos":[385,792],"content":"[!IMPORTANT]\n Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.","leadings":["","> "],"nodes":[{"content":" Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.","pos":[13,405],"nodes":[{"content":"Your application can mitigate memory denial of service threats to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method by implementing an <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.ComTypes.IStream&gt;</ph> that limits the number of bytes read.","pos":[1,232],"source":" Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read."},{"content":"This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph> method.","pos":[233,392],"source":" This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method."}]}]}],"pos":[12887,13687],"yaml":true,"extradata":"MT"},{"content":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.","nodes":[{"pos":[0,103],"content":"The URI returned from <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>."}],"pos":[14002,14106],"yaml":true},{"content":"Currently not used.","nodes":[{"pos":[0,19],"content":"Currently not used.","nodes":[{"content":"Currently not used.","pos":[0,19]}]}],"pos":[14166,14186],"yaml":true},{"content":"The type of object to return. The current version only returns System.IO.Stream objects.","nodes":[{"pos":[0,88],"content":"The type of object to return. The current version only returns System.IO.Stream objects.","nodes":[{"content":"The type of object to return. The current version only returns System.IO.Stream objects.","pos":[0,88],"nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The current version only returns System.IO.Stream objects.","pos":[30,88]}]}]}],"pos":[14256,14345],"yaml":true},{"content":"A stream object or `null` if a type other than stream is specified.","nodes":[{"pos":[0,67],"content":"A stream object or <ph id=\"ph1\">`null`</ph> if a type other than stream is specified.","source":"A stream object or `null` if a type other than stream is specified."}],"pos":[14402,14470],"yaml":true},{"content":"<code>ofObjectToReturn</code> is not a `Stream` type.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">&lt;code&gt;ofObjectToReturn&lt;/code&gt;</ph> is not a <ph id=\"ph2\">`Stream`</ph> type.","source":"<code>ofObjectToReturn</code> is not a `Stream` type."}],"pos":[14622,14676],"yaml":true},{"content":"The specified URI is not an absolute URI.","nodes":[{"pos":[0,41],"content":"The specified URI is not an absolute URI.","nodes":[{"content":"The specified URI is not an absolute URI.","pos":[0,41]}]}],"pos":[14772,14814],"yaml":true},{"content":"<code>absoluteUri</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;absoluteUri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>absoluteUri</code> is `null`."}],"pos":[14916,14952],"yaml":true},{"content":"There is a runtime error (for example, an interrupted server connection).","nodes":[{"pos":[0,73],"content":"There is a runtime error (for example, an interrupted server connection).","nodes":[{"content":"There is a runtime error (for example, an interrupted server connection).","pos":[0,73]}]}],"pos":[15030,15104],"yaml":true},{"content":"Asynchronously maps a URI to an object that contains the actual resource.","nodes":[{"pos":[0,73],"content":"Asynchronously maps a URI to an object that contains the actual resource.","nodes":[{"content":"Asynchronously maps a URI to an object that contains the actual resource.","pos":[0,73]}]}],"pos":[16391,16465],"yaml":true},{"content":"This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.","nodes":[{"pos":[0,206],"content":"This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.","nodes":[{"content":"This is the asynchronous version of <ph id=\"ph1\">&lt;xref:System.Xml.XmlResolver.GetEntity%2A&gt;</ph>, with the same functionality.","pos":[0,108],"source":"This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality."},{"content":"To use this method, you must set the <ph id=\"ph1\">&lt;xref:System.Xml.XmlReaderSettings.Async%2A&gt;</ph> flag to <ph id=\"ph2\">`true`</ph>.","pos":[109,206],"source":" To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`."}]}],"pos":[16476,16683],"yaml":true,"extradata":"MT"},{"content":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.","nodes":[{"pos":[0,103],"content":"The URI returned from <ph id=\"ph1\">&lt;xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"&gt;&lt;/xref&gt;</ph>.","source":"The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>."}],"pos":[16907,17011],"yaml":true},{"content":"Currently not used.","nodes":[{"pos":[0,19],"content":"Currently not used.","nodes":[{"content":"Currently not used.","pos":[0,19]}]}],"pos":[17071,17091],"yaml":true},{"content":"The type of object to return. The current version only returns <xref href=\"System.IO.Stream\"></xref> objects.","nodes":[{"pos":[0,109],"content":"The type of object to return. The current version only returns <xref href=\"System.IO.Stream\"></xref> objects.","nodes":[{"content":"The type of object to return.","pos":[0,29]},{"content":"The current version only returns <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> objects.","pos":[30,109],"source":" The current version only returns <xref href=\"System.IO.Stream\"></xref> objects."}]}],"pos":[17161,17271],"yaml":true},{"content":"A stream object or `null` if a type other than stream is specified.","nodes":[{"pos":[0,67],"content":"A stream object or <ph id=\"ph1\">`null`</ph> if a type other than stream is specified.","source":"A stream object or `null` if a type other than stream is specified."}],"pos":[17357,17425],"yaml":true},{"content":"When overridden in a derived class, resolves the absolute URI from the base and relative URIs.","nodes":[{"pos":[0,94],"content":"When overridden in a derived class, resolves the absolute URI from the base and relative URIs.","nodes":[{"content":"When overridden in a derived class, resolves the absolute URI from the base and relative URIs.","pos":[0,94]}]}],"pos":[18702,18797],"yaml":true},{"content":"The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.","nodes":[{"pos":[0,116],"content":"The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.","nodes":[{"content":"The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.","pos":[0,116]}]}],"pos":[18808,18925],"yaml":true,"extradata":"MT"},{"content":"The base URI used to resolve the relative URI.","nodes":[{"pos":[0,46],"content":"The base URI used to resolve the relative URI.","nodes":[{"content":"The base URI used to resolve the relative URI.","pos":[0,46]}]}],"pos":[19217,19264],"yaml":true},{"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.","nodes":[{"pos":[0,213],"content":"The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.","nodes":[{"content":"The URI to resolve.","pos":[0,19]},{"content":"The URI can be absolute or relative.","pos":[20,56]},{"content":"If absolute, this value effectively replaces the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> value.","pos":[57,133],"source":" If absolute, this value effectively replaces the <code>baseUri</code> value."},{"content":"If relative, it combines with the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">baseUri</ph><ept id=\"p1\">&lt;/code&gt;</ept> to make an absolute URI.","pos":[134,213],"source":" If relative, it combines with the <code>baseUri</code> to make an absolute URI."}]}],"pos":[19331,19545],"yaml":true},{"content":"The absolute URI or `null` if the relative URI cannot be resolved.","nodes":[{"pos":[0,66],"content":"The absolute URI or <ph id=\"ph1\">`null`</ph> if the relative URI cannot be resolved.","source":"The absolute URI or `null` if the relative URI cannot be resolved."}],"pos":[19599,19666],"yaml":true},{"content":"<code>relativeUri</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;relativeUri&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>relativeUri</code> is `null`."}],"pos":[19821,19857],"yaml":true},{"content":"Enables the resolver to return types other than <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,86],"content":"Enables the resolver to return types other than <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Enables the resolver to return types other than <xref href=\"System.IO.Stream\"></xref>."}],"pos":[21066,21153],"yaml":true},{"content":"The URI.","nodes":[{"pos":[0,8],"content":"The URI.","nodes":[{"content":"The URI.","pos":[0,8]}]}],"pos":[21319,21328],"yaml":true},{"content":"The type to return.","nodes":[{"pos":[0,19],"content":"The type to return.","nodes":[{"content":"The type to return.","pos":[0,19]}]}],"pos":[21386,21406],"yaml":true},{"content":"`true` if the <code>type</code> is supported; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept> is supported; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>type</code> is supported; otherwise, `false`."}],"pos":[21464,21532],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.XmlResolver\n  commentId: T:System.Xml.XmlResolver\n  id: XmlResolver\n  children:\n  - System.Xml.XmlResolver.#ctor\n  - System.Xml.XmlResolver.Credentials\n  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)\n  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\n  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  langs:\n  - csharp\n  name: XmlResolver\n  nameWithType: XmlResolver\n  fullName: System.Xml.XmlResolver\n  type: Class\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Resolves external XML resources named by a Uniform Resource Identifier (URI).\n  remarks: \"The <xref:System.Xml.XmlResolver> type is used to resolve external XML resources, such as entities, document type definitions (DTDs), or schemas. It is also used to process include and import elements found in Extensible Stylesheet Language (XSL) style sheets or XML Schema definition language (XSD) schemas.  \\n  \\n <xref:System.Xml.XmlResolver> handles all aspects of negotiating the connection to the resources, including handling security credentials, opening the connection to the data source, and returning the resource in the form of a stream or other object type. The object that calls <xref:System.Xml.XmlResolver> has the task of interpreting the stream.  \\n  \\n The <xref:System.Xml> namespace includes two concrete implementations of the <xref:System.Xml.XmlResolver> class:  \\n  \\n-   <xref:System.Xml.XmlUrlResolver> is the default resolver for all classes in the <xref:System.Xml> namespace. It supports the `file://` and `http://` protocols and requests from the <xref:System.Net.WebRequest?displayProperty=fullName> class. For examples of extending the class to improve performance, see the <xref:System.Xml.XmlUrlResolver> reference page.  \\n  \\n-   <xref:System.Xml.XmlSecureResolver> helps secure another <xref:System.Xml.XmlResolver> object by wrapping the object object and restricting the resources that it can access. For example, the <xref:System.Xml.XmlSecureResolver> can prohibit access to specific Internet sites or zones.  \\n  \\n You can create and specify your own resolver. If you don't specify a resolver, the reader uses a default <xref:System.Xml.XmlUrlResolver> with no user credentials.  \\n  \\n You specify the <xref:System.Xml.XmlResolver> to use by setting the <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName> property and passing the <xref:System.Xml.XmlReaderSettings> object to the <xref:System.Xml.XmlReader.Create%2A> method.  \\n  \\n If the resource is stored on a system that requires authentication, you use the <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName> property to specify the necessary credentials.  \\n  \\n## Supplying authentication credentials  \\n The file that contains the XML data to read may have a restricted access policy. If authentication is required to access a network resource, use the <xref:System.Xml.XmlResolver.Credentials%2A> property to specify the necessary credentials. If the <xref:System.Xml.XmlResolver.Credentials%2A> property is not set, credentials are set to `null`.  \\n  \\n For example, assume that credentials are needed when requesting data from the web for authentication purposes. Unless the web virtual directory allows anonymous access, you must set the <xref:System.Xml.XmlResolver.Credentials%2A> property to supply credentials. The following example creates an <xref:System.Xml.XmlReader> object that uses an <xref:System.Xml.XmlUrlResolver> with default credentials to access the http://localhost/bookstore/inventory.xml site.  \\n  \\n [!code-cpp[XmlReaderSettings.cctor#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlReaderSettings.cctor/CPP/XmlReaderSettings.cctor.cpp#2)]\\n [!code-csharp[XmlReaderSettings.cctor#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlReaderSettings.cctor/CS/factory_rdr_cctor2.cs#2)]\\n [!code-vb[XmlReaderSettings.cctor#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReaderSettings.cctor/VB/factory_rdr_cctor2.vb#2)]  \\n  \\n You can supply different credentials for different URIs and add them to a cache. These credentials are used to check authentication for the different URIs regardless of the original source of the XML. The following example shows how to add credentials to a cache.  \\n  \\n [!code-csharp[XslCompiledTransform.Load#11](~/samples/snippets/csharp/VS_Snippets_Data/XslCompiledTransform.Load/CS/Xslt_Load_v2.cs#11)]\\n [!code-vb[XslCompiledTransform.Load#11](~/samples/snippets/visualbasic/VS_Snippets_Data/XslCompiledTransform.Load/VB/Xslt_Load_v2.vb#11)]  \\n  \\n## Security considerations  \\n Consider the following items when working with the <xref:System.Xml.XmlResolver> class.  \\n  \\n-   <xref:System.Xml.XmlResolver> objects can contain sensitive information such as user credentials. You should be careful when caching <xref:System.Xml.XmlResolver> objects and should not pass the <xref:System.Xml.XmlResolver> object to an untrusted component.  \\n  \\n-   If you are designing a class property that uses the <xref:System.Xml.XmlResolver> class, the property should be defined as a write-only property. The property can be used to specify the <xref:System.Xml.XmlResolver> to use, but it cannot be used to return an <xref:System.Xml.XmlResolver> object.  \\n  \\n-   If your application accepts <xref:System.Xml.XmlResolver> objects from untrusted code, you cannot assume that the URI passed into the <xref:System.Xml.XmlResolver.GetEntity%2A> method will be the same as that returned by the <xref:System.Xml.XmlResolver.ResolveUri%2A> method. Classes derived from the <xref:System.Xml.XmlResolver> class can override the <xref:System.Xml.XmlResolver.GetEntity%2A> method and return data that is different than what was contained in the original URI.  \\n  \\n-   Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.\"\n  example:\n  - \"The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \\n  \\n [!code-csharp[XmlResolver_ex#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlResolver_ex/CS/XmlResolver_ex.cs#1)]\\n [!code-vb[XmlResolver_ex#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlResolver_ex/VB/XmlResolver_ex.vb#1)]\"\n  syntax:\n    content: public abstract class XmlResolver\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Xml.XmlSecureResolver\n  - System.Xml.XmlUrlResolver\n  - System.Xml.XmlXapResolver\n  - System.Xml.Resolvers.XmlPreloadedResolver\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlResolver.#ctor\n  commentId: M:System.Xml.XmlResolver.#ctor\n  id: '#ctor'\n  parent: System.Xml.XmlResolver\n  langs:\n  - csharp\n  name: XmlResolver()\n  nameWithType: XmlResolver.XmlResolver()\n  fullName: XmlResolver.XmlResolver()\n  type: Constructor\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Initializes a new instance of the <xref href=\"System.Xml.XmlResolver\"></xref> class.\n  remarks: This constructor is called by derived class constructors to initialize state in this type.\n  syntax:\n    content: protected XmlResolver ();\n    parameters: []\n  overload: System.Xml.XmlResolver.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlResolver.Credentials\n  commentId: P:System.Xml.XmlResolver.Credentials\n  id: Credentials\n  parent: System.Xml.XmlResolver\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: XmlResolver.Credentials\n  fullName: XmlResolver.Credentials\n  type: Property\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: When overridden in a derived class, sets the credentials used to authenticate web requests.\n  remarks: \"If the virtual directory does not require authentication, this property doesn't have to be set. Otherwise, the credentials of the user must be supplied.  \\n  \\n The following C# code sets credentials on the <xref:System.Xml.XmlResolver> object.  \\n  \\n```  \\nNetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);  \\nXmlUrlResolver resolver = new XmlUrlResolver();  \\nresolver.Credentials = nc;  \\n```  \\n  \\n You can associate different credentials with different URIs and add them to a cache. You can then use the credentials to check authentication for different URIs regardless of the original source of the XML.  \\n  \\n```  \\nNetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);   \\nCredentialCache myCache = new CredentialCache();   \\nmyCache.Add(new Uri(\\\"http://www.contoso.com/\\\"), \\\"Basic\\\", myCred);   \\nmyCache.Add(new Uri(\\\"http://app.contoso.com/\\\"), \\\"Basic\\\", myCred);  \\nXmlUrlResolver resolver = new XmlUrlResolver();  \\nresolver.Credentials = myCache;  \\n```\"\n  example:\n  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.\n  syntax:\n    content: public virtual System.Net.ICredentials Credentials { set; }\n    return:\n      type: System.Net.ICredentials\n      description: The credentials to be used to authenticate web requests. If this property is not set, the value defaults to `null`; that is, the `XmlResolver` has no user credentials.\n  overload: System.Xml.XmlResolver.Credentials*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)\n  commentId: M:System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)\n  id: GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlResolver\n  langs:\n  - csharp\n  name: GetEntity(Uri, String, Type)\n  nameWithType: XmlResolver.GetEntity(Uri, String, Type)\n  fullName: XmlResolver.GetEntity(Uri, String, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: When overridden in a derived class, maps a URI to an object that contains the actual resource.\n  remarks: \"This method is used when the caller wants to map a given URI into the object containing the actual resource that the URI represents. The type of object returned is negotiable; however, the implementation must always support <xref:System.IO.Stream?displayProperty=fullName>.  \\n  \\n For the asynchronous version of this method, see <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.  \\n  \\n> [!IMPORTANT]\\n>  Your application can mitigate memory denial of service threats to the <xref:System.Xml.XmlResolver.GetEntity%2A> method by implementing an <xref:System.Runtime.InteropServices.ComTypes.IStream> that limits the number of bytes read. This helps guard against situations where malicious code attempts to pass an infinite stream of bytes to the <xref:System.Xml.XmlResolver.GetEntity%2A> method.\"\n  example:\n  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.\n  syntax:\n    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.\n    - id: role\n      type: System.String\n      description: Currently not used.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The current version only returns System.IO.Stream objects.\n    return:\n      type: System.Object\n      description: A stream object or `null` if a type other than stream is specified.\n  overload: System.Xml.XmlResolver.GetEntity*\n  exceptions:\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>ofObjectToReturn</code> is not a `Stream` type.\n  - type: System.UriFormatException\n    commentId: T:System.UriFormatException\n    description: The specified URI is not an absolute URI.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>absoluteUri</code> is `null`.\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: There is a runtime error (for example, an interrupted server connection).\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  commentId: M:System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  id: GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlResolver\n  langs:\n  - csharp\n  name: GetEntityAsync(Uri, String, Type)\n  nameWithType: XmlResolver.GetEntityAsync(Uri, String, Type)\n  fullName: XmlResolver.GetEntityAsync(Uri, String, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Asynchronously maps a URI to an object that contains the actual resource.\n  remarks: This is the asynchronous version of <xref:System.Xml.XmlResolver.GetEntity%2A>, with the same functionality. To use this method, you must set the <xref:System.Xml.XmlReaderSettings.Async%2A> flag to `true`.\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI returned from <xref href=\"System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\"></xref>.\n    - id: role\n      type: System.String\n      description: Currently not used.\n    - id: ofObjectToReturn\n      type: System.Type\n      description: The type of object to return. The current version only returns <xref href=\"System.IO.Stream\"></xref> objects.\n    return:\n      type: System.Threading.Tasks.Task{System.Object}\n      description: A stream object or `null` if a type other than stream is specified.\n  overload: System.Xml.XmlResolver.GetEntityAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\n  commentId: M:System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\n  id: ResolveUri(System.Uri,System.String)\n  parent: System.Xml.XmlResolver\n  langs:\n  - csharp\n  name: ResolveUri(Uri, String)\n  nameWithType: XmlResolver.ResolveUri(Uri, String)\n  fullName: XmlResolver.ResolveUri(Uri, String)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: When overridden in a derived class, resolves the absolute URI from the base and relative URIs.\n  remarks: The absolute URI may be used as the base URI for any subsequent requests for entities that are relative to this URI.\n  example:\n  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.\n  syntax:\n    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);\n    parameters:\n    - id: baseUri\n      type: System.Uri\n      description: The base URI used to resolve the relative URI.\n    - id: relativeUri\n      type: System.String\n      description: The URI to resolve. The URI can be absolute or relative. If absolute, this value effectively replaces the <code>baseUri</code> value. If relative, it combines with the <code>baseUri</code> to make an absolute URI.\n    return:\n      type: System.Uri\n      description: The absolute URI or `null` if the relative URI cannot be resolved.\n  overload: System.Xml.XmlResolver.ResolveUri*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>relativeUri</code> is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  commentId: M:System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  id: SupportsType(System.Uri,System.Type)\n  parent: System.Xml.XmlResolver\n  langs:\n  - csharp\n  name: SupportsType(Uri, Type)\n  nameWithType: XmlResolver.SupportsType(Uri, Type)\n  fullName: XmlResolver.SupportsType(Uri, Type)\n  type: Method\n  assemblies:\n  - System.Xml\n  - netstandard\n  - System.Xml.ReaderWriter\n  namespace: System.Xml\n  summary: Enables the resolver to return types other than <xref href=\"System.IO.Stream\"></xref>.\n  syntax:\n    content: public virtual bool SupportsType (Uri absoluteUri, Type type);\n    parameters:\n    - id: absoluteUri\n      type: System.Uri\n      description: The URI.\n    - id: type\n      type: System.Type\n      description: The type to return.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>type</code> is supported; otherwise, `false`.'\n  overload: System.Xml.XmlResolver.SupportsType*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Xml.XmlException\n  parent: System.Xml\n  isExternal: false\n  name: XmlException\n  nameWithType: XmlException\n  fullName: System.Xml.XmlException\n- uid: System.UriFormatException\n  parent: System\n  isExternal: false\n  name: UriFormatException\n  nameWithType: UriFormatException\n  fullName: System.UriFormatException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Xml.XmlResolver.#ctor\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: XmlResolver()\n  nameWithType: XmlResolver.XmlResolver()\n  fullName: XmlResolver.XmlResolver()\n- uid: System.Xml.XmlResolver.Credentials\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlResolver.Credentials\n  fullName: XmlResolver.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: GetEntity(Uri, String, Type)\n  nameWithType: XmlResolver.GetEntity(Uri, String, Type)\n  fullName: XmlResolver.GetEntity(Uri, String, Type)\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: GetEntityAsync(Uri, String, Type)\n  nameWithType: XmlResolver.GetEntityAsync(Uri, String, Type)\n  fullName: XmlResolver.GetEntityAsync(Uri, String, Type)\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Object}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<Object>\n  nameWithType: Task<Object>\n  fullName: System.Threading.Tasks.Task<System.Object>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: ResolveUri(Uri, String)\n  nameWithType: XmlResolver.ResolveUri(Uri, String)\n  fullName: XmlResolver.ResolveUri(Uri, String)\n- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: SupportsType(Uri, Type)\n  nameWithType: XmlResolver.SupportsType(Uri, Type)\n  fullName: XmlResolver.SupportsType(Uri, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.XmlResolver.#ctor*\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: XmlResolver\n  nameWithType: XmlResolver.XmlResolver\n  fullName: XmlResolver.XmlResolver\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n- uid: System.Xml.XmlResolver.Credentials*\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: Credentials\n  nameWithType: XmlResolver.Credentials\n  fullName: XmlResolver.Credentials\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n- uid: System.Xml.XmlResolver.GetEntity*\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: GetEntity\n  nameWithType: XmlResolver.GetEntity\n  fullName: XmlResolver.GetEntity\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n- uid: System.Xml.XmlResolver.GetEntityAsync*\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: GetEntityAsync\n  nameWithType: XmlResolver.GetEntityAsync\n  fullName: XmlResolver.GetEntityAsync\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n- uid: System.Xml.XmlResolver.ResolveUri*\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: ResolveUri\n  nameWithType: XmlResolver.ResolveUri\n  fullName: XmlResolver.ResolveUri\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n- uid: System.Xml.XmlResolver.SupportsType*\n  parent: System.Xml.XmlResolver\n  isExternal: false\n  name: SupportsType\n  nameWithType: XmlResolver.SupportsType\n  fullName: XmlResolver.SupportsType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlResolver.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}