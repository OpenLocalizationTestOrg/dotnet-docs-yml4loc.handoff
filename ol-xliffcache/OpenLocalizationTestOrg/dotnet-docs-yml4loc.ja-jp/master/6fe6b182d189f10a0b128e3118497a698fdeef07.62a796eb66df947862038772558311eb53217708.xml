{"nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm. This class cannot be inherited.","nodes":[{"pos":[0,214],"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm. This class cannot be inherited.","nodes":[{"content":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) algorithm.","pos":[0,182],"source":"Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm."},{"content":"This class cannot be inherited.","pos":[183,214]}]}],"pos":[1073,1288],"yaml":true},{"content":"This algorithm supports a key length of 64 bits.","nodes":[{"pos":[0,48],"content":"This algorithm supports a key length of 64 bits.","nodes":[{"content":"This algorithm supports a key length of 64 bits.","pos":[0,48]}]}],"pos":[1299,1348],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"></xref> class."}],"pos":[6254,6370],"yaml":true},{"content":"The Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) cryptographic service provider is not available.","nodes":[{"pos":[0,133],"content":"The Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) cryptographic service provider is not available.","source":"The Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) cryptographic service provider is not available."}],"pos":[7987,8121],"yaml":true},{"content":"Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,316],"content":"Creates a symmetric Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) decryptor object with the specified key (<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[10675,10992],"yaml":true},{"content":"This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","nodes":[{"pos":[0,183],"content":"This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.","nodes":[{"content":"This method decrypts an encrypted message that was created using the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A&gt;</ph> overload with the same parameters.","pos":[0,183],"source":"This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters."}]}],"pos":[11003,11187],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[11397,11448],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[11509,11571],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> decryptor object.","nodes":[{"pos":[0,83],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph> decryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> decryptor object."}],"pos":[11660,11744],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>.  \n  \n -or-  \n  \n The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8.  \n  \n -or-  \n  \n An invalid key size was used.  \n  \n -or-  \n  \n The algorithm key size was not available.","nodes":[{"pos":[0,168],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>."},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,475],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> and the value of the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"&gt;&lt;/xref&gt;</ph> property is not 8.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8."},{"pos":[482,486],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[493,522],"content":"An invalid key size was used.","nodes":[{"content":"An invalid key size was used.","pos":[0,29]}]},{"pos":[529,533],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[540,581],"content":"The algorithm key size was not available.","nodes":[{"content":"The algorithm key size was not available.","pos":[0,41]}]}],"pos":[11989,12595],"yaml":true},{"content":"Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).","nodes":[{"pos":[0,316],"content":"Creates a symmetric Data Encryption Standard (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph>) encryptor object with the specified key (<ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) and initialization vector (<ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>).","source":"Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>)."}],"pos":[15149,15466],"yaml":true},{"content":"Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","nodes":[{"pos":[0,159],"content":"Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A&gt;</ph> overload with the same parameters to decrypt the result of this method.","pos":[0,159],"source":"Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method."}]}],"pos":[15477,15637],"yaml":true,"extradata":"MT"},{"content":"The secret key to use for the symmetric algorithm.","nodes":[{"pos":[0,50],"content":"The secret key to use for the symmetric algorithm.","nodes":[{"content":"The secret key to use for the symmetric algorithm.","pos":[0,50]}]}],"pos":[17214,17265],"yaml":true},{"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"pos":[0,61],"content":"The initialization vector to use for the symmetric algorithm.","nodes":[{"content":"The initialization vector to use for the symmetric algorithm.","pos":[0,61]}]}],"pos":[17326,17388],"yaml":true},{"content":"A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> encryptor object.","nodes":[{"pos":[0,83],"content":"A symmetric <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.DES\"&gt;&lt;/xref&gt;</ph> encryptor object.","source":"A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> encryptor object."}],"pos":[17477,17561],"yaml":true},{"content":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>.  \n  \n -or-  \n  \n The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8.  \n  \n -or-  \n  \n An invalid key size was used.  \n  \n -or-  \n  \n The algorithm key size was not available.","nodes":[{"pos":[0,168],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.OFB\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.OFB\"></xref>."},{"pos":[175,179],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[186,475],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"&gt;&lt;/xref&gt;</ph> property is <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CipherMode.CFB\"&gt;&lt;/xref&gt;</ph> and the value of the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"&gt;&lt;/xref&gt;</ph> property is not 8.","source":"The value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Mode\"></xref> property is <xref href=\"System.Security.Cryptography.CipherMode.CFB\"></xref> and the value of the <xref href=\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\"></xref> property is not 8."},{"pos":[482,486],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[493,522],"content":"An invalid key size was used.","nodes":[{"content":"An invalid key size was used.","pos":[0,29]}]},{"pos":[529,533],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[540,581],"content":"The algorithm key size was not available.","nodes":[{"content":"The algorithm key size was not available.","pos":[0,41]}]}],"pos":[17806,18412],"yaml":true},{"content":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm.","nodes":[{"pos":[0,140],"content":"Generates a random initialization vector (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"&gt;&lt;/xref&gt;</ph>) to use for the algorithm.","source":"Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm."}],"pos":[19702,19843],"yaml":true},{"content":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.","nodes":[{"pos":[0,121],"content":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.","nodes":[{"content":"Use this method to generate a random <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A&gt;</ph> when none is specified.","pos":[0,121],"source":"Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified."}]}],"pos":[19854,19976],"yaml":true,"extradata":"MT"},{"content":"Generates a random key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) to be used for the algorithm.","nodes":[{"pos":[0,127],"content":"Generates a random key (<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"&gt;&lt;/xref&gt;</ph>) to be used for the algorithm.","source":"Generates a random key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) to be used for the algorithm."}],"pos":[21428,21556],"yaml":true},{"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).  \n  \n This algorithm supports a key length of 64 bits.","nodes":[{"pos":[0,247],"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).","nodes":[{"content":"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).","pos":[0,247],"nodes":[{"content":"Use this method to generate a random key when none is specified.","pos":[0,64]},{"content":"This method will never return a weak key (see <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.DES.IsWeakKey%2A&gt;</ph>) or a semi-weak key (see <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A&gt;</ph>).","pos":[65,247],"source":" This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>)."}]}]},{"pos":[254,302],"content":"This algorithm supports a key length of 64 bits.","nodes":[{"content":"This algorithm supports a key length of 64 bits.","pos":[0,48]}]}],"pos":[21567,21874],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.DESCryptoServiceProvider\n  commentId: T:System.Security.Cryptography.DESCryptoServiceProvider\n  id: DESCryptoServiceProvider\n  children:\n  - System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  - System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor\n  - System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor\n  - System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  - System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  langs:\n  - csharp\n  name: DESCryptoServiceProvider\n  nameWithType: DESCryptoServiceProvider\n  fullName: System.Security.Cryptography.DESCryptoServiceProvider\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Defines a wrapper object to access the cryptographic service provider (CSP) version of the Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) algorithm. This class cannot be inherited.\n  remarks: This algorithm supports a key length of 64 bits.\n  example:\n  - \"The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \\n  \\n [!code-cpp[Classic DES Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DES Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic DES Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DES Example/CS/source.cs#1)]\\n [!code-vb[Classic DES Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DES Example/VB/source.vb#1)]  \\n  \\n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  - System.Security.Cryptography.DES\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.DES.Create\n  - System.Security.Cryptography.DES.Create(System.String)\n  - System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  - System.Security.Cryptography.DES.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: DESCryptoServiceProvider()\n  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()\n  fullName: DESCryptoServiceProvider.DESCryptoServiceProvider()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.DESCryptoServiceProvider\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example uses <xref:System.Security.Cryptography.DESCryptoServiceProvider> (an implementation of <xref:System.Security.Cryptography.DES>) with the specified key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) to encrypt a file specified by `inName`. It then outputs the encrypted result to the file specified by `outName`.  \\n  \\n [!code-cpp[Classic DES Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DES Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic DES Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DES Example/CS/source.cs#1)]\\n [!code-vb[Classic DES Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DES Example/VB/source.vb#1)]  \\n  \\n Decryption can be handled in the same way; use <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> instead of <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. The same key (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) and initialization vector (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) used to encrypt the file must be used to decrypt it.\"\n  syntax:\n    content: public DESCryptoServiceProvider ();\n    parameters: []\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: The Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) cryptographic service provider is not available.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor\n  id: CreateDecryptor\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor()\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor()\n  fullName: DESCryptoServiceProvider.CreateDecryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: ''\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  id: CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: DESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) decryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: This method decrypts an encrypted message that was created using the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> overload with the same parameters.\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> decryptor object.\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.OFB\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.CFB\\\"></xref> and the value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\\\"></xref> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor\n  id: CreateEncryptor\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor()\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor()\n  fullName: DESCryptoServiceProvider.CreateEncryptor()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: ''\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  id: CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: DESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Creates a symmetric Data Encryption Standard (<xref href=\"System.Security.Cryptography.DES\"></xref>) encryptor object with the specified key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) and initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>).\n  remarks: Use the <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> overload with the same parameters to decrypt the result of this method.\n  example:\n  - \"The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in a file.  \\n  \\n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]\\n [!code-csharp[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]\\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  \\n  \\n The following code example shows how to create and use a <xref:System.Security.Cryptography.DESCryptoServiceProvider> object to encrypt and decrypt data in memory.  \\n  \\n [!code-cpp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]\\n [!code-csharp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]\\n [!code-vb[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]\"\n  syntax:\n    content: public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);\n    parameters:\n    - id: rgbKey\n      type: System.Byte[]\n      description: The secret key to use for the symmetric algorithm.\n    - id: rgbIV\n      type: System.Byte[]\n      description: The initialization vector to use for the symmetric algorithm.\n    return:\n      type: System.Security.Cryptography.ICryptoTransform\n      description: A symmetric <xref href=\"System.Security.Cryptography.DES\"></xref> encryptor object.\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*\n  exceptions:\n  - type: System.Security.Cryptography.CryptographicException\n    commentId: T:System.Security.Cryptography.CryptographicException\n    description: \"The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.OFB\\\"></xref>.  \\n  \\n -or-  \\n  \\n The value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.Mode\\\"></xref> property is <xref href=\\\"System.Security.Cryptography.CipherMode.CFB\\\"></xref> and the value of the <xref href=\\\"System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\\\"></xref> property is not 8.  \\n  \\n -or-  \\n  \\n An invalid key size was used.  \\n  \\n -or-  \\n  \\n The algorithm key size was not available.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  id: GenerateIV\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateIV()\n  nameWithType: DESCryptoServiceProvider.GenerateIV()\n  fullName: DESCryptoServiceProvider.GenerateIV()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random initialization vector (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.IV\"></xref>) to use for the algorithm.\n  remarks: Use this method to generate a random <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> when none is specified.\n  syntax:\n    content: public override void GenerateIV ();\n    parameters: []\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  commentId: M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  id: GenerateKey\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  langs:\n  - csharp\n  name: GenerateKey()\n  nameWithType: DESCryptoServiceProvider.GenerateKey()\n  fullName: DESCryptoServiceProvider.GenerateKey()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Csp\n  namespace: System.Security.Cryptography\n  summary: Generates a random key (<xref href=\"System.Security.Cryptography.SymmetricAlgorithm.Key\"></xref>) to be used for the algorithm.\n  remarks: \"Use this method to generate a random key when none is specified. This method will never return a weak key (see <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) or a semi-weak key (see <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).  \\n  \\n This algorithm supports a key length of 64 bits.\"\n  syntax:\n    content: public override void GenerateKey ();\n    parameters: []\n  overload: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.Cryptography.DES\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: DES\n  nameWithType: DES\n  fullName: System.Security.Cryptography.DES\n- uid: System.Security.Cryptography.CryptographicException\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CryptographicException\n  nameWithType: CryptographicException\n  fullName: System.Security.Cryptography.CryptographicException\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: DESCryptoServiceProvider()\n  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider()\n  fullName: DESCryptoServiceProvider.DESCryptoServiceProvider()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor()\n  fullName: DESCryptoServiceProvider.CreateDecryptor()\n- uid: System.Security.Cryptography.ICryptoTransform\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: ICryptoTransform\n  nameWithType: ICryptoTransform\n  fullName: System.Security.Cryptography.ICryptoTransform\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n  fullName: DESCryptoServiceProvider.CreateDecryptor(Byte[], Byte[])\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor()\n  fullName: DESCryptoServiceProvider.CreateEncryptor()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n  fullName: DESCryptoServiceProvider.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: DESCryptoServiceProvider.GenerateIV()\n  fullName: DESCryptoServiceProvider.GenerateIV()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: DESCryptoServiceProvider.GenerateKey()\n  fullName: DESCryptoServiceProvider.GenerateKey()\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.#ctor*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: DESCryptoServiceProvider\n  nameWithType: DESCryptoServiceProvider.DESCryptoServiceProvider\n  fullName: DESCryptoServiceProvider.DESCryptoServiceProvider\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateDecryptor\n  nameWithType: DESCryptoServiceProvider.CreateDecryptor\n  fullName: DESCryptoServiceProvider.CreateDecryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: CreateEncryptor\n  nameWithType: DESCryptoServiceProvider.CreateEncryptor\n  fullName: DESCryptoServiceProvider.CreateEncryptor\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateIV\n  nameWithType: DESCryptoServiceProvider.GenerateIV\n  fullName: DESCryptoServiceProvider.GenerateIV\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n- uid: System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey*\n  parent: System.Security.Cryptography.DESCryptoServiceProvider\n  isExternal: false\n  name: GenerateKey\n  nameWithType: DESCryptoServiceProvider.GenerateKey\n  fullName: DESCryptoServiceProvider.GenerateKey\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DESCryptoServiceProvider.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSize\n  nameWithType: SymmetricAlgorithm.BlockSize\n  fullName: SymmetricAlgorithm.BlockSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.DES.Create\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create()\n  nameWithType: DES.Create()\n  fullName: DES.Create()\n- uid: System.Security.Cryptography.DES.Create(System.String)\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Create(String)\n  nameWithType: DES.Create(String)\n  fullName: DES.Create(String)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymmetricAlgorithm.Dispose(Boolean)\n  fullName: SymmetricAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: SymmetricAlgorithm.FeedbackSize\n  fullName: SymmetricAlgorithm.FeedbackSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IV\n  nameWithType: SymmetricAlgorithm.IV\n  fullName: SymmetricAlgorithm.IV\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.DES.Key\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: Key\n  nameWithType: DES.Key\n  fullName: DES.Key\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySize\n  nameWithType: SymmetricAlgorithm.KeySize\n  fullName: SymmetricAlgorithm.KeySize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: SymmetricAlgorithm.LegalBlockSizes\n  fullName: SymmetricAlgorithm.LegalBlockSizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizes\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: SymmetricAlgorithm.LegalKeySizes\n  fullName: SymmetricAlgorithm.LegalKeySizes\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Mode\n  nameWithType: SymmetricAlgorithm.Mode\n  fullName: SymmetricAlgorithm.Mode\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Padding\n  nameWithType: SymmetricAlgorithm.Padding\n  fullName: SymmetricAlgorithm.Padding\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n- uid: System.Security.Cryptography.DES.IsSemiWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsSemiWeakKey(Byte[])\n  nameWithType: DES.IsSemiWeakKey(Byte[])\n  fullName: DES.IsSemiWeakKey(Byte[])\n- uid: System.Security.Cryptography.DES.IsWeakKey(System.Byte[])\n  parent: System.Security.Cryptography.DES\n  isExternal: false\n  name: IsWeakKey(Byte[])\n  nameWithType: DES.IsWeakKey(Byte[])\n  fullName: DES.IsWeakKey(Byte[])\n"}