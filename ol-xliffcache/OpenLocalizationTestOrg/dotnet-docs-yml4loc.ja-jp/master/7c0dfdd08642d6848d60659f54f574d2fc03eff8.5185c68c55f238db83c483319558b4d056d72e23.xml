{"nodes":[{"content":"Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).","nodes":[{"pos":[0,95],"content":"Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).","nodes":[{"content":"Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).","pos":[0,95]}]}],"pos":[930,1026],"yaml":true},{"content":"This enumeration is used to set the cache level specified by <xref:System.Net.Cache.HttpRequestCachePolicy> objects.  \n  \n This BypassCache value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.  \n  \n The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.  \n  \n A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","nodes":[{"pos":[0,116],"content":"This enumeration is used to set the cache level specified by <xref:System.Net.Cache.HttpRequestCachePolicy> objects.","nodes":[{"content":"This enumeration is used to set the cache level specified by <ph id=\"ph1\">&lt;xref:System.Net.Cache.HttpRequestCachePolicy&gt;</ph> objects.","pos":[0,116],"source":"This enumeration is used to set the cache level specified by <xref:System.Net.Cache.HttpRequestCachePolicy> objects."}]},{"pos":[123,360],"content":"This BypassCache value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.","nodes":[{"content":"This BypassCache value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.","pos":[0,237],"nodes":[{"content":"This BypassCache value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","pos":[0,132]},{"content":"No entries are taken from caches, added to caches, or removed from caches between the client and server.","pos":[133,237]}]}]},{"pos":[367,961],"content":"The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.","nodes":[{"content":"The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.","pos":[0,594],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName&gt;</ph> property is used to get or set the default cache policy for <ph id=\"ph2\">&lt;xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName&gt;</ph> instances.","pos":[0,234],"source":"The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> instances."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName&gt;</ph> property is used to get or set the default cache policy for a <ph id=\"ph2\">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName&gt;</ph> instances.","pos":[235,449],"source":" The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> instances."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName&gt;</ph> property is used to get or set the cache policy for a specific request.","pos":[450,594],"source":" The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request."}]}]},{"pos":[968,1231],"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","nodes":[{"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","pos":[0,263],"nodes":[{"content":"A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream.","pos":[0,135]},{"content":"So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.","pos":[136,263]}]}]}],"pos":[1037,2277],"yaml":true,"extradata":"MT"},{"content":"Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","nodes":[{"pos":[0,365],"content":"Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","nodes":[{"content":"Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","pos":[0,365],"nodes":[{"content":"Satisfies a request by using the server.","pos":[0,40]},{"content":"No entries are taken from caches, added to caches, or removed from caches between the client and server.","pos":[41,145]},{"content":"No entries are taken from caches, added to caches, or removed from caches between the client and server.","pos":[146,250]},{"content":"This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.","pos":[251,365]}]}]}],"pos":[3864,4230],"yaml":true},{"content":"Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","nodes":[{"pos":[0,277],"content":"Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","nodes":[{"content":"Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","pos":[0,277],"nodes":[{"content":"Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server.","pos":[0,136]},{"content":"If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.","pos":[137,277]}]}]}],"pos":[5482,5760],"yaml":true},{"content":"Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <xref href=\"System.Net.WebException\"></xref> exception is thrown if the item is not in the client cache.","nodes":[{"pos":[0,266],"content":"Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <xref href=\"System.Net.WebException\"></xref> exception is thrown if the item is not in the client cache.","nodes":[{"content":"Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache.","pos":[0,116]},{"content":"When this cache policy level is specified, a <ph id=\"ph1\">&lt;xref href=\"System.Net.WebException\"&gt;&lt;/xref&gt;</ph> exception is thrown if the item is not in the client cache.","pos":[117,266],"source":" When this cache policy level is specified, a <xref href=\"System.Net.WebException\"></xref> exception is thrown if the item is not in the client cache."}]}],"pos":[6975,7242],"yaml":true},{"content":"Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network. If the request cannot be satisfied, a <xref href=\"System.Net.WebException\"></xref> exception is thrown. In the HTTP caching protocol, this is achieved using the `only-if-cached` cache control directive.","nodes":[{"pos":[0,321],"content":"Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network. If the request cannot be satisfied, a <xref href=\"System.Net.WebException\"></xref> exception is thrown. In the HTTP caching protocol, this is achieved using the `only-if-cached` cache control directive.","nodes":[{"content":"Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network.","pos":[0,118]},{"content":"If the request cannot be satisfied, a <ph id=\"ph1\">&lt;xref href=\"System.Net.WebException\"&gt;&lt;/xref&gt;</ph> exception is thrown.","pos":[119,222],"source":" If the request cannot be satisfied, a <xref href=\"System.Net.WebException\"></xref> exception is thrown."},{"content":"In the HTTP caching protocol, this is achieved using the <ph id=\"ph1\">`only-if-cached`</ph> cache control directive.","pos":[223,321],"source":" In the HTTP caching protocol, this is achieved using the `only-if-cached` cache control directive."}]}],"pos":[8516,8838],"yaml":true},{"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.","nodes":[{"pos":[0,304],"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.","nodes":[{"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.","pos":[0,304],"nodes":[{"content":"Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server.","pos":[0,138]},{"content":"The action taken is determined by the current cache policy and the age of the content in the cache.","pos":[139,238]},{"content":"This is the cache level that should be used by most applications.","pos":[239,304]}]}]}],"pos":[10045,10350],"yaml":true},{"content":"Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.","nodes":[{"pos":[0,331],"content":"Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.","nodes":[{"content":"Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.","pos":[0,331],"nodes":[{"content":"Never satisfies a request by using resources from the cache and does not cache resources.","pos":[0,89]},{"content":"If the resource is present in the local cache, it is removed.","pos":[90,151]},{"content":"This policy level indicates to intermediate caches that they should remove the resource.","pos":[152,240]},{"content":"In the HTTP caching protocol, this is achieved using the no-cache cache control directive.","pos":[241,331]}]}]}],"pos":[11586,11918],"yaml":true},{"content":"Satisfies a request by using the server or a cache other than the local cache. Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server. In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache `Pragma` header.","nodes":[{"pos":[0,328],"content":"Satisfies a request by using the server or a cache other than the local cache. Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server. In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache `Pragma` header.","nodes":[{"content":"Satisfies a request by using the server or a cache other than the local cache.","pos":[0,78]},{"content":"Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server.","pos":[79,201]},{"content":"In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache <ph id=\"ph1\">`Pragma`</ph> header.","pos":[202,328],"source":" In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache `Pragma` header."}]}],"pos":[13119,13448],"yaml":true},{"content":"Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache `Pragma` header.","nodes":[{"pos":[0,206],"content":"Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache `Pragma` header.","nodes":[{"content":"Satisfies a request by using the server.","pos":[0,40]},{"content":"The response might be saved in the cache.","pos":[41,82]},{"content":"In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache <ph id=\"ph1\">`Pragma`</ph> header.","pos":[83,206],"source":" In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache `Pragma` header."}]}],"pos":[14636,14843],"yaml":true},{"content":"Compares the copy of the resource in the cache with the copy on the server. If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache. If the copy in the cache is the same as the server copy, the cached copy is used. In the HTTP caching protocol, this is achieved using a conditional request.","nodes":[{"pos":[0,339],"content":"Compares the copy of the resource in the cache with the copy on the server. If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache. If the copy in the cache is the same as the server copy, the cached copy is used. In the HTTP caching protocol, this is achieved using a conditional request.","nodes":[{"content":"Compares the copy of the resource in the cache with the copy on the server. If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache. If the copy in the cache is the same as the server copy, the cached copy is used. In the HTTP caching protocol, this is achieved using a conditional request.","pos":[0,339],"nodes":[{"content":"Compares the copy of the resource in the cache with the copy on the server.","pos":[0,75]},{"content":"If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache.","pos":[76,181]},{"content":"If the copy in the cache is the same as the server copy, the cached copy is used.","pos":[182,263]},{"content":"In the HTTP caching protocol, this is achieved using a conditional request.","pos":[264,339]}]}]}],"pos":[16054,16394],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Cache.HttpRequestCacheLevel\n  commentId: T:System.Net.Cache.HttpRequestCacheLevel\n  id: HttpRequestCacheLevel\n  children:\n  - System.Net.Cache.HttpRequestCacheLevel.BypassCache\n  - System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable\n  - System.Net.Cache.HttpRequestCacheLevel.CacheOnly\n  - System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly\n  - System.Net.Cache.HttpRequestCacheLevel.Default\n  - System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore\n  - System.Net.Cache.HttpRequestCacheLevel.Refresh\n  - System.Net.Cache.HttpRequestCacheLevel.Reload\n  - System.Net.Cache.HttpRequestCacheLevel.Revalidate\n  langs:\n  - csharp\n  name: HttpRequestCacheLevel\n  nameWithType: HttpRequestCacheLevel\n  fullName: System.Net.Cache.HttpRequestCacheLevel\n  type: Enum\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Specifies caching behavior for resources obtained using the Hypertext Transfer protocol (HTTP).\n  remarks: \"This enumeration is used to set the cache level specified by <xref:System.Net.Cache.HttpRequestCachePolicy> objects.  \\n  \\n This BypassCache value is the default cache behavior specified in the machine configuration file that ships with the .NET Framework. No entries are taken from caches, added to caches, or removed from caches between the client and server.  \\n  \\n The <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the default cache policy for a <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> instances. The <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> property is used to get or set the cache policy for a specific request.  \\n  \\n A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the default cache policy level for this request.\"\n  example:\n  - \"The following code example sets the application domain's caching policy to Default.  \\n  \\n [!code-cpp[NCLSimpleCache#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLSimpleCache/CPP/NCLSimpleCache.cpp#2)]\\n [!code-csharp[NCLSimpleCache#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLSimpleCache/CS/example.cs#2)]\"\n  syntax:\n    content: public enum HttpRequestCacheLevel\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.BypassCache\n  id: BypassCache\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: BypassCache\n  nameWithType: HttpRequestCacheLevel.BypassCache\n  fullName: HttpRequestCacheLevel.BypassCache\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request by using the server. No entries are taken from caches, added to caches, or removed from caches between the client and server. No entries are taken from caches, added to caches, or removed from caches between the client and server. This is the default cache behavior specified in the machine configuration file that ships with the .NET Framework.\n  syntax:\n    content: BypassCache\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable\n  id: CacheIfAvailable\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: CacheIfAvailable\n  nameWithType: HttpRequestCacheLevel.CacheIfAvailable\n  fullName: HttpRequestCacheLevel.CacheIfAvailable\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request for a resource from the cache if the resource is available; otherwise, sends a request for a resource to the server. If the requested item is available in any cache between the client and the server, the request might be satisfied by the intermediate cache.\n  syntax:\n    content: CacheIfAvailable\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.CacheOnly\n  id: CacheOnly\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: CacheOnly\n  nameWithType: HttpRequestCacheLevel.CacheOnly\n  fullName: HttpRequestCacheLevel.CacheOnly\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request using the locally cached resource; does not send a request for an item that is not in the cache. When this cache policy level is specified, a <xref href=\"System.Net.WebException\"></xref> exception is thrown if the item is not in the client cache.\n  syntax:\n    content: CacheOnly\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly\n  id: CacheOrNextCacheOnly\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: CacheOrNextCacheOnly\n  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly\n  fullName: HttpRequestCacheLevel.CacheOrNextCacheOnly\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request for a resource either from the local computer's cache or a remote cache on the local area network. If the request cannot be satisfied, a <xref href=\"System.Net.WebException\"></xref> exception is thrown. In the HTTP caching protocol, this is achieved using the `only-if-cached` cache control directive.\n  syntax:\n    content: CacheOrNextCacheOnly\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.Default\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.Default\n  id: Default\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: Default\n  nameWithType: HttpRequestCacheLevel.Default\n  fullName: HttpRequestCacheLevel.Default\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request for a resource either by using the cached copy of the resource or by sending a request for the resource to the server. The action taken is determined by the current cache policy and the age of the content in the cache. This is the cache level that should be used by most applications.\n  syntax:\n    content: Default\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore\n  id: NoCacheNoStore\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: NoCacheNoStore\n  nameWithType: HttpRequestCacheLevel.NoCacheNoStore\n  fullName: HttpRequestCacheLevel.NoCacheNoStore\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Never satisfies a request by using resources from the cache and does not cache resources. If the resource is present in the local cache, it is removed. This policy level indicates to intermediate caches that they should remove the resource. In the HTTP caching protocol, this is achieved using the no-cache cache control directive.\n  syntax:\n    content: NoCacheNoStore\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.Refresh\n  id: Refresh\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: Refresh\n  nameWithType: HttpRequestCacheLevel.Refresh\n  fullName: HttpRequestCacheLevel.Refresh\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request by using the server or a cache other than the local cache. Before the request can be satisfied by an intermediate cache, that cache must revalidate its cached entry with the server. In the HTTP caching protocol, this is achieved using the max-age = 0 cache control directive and the no-cache `Pragma` header.\n  syntax:\n    content: Refresh\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.Reload\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.Reload\n  id: Reload\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: Reload\n  nameWithType: HttpRequestCacheLevel.Reload\n  fullName: HttpRequestCacheLevel.Reload\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Satisfies a request by using the server. The response might be saved in the cache. In the HTTP caching protocol, this is achieved using the no-cache cache control directive and the no-cache `Pragma` header.\n  syntax:\n    content: Reload\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\n- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate\n  commentId: F:System.Net.Cache.HttpRequestCacheLevel.Revalidate\n  id: Revalidate\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  langs:\n  - csharp\n  name: Revalidate\n  nameWithType: HttpRequestCacheLevel.Revalidate\n  fullName: HttpRequestCacheLevel.Revalidate\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net.Cache\n  summary: Compares the copy of the resource in the cache with the copy on the server. If the copy on the server is newer, it is used to satisfy the request and replaces the copy in the cache. If the copy in the cache is the same as the server copy, the cached copy is used. In the HTTP caching protocol, this is achieved using a conditional request.\n  syntax:\n    content: Revalidate\n    return:\n      type: System.Net.Cache.HttpRequestCacheLevel\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Cache/HttpRequestCacheLevel.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: BypassCache\n  nameWithType: HttpRequestCacheLevel.BypassCache\n  fullName: HttpRequestCacheLevel.BypassCache\n- uid: System.Net.Cache.HttpRequestCacheLevel\n  parent: System.Net.Cache\n  isExternal: false\n  name: HttpRequestCacheLevel\n  nameWithType: HttpRequestCacheLevel\n  fullName: System.Net.Cache.HttpRequestCacheLevel\n- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: CacheIfAvailable\n  nameWithType: HttpRequestCacheLevel.CacheIfAvailable\n  fullName: HttpRequestCacheLevel.CacheIfAvailable\n- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: CacheOnly\n  nameWithType: HttpRequestCacheLevel.CacheOnly\n  fullName: HttpRequestCacheLevel.CacheOnly\n- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: CacheOrNextCacheOnly\n  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly\n  fullName: HttpRequestCacheLevel.CacheOrNextCacheOnly\n- uid: System.Net.Cache.HttpRequestCacheLevel.Default\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: Default\n  nameWithType: HttpRequestCacheLevel.Default\n  fullName: HttpRequestCacheLevel.Default\n- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: NoCacheNoStore\n  nameWithType: HttpRequestCacheLevel.NoCacheNoStore\n  fullName: HttpRequestCacheLevel.NoCacheNoStore\n- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: Refresh\n  nameWithType: HttpRequestCacheLevel.Refresh\n  fullName: HttpRequestCacheLevel.Refresh\n- uid: System.Net.Cache.HttpRequestCacheLevel.Reload\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: Reload\n  nameWithType: HttpRequestCacheLevel.Reload\n  fullName: HttpRequestCacheLevel.Reload\n- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate\n  parent: System.Net.Cache.HttpRequestCacheLevel\n  isExternal: false\n  name: Revalidate\n  nameWithType: HttpRequestCacheLevel.Revalidate\n  fullName: HttpRequestCacheLevel.Revalidate\n"}