### YamlMime:ManagedReference
items:
- uid: System.AddIn.Hosting.AddInProcess
  commentId: T:System.AddIn.Hosting.AddInProcess
  id: AddInProcess
  children:
  - System.AddIn.Hosting.AddInProcess.#ctor
  - System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  - System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  - System.AddIn.Hosting.AddInProcess.KeepAlive
  - System.AddIn.Hosting.AddInProcess.Platform
  - System.AddIn.Hosting.AddInProcess.ProcessId
  - System.AddIn.Hosting.AddInProcess.Shutdown
  - System.AddIn.Hosting.AddInProcess.ShuttingDown
  - System.AddIn.Hosting.AddInProcess.Start
  - System.AddIn.Hosting.AddInProcess.StartupTimeout
  langs:
  - csharp
  name: AddInProcess
  nameWithType: AddInProcess
  fullName: System.AddIn.Hosting.AddInProcess
  type: Class
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Provides an external process for running add-ins out-of-process from the host application.
  remarks: "To activate an add-in in an external process, pass an <xref:System.AddIn.Hosting.AddInProcess> object to the appropriate <xref:System.AddIn.Hosting.AddInToken.Activate%60%601%28System.AddIn.Hosting.AddInProcess%2CSystem.Security.PermissionSet%29?displayProperty=fullName> method overload.  \n  \n The executable that runs the add-in is obtained from one of two files installed with the .NET Framework under the Windows directory. By default, the executable that matches the bits-per-word of the host application is used. If the host is a 64-bit process, AddInProcess.exe is run; otherwise, AddInProcess32.exe is run. To specify the way the executable is selected, use the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor to create the <xref:System.AddIn.Hosting.AddInProcess> object."
  example:
  - "The following example activates an add-in in an external process.  \n  \n [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]\n [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]"
  syntax:
    content: public sealed class AddInProcess
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.#ctor
  commentId: M:System.AddIn.Hosting.AddInProcess.#ctor
  id: '#ctor'
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: AddInProcess()
  nameWithType: AddInProcess.AddInProcess()
  fullName: AddInProcess.AddInProcess()
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Initializes a new instance of the <xref href="System.AddIn.Hosting.AddInProcess"></xref> class.
  remarks: This constructor has the same effect as using the <xref:System.AddIn.Hosting.AddInProcess.%23ctor%28System.AddIn.Hosting.Platform%29> constructor with the <xref:System.AddIn.Hosting.Platform?displayProperty=fullName> flag, to specify that the process that runs the add-in will have the same bits-per-word as the host process.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public AddInProcess ();
    parameters: []
  overload: System.AddIn.Hosting.AddInProcess.#ctor*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  commentId: M:System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  id: '#ctor(System.AddIn.Hosting.Platform)'
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: AddInProcess(Platform)
  nameWithType: AddInProcess.AddInProcess(Platform)
  fullName: AddInProcess.AddInProcess(Platform)
  type: Constructor
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Initializes a new instance of the <xref href="System.AddIn.Hosting.AddInProcess"></xref> class, specifying the bits-per-word of the process in which the add-in runs.
  remarks: "The following table shows how `platform` affects the bits-per-word of the process on different operating systems:  \n  \n||32-bit operating system|64-bit operating system|  \n|-|------------------------------|------------------------------|  \n|Host|32-bit|Same as the host process|  \n|AnyCPU|32-bit|64-bit|  \n|X86|32-bit|32-bit|  \n|X64|Exception is thrown|64-bit|"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public AddInProcess (System.AddIn.Hosting.Platform platform);
    parameters:
    - id: platform
      type: System.AddIn.Hosting.Platform
      description: A value that specifies the bits-per-word of the process that runs the add-in.
  overload: System.AddIn.Hosting.AddInProcess.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The registry entry for the path to the executable (AddInProcess.exe or AddInProcess32.exe) is missing.  \n  \n -or-  \n  \n The executable is missing."
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  commentId: P:System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  id: IsCurrentProcess
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: AddInProcess.IsCurrentProcess
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Gets a value that indicates whether the current <xref href="System.AddIn.Hosting.AddInProcess"></xref> object represents the host application process.
  remarks: "If the value of this property is `true`, the add-in is running in-process with the host application. In that case, using the <xref:System.AddIn.Hosting.AddInProcess.Start%2A> or <xref:System.AddIn.Hosting.AddInProcess.Shutdown%2A> method throws an <xref:System.InvalidOperationException>.  \n  \n> [!NOTE]\n>  The <xref:System.AddIn.Hosting.AddInEnvironment.Process%2A?displayProperty=fullName> property returns an <xref:System.AddIn.Hosting.AddInProcess> object that represents the host application process if the add-in is running in-process."
  example:
  - "The following example activates an add-in in an external process and uses the <xref:System.AddIn.Hosting.AddInProcess.IsCurrentProcess%2A> property to determine whether the add-in is in the same process as the host application process.  \n  \n [!code-csharp[AddInP3Host#10](~/samples/snippets/csharp/VS_Snippets_CLR/addinP3Host/cs/P3Host.cs#10)]\n [!code-vb[AddInP3Host#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/addinP3Host/vb/p3host.vb#10)]"
  syntax:
    content: public bool IsCurrentProcess { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.AddIn.Hosting.AddInProcess"></xref> object corresponds to the current process; otherwise, `false`.'
  overload: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive
  commentId: P:System.AddIn.Hosting.AddInProcess.KeepAlive
  id: KeepAlive
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: AddInProcess.KeepAlive
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Gets or sets a value that indicates whether to keep the external process alive.
  remarks: Set this property to `false` to aggressively shut down the external process after the last add-in inside the process has been shut down.
  syntax:
    content: public bool KeepAlive { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the external process should be kept alive; otherwise, `false`. The default is `false`.'
  overload: System.AddIn.Hosting.AddInProcess.KeepAlive*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.Platform
  commentId: P:System.AddIn.Hosting.AddInProcess.Platform
  id: Platform
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: AddInProcess.Platform
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Gets the bits-per-word of the process in which the out-of-process add-in is run.
  remarks: The bits-per-word is set when the <xref:System.AddIn.Hosting.AddInProcess> object is initialized, and cannot be changed.
  syntax:
    content: public System.AddIn.Hosting.Platform Platform { get; }
    return:
      type: System.AddIn.Hosting.Platform
      description: The bits-per-word of the process that runs the add-in.
  overload: System.AddIn.Hosting.AddInProcess.Platform*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.ProcessId
  commentId: P:System.AddIn.Hosting.AddInProcess.ProcessId
  id: ProcessId
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: AddInProcess.ProcessId
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Gets the process ID of the external process.
  remarks: Use this property for debugging.
  syntax:
    content: public int ProcessId { get; }
    return:
      type: System.Int32
      description: The process ID, or -1 if the external process has not started.
  overload: System.AddIn.Hosting.AddInProcess.ProcessId*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.Shutdown
  commentId: M:System.AddIn.Hosting.AddInProcess.Shutdown
  id: Shutdown
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Shutdown()
  nameWithType: AddInProcess.Shutdown()
  fullName: AddInProcess.Shutdown()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Forcibly shuts down the external process.
  syntax:
    content: public bool Shutdown ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the external process was running and is successfully shut down; `false` if there is no active process associated with the <xref href="System.AddIn.Hosting.AddInProcess"></xref>.'
  overload: System.AddIn.Hosting.AddInProcess.Shutdown*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown
  commentId: E:System.AddIn.Hosting.AddInProcess.ShuttingDown
  id: ShuttingDown
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: ShuttingDown
  nameWithType: AddInProcess.ShuttingDown
  fullName: AddInProcess.ShuttingDown
  type: Event
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Occurs when the process represented by the <xref href="System.AddIn.Hosting.AddInProcess"></xref> object is about to be shut down.
  syntax:
    content: public event EventHandler<System.ComponentModel.CancelEventArgs> ShuttingDown;
    return:
      type: System.EventHandler{System.ComponentModel.CancelEventArgs}
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.Start
  commentId: M:System.AddIn.Hosting.AddInProcess.Start
  id: Start
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: Start()
  nameWithType: AddInProcess.Start()
  fullName: AddInProcess.Start()
  type: Method
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Starts the external process.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public bool Start ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the process is successfully started; `false` if the process is already running.'
  overload: System.AddIn.Hosting.AddInProcess.Start*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The add-in is running in-process with the host application. Starting and stopping the process is allowed only for external processes, not for the host process.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout
  commentId: P:System.AddIn.Hosting.AddInProcess.StartupTimeout
  id: StartupTimeout
  parent: System.AddIn.Hosting.AddInProcess
  langs:
  - csharp
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: AddInProcess.StartupTimeout
  type: Property
  assemblies:
  - System.AddIn
  namespace: System.AddIn.Hosting
  summary: Gets or sets the number of seconds to allow for the process to start.
  remarks: The default value is 10 seconds. This property is usually used during debugging, to increase the startup time for the process that runs the out-of-process add-in.
  syntax:
    content: public TimeSpan StartupTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: The number of seconds to allow for process startup.
  overload: System.AddIn.Hosting.AddInProcess.StartupTimeout*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The process is already running.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The assigned value is less than 0 (zero).
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.AddIn.Hosting.AddInProcess.#ctor
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess()
  nameWithType: AddInProcess.AddInProcess()
  fullName: AddInProcess.AddInProcess()
- uid: System.AddIn.Hosting.AddInProcess.#ctor(System.AddIn.Hosting.Platform)
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess(Platform)
  nameWithType: AddInProcess.AddInProcess(Platform)
  fullName: AddInProcess.AddInProcess(Platform)
- uid: System.AddIn.Hosting.Platform
  parent: System.AddIn.Hosting
  isExternal: false
  name: Platform
  nameWithType: Platform
  fullName: System.AddIn.Hosting.Platform
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: AddInProcess.IsCurrentProcess
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: AddInProcess.KeepAlive
- uid: System.AddIn.Hosting.AddInProcess.Platform
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: AddInProcess.Platform
- uid: System.AddIn.Hosting.AddInProcess.ProcessId
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: AddInProcess.ProcessId
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Hosting.AddInProcess.Shutdown
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Shutdown()
  nameWithType: AddInProcess.Shutdown()
  fullName: AddInProcess.Shutdown()
- uid: System.AddIn.Hosting.AddInProcess.ShuttingDown
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ShuttingDown
  nameWithType: AddInProcess.ShuttingDown
  fullName: AddInProcess.ShuttingDown
- uid: System.EventHandler`1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
- uid: System.ComponentModel.CancelEventArgs
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.EventHandler{System.ComponentModel.CancelEventArgs}
  parent: System
  isExternal: false
  name: EventHandler<CancelEventArgs>
  nameWithType: EventHandler<CancelEventArgs>
  fullName: System.EventHandler<System.ComponentModel.CancelEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: System.EventHandler
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ComponentModel.CancelEventArgs
    name: CancelEventArgs
    nameWithType: CancelEventArgs
    fullName: System.ComponentModel.CancelEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.AddIn.Hosting.AddInProcess.Start
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Start()
  nameWithType: AddInProcess.Start()
  fullName: AddInProcess.Start()
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: AddInProcess.StartupTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AddIn.Hosting.AddInProcess.#ctor*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: AddInProcess
  nameWithType: AddInProcess.AddInProcess
  fullName: AddInProcess.AddInProcess
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.IsCurrentProcess*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: IsCurrentProcess
  nameWithType: AddInProcess.IsCurrentProcess
  fullName: AddInProcess.IsCurrentProcess
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.KeepAlive*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: KeepAlive
  nameWithType: AddInProcess.KeepAlive
  fullName: AddInProcess.KeepAlive
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.Platform*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Platform
  nameWithType: AddInProcess.Platform
  fullName: AddInProcess.Platform
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.ProcessId*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: ProcessId
  nameWithType: AddInProcess.ProcessId
  fullName: AddInProcess.ProcessId
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.Shutdown*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Shutdown
  nameWithType: AddInProcess.Shutdown
  fullName: AddInProcess.Shutdown
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.Start*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: Start
  nameWithType: AddInProcess.Start
  fullName: AddInProcess.Start
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.AddIn.Hosting.AddInProcess.StartupTimeout*
  parent: System.AddIn.Hosting.AddInProcess
  isExternal: false
  name: StartupTimeout
  nameWithType: AddInProcess.StartupTimeout
  fullName: AddInProcess.StartupTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Hosting/AddInProcess.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
